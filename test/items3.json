[{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"c言語-advent-calendar-2017\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E8%A8%80%E8%AA%9E-advent-calendar-2017\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC言語 Advent Calendar 2017\u003c/h1\u003e\n\n\u003cp\u003eこの記事はC言語 Advent Calendar 2017 21日目の記事です\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/yohhoy/items/710ed0f01874b1541470\" id=\"reference-6951c43625a1f2f4674f\"\u003e\u0026lt;\u0026lt; 20日目|Ancient C探訪記：ラベル編\u003c/a\u003e || \u003ca href=\"https://qiita.com/yohhoy/items/e2db10332bfd9f2ea2b6\" id=\"reference-5fed71488d2c3c377ef5\"\u003e22日目|Ancient C探訪記：プリプロセッサ編 \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eyohhoy氏の独壇場ですね・・・。Ancient C探訪記面白い。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e先日\u003cbr\u003e\n\u003ca href=\"https://qiita.com/srpkdyy/items/2ad990b4ce4c950c9b2e\" id=\"reference-a01a53a18fd9d73dc73a\"\u003eCのポインタと配列の関係について考察してみる\u003c/a\u003e\u003cbr\u003e\nという記事がQiitaに上がりましたが、元記事ではだいぶ混乱している感があるので、考察し直してみましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"メモリー確保\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A1%E3%83%A2%E3%83%AA%E3%83%BC%E7%A2%BA%E4%BF%9D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eメモリー確保\u003c/h1\u003e\n\n\u003cp\u003eみなさんメモリ確保というと、ついつい動的メモリ確保が頭に浮かんで\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdlib.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n   \u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n   \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eみたいなのを想像すると思いますが、\u003cstrong\u003eメモリ確保って本当にそれだけか？\u003c/strong\u003eという問題が有ります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"変数メモリー確保手段\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%89%E6%95%B0%E3%83%A1%E3%83%A2%E3%83%AA%E3%83%BC%E7%A2%BA%E4%BF%9D%E6%89%8B%E6%AE%B5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e変数=メモリー確保手段\u003c/h2\u003e\n\n\u003cp\u003eそもそも我々が作成したプログラムは実行するにメモリーを使用します。\u003c/p\u003e\n\n\u003cp\u003e当然我々が呼吸するように定義して使用しているメモリーも例外ではありません。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//これ\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eそうです、なにも動的確保しなくたって、変数もメモリーを使っているんだからメモリー確保手段といえます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"配列メモリー確保手段\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%85%8D%E5%88%97%E3%83%A1%E3%83%A2%E3%83%AA%E3%83%BC%E7%A2%BA%E4%BF%9D%E6%89%8B%E6%AE%B5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e配列=メモリー確保手段\u003c/h2\u003e\n\n\u003cp\u003eすると、配列は同じ型で複数個分の連続したメモリー領域を確保する手段といえます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e・・・Cの文法わかりにくいな。あえてRustで書くと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rust\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"k\"\u003emut\u003c/span\u003e \u003cspan class=\"n\"\u003exs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003ei32\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eですかね。\u003ccode\u003eint[3]\u003c/code\u003e型の変数を作るんだから前述のとおりメモリー確保手段なのは確定的に明らかですね！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ポインタ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eポインタ\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"参照としてのポインタ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E7%85%A7%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参照としてのポインタ\u003c/h2\u003e\n\n\u003cp\u003eC/C++のポインタはいわゆる参照の概念を内包しています。ここで参照とはコメント欄で言われているようなセマンティック上分類した結果としての参照(C++の参照のようなもの)ではなく、一般的な概念としての参照を指します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// =\u0026gt; 3\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//参照(lvalue reference)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// =\u0026gt; 4\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e同じようなことをポインタでやってみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// =\u0026gt; 3\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// =\u0026gt; 4\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eだいたい同じですね(C++の参照は再束縛できない)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"イテレータとしてのポインタ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%86%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eイテレータとしてのポインタ\u003c/h2\u003e\n\n\u003cp\u003eC/C++のポインタは、多くの言語で存在するイテレータの概念を内包しています。\u003c/p\u003e\n\n\u003cp\u003eイテレータといってもピンからキリまであるのでここではC++17で追加された隣接イテレータ (contiguous iterator)を例に考えます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;array\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eC++の\u003ccode\u003estd::array\u003c/code\u003eはCの配列同様、連続したメモリー領域を持ち、要素同士は隣接しています(だから隣接イテレータ)\u003c/p\u003e\n\n\u003cp\u003e同じようなことをポインタでやってみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#define BEGIN( arr ) (arr)\n#define END( arr ) (arr + sizeof(arr) / sizeof(*arr))\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBEGIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eEND\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eだいたい同じですね。しかしCでは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#define COUNTOF( arr ) (sizeof(arr) / sizeof(*arr))\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eCOUNTOF\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eと書くことのほうが多い気がします。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"ポインタ演算\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E6%BC%94%E7%AE%97\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eポインタ演算\u003c/h3\u003e\n\n\u003cp\u003eところで\u003ccode\u003earr + sizeof(arr) / sizeof(*arr)\u003c/code\u003eって何か変です。いや、\u003ccode\u003esizeof(arr) / sizeof(*arr)\u003c/code\u003eはいいんです。ただの符号なし整数(\u003ccode\u003esize_t\u003c/code\u003e)同士の除算ですから。しかし\u003ccode\u003earr + sizeof(arr) / sizeof(*arr)\u003c/code\u003eとはなんでしょうか。\u003c/p\u003e\n\n\u003cp\u003eポインタ型は基本となる型から派生して作られます。例えば\u003ccode\u003eint*\u003c/code\u003e型は\u003ccode\u003eint\u003c/code\u003e型から派生してできますし、\u003ccode\u003edouble*\u003c/code\u003e型は\u003ccode\u003edouble\u003c/code\u003e型から派生してできますし、\u003ccode\u003eint**\u003c/code\u003e型は\u003ccode\u003eint*\u003c/code\u003e型から派生してできるわけです。\u003c/p\u003e\n\n\u003cp\u003eなんでそういう仕様かというのがこのポインタ演算と関わります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdint.h\u0026gt;\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;limits.h\u0026gt;\n#include \u0026lt;inttypes.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint8_t\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint32_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"kt\"\u003eint8_t\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr1_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earr1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr2_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earr2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr3_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earr3\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"s\"\u003e\"Diff(CHAR_BIT=%d):\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\t\u003c/span\u003e\u003cspan class=\"s\"\u003earr1:%\"\u003c/span\u003e \u003cspan class=\"n\"\u003ePRIu64\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\t\u003c/span\u003e\u003cspan class=\"s\"\u003earr2:%\"\u003c/span\u003e \u003cspan class=\"n\"\u003ePRIu64\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\t\u003c/span\u003e\u003cspan class=\"s\"\u003earr3:%\"\u003c/span\u003e \u003cspan class=\"n\"\u003ePRIu64\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eCHAR_BIT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(((\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003earr1_1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003earr1\u003c/span\u003e\u003cspan class=\"p\"\u003e))),\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(((\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003earr2_1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003earr2\u003c/span\u003e\u003cspan class=\"p\"\u003e))),\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e(((\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003earr3_1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003euint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/Z85fg8xZJZSzXJ2b\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/Z85fg8xZJZSzXJ2b\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e実行結果\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eDiff(CHAR_BIT=8):\n    arr1:1\n    arr2:4\n    arr3:8\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eいずれも\u003ccode\u003e+ 1\u003c/code\u003eという同じ演算をしてポインタを動かしています。\u003c/p\u003e\n\n\u003cp\u003eしかし動いた先と動く前の差はこのとおり違うものになりました。\u003c/p\u003e\n\n\u003cp\u003eこれはポインタを動かす時に動かす最小単位、つまり1単位\u003csup id=\"fnref1\"\u003e\u003ca href=\"#fn1\" rel=\"footnote\" title=\"単位というのはC規格にはない言葉だと思いますが、Unicodeの用語を説明のために流用しました。\"\u003e1\u003c/a\u003e\u003c/sup\u003eがどれだけの大きさか、という情報を派生元の型情報から得ているからです。\u003c/p\u003e\n\n\u003cp\u003e例えば\u003ccode\u003earr1\u003c/code\u003eの派生元の型は\u003ccode\u003eint8_t\u003c/code\u003e型なので動いた先と動く前の差は1byteになりました。これは\u003ccode\u003esizeof(int8_t)\u003c/code\u003eと一致しています。\u003cbr\u003e\n同様にして\u003ccode\u003earr2\u003c/code\u003e, \u003ccode\u003earr3\u003c/code\u003eについても、差が\u003ccode\u003e4\u003c/code\u003e, \u003ccode\u003e8\u003c/code\u003e byteとやはり\u003ccode\u003esizeof(int32_t)\u003c/code\u003e, \u003ccode\u003esizeof(int64_t)\u003c/code\u003eに一致しています。\u003c/p\u003e\n\n\u003cp\u003eつまりポインタ演算をする時の1単位の大きさを知るためにこのような仕様になっていると思われます。\u003c/p\u003e\n\n\u003cp\u003eなお、ポインタをキャストすれば派生元の型を変えられたりします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"シンタックスシュガーとしてのoperator\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B7%E3%83%B3%E3%82%BF%E3%83%83%E3%82%AF%E3%82%B9%E3%82%B7%E3%83%A5%E3%82%AC%E3%83%BC%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AEoperator\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eシンタックスシュガーとしての\u003ccode\u003eoperator[]\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e先程\u003ccode\u003earr[i]\u003c/code\u003eという記法を使いましたが、これはなんだったかというと、\u003ccode\u003e*(arr + i)\u003c/code\u003eのシンタックスシュガーです。つまり先程のコードは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#define COUNTOF( arr ) (sizeof(arr) / sizeof(*arr))\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eCOUNTOF\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eと書いても同じです(\u003ccode\u003ei[arr]\u003c/code\u003eでも可)。でもちょっと待ってください。\u003ccode\u003earr + i\u003c/code\u003eってなんか変です。配列に足し算？？どういうことでしょう？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"暗黙の変換\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9A%97%E9%BB%99%E3%81%AE%E5%A4%89%E6%8F%9B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e暗黙の変換\u003c/h1\u003e\n\n\u003cp\u003eこの謎を解くには暗黙変換について知る必要があります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"array-to-pointer-conversion\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#array-to-pointer-conversion\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eArray-to-pointer conversion\u003c/h2\u003e\n\n\u003cp\u003eCに存在する暗黙変換なんてたくさんありますが、ここではArray-to-pointer conversionを指します。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eC言語ではいくつかの例外を除き、配列は常にポインタに読み替えられます。\u003c/strong\u003e\u003cbr\u003e\n言い換えると配列名を添字無しで使うと，それは配列の先頭要素を指すポインタ定数となります。\u003c/p\u003e\n\n\u003cp\u003e幾つかの例外とは\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003esizeof (array)\u003c/code\u003eのように\u003ccode\u003esizeof\u003c/code\u003e演算子に引き渡された場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003echar array[] = \"abcde\";\u003c/code\u003eのように文字列リテラルで初期化するとき\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e\u0026amp; array\u003c/code\u003eのように，アドレス演算子\u003ccode\u003e\u0026amp;\u003c/code\u003eに引き渡された場合\u003c/li\u003e\n\u003cli\u003e(C89) 関数の戻り値などでrvalueな構造体型に含まれる配列型変数などrvalueな配列変数の場合\u003c/li\u003e\n\u003cli\u003e(C11) \u003ccode\u003e_Alignof\u003c/code\u003e演算子に引き渡された場合\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eを指します。\u003c/p\u003e\n\n\u003cp\u003eref:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.cc.kyoto-su.ac.jp/%7Eyamada/ap/exception.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e配列＝ポインタ の例外\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/yz2cm/items/ff9b72afa1c412d17f35\" id=\"reference-e4c58bd288ecc5688670\"\u003e（C言語）Array-to-pointer conversionの例外は3つだけではなかった\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e配列はメモリー確保手段\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator []\u003c/code\u003eは配列に固有のものではなく、ポインタ演算のsyntax sugar\u003c/li\u003e\n\u003cli\u003eポインタ:=参照+イテレータ\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"footnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\n\u003cli id=\"fn1\"\u003e\n\u003cp\u003e単位というのはC規格にはない言葉だと思いますが、Unicodeの用語を説明のために流用しました。 \u003ca href=\"#fnref1\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003c/ol\u003e\n\u003c/div\u003e\n","body":"# C言語 Advent Calendar 2017\n\nこの記事はC言語 Advent Calendar 2017 21日目の記事です\n\n[\u003c\u003c 20日目|Ancient C探訪記：ラベル編](https://qiita.com/yohhoy/items/710ed0f01874b1541470) || [22日目|Ancient C探訪記：プリプロセッサ編 \u003e\u003e](https://qiita.com/yohhoy/items/e2db10332bfd9f2ea2b6)\n\nyohhoy氏の独壇場ですね・・・。Ancient C探訪記面白い。\n\n# はじめに\n\n先日\n[Cのポインタと配列の関係について考察してみる](https://qiita.com/srpkdyy/items/2ad990b4ce4c950c9b2e)\nという記事がQiitaに上がりましたが、元記事ではだいぶ混乱している感があるので、考察し直してみましょう。\n\n# メモリー確保\n\nみなさんメモリ確保というと、ついつい動的メモリ確保が頭に浮かんで\n\n```c:C99\n#include \u003cstdlib.h\u003e\nint main(void)\n{\n   int* p = malloc(sizeof(int));\n   //do something\n   free(p);\n   return 0;\n}\n```\n\nみたいなのを想像すると思いますが、**メモリ確保って本当にそれだけか？**という問題が有ります。\n\n## 変数=メモリー確保手段\n\nそもそも我々が作成したプログラムは実行するにメモリーを使用します。\n\n当然我々が呼吸するように定義して使用しているメモリーも例外ではありません。\n\n```c\nint main(void)\n{\n    int a;//これ\n    return 0;\n}\n```\n\nそうです、なにも動的確保しなくたって、変数もメモリーを使っているんだからメモリー確保手段といえます。\n\n## 配列=メモリー確保手段\n\nすると、配列は同じ型で複数個分の連続したメモリー領域を確保する手段といえます。\n\n```c\nint main(void)\n{\n    int arr[3];\n}\n```\n\n・・・Cの文法わかりにくいな。あえてRustで書くと\n\n```rust\nfn main() {\n    let mut xs: [i32; 3];\n}\n```\n\nですかね。`int[3]`型の変数を作るんだから前述のとおりメモリー確保手段なのは確定的に明らかですね！\n\n# ポインタ\n\n## 参照としてのポインタ\n\nC/C++のポインタはいわゆる参照の概念を内包しています。ここで参照とはコメント欄で言われているようなセマンティック上分類した結果としての参照(C++の参照のようなもの)ではなく、一般的な概念としての参照を指します。\n\n```cpp:C++\n#include \u003ciostream\u003e\nint main()\n{\n    int val = 3;\n    std::cout \u003c\u003c val \u003c\u003c std::endl; // =\u003e 3\n    int\u0026 ref = val;//参照(lvalue reference)\n    ref = 4;\n    std::cout \u003c\u003c val \u003c\u003c std::endl; // =\u003e 4\n}\n```\n\n同じようなことをポインタでやってみましょう。\n\n```c:C99\n#include \u003cstdio.h\u003e\nint main(void)\n{\n    int val = 3;\n    printf(\"%d\\n\", val); // =\u003e 3\n    int* ptr = \u0026val;\n    *ptr = 4;\n    printf(\"%d\\n\", val); // =\u003e 4\n    return 0;\n}\n```\n\nだいたい同じですね(C++の参照は再束縛できない)\n\n## イテレータとしてのポインタ\n\nC/C++のポインタは、多くの言語で存在するイテレータの概念を内包しています。\n\nイテレータといってもピンからキリまであるのでここではC++17で追加された隣接イテレータ (contiguous iterator)を例に考えます。\n\n```cpp:C++11\n#include \u003carray\u003e\n#include \u003ciostream\u003e\nint main()\n{\n    std::array\u003cint, 3\u003e arr = {};\n    for(auto it = std::begin(arr); it != std::end(arr); ++it) {\n        std::cout \u003c\u003c *it \u003c\u003c std::endl;\n    }\n}\n```\n\nC++の`std::array`はCの配列同様、連続したメモリー領域を持ち、要素同士は隣接しています(だから隣接イテレータ)\n\n同じようなことをポインタでやってみましょう。\n\n```c:C99\n#include \u003cstdio.h\u003e\n#define BEGIN( arr ) (arr)\n#define END( arr ) (arr + sizeof(arr) / sizeof(*arr))\nint main(void)\n{\n    int arr[3] = { 0 };\n    for(int* it = BEGIN(arr); it != END(arr); ++it) {\n        printf(\"%d\\n\", *it);\n    }\n}\n```\n\nだいたい同じですね。しかしCでは\n\n```c:C99\n#include \u003cstdio.h\u003e\n#define COUNTOF( arr ) (sizeof(arr) / sizeof(*arr))\nint main(void)\n{\n    int arr[3] = { 0 };\n    for(size_t i = 0; i \u003c COUNTOF(arr); ++i) {\n        printf(\"%d\\n\", arr[i]);\n    }\n}\n```\n\nと書くことのほうが多い気がします。\n\n### ポインタ演算\n\nところで`arr + sizeof(arr) / sizeof(*arr)`って何か変です。いや、`sizeof(arr) / sizeof(*arr)`はいいんです。ただの符号なし整数(`size_t`)同士の除算ですから。しかし`arr + sizeof(arr) / sizeof(*arr)`とはなんでしょうか。\n\nポインタ型は基本となる型から派生して作られます。例えば`int*`型は`int`型から派生してできますし、`double*`型は`double`型から派生してできますし、`int**`型は`int*`型から派生してできるわけです。\n\nなんでそういう仕様かというのがこのポインタ演算と関わります。\n\n```c:C99\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003climits.h\u003e\n#include \u003cinttypes.h\u003e\nint main(void)\n{\n    int8_t* arr1 = malloc(sizeof(int8_t) * 4);\n    int32_t* arr2 = malloc(sizeof(int32_t) * 4);\n    int64_t* arr3 = malloc(sizeof(int64_t) * 4);\n\n    int8_t* arr1_1 = arr1 + 1;\n    int32_t* arr2_1 = arr2 + 1;\n    int64_t* arr3_1 = arr3 + 1;\n\n    printf(\n        \"Diff(CHAR_BIT=%d):\\n\\tarr1:%\" PRIu64 \"\\n\\tarr2:%\" PRIu64 \"\\n\\tarr3:%\" PRIu64 \"\\n\",\n        CHAR_BIT,\n        (((uint64_t)(arr1_1)) - ((uint64_t)(arr1))),\n        (((uint64_t)(arr2_1)) - ((uint64_t)(arr2))),\n        (((uint64_t)(arr3_1)) - ((uint64_t)(arr3)))\n    );\n\n    free(arr1);\n    free(arr2);\n    free(arr3);\n\n    return 0;\n}\n```\n\nhttps://wandbox.org/permlink/Z85fg8xZJZSzXJ2b\n\n```plain:実行結果\nDiff(CHAR_BIT=8):\n\tarr1:1\n\tarr2:4\n\tarr3:8\n```\n\nいずれも` + 1`という同じ演算をしてポインタを動かしています。\n\nしかし動いた先と動く前の差はこのとおり違うものになりました。\n\nこれはポインタを動かす時に動かす最小単位、つまり1単位[^1]がどれだけの大きさか、という情報を派生元の型情報から得ているからです。\n\n例えば`arr1`の派生元の型は`int8_t`型なので動いた先と動く前の差は1byteになりました。これは`sizeof(int8_t)`と一致しています。\n同様にして`arr2`, `arr3`についても、差が`4`, `8` byteとやはり`sizeof(int32_t)`, `sizeof(int64_t)`に一致しています。\n\nつまりポインタ演算をする時の1単位の大きさを知るためにこのような仕様になっていると思われます。\n\nなお、ポインタをキャストすれば派生元の型を変えられたりします。\n\n[^1]: 単位というのはC規格にはない言葉だと思いますが、Unicodeの用語を説明のために流用しました。\n\n## シンタックスシュガーとしての`operator[]`\n\n先程`arr[i]`という記法を使いましたが、これはなんだったかというと、`*(arr + i)`のシンタックスシュガーです。つまり先程のコードは\n\n```c:C99\n#include \u003cstdio.h\u003e\n#define COUNTOF( arr ) (sizeof(arr) / sizeof(*arr))\nint main(void)\n{\n    int arr[3] = { 0 };\n    for(size_t i = 0; i \u003c COUNTOF(arr); ++i) {\n        printf(\"%d\\n\", *(arr + i));\n    }\n}\n```\n\nと書いても同じです(`i[arr]`でも可)。でもちょっと待ってください。`arr + i`ってなんか変です。配列に足し算？？どういうことでしょう？\n\n# 暗黙の変換\n\nこの謎を解くには暗黙変換について知る必要があります。\n\n## Array-to-pointer conversion\n\nCに存在する暗黙変換なんてたくさんありますが、ここではArray-to-pointer conversionを指します。\n\n**C言語ではいくつかの例外を除き、配列は常にポインタに読み替えられます。**\n言い換えると配列名を添字無しで使うと，それは配列の先頭要素を指すポインタ定数となります。\n\n幾つかの例外とは\n\n1. `sizeof (array)`のように`sizeof`演算子に引き渡された場合\n2. `char array[] = \"abcde\";`のように文字列リテラルで初期化するとき\n3. `\u0026 array`のように，アドレス演算子`\u0026`に引き渡された場合\n4. (C89) 関数の戻り値などでrvalueな構造体型に含まれる配列型変数などrvalueな配列変数の場合\n5. (C11) `_Alignof`演算子に引き渡された場合\n\nを指します。\n\nref:\n\n- [配列＝ポインタ の例外](http://www.cc.kyoto-su.ac.jp/~yamada/ap/exception.html)\n- [（C言語）Array-to-pointer conversionの例外は3つだけではなかった](https://qiita.com/yz2cm/items/ff9b72afa1c412d17f35)\n\n# まとめ\n\n- 配列はメモリー確保手段\n- `operator []`は配列に固有のものではなく、ポインタ演算のsyntax sugar\n- ポインタ:=参照+イテレータ\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":7,"created_at":"2017-12-21T19:59:42+09:00","group":null,"id":"2e4a1daac5e4e46b99ef","likes_count":9,"private":false,"reactions_count":0,"tags":[{"name":"C","versions":[]},{"name":"array","versions":[]},{"name":"Pointer","versions":[]}],"title":"Re:Cのポインタと配列の関係について考察してみる","updated_at":"2019-04-02T17:50:28+09:00","url":"https://qiita.com/yumetodo/items/2e4a1daac5e4e46b99ef","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"初心者cadvent-calendar-2017\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E5%BF%83%E8%80%85cadvent-calendar-2017\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初心者C++Advent Calendar 2017\u003c/h1\u003e\n\n\u003cp\u003eこの記事は初心者C++Advent Calendar 2017 15日目の記事です\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/S_H_/items/2a892fefa98ebbf38f28\" id=\"reference-cc44d10527b9aea227d8\"\u003e\u0026lt;\u0026lt; 14日目|C++を学ぶにあたって参考にした書籍・Webサイト\u003c/a\u003e || 16日目|何か書きます \u0026gt;\u0026gt;\u003c/p\u003e\n\n\u003cp\u003e今週3本目、このAdCでも3本目の記事です。期限に間に合わなかったでござる・・・。\u003c/p\u003e\n\n\u003cp\u003e今年の初心者AdC++は平和ですね・・・。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003eみなさま、\u003ca href=\"http://www.nicovideo.jp/watch/sm25261912\" rel=\"nofollow noopener\" target=\"_blank\"\u003eナマステ\u003c/a\u003e。さて、この記事のタイトルを見て、「時代・・・サトウキビ・・・\u003ca href=\"http://www.nicovideo.jp/user/5006073\" rel=\"nofollow noopener\" target=\"_blank\"\u003e忍者\u003c/a\u003e・・・うぅ、頭が」となった人は私と趣味が似ています・・・って話をするのは何回目だろうか。\u003c/p\u003e\n\n\u003cp\u003e先日\u003ca href=\"http://www.nicovideo.jp/mylist/60433191\" rel=\"nofollow noopener\" target=\"_blank\"\u003eニコニコ(デクレッシェンド)が発表\u003c/a\u003eされましたが、Qiitaはクレッシェンドしていって貰いたいものです(なおデザイン改悪)。\u003cbr\u003e\n(追記:と、この記事を書いていたら\u003ca href=\"http://dic.nicovideo.jp/l/%E7%99%BE%E8%8A%B1%20%E7%B9%9A%E4%B9%B1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e百花繚乱\u003c/a\u003e氏が登場した\u003ca href=\"http://live.nicovideo.jp/watch/lv309318824\" rel=\"nofollow noopener\" target=\"_blank\"\u003e動画と生放送サービスに対する意見交換会\u003c/a\u003eが開かれましたね。われこそはというエンジニアの皆様はぜひドワンゴへ！(謎の宣伝))\u003c/p\u003e\n\n\u003cp\u003e話を戻しまして・・・。\u003c/p\u003e\n\n\u003cp\u003e統一初期化についての言及がやたら多かった印象のある\u003ca href=\"http://www.adventar.org/calendars/922\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++初心者Advent Calendar 2015\u003c/a\u003eでは\u003ca href=\"https://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8\" id=\"reference-c4fd11bcf9e4ece5829e\"\u003eC99からC++14を駆け抜けるC++講座\u003c/a\u003eと題してC++14まで駆け抜けましたが時代はC++17。やっぱり時代の先端まで駆け抜けたいですよね。\u003c/p\u003e\n\n\u003cp\u003eなんか結果的に、\u003ca href=\"https://qiita.com/advent-calendar/2017/cpp\"\u003eC++ Advent Calendar 2017\u003c/a\u003e19日目の記事\u003cbr\u003e\n\u003ca href=\"http://azaika.hateblo.jp/entry/2017/12/19/221040\" rel=\"nofollow noopener\" target=\"_blank\"\u003e1 ページで眺める C++17 - 進捗置き場というわけでもない場所\u003c/a\u003e\u003cbr\u003e\nとネタかぶりした感があります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c11--c14\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c11--c14\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e(C++11 ... C++14]\u003c/h1\u003e\n\n\u003cp\u003e変更点一覧は\u003cbr\u003e\n\u003ca href=\"https://cpprefjp.github.io/lang/cpp14.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++14 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003cbr\u003e\nにまとまっています。\u003c/p\u003e\n\n\u003cp\u003eC++14の変更は項目こそ多くないものの無視できない変更があります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"通常関数の戻り値型推論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%80%9A%E5%B8%B8%E9%96%A2%E6%95%B0%E3%81%AE%E6%88%BB%E3%82%8A%E5%80%A4%E5%9E%8B%E6%8E%A8%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e通常関数の戻り値型推論\u003c/h2\u003e\n\n\u003cp\u003eC++11で導入されたlambda式は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//int型\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように戻り値の型を推論できました。しかし通常の関数においては\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003edecltype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//int型\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように\u003ccode\u003edecltype\u003c/code\u003eを使いreturn文と同じ内容を書く必要があり、極めて冗長でした。\u003c/p\u003e\n\n\u003cp\u003eC++14ではこれを推論させることができます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//int型\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e通常関数の戻り値型推論 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ジェネリックラムダ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AA%E3%83%83%E3%82%AF%E3%83%A9%E3%83%A0%E3%83%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eジェネリックラムダ\u003c/h2\u003e\n\n\u003cp\u003elambda式の引数の型はlambda式の使われ方からして自明なので推論してほしいと思うことが多々あります。とくに型名が長いときとかとか。\u003c/p\u003e\n\n\u003cp\u003eそう思った例として幾つか。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/yumetodo/items/600ca0df422010cbc4c1\" id=\"reference-6874e12682a96a7f2c02\"\u003eC++でマイナンバーのチェックデジットを計算する - Qiita\u003c/a\u003eでは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;utility\u0026gt;\n#include \u0026lt;numeric\u0026gt;//std::accumulate()\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;cctype\u0026gt;//std::isdigit()\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"num.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eaccumulate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erbegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eisdigit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"num.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようなコードを書きましたが、\u003ccode\u003econst std::pair\u0026lt;int, int\u0026gt;\u0026amp; s\u003c/code\u003eってすごく冗長ですよね。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/YukiMiyatake\" class=\"user-mention js-hovercard\" title=\"YukiMiyatake\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"YukiMiyatake\"\u003e@YukiMiyatake\u003c/a\u003e 氏の\u003ca href=\"https://www.slideshare.net/chihayatakatuki/boost-asio\" rel=\"nofollow noopener\" target=\"_blank\"\u003eBoostAsioで可読性を求めるのは間違っているだろうか\u003c/a\u003eでは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.slideshare.net/chihayatakatuki/boost-asio\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fboostasio-150517070248-lva1-app6891%2F95%2Fboostasio-19-638.jpg%3Fcb%3D1431846342?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ccc69978d21d2f393b2d9bb25e17c21f\" alt=\"slide 19/31\" data-canonical-src=\"https://image.slidesharecdn.com/boostasio-150517070248-lva1-app6891/95/boostasio-19-638.jpg?cb=1431846342\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fboostasio-150517070248-lva1-app6891%2F95%2Fboostasio-19-638.jpg%3Fcb%3D1431846342?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3641b1bcc5a82797eb4d02ba2d1e3a83 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003easio::yield_context yield_child\u003c/code\u003eってやっぱりすごく冗長ですよね。\u003c/p\u003e\n\n\u003cp\u003eジェネリックラムダはここに\u003ccode\u003eauto\u003c/code\u003eを指定できるようにするものです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eplus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eというジェネリックラムダは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"p\"\u003e()(\u003c/span\u003e\u003cspan class=\"n\"\u003eT1\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT2\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eという演算子を持つ関数オブジェクトを生成します。テンプレートと同じ型推論なのでcv修飾子(\u003ccode\u003econst\u003c/code\u003e, \u003ccode\u003evolatile\u003c/code\u003e)、参照、ポインタといった修飾ができます\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eplus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eなおもっとも汎用的な\u003ccode\u003eauto\u0026amp;\u0026amp;\u003c/code\u003eを使う場合\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e[](\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003edecltype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれを\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eP0573提案\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようにかける提案が出ている。ECMAScript2015のArrow functionやC#3.0のlambdaみたいだ。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e=\u0026gt; 待ってた。寧ろ C# 並に簡潔になって欲しい。x =\u0026gt; x * x は [](auto\u0026amp;\u0026amp; x) =\u0026gt; \u0026gt;\u0026gt;x * \u0026gt;\u0026gt;x に変換される的な。構文解析も少し工夫すれば問題にならなそうだし。\u003c/p\u003e— akinomyoga (@akinomyoga) \u003ca href=\"https://twitter.com/akinomyoga/status/837286805074386944?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eMarch 2, 2017\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eジェネリックラムダ - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpplover.blogspot.jp/2017/11/c-p0533r1-p0573r2.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++標準化委員会の文書: P0533R1-P0573r2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0573r2.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eP0573R2: Abbreviated Lambdas for Fun and Profit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"初心者向け変数テンプレート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E5%BF%83%E8%80%85%E5%90%91%E3%81%91%E5%A4%89%E6%95%B0%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e[初心者向け]変数テンプレート\u003c/h2\u003e\n\n\u003cp\u003eC++初心者ならテンプレート扱えるよね。\u003c/p\u003e\n\n\u003cp\u003eみんなだいすき\u003ccode\u003e\u0026lt;type_traits\u0026gt;\u003c/code\u003eヘッダなんかにある\u003ccode\u003estd::is_integral\u003c/code\u003eのような類は使うときに\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//static member変数の参照\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//operator()の呼び出し\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように書くことになるが、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eis_integral_v\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように変数テンプレートを定義しておくことで\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eis_integral_v\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとかけるようになる。\u003c/p\u003e\n\n\u003cp\u003eこんな感じに実質type_traitsのようなものを書くときにしか使わない印象。\u003c/p\u003e\n\n\u003cp\u003eなおC++17で自分で変数テンプレート書かなくても\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral_v\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとかけるようになりました。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp14/variable_templates.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e変数テンプレート - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++17 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"constexprの制限緩和\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#constexpr%E3%81%AE%E5%88%B6%E9%99%90%E7%B7%A9%E5%92%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003econstexprの制限緩和\u003c/h2\u003e\n\n\u003cp\u003eC++14最大の変更点と言って過言ではないです。\u003c/p\u003e\n\n\u003cp\u003eC++11でconstexprが導入され、コンパイル時計算が\u003cstrong\u003e一般的な人類\u003c/strong\u003eの手の届くものになりました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.slideshare.net/GenyaMurakami/constexpr-10458089\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fconstexpr-111204124759-phpapp01%2F95%2Fconstexpr-12-728.jpg%3Fcb%3D1328839990?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=837c1cb3bc8b43e9ac3259d28c570f62\" alt=\"slide12/100\" data-canonical-src=\"https://image.slidesharecdn.com/constexpr-111204124759-phpapp01/95/constexpr-12-728.jpg?cb=1328839990\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fconstexpr-111204124759-phpapp01%2F95%2Fconstexpr-12-728.jpg%3Fcb%3D1328839990?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=ca12ba1d0c71ddd8c582aec0f1f71071 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://www.slideshare.net/GenyaMurakami/constexpr-10458089\" rel=\"nofollow noopener\" target=\"_blank\"\u003e中３女子でもわかる constexpr\u003c/a\u003e from \u003ca href=\"https://www.slideshare.net/GenyaMurakami\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGenya Murakami\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eそう、そのはずでした。しかしC++11のconstexprは制約が多く\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ereturn文一つしか書けないので三項演算子で頑張る\u003c/li\u003e\n\u003cli\u003e副作用は作れないので再帰とラッパー関数で頑張る\u003c/li\u003e\n\u003cli\u003e再帰回数には推奨値512回の制約があるので、再帰オーダーを下げるためにindex_tuple や 倍分再帰 などのイディオムを駆使する必要がある。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eという事態を招き、例えば次のようなコードが生産されることになりました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cm\"\u003e/*=============================================================================\n  Copyright (c) 2011-2017 Bolero MURAKAMI\n  https://github.com/bolero-MURAKAMI/Sprout\n\n  Distributed under the Boost Software License, Version 1.0. (See accompanying\n  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n=============================================================================*/\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#ifndef SPROUT_ALGORITHM_FIND_HPP\n#define SPROUT_ALGORITHM_FIND_HPP\n\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;iterator\u0026gt;\n#include \u0026lt;type_traits\u0026gt;\n#include \u0026lt;sprout/config.hpp\u0026gt;\n#include \u0026lt;sprout/iterator/operation.hpp\u0026gt;\n#include \u0026lt;sprout/iterator/type_traits/category.hpp\u0026gt;\n#include \u0026lt;sprout/utility/pair/pair.hpp\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efind_impl_ra\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003edifference_type\u003c/span\u003e \u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efound\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efound\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003efound\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003epivot\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl_ra\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edistance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl_ra\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epivot\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003epivot\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_constant_distance_iterator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomAccessIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_access_iterator_tag\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl_ra\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edistance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efind_impl_1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003edifference_type\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl_1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl_1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efind_impl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003edifference_type\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl_1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003einput_iterator_tag\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind_impl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// namespace detail\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// 25.2.5 Find\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//  recursion depth:\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//      O(log N)\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator_category\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ecategory\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecategory\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// namespace sprout\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e#endif  // #ifndef SPROUT_ALGORITHM_FIND_HPP\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eここに崩壊したかに見えたコンパイル時の世界の魔界は完全にその権威を取り戻した(Doctor X風)。\u003c/p\u003e\n\n\u003cp\u003eC++14constexprはこのコンパイル時計算を\u003cstrong\u003e再び\u003c/strong\u003e一般的な人類の手の届くものにするものです。\u003c/p\u003e\n\n\u003cp\u003eこのconstexprの制限緩和によって、コンパイル時にできないことは概ね\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eI/O\u003c/li\u003e\n\u003cli\u003e動的メモリ（new/delete）\u003c/li\u003e\n\u003cli\u003e例外処理（try-catch）\u003c/li\u003e\n\u003cli\u003eRAII（デストラクタを使った後処理）\u003c/li\u003e\n\u003cli\u003eラムダ式\u003c/li\u003e\n\u003cli\u003eグローバル変数の参照\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eになりました。ラムダ式については後述するがC++17で概ね制約がなくなりました。動的メモリについては現在C++標準化委員会にこれを許可する提案が出ています。I/OのうちInputの部分はFile literalなる奇想天外なものが同じくC++標準化委員会に提案されています。\u003c/p\u003e\n\n\u003cp\u003e結果として先の魔界じみたコードは、概ね次のような一般的な人類でも読めるものに変貌を遂げたのです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//Copyright (c) 2013-2014 Bolero MURAKAMI\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e\n\u003cspan class=\"nf\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eInputIterator\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eもはや普段我々が書く関数と差はほとんどないですね！\u003cbr\u003e\n\u003ca href=\"https://twitter.com/bolero_MURAKAMI\" rel=\"nofollow noopener\" target=\"_blank\"\u003e縄文アートグループ展 ARTs of JOMON in Kioicho(12/4～12/25)に出品している岡山の陶芸家な某中３女子\u003c/a\u003eでなくても理解できます。\u003cbr\u003e\nconstexprは市民の義務と言えるでしょう。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://boleros.hateblo.jp/entry/20131203/1386011596\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++14 時代の constexpr プログラミング作法 - ボレロ村上 - ENiyGmaA Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003econstexprの制限緩和 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/GenyaMurakami/onstexprcpu\" rel=\"nofollow noopener\" target=\"_blank\"\u003eｃonstexpr関数はコンパイル時処理。これはいい。実行時が霞んで見える。cpuの嬌声が聞こえてきそうだ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.slideshare.net/GenyaMurakami/constexpr-10458089\" rel=\"nofollow noopener\" target=\"_blank\"\u003e中３女子でもわかる constexpr\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"宣言時のメンバ初期化を持つ型の集成体初期化を許可\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%A3%E8%A8%80%E6%99%82%E3%81%AE%E3%83%A1%E3%83%B3%E3%83%90%E5%88%9D%E6%9C%9F%E5%8C%96%E3%82%92%E6%8C%81%E3%81%A4%E5%9E%8B%E3%81%AE%E9%9B%86%E6%88%90%E4%BD%93%E5%88%9D%E6%9C%9F%E5%8C%96%E3%82%92%E8%A8%B1%E5%8F%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e宣言時のメンバ初期化を持つ型の集成体初期化を許可\u003c/h2\u003e\n\n\u003cp\u003e細かいこと抜きにして実用的な話をすると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ear\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{{\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e}};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eを\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ear\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとかけるようになったという話です。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e宣言時のメンバ初期化を持つ型の集成体初期化を許可 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"deprecated属性\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#deprecated%E5%B1%9E%E6%80%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e[[deprecated]]\u003c/code\u003e属性\u003c/h2\u003e\n\n\u003cp\u003e本来の用途はライブラリ開発者がユーザーに「このAPIは使わないでくれ、そのうち削除する」と伝えるためのものです。\u003cbr\u003e\nこのattributeが付いているとコンパイラは警告なりエラーを吐きます。\u003c/p\u003e\n\n\u003cp\u003eこれを\u003cstrong\u003e悪用して、リファクタリングするときに消したいものにこのattributeをつけて利用されているところを列挙する\u003c/strong\u003eという使い方があります。\u003c/p\u003e\n\n\u003cp\u003egrepすればいいやん、とかVSのIntelliSenseで呼び出しツリーとか参照見れるでしょ、と思うかもしれませんが、grepだと別の名前空間のやつが引っかかったりして面倒で、VSのはわりとよくバグるというかコンパイラとIntelliSenseで別のバグを同時に引くと解読不能なのでこいつがすごく便利です。\u003c/p\u003e\n\n\u003cp\u003e以前から各コンパイラが独自拡張でこの機能を実装していたので、それが標準化されたと思っていいと思います。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e[[deprecated]]属性 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"stdmake_uniqueを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdmake_unique%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003estd::make_unique()\u003c/code\u003eを追加\u003c/h2\u003e\n\n\u003cp\u003eなぜC++11に\u003ccode\u003emake_shard\u003c/code\u003eがあるのに\u003ccode\u003emake_unique\u003c/code\u003eがないのかという思いでいっぱいですが、C++14で追加されました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emake_unique\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれによって\u003cstrong\u003e\u003ccode\u003enew\u003c/code\u003e/\u003ccode\u003edelete\u003c/code\u003eは書いてはいけないもの\u003c/strong\u003eになりました。代わりに\u003ccode\u003estd::unique_ptr\u003c/code\u003e/\u003ccode\u003estd::shard_ptr\u003c/code\u003eを使いましょう。\u003c/p\u003e\n\n\u003cp\u003eなおどのようにスマートポインタを使うべきかは\u003cbr\u003e\n\u003ca href=\"https://qiita.com/kojiohta/items/596802df9cfa881ad9c4\" id=\"reference-e71cf097d912e0191c9c\"\u003eC++ スマートポインタのパターン\u003c/a\u003e\u003cbr\u003e\nというスマートな記事を発見したのでそちらを参照してください。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"stdexchangeを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdexchange%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003estd::exchange()\u003c/code\u003eを追加\u003c/h2\u003e\n\n\u003cp\u003eこれ自体は別に大した関数じゃなくて、値を書き換え、書き換え前の値を返す、というただそれだけの関数です。真の目的は\u003cbr\u003e\n\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e非推奨だった bool 型に対するインクリメント演算子を削除(C++17)\u003c/a\u003e\u003cbr\u003e\nへの布石です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"リテラル演算子\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E6%BC%94%E7%AE%97%E5%AD%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eリテラル演算子\u003c/h2\u003e\n\n\u003cp\u003e痒いところに手が届く新機能です。\u003c/p\u003e\n\n\u003cp\u003eこれまで\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;string\u0026gt;\n#define STRINGIFY(n) #n\n#define TOSTRING(n) STRINGIFY(n)\n\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"s1:\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\" in line\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eTOSTRING\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e__LINE__\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとか\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;chrono\u0026gt;\n#include \u0026lt;thread\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh_resolution_clock\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ethis_thread\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esleep_until\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eseconds\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eみたいなコードを書いていたと思いますが、\u003ccode\u003estd::string(\"s1:\")\u003c/code\u003eにしても\u003ccode\u003estd::chrono::seconds(3)\u003c/code\u003eにしても冗長で、\u003ccode\u003eusing namespace\u003c/code\u003eとか\u003ccode\u003eusing s = std::string\u003c/code\u003eとかするのもだるいですよね。\u003c/p\u003e\n\n\u003cp\u003eところでC++11で、User Defined Literalsという機能が追加されました。こいつを標準ライブラリで追加したのがC++14での変更です。つまり\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;string\u0026gt;\n#define STRINGIFY(n) #n\n#define TOSTRING(n) STRINGIFY(n)\n\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring_literals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std::literals;//これでもいい\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std::literals::string_literals;//これでもいいが長い\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std;//しないことを強くすすめる\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\"s1:\"\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\" in line\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eTOSTRING\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e__LINE__\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとか\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;chrono\u0026gt;\n#include \u0026lt;thread\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono_literals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std::literals;//これでもいい\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std::literals::chrono_literals;//これでもいいが長い\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std;//しないことを強くすすめる\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//using namespace std::chorono;//しないことをすすめる\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh_resolution_clock\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ethis_thread\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esleep_until\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mx\"\u003e3s\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようにかけるわけです。すっきり。\u003c/p\u003e\n\n\u003cp\u003e例は挙げていませんが複素数ライブラリ(\u003ccode\u003e\u0026lt;complex\u0026gt;\u003c/code\u003e)向けにも追加されています。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/string/basic_string/op_s.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003esリテラル - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/chrono/duration.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eduration - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/complex.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003ecomplex - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c14--c17\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c14--c17\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e(C++14 ... C++17]\u003c/h1\u003e\n\n\u003cp\u003e変更点一覧は\u003cbr\u003e\n\u003ca href=\"https://cpprefjp.github.io/lang/cpp17.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++17 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003cbr\u003e\nにまとまっています。\u003c/p\u003e\n\n\u003cp\u003ecpprefjpではC++17の新機能解説を現在執筆中ですが、それに加わる人をきっと、多分、おそらく、may be、募集していると思います。\u003cbr\u003e\n\u003ca href=\"https://github.com/cpprefjp/site/issues?utf8=%E2%9C%93\u0026amp;q=is%3Aissue+is%3Aopen+label%3ATASK+C%2B%2B17\" rel=\"nofollow noopener\" target=\"_blank\"\u003eIssues · cpprefjp/site | is:issue is:open label:TASK C++17\u003c/a\u003e\u003cbr\u003e\nこの辺を見て書けそうなのがあったらPull Requestを投げてください。\u003cbr\u003e\n(早く\u003ccode\u003eif constexpr\u003c/code\u003e文の導入背景を調べて追記しないと・・・)\u003c/p\u003e\n\n\u003cp\u003eあと \u003ca href=\"/kazatsuyu\" class=\"user-mention js-hovercard\" title=\"kazatsuyu\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"kazatsuyu\"\u003e@kazatsuyu\u003c/a\u003e 氏の\u003cbr\u003e\n\u003ca href=\"https://qiita.com/kazatsuyu/items/1d46b85f08c6e9a8bcaf\" id=\"reference-442badcc962be588b8f1\"\u003e久々なのでC++17の情報を集めてみる - Qiita\u003c/a\u003e\u003cbr\u003e\nと内容かぶっているじゃねーか、という話もありますが、もうすこしざっくりした話をします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"インライン変数\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E5%A4%89%E6%95%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eインライン変数\u003c/h2\u003e\n\n\u003cp\u003eC++ではtemplateを使うと実質その定義をヘッダに書かないといけないので、開き直ってヘッダーオンリーライブラリというのが広く存在します(コンパイル時間は犠牲になった)。\u003c/p\u003e\n\n\u003cp\u003eしかしながら、例えばmutexなど外部リンケージを持つ変数を作る必要があることがあり、ヘッダーオンリーでは素直には記述できませんでした。\u003c/p\u003e\n\n\u003cp\u003eインライン変数はこれを解決します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14ヘッダー\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eX\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// ヘッダでは変数の宣言のみを行い\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14ソース\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e// 変数fooを定義する\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eX\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// ソースで変数fooを定義する必要がない\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようになります。\u003c/p\u003e\n\n\u003cp\u003e恩恵としてはヘッダーオンリーのライブラリが増えて気軽に外部ライブラリを使えるようになるんじゃないかと思います。(そんなことよりはようmoduleよこせ)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/inline_variables.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eインライン変数 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"構造化束縛\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A7%8B%E9%80%A0%E5%8C%96%E6%9D%9F%E7%B8%9B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e構造化束縛\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003e個人的にイチオシのC++17新機能です。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"s\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように書いていたのが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"s\"\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eと書けるようになる機能です。\u003c/p\u003e\n\n\u003cp\u003e実際の利用例としては、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//Copyright Cpprefjp CC BY\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;map\u0026gt;\n#include \u0026lt;string\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Alice\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Bob\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Carol\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// mapの各要素をキーと値に分解する。\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// const auto\u0026amp;ではなくauto\u0026amp;にした場合は、\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// const std::string\u0026amp;型のkey変数と、\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// int\u0026amp;型のvalue変数に分解される。\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" : \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように使えます。\u003c/p\u003e\n\n\u003cp\u003eで、こいつのポテンシャル(潜在的能力)が意外に高くて、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \"print_struct.hpp\"\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003einner\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eouter\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003einner\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eouter\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"foo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e88\u003c/span\u003e\u003cspan class=\"p\"\u003e}};\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003eprint_struct\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e魔法のヘッダーファイル\u003ccode\u003eprint_struct.hpp\u003c/code\u003eをincludeし、\u003ccode\u003eusing namespace print_struct;\u003c/code\u003eで\u003ccode\u003eoperator\u0026lt;\u0026lt;\u003c/code\u003eを名前探索の対象に含めることで、publicなメンバ変数を含むクラスが\u003ccode\u003estd::cout\u003c/code\u003eで表示できるということができたりします。\u003cbr\u003e\n\u003ca href=\"http://playfulprogramming.blogspot.jp/2016/12/serializing-structs-with-c17-structured.html?spref=tw\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePlayful Programming: Serializing structs with C++17 structured bindings\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/structured_bindings.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e構造化束縛 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"maybe_unused属性\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#maybe_unused%E5%B1%9E%E6%80%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e[[maybe_unused]]\u003c/code\u003e属性\u003c/h2\u003e\n\n\u003cp\u003eデバッグ用に\u003ccode\u003eassert\u003c/code\u003eの呼び出しを書くときに一回変数に受けておきたいということがあるわけですが、そうするとReleaseビルドするときに、「変数~~は利用されていません」みたいに怒られると悲しいですね。なので仕方なく\u003ccode\u003e#ifdef _DENUG\u003c/code\u003e〜〜\u003ccode\u003e#endif\u003c/code\u003eとかする。でもそれって非常に非効率的。これはattributeの出番でしょ！ということで追加されました。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/maybe_unused.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e[[maybe_unused]]属性 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"値のコピー省略を保証\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%80%A4%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC%E7%9C%81%E7%95%A5%E3%82%92%E4%BF%9D%E8%A8%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e値のコピー省略を保証\u003c/h2\u003e\n\n\u003cp\u003eこれまでC++の多くのコンパイラはRVO(Return Value Optimization)と呼ばれる最適化を実装してきました。つまり、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"copy ctor call\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"nf\"\u003ervo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ervo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// copy が呼ばれないかもしれない(RVO)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// copy が呼ばれる\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこのようにコピー/ムーブコンストラクタの呼び出しを省略することがありました。\u003c/p\u003e\n\n\u003cp\u003eC++17ではこのRVOを事実上強制し、\u003cstrong\u003eコピー/ムーブコンストラクタがなくても\u003c/strong\u003e関数の戻り値として使えるようになりました。\u003c/p\u003e\n\n\u003cp\u003eなおこれよりさらに進んだNRVOに関しては変化なしなのでその場合はコピー/ムーブコンストラクタが必要です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"if文とswitch文の条件式と初期化を分離\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#if%E6%96%87%E3%81%A8switch%E6%96%87%E3%81%AE%E6%9D%A1%E4%BB%B6%E5%BC%8F%E3%81%A8%E5%88%9D%E6%9C%9F%E5%8C%96%E3%82%92%E5%88%86%E9%9B%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eif文とswitch文の条件式と初期化を分離\u003c/h2\u003e\n\n\u003cp\u003e変数のスコープをなるべく小さくしろというのはよく言われる話で、言語側でも\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99_C++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e55\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eというように\u003ccode\u003efor\u003c/code\u003e文のなかで変数宣言ができるようになったりしていました。\u003c/p\u003e\n\n\u003cp\u003eC++17では\u003ccode\u003eif\u003c/code\u003e文と\u003ccode\u003eswitch\u003c/code\u003e文でもそれができるようになりました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_first_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enpos\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n   \u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eif文とswitch文の条件式と初期化を分離 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"if-constexpr文\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#if-constexpr%E6%96%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eif constexpr\u003c/code\u003e文\u003c/h2\u003e\n\n\u003cp\u003eこれまでC++には2つのif文がありました\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eプリプロセス時: \u003ccode\u003e#if\u003c/code\u003e〜\u003ccode\u003e#elif\u003c/code\u003e〜\u003ccode\u003e#else\u003c/code\u003e〜\u003ccode\u003e#endif\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e実行時: \u003ccode\u003eif\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eここに新たに\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eコンパイル時: \u003ccode\u003eif constexpr\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eが追加されます。\u003c/p\u003e\n\n\u003cp\u003eもはや\u003cbr\u003e\n\u003ca href=\"https://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8#template%E3%81%A7if\" id=\"reference-c4fd11bcf9e4ece5829e\"\u003eC99からC++14を駆け抜けるC++講座 - Qiita#templateでif\u003c/a\u003e\u003cbr\u003e\nで取り上げたクラステンプレートの部分特殊化を利用したコンパイル時条件分岐やSFINAEを利用したコンパイル時条件分岐やオーバーロードを利用したコンパイル時条件分岐(可変長引数などで)は忘れていいものになりました。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/if_constexpr.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eif constexpr 文 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"constexprラムダ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#constexpr%E3%83%A9%E3%83%A0%E3%83%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003econstexpr\u003c/code\u003eラムダ\u003c/h2\u003e\n\n\u003cp\u003eC++11で追加されたlambda式が関数オブジェクトを生成するsyntax sugerであるというのは\u003cbr\u003e\n\u003ca href=\"https://qiita.com/yumetodo/items/cdfb41781d32d98be1b4\" id=\"reference-f23eadf603742c3d9f6a\"\u003e関数の創世から深淵まで駆け抜ける関数とはなんぞや講座 - Qiita\u003c/a\u003e\u003cbr\u003e\nで触れましたが、その生成される関数オブジェクトの\u003ccode\u003eoperator ()\u003c/code\u003eが、条件を満たすと自動的にconstexpr指定されます、という機能です。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// OK\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eなお\u003cstrong\u003e一部の\u003c/strong\u003eC++erの皆様に申し上げると、SFINAEの文脈では使えません。C++20はよ！\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"畳み込み式fold式\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%95%B3%E3%81%BF%E8%BE%BC%E3%81%BF%E5%BC%8Ffold%E5%BC%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e畳み込み式(fold式)\u003c/h2\u003e\n\n\u003cp\u003eこれは無視できない新機能ではあるんだけど、魔界過ぎて解説は省略。C++14のconstexpr制限緩和のところで書いた再帰オーダーを下げるというのに大きく貢献するので、\u003ca href=\"https://twitter.com/bolero_MURAKAMI\" rel=\"nofollow noopener\" target=\"_blank\"\u003e岡山の陶芸家な某中３女子\u003c/a\u003eあたりが喜びそうではあります。\u003cbr\u003e\nがしかし再帰地獄も大概だったけれど、fold式も大概だと私は思うんだ。\u003c/p\u003e\n\n\u003cp\u003eまあなんだ、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"nf\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(...\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eみたいな\u003ccode\u003e()\u003c/code\u003eで囲まれて\u003ccode\u003e...\u003c/code\u003eが出てきて、C++11の可変長引数の展開ではなさそうだったらこれだ。\u003c/p\u003e\n\n\u003cp\u003eただ書けなくても読めないとC++17時代こいつを見かける機会は増えるかもしれない。\u003c/p\u003e\n\n\u003cp\u003eそれは2017年8月のこと。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eそうなるとサイズ自動確保のテンプレートが欲しいな。\u003cbr\u003e\u003cbr\u003esizeof\u0026lt;int,bool,char,int64\u0026gt;::valueって書くと\u003cbr\u003e64が帰ってくる。\u003cbr\u003e要は1番でかいバイト数を返すメタ関数\u003c/p\u003e— らいパン粉haskell修行者 (@elipmoc101) \u003ca href=\"https://twitter.com/elipmoc101/status/892349660739719168?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAugust 1, 2017\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://t.co/yJb8JIAAMN\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/yJb8JIAAMN\u003c/a\u003e\u003cbr\u003eつまりこういうのが必要と。 \u003ca href=\"https://t.co/RnlHSK1R94\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/RnlHSK1R94\u003c/a\u003e\u003c/p\u003e— yumetodo-レポート辛い (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/892374990837882881?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAugust 1, 2017\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eよく考えたらstd::maxはconstexprになっているので使えた\u003ca href=\"https://t.co/jFHFFnjvWs\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/jFHFFnjvWs\u003c/a\u003e\u003c/p\u003e— 白山風露@ᓚᘏᗢ (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/892384017063976964?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAugust 1, 2017\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstddef\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eTypes\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emax_sizeof_v\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]()\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTypes\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e \u003cspan class=\"p\"\u003e...,\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}();\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emax_sizeof_v\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/O2gxJuItJuzC1etu\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/O2gxJuItJuzC1etu\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこういうコードにある日突然遭遇するかもしれないから。\u003c/p\u003e\n\n\u003cp\u003eなおこの一連のツイートにはオチがあってC++14でもっと短くかけることが判明しているので興味がある人は辿られたし\u003ca href=\"https://wandbox.org/permlink/qVcnV28SAfEGvj2F\" rel=\"nofollow noopener\" target=\"_blank\"\u003e。\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/kazatsuyu/items/1d46b85f08c6e9a8bcaf#fold%E5%BC%8F\" id=\"reference-442badcc962be588b8f1\"\u003e久々なのでC++17の情報を集めてみる - Qiita#fold式\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp17/folding_expressions.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e畳み込み式 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"filesystem\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#filesystem\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003efilesystem\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eみなさん、聞きましたか？この現代社会、ファイル/ディレクトリの操作すら標準APIを提供できないクソ言語がここにあったようです！\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eやっとかよ、という思いが満載です。ようやくパーミッションとかとか含めたファイル/ディレクトリの操作ができるようになります！\u003c/p\u003e\n\n\u003cp\u003e解説するとそれだけで記事が一つ書けるので、江添さんが執筆している\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/EzoeRyou/cpp17book/blob/master/073-cpp17-lib-filesystem.md\" rel=\"nofollow noopener\" target=\"_blank\"\u003ecpp17book/073-cpp17-lib-filesystem.md at master · EzoeRyou/cpp17book\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eに解説は譲ります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"parallelism\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#parallelism\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eParallelism\u003c/h2\u003e\n\n\u003cp\u003eC++11で\u003ccode\u003e\u0026lt;thread\u0026gt;\u003c/code\u003eが入り、C++でもようやくスレッドを作れるようになったわけですが、これを効率的に使うのは意外と難しかったりします。\u003c/p\u003e\n\n\u003cp\u003e例えばもっとも要望が多そうな\u003ccode\u003efor\u003c/code\u003e文をマルチスレッド化したい、という場合(ループ間に依存がない場合)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003eparallel\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eFunc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eRawIndexType\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_unsigned\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRawIndexType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003epar_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIndex\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eFunc\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kr\"\u003ethread\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehardware_concurrency\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"c1\"\u003e//thread 非対応\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRawIndexType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRawIndexType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eforward\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)...);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003etask_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003etask_rest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kr\"\u003ethread\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemplace_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eforward\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eFunc\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRawIndexType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etask_num\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etask_rest\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRawIndexType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etask_num\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etask_rest\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eforward\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)...\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eth\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003esigmoid_contrast\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBOOL\u003c/span\u003e \u003cspan class=\"n\"\u003eproc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFILTER\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003efp\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eFILTER_PROC_INFO\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003efpip\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// This is the main image manipulation function\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003efilter_proxy\u003c/span\u003e \u003cspan class=\"n\"\u003efc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#ifdef USECLOCK\n\u003c/span\u003e        \u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etime_point\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esteady_clock\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estart_con\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eany_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eecho_benchmark\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esave_benchmark\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003estart_con\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esteady_clock\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif\n\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eST\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echange_param\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efc\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etrack\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emidtone\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mf\"\u003e100.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efc\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003etrack\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estrength\u003c/span\u003e\u003cspan class=\"p\"\u003e]));\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efc\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enone_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eG\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n            \u003cspan class=\"cm\"\u003e/* Scan Y channel data */\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eparallel\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epar_for\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efpip\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003efpip\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003efpip\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ePIXEL_YC\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003epx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efpip\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eycp_edit\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003efpip\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003emax_w\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003epx\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eST\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elookup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epx\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e(コードは\u003ca href=\"https://github.com/yumetodo/SigContrastFastAviUtl\" rel=\"nofollow noopener\" target=\"_blank\"\u003eyumetodo/SigContrastFastAviUtl: Sigmodial/Logit contrast Aviutl plugin. IM is not used.\u003c/a\u003eより抜粋)\u003c/p\u003e\n\n\u003cp\u003eのように書けばいいように見えます(\u003cstrong\u003eすでに十分面倒\u003c/strong\u003e)。\u003c/p\u003e\n\n\u003cp\u003eところがこれだとスレッドを並列化したい\u003ccode\u003efor\u003c/code\u003eごとに作る事になります。一般にスレッドを作るコストはそこそこ重いので、高速化のためには一度作ったスレッドを使いまわすようにする必要があります。\u003c/p\u003e\n\n\u003cp\u003eそうなると生産者-消費者パターンを実装して・・・となり、おおよそ普通にプログラマが書けるコードではなくなります。\u003c/p\u003e\n\n\u003cp\u003eそこでこれまではIntel© TBBなんかを使ってきたのですが(上記コードをそれで書き換えると約5倍高速化)、C++標準でそれはやってほしい。\u003c/p\u003e\n\n\u003cp\u003eそういう要望に答えるべくC++17では、\u003ccode\u003e\u0026lt;algorithm\u0026gt;\u003c/code\u003eヘッダ全般およびその他一部関数で並列化ができるようなオーバーロードを追加しました。\u003c/p\u003e\n\n\u003cp\u003e実行ポリシー(\u003ccode\u003estd::execution::seq\u003c/code\u003e, \u003ccode\u003estd::execution::par\u003c/code\u003e, \u003ccode\u003estd::execution::par_unseq\u003c/code\u003e)を定義して、それを引数に渡してあげるとそれに基づいて実行してくれます。\u003c/p\u003e\n\n\u003cp\u003e詳細な解説は使いたいアルゴリズム関数のページ、もしくは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/EzoeRyou/cpp17book/blob/master/044-cpp17-lib-parallel-algorithm.md\" rel=\"nofollow noopener\" target=\"_blank\"\u003ecpp17book/044-cpp17-lib-parallel-algorithm.md at master · EzoeRyou/cpp17book\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eを参照してください。\u003c/p\u003e\n\n\u003cp\u003eなお今回のは第一弾にすぎないので第二弾があるっぽいです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"stdoptional\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdoptional\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003estd::optional\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eRustなどと違い、C++の\u003ccode\u003estd::optional\u003c/code\u003eはイテレータを持たないので、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eoptional\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()){\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//only when optional holds value\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようなことはできません。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://groups.google.com/a/isocpp.org/forum/#!topic/std-proposals/in38mPp2NiU\" rel=\"nofollow noopener\" target=\"_blank\"\u003eShouldn't std::optional be a container? - Google グループ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://groups.google.com/a/isocpp.org/forum/?fromgroups#!searchin/std-proposals/optional/std-proposals/KeD14jNkuhs/54EB299kBAAJ\" rel=\"nofollow noopener\" target=\"_blank\"\u003eIterating over/transforming std::optional - Google グループ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e要望はあるみたいだし、\u003ca href=\"https://github.com/bolero-MURAKAMI/Sprout\" rel=\"nofollow noopener\" target=\"_blank\"\u003eSprout\u003c/a\u003eはそれを実装しているんですけどね～。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003esprout::optional にコンテナインタフェースを追加しました。\u003ca href=\"https://t.co/CgbXSNpl5D\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/CgbXSNpl5D\u003c/a\u003e\u003ca href=\"https://t.co/DFw7i4Nby2\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/DFw7i4Nby2\u003c/a\u003e\u003c/p\u003e— 狂える中３女子ボレロ村上／陶芸C++er (@bolero_MURAKAMI) \u003ca href=\"https://twitter.com/bolero_MURAKAMI/status/702792883791749120?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年2月25日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/optional/optional.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eoptional - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"iteratorにsize追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#iterator%E3%81%ABsize%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e\u0026lt;iterator\u0026gt;\u003c/code\u003eに\u003ccode\u003esize()\u003c/code\u003e追加\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eこれで\u003ccode\u003e_countof\u003c/code\u003eとか\u003ccode\u003enumof\u003c/code\u003eとか\u003ccode\u003eNUMOF\u003c/code\u003eとかその手のマクロを作らなくても配列の大きさが求められます！\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/iterator/size.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003esize - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"中級者向け多相アロケータとメモリプール\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%AD%E7%B4%9A%E8%80%85%E5%90%91%E3%81%91%E5%A4%9A%E7%9B%B8%E3%82%A2%E3%83%AD%E3%82%B1%E3%83%BC%E3%82%BF%E3%81%A8%E3%83%A1%E3%83%A2%E3%83%AA%E3%83%97%E3%83%BC%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e[中級者向け]多相アロケータとメモリプール\u003c/h2\u003e\n\n\u003cp\u003eC++中級者ならメモリーアロケータの存在くらいは知っているはず。C++17ではこれまでのアロケーター利用の仕様への謝罪と反省の意を込めて(?)\u003ccode\u003estd::pmr\u003c/code\u003e名前空間が追加され、\u003ccode\u003estd::prm::memory_resource\u003c/code\u003eを継承したアロケータを書けばいい感じになるようになりました。\u003c/p\u003e\n\n\u003cp\u003e・・・などと知ったかぶって書こうとしましたが、私はC++中級者ではないので理解できていません。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/MitsutakaTakeda\" class=\"user-mention js-hovercard\" title=\"MitsutakaTakeda\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"MitsutakaTakeda\"\u003e@MitsutakaTakeda\u003c/a\u003e 氏のAltPlus Advent Calendar 2017 17日目の記事である\u003cbr\u003e\n\u003ca href=\"https://qiita.com/MitsutakaTakeda/items/48980faa9498c46b15b2\" id=\"reference-a5f0e57519a421a6e0d6\"\u003ePolymorphic Allocator in C++17 - Qiita\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eに丸投げします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"標準イテレータ全般とarrayの変更操作にconstexprを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%86%E3%83%AC%E3%83%BC%E3%82%BF%E5%85%A8%E8%88%AC%E3%81%A8array%E3%81%AE%E5%A4%89%E6%9B%B4%E6%93%8D%E4%BD%9C%E3%81%ABconstexpr%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e標準イテレータ全般と\u003ccode\u003earray\u003c/code\u003eの変更操作に\u003ccode\u003econstexpr\u003c/code\u003eを追加\u003c/h2\u003e\n\n\u003cp\u003e最適化の手法で事前に計算してテーブル引き、なんて手法があります。\u003c/p\u003e\n\n\u003cp\u003eC++14constexprのお陰で、その計算をコンパイル時にやりたい、という要求が生まれたわけですが、どういうわけかこれまで\u003ccode\u003estd::array\u003c/code\u003eの変更操作(\u003ccode\u003eoperator[]\u003c/code\u003eとか)には\u003ccode\u003econstexpr\u003c/code\u003eが指定されていなかったので、\u003ca href=\"https://github.com/bolero-MURAKAMI/Sprout\" rel=\"nofollow noopener\" target=\"_blank\"\u003eSprout\u003c/a\u003eを使って\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eSPROUT_CXX14_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_mod_table_ysr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emod\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003emod\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e(コードは\u003ca href=\"https://qiita.com/yumetodo/items/600ca0df422010cbc4c1\"\u003eC++でマイナンバーのチェックデジットを計算する - Qiita\u003c/a\u003eより抜粋)\u003c/p\u003e\n\n\u003cp\u003eと書いてきたわけですが、C++17からはようやくarrayクラスを自分で作らなくてもそれができるようになりました。\u003c/p\u003e\n\n\u003cp\u003eこの他、イテレータ全般も対応したようです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"値を範囲内に収めるclamp関数を追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%80%A4%E3%82%92%E7%AF%84%E5%9B%B2%E5%86%85%E3%81%AB%E5%8F%8E%E3%82%81%E3%82%8Bclamp%E9%96%A2%E6%95%B0%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e値を範囲内に収める\u003ccode\u003eclamp()\u003c/code\u003e関数を追加\u003c/h2\u003e\n\n\u003cp\u003e値を範囲内に丸める処理というのは頻出する割にはこれまでC++標準にそれをする関数はなく、\u003ccode\u003estd::min\u003c/code\u003e/\u003ccode\u003estd::max\u003c/code\u003eを使うか三項演算子で書く必要がありました。\u003c/p\u003e\n\n\u003cp\u003eC++17になってようやくこれを行う関数が提案され、無事にC++17に採用されました。\u003c/p\u003e\n\n\u003cp\u003e引数の順序で賛否両論あるようですが、\u003cstrong\u003e値・最小値・最大値(・比較関数)\u003c/strong\u003eの順になりました。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"所有権を持たない文字列クラスであるbasic_string_viewを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%89%80%E6%9C%89%E6%A8%A9%E3%82%92%E6%8C%81%E3%81%9F%E3%81%AA%E3%81%84%E6%96%87%E5%AD%97%E5%88%97%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%A7%E3%81%82%E3%82%8Bbasic_string_view%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e所有権を持たない文字列クラスである\u003ccode\u003ebasic_string_view\u003c/code\u003eを追加\u003c/h2\u003e\n\n\u003cp\u003eC++には文字列クラスとして\u003ccode\u003estd::string\u003c/code\u003eがあるわけですが、基本的にはアロケーションが発生し、また部分文字列を取る場合には文字列のコピーが発生します。また場合によっては例外も発生します。\u003c/p\u003e\n\n\u003cp\u003e高速化のために、このアロケーションやらコピーを避けようと思うと、\u003ccode\u003estd::string\u003c/code\u003eの\u003cstrong\u003eメンバー関数の恩恵が受けられず\u003c/strong\u003e、極めて冗長なコードを書くことになります。\u003c/p\u003e\n\n\u003cp\u003eまた関数の引数などで文字列を受け取る時、実行速度を考えるとこれまで\u003ccode\u003econst char*\u003c/code\u003e版と\u003ccode\u003estd::string\u003c/code\u003eの2つのオーバーロードを用意する必要がありましたが、これが\u003ccode\u003estd::string_view\u003c/code\u003eで代替できるようになります。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estd::string_view\u003c/code\u003eは文字列開始位置のポインタと長さを保持します。これによって文字列のコピーをすることなく文字列を参照できるわけですね。\u003c/p\u003e\n\n\u003cp\u003eただし当たり前ですがNULL終端しないので、文字列へのポインタのみしか受け取らないC APIには直接渡せません。長さも一緒に渡せるように変更するなり、ライブラリ作者に要望しましょう。\u003cbr\u003e\nex.) DxLibの作者さんに要望を投げた例: \u003ca href=\"http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026amp;no=4243\" rel=\"nofollow noopener\" target=\"_blank\"\u003e[task]文字列の長さ指定付き関数を追加\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fc1zstringview-161105052915%2F95%2Fboost-21-c1zstringview-1-638.jpg%3Fcb%3D1478323849?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=75d35b23319b51914ba60bcd8cf2b4f2\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fc1zstringview-161105052915%2F95%2Fboost-21-c1zstringview-1-638.jpg%3Fcb%3D1478323849?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=75d35b23319b51914ba60bcd8cf2b4f2\" alt=\"slide-1\" data-canonical-src=\"https://image.slidesharecdn.com/c1zstringview-161105052915/95/boost-21-c1zstringview-1-638.jpg?cb=1478323849\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimage.slidesharecdn.com%2Fc1zstringview-161105052915%2F95%2Fboost-21-c1zstringview-1-638.jpg%3Fcb%3D1478323849?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=14889c9cc822c4d0763a8bfdc9b56de6 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://www.slideshare.net/maraigue/boost-21-c1zstringview\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cstrong\u003eBoost.勉強会 #21 札幌「C++1zにstring_viewが導入されてうれしいので紹介します」\u003c/strong\u003e\u003c/a\u003e from \u003ca href=\"/h_hiro_\" class=\"user-mention js-hovercard\" title=\"h_hiro_\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"h_hiro_\"\u003e@h_hiro_\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"basic_stringdataメンバ関数の非const版を追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#basic_stringdata%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%81%AE%E9%9D%9Econst%E7%89%88%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003ebasic_string::data()\u003c/code\u003eメンバ関数の非const版を追加\u003c/h2\u003e\n\n\u003cp\u003eこれはC-likeなAPIと文字列をやり取りしていた人には朗報です。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/yumetodo/items/453d14eff41b805d8fc4\" id=\"reference-e1592a6140b51ec3c5cb\"\u003eそろそろWindowsでUTF-16とShift-JISの変換方法をC++erらしくまとめようか\u003c/a\u003e\u003cbr\u003e\nのコードを例に解説します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eWin32API\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;windows.h\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewstring\u003c/span\u003e \u003cspan class=\"nf\"\u003eshift_jis_to_utf_16\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"this function is windows only\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eMultiByteToWideChar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCP_ACP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewstring\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003eL'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!::\u003c/span\u003e\u003cspan class=\"n\"\u003eMultiByteToWideChar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCP_ACP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//中略\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eC++11以前は、\u003ccode\u003estd::basic_string\u003c/code\u003eが所有している文字列を格納しているメモリ領域が連続している保証がありませんでした。\u003c/p\u003e\n\n\u003cp\u003eC++11になってこの連続が保証され、\u003ccode\u003estd::basic_string\u003c/code\u003eをバッファとして利用する上記のようなコードが書けるようになりました(変数\u003ccode\u003ere\u003c/code\u003e)。\u003c/p\u003e\n\n\u003cp\u003eこれの何が嬉しいかというと、自前でメモリー確保してバッファを作ってそれをまたコピーするという作業が不要になってコピー回数とアロケーション回数が減らせる→\u003cstrong\u003e高速化できる\u003c/strong\u003eということです。\u003c/p\u003e\n\n\u003cp\u003eところで\u003ccode\u003estd::basic_string\u003c/code\u003eには太古の昔から\u003ccode\u003edata()\u003c/code\u003eというメンバ関数がありました。にもかかわらず文字列を格納しているメモリ領域の先頭へのポインタを取るのに\u003ccode\u003e\u0026amp;re[0]\u003c/code\u003eのように書くのって\u003cstrong\u003eなんか変\u003c/strong\u003eです。\u003c/p\u003e\n\n\u003cp\u003e理由としてはこれまでメンバ関数\u003ccode\u003edata()\u003c/code\u003eが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003echarT\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e// C++03 まで\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003echarT\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// C++11 から\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように定義されていて、返却されるポインタがconst修飾されているという問題がありました。\u003c/p\u003e\n\n\u003cp\u003eつまり上記の目的のためには\u003ccode\u003e\u0026amp;re[0]\u003c/code\u003eと書くしかありませんでした(\u003ccode\u003econst_cast\u003c/code\u003eするとUBだった)。\u003c/p\u003e\n\n\u003cp\u003e今回非const版が追加されたことで\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eCharT\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e//C++17から\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e素直に書けるようになりました。\u003c/p\u003e\n\n\u003cp\u003eなおC++11時代からそうですが、このポインタをいじって書き込んでいい範囲は\u003ccode\u003e[0...size())\u003c/code\u003eなので、\u003ccode\u003e\\0\u003c/code\u003eが書き込まれる場所はいじってはいけません。つまりデカ目に確保してあとで\u003ccode\u003eresize\u003c/code\u003eしましょう。\u003c/p\u003e\n\n\u003cp\u003eこの件に関しては \u003ca href=\"/yohhoy\" class=\"user-mention js-hovercard\" title=\"yohhoy\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"yohhoy\"\u003e@yohhoy\u003c/a\u003e さんの\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20130413/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e文字列取得バッファとしてのstd::string - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20160327/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e文字列取得バッファとしてのstd::string リターンズ - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eが詳しいので詳細はそちらに譲ります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ロケール依存なしフォーマット解析なしの高速な文字列数値変換関数としてto_charsとfrom_charsを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AD%E3%82%B1%E3%83%BC%E3%83%AB%E4%BE%9D%E5%AD%98%E3%81%AA%E3%81%97%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E8%A7%A3%E6%9E%90%E3%81%AA%E3%81%97%E3%81%AE%E9%AB%98%E9%80%9F%E3%81%AA%E6%96%87%E5%AD%97%E5%88%97%E6%95%B0%E5%80%A4%E5%A4%89%E6%8F%9B%E9%96%A2%E6%95%B0%E3%81%A8%E3%81%97%E3%81%A6to_chars%E3%81%A8from_chars%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eロケール依存なし、フォーマット解析なしの高速な文字列・数値変換関数として、to_chars()とfrom_chars()を追加\u003c/h2\u003e\n\n\u003cp\u003eこれは、この記事を見ているような人に直接恩恵があるわけじゃないですが、間接的に影響があります。\u003c/p\u003e\n\n\u003cp\u003eこれまでC/C++に標準で提供されていた文字列→数値変換/数値→文字列変換はAPIとしてはたくさんの関数がありましたが、集約されるところ\u003ccode\u003estrtol\u003c/code\u003e系関数/\u003ccode\u003esprintf\u003c/code\u003e関数に集約され、それ以外はそのラッパーとしての存在でした。\u003c/p\u003e\n\n\u003cp\u003eこれらはまずロケールに依存しており、数値→文字列変換については\u003ccode\u003esprintf\u003c/code\u003eなのでフォーマット解析が挟まったりと余計な処理が挟まっていました。\u003c/p\u003e\n\n\u003cp\u003e今回の追加によってこれとは別系統の変換手段ができたので、例えば\u003cstrong\u003eJSONのシリアライズ/デシリアライズが速くなる\u003c/strong\u003eとかライブラリのバグが潰れるとかそういう恩恵があるかなと思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"hypot関数の3引数版を追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#hypot%E9%96%A2%E6%95%B0%E3%81%AE3%E5%BC%95%E6%95%B0%E7%89%88%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003ehypot()\u003c/code\u003e関数の3引数版を追加\u003c/h2\u003e\n\n\u003cp\u003e皆さん義務教育で3平方の定理とかピタゴラスの定理という名前で習ったアレをやるのが\u003ccode\u003estd::hypot\u003c/code\u003eの処理内容です。直角三角形の斜辺の長さの2乗は他の2辺の長さの2乗和に等しい、というあれです。\u003c/p\u003e\n\n\u003cp\u003e何に使うかというとゲームなんかで直交座標系において2点間の距離の計算やベクトルの長さを計算するために使うわけですね。\u003c/p\u003e\n\n\u003cp\u003eでもこれまで2次元版しかなかったので3次元版もほしい。そういう要望に答えたのがこの変更です。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/cmath/hypot.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehypot - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"最大公約数と最小公倍数の関数としてgcdとlcmを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%A4%A7%E5%85%AC%E7%B4%84%E6%95%B0%E3%81%A8%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E3%81%AE%E9%96%A2%E6%95%B0%E3%81%A8%E3%81%97%E3%81%A6gcd%E3%81%A8lcm%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最大公約数と最小公倍数の関数として、\u003ccode\u003egcd()\u003c/code\u003eと\u003ccode\u003elcm()\u003c/code\u003eを追加\u003c/h2\u003e\n\n\u003cp\u003e最大公約数と最小公倍数なんてものは義務教育で習う初歩的なものでたいしてコード量もいらない。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e// N3845のリファレンス実装例\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// 仮にclib名前空間内に置く\u003c/span\u003e\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003eclib\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 任意の整数型で動くテンプレート版のabs\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eabs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{}(),\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 二つの実引数が整数型であるかどうかを確認し、また共通の型を返すメタ関数common_int_t\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eM\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003ecommon_int_t\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{}()\u003c/span\u003e \u003cspan class=\"n\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{}()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommon_type_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 最大公約数\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eN\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003egcd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eM\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecommon_int_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eCT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecommon_int_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eclib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eabs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003egcd\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eCT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 最小公倍数\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eN\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"nf\"\u003elcm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eM\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecommon_int_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eabs\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003egcd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eしかし、だからこそてんでんばらに書くのではなく、標準化されるべきです。というわけで追加されました。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eなお競技プログラミングなどで\u003ccode\u003eusing namespace std;\u003c/code\u003eしてきた人で自前で\u003ccode\u003egcd()\u003c/code\u003e/\u003ccode\u003elcm()\u003c/code\u003e書いていた人は名前衝突で死にます\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"stditeratorクラスを非推奨化\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stditerator%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%92%E9%9D%9E%E6%8E%A8%E5%A5%A8%E5%8C%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003estd::iterator\u003c/code\u003eクラスを非推奨化\u003c/h2\u003e\n\n\u003cp\u003ecpprefjpの\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eこのクラスを使用しても、イテレータ定義は簡単にならなかった\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eという言葉にすべてが集約されるよね。どうせみんなイテレータ作るのに一応継承してたけど自前でイテレータの要件満たすための型定義書いてたでしょ。\u003cstrong\u003eいらんかったよね。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e昨年の初心者C++ AdCの記事である\u003cbr\u003e\n\u003ca href=\"https://qiita.com/yumetodo/items/245e94a0e85db9bf5cbb\" id=\"reference-129a021ffe8d1f7d8e1e\"\u003eイテレータの解説をするなんて今更佳代 - Qiita\u003c/a\u003e\u003cbr\u003e\nでも結局自分で型定義し直しています。\u003c/p\u003e\n\n\u003cp\u003eそんなことよりはようイテレータがもっとかんたんに書ける仕組みを、syntax sugarをよこせ！\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"codecvtを非推奨化\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#codecvt%E3%82%92%E9%9D%9E%E6%8E%A8%E5%A5%A8%E5%8C%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e\u0026lt;codecvt\u0026gt;\u003c/code\u003eを非推奨化。\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eみなさん、聞きましたか？この現代社会、文字コード変換すら標準APIを提供できないクソ言語がここにあるようです！\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eせっかくC++11で問題は山積みながら入ったと思ったらこれだよ！これだからアルファベット至上主義者共は・・・(なぞのとばっちり\u003c/p\u003e\n\n\u003cp\u003eというわけでiconvのような外部ライブラリ使うとかUnicode変換くらいなら自前で書くかしましょう。\u003c/p\u003e\n\n\u003cp\u003e・・・何を言ってるのかわからねーと思うが、俺もわからねぇ！\u003ca href=\"http://www.nicovideo.jp/tag/Niconico(%E3%81%8F%E3%81%9D)%E3%81%B8%E3%81%AE%E5%8F%8D%E5%BF%9C%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA\" rel=\"nofollow noopener\" target=\"_blank\"\u003eニコニコ(く)\u003c/a\u003eよかよっぽどクソでしょ。まじでありえねー。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cの未来\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E3%81%AE%E6%9C%AA%E6%9D%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++の未来\u003c/h1\u003e\n\n\u003cp\u003eC++はC++標準化委員会(WG21)でその仕様が議論され、規格化され、最終的にISO/IECで標準化され、我々が使うコンパイラなんかはこれに従って実装されます。\u003c/p\u003e\n\n\u003cp\u003eそのC++標準化委員会がC++に追加する大きな機能のロードマップは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://isocpp.org/std/status\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCurrent Status : Standard C++\u003c/a\u003eで見ることができます。\u003c/p\u003e\n\n\u003cp\u003e執筆時点で確認したら\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fisocpp.org%2Ffiles%2Fimg%2Fwg21-timeline-2017-11.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=12c2f1be49b697e8813aaa95c60b5c8a\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fisocpp.org%2Ffiles%2Fimg%2Fwg21-timeline-2017-11.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=12c2f1be49b697e8813aaa95c60b5c8a\" alt=\"loadmap\" data-canonical-src=\"https://isocpp.org/files/img/wg21-timeline-2017-11.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fisocpp.org%2Ffiles%2Fimg%2Fwg21-timeline-2017-11.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=6122186a48e611a7b02090d471c35e90 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eとなっていますね。\u003c/p\u003e\n\n\u003cp\u003e2D graphicsというのが見えると思いますが、これは将来GUIを標準化しようという茨の道へと進むことを暗示しているのでしょうか。\u003c/p\u003e\n\n\u003cp\u003eNetworkingというのはboost.asio相当のものになると思われます。はやく標準入りしてほしいです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c20\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c20\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++20\u003c/h2\u003e\n\n\u003cp\u003eC++11でリジェクトされ、内容を縮小して再提案されたC++17でも入らずにいたConceptはC++20に入りそうです。\u003cstrong\u003eやっとかよ！\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++14からだね\u003c/p\u003e— キュアいなむのみたま (@range_v3) \u003ca href=\"https://twitter.com/range_v3/status/941917865506095104?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eDecember 16, 2017\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC++11からC++17という部分に対する指摘が来ました。意図としては(C++11 ... C++17]という半開区間だったんですががが。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 初心者C++Advent Calendar 2017\n\nこの記事は初心者C++Advent Calendar 2017 15日目の記事です\n\n[\u003c\u003c 14日目|C++を学ぶにあたって参考にした書籍・Webサイト](https://qiita.com/S_H_/items/2a892fefa98ebbf38f28) || 16日目|何か書きます \u003e\u003e\n\n今週3本目、このAdCでも3本目の記事です。期限に間に合わなかったでござる・・・。\n\n今年の初心者AdC++は平和ですね・・・。\n\n# はじめに\n\nみなさま、[ナマステ](http://www.nicovideo.jp/watch/sm25261912)。さて、この記事のタイトルを見て、「時代・・・サトウキビ・・・[忍者](http://www.nicovideo.jp/user/5006073)・・・うぅ、頭が」となった人は私と趣味が似ています・・・って話をするのは何回目だろうか。\n\n先日[ニコニコ(デクレッシェンド)が発表](http://www.nicovideo.jp/mylist/60433191)されましたが、Qiitaはクレッシェンドしていって貰いたいものです(なおデザイン改悪)。\n(追記:と、この記事を書いていたら[百花繚乱](http://dic.nicovideo.jp/l/%E7%99%BE%E8%8A%B1%20%E7%B9%9A%E4%B9%B1)氏が登場した[動画と生放送サービスに対する意見交換会](http://live.nicovideo.jp/watch/lv309318824)が開かれましたね。われこそはというエンジニアの皆様はぜひドワンゴへ！(謎の宣伝))\n\n話を戻しまして・・・。\n\n統一初期化についての言及がやたら多かった印象のある[C++初心者Advent Calendar 2015](http://www.adventar.org/calendars/922)では[C99からC++14を駆け抜けるC++講座](https://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8)と題してC++14まで駆け抜けましたが時代はC++17。やっぱり時代の先端まで駆け抜けたいですよね。\n\nなんか結果的に、[C++ Advent Calendar 2017](https://qiita.com/advent-calendar/2017/cpp)19日目の記事\n[1 ページで眺める C++17 - 進捗置き場というわけでもない場所](http://azaika.hateblo.jp/entry/2017/12/19/221040)\nとネタかぶりした感があります。\n\n# (C++11 ... C++14]\n\n変更点一覧は\n[C++14 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14.html)\nにまとまっています。\n\nC++14の変更は項目こそ多くないものの無視できない変更があります。\n\n## 通常関数の戻り値型推論\n\nC++11で導入されたlambda式は\n\n```cpp:C++11\nauto f = [](int a){ return a + 3; };\nstatic auto n = f(1);//int型\n```\n\nのように戻り値の型を推論できました。しかし通常の関数においては\n\n```cpp:C++11\nauto f(int a) -\u003e decltype(a + 3) { return a + 3; }\nstatic auto n = f(1);//int型\n```\n\nのように`decltype`を使いreturn文と同じ内容を書く必要があり、極めて冗長でした。\n\nC++14ではこれを推論させることができます。\n\n```cpp:C++14\nauto f(int a){ return a + 3; }\nstatic auto n = f(1);//int型\n```\n\n- [通常関数の戻り値型推論 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14/return_type_deduction_for_normal_functions.html)\n\n## ジェネリックラムダ\n\nlambda式の引数の型はlambda式の使われ方からして自明なので推論してほしいと思うことが多々あります。とくに型名が長いときとかとか。\n\nそう思った例として幾つか。\n\n[C++でマイナンバーのチェックデジットを計算する - Qiita](https://qiita.com/yumetodo/items/600ca0df422010cbc4c1)では\n\n```cpp:C++11\n#include \u003cstring\u003e\n#include \u003cutility\u003e\n#include \u003cnumeric\u003e//std::accumulate()\n#include \u003cstdexcept\u003e\n#include \u003ccctype\u003e//std::isdigit()\nint calc_check_digit(const std::string\u0026 num) noexcept(false) {\n    if (11 != num.length()) throw std::runtime_error(\"num.digit must be 11\");\n    const int remainder = std::accumulate(num.rbegin(), num.rend(), std::pair\u003cint, int\u003e{}, [](const std::pair\u003cint, int\u003e\u0026 s, const char\u0026 e){\n        if(!std::isdigit(e)) throw std::runtime_error(\"num.digit must be 11\");\n        const int n = s.second + 1;\n        const int p = e - '0';\n        const int q = (6 \u003c n) ? n - 5 : n + 1;\n        return std::pair\u003cint, int\u003e{s.first + p * q, n};\n    }).first % 11;\n    return (0 == remainder || 1 == remainder) ? 0 : 11 - remainder;\n}\n```\n\nのようなコードを書きましたが、`const std::pair\u003cint, int\u003e\u0026 s`ってすごく冗長ですよね。\n\n@YukiMiyatake 氏の[BoostAsioで可読性を求めるのは間違っているだろうか](https://www.slideshare.net/chihayatakatuki/boost-asio)では\n\n[![slide 19/31](https://image.slidesharecdn.com/boostasio-150517070248-lva1-app6891/95/boostasio-19-638.jpg?cb=1431846342)](https://www.slideshare.net/chihayatakatuki/boost-asio)\n\n\n`asio::yield_context yield_child`ってやっぱりすごく冗長ですよね。\n\nジェネリックラムダはここに`auto`を指定できるようにするものです。\n\n```cpp:C++14\nauto plus = [](auto a, auto b) { return a + b; };\n```\n\nというジェネリックラムダは\n\n```cpp:C++14\ntemplate \u003cclass T1, class T2\u003e\nauto operator()(T1 a, T2 b) const\n{\n  return a + b;\n}\n```\n\nという演算子を持つ関数オブジェクトを生成します。テンプレートと同じ型推論なのでcv修飾子(`const`, `volatile`)、参照、ポインタといった修飾ができます\n\n```cpp:C++14\nauto plus = [](const auto\u0026 a, const auto\u0026 b) { return a + b; };\n```\n\nなおもっとも汎用的な`auto\u0026\u0026`を使う場合\n\n```cpp:C++14\n[]( auto \u0026\u0026 a, auto \u0026\u0026 b ) noexcept(a \u003c b) -\u003e decltype(auto){ return a \u003c b ; }\n```\n\nこれを\n\n```cpp:P0573提案\n[](a,b) =\u003e a \u003c b\n```\n\nのようにかける提案が出ている。ECMAScript2015のArrow functionやC#3.0のlambdaみたいだ。\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e=\u0026gt; 待ってた。寧ろ C# 並に簡潔になって欲しい。x =\u0026gt; x * x は [](auto\u0026amp;\u0026amp; x) =\u0026gt; \u0026gt;\u0026gt;x * \u0026gt;\u0026gt;x に変換される的な。構文解析も少し工夫すれば問題にならなそうだし。\u003c/p\u003e\u0026mdash; akinomyoga (@akinomyoga) \u003ca href=\"https://twitter.com/akinomyoga/status/837286805074386944?ref_src=twsrc%5Etfw\"\u003eMarch 2, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\n- [ジェネリックラムダ - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14/generic_lambdas.html)\n- [本の虫: C++標準化委員会の文書: P0533R1-P0573r2](https://cpplover.blogspot.jp/2017/11/c-p0533r1-p0573r2.html)\n- [P0573R2: Abbreviated Lambdas for Fun and Profit](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0573r2.html)\n\n## [初心者向け]変数テンプレート\n\nC++初心者ならテンプレート扱えるよね。\n\nみんなだいすき`\u003ctype_traits\u003e`ヘッダなんかにある`std::is_integral`のような類は使うときに\n\n```cpp:C++14\n//static member変数の参照\nstd::is_integral\u003cT\u003e::value;\n//operator()の呼び出し\nstd::is_integral\u003cT\u003e();\n```\n\nのように書くことになるが、\n\n```cpp:C++14\n#include \u003ctype_traits\u003e\ntemplate \u003cclass T\u003e\nconstexpr bool is_integral_v = std::is_integral\u003cint\u003e::value;\n```\n\nのように変数テンプレートを定義しておくことで\n\n```cpp:C++14\nis_integral_v\u003cT\u003e\n```\n\nとかけるようになる。\n\nこんな感じに実質type_traitsのようなものを書くときにしか使わない印象。\n\nなおC++17で自分で変数テンプレート書かなくても\n\n```cpp:C++17\nstd::is_integral_v\u003cT\u003e\n```\n\nとかけるようになりました。\n\n- [変数テンプレート - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14/variable_templates.html)\n- [C++17 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17.html)\n\n## constexprの制限緩和\n\nC++14最大の変更点と言って過言ではないです。\n\nC++11でconstexprが導入され、コンパイル時計算が**一般的な人類**の手の届くものになりました。\n\n[![slide12/100](https://image.slidesharecdn.com/constexpr-111204124759-phpapp01/95/constexpr-12-728.jpg?cb=1328839990)](https://www.slideshare.net/GenyaMurakami/constexpr-10458089)\n\n\u003e[中３女子でもわかる constexpr](https://www.slideshare.net/GenyaMurakami/constexpr-10458089) from [Genya Murakami](https://www.slideshare.net/GenyaMurakami)\n\nそう、そのはずでした。しかしC++11のconstexprは制約が多く\n\n- return文一つしか書けないので三項演算子で頑張る\n- 副作用は作れないので再帰とラッパー関数で頑張る\n- 再帰回数には推奨値512回の制約があるので、再帰オーダーを下げるためにindex_tuple や 倍分再帰 などのイディオムを駆使する必要がある。\n\nという事態を招き、例えば次のようなコードが生産されることになりました。\n\n```cpp:C++11\n/*=============================================================================\n  Copyright (c) 2011-2017 Bolero MURAKAMI\n  https://github.com/bolero-MURAKAMI/Sprout\n\n  Distributed under the Boost Software License, Version 1.0. (See accompanying\n  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n=============================================================================*/\n#ifndef SPROUT_ALGORITHM_FIND_HPP\n#define SPROUT_ALGORITHM_FIND_HPP\n\n#include \u003citerator\u003e\n#include \u003ctype_traits\u003e\n#include \u003csprout/config.hpp\u003e\n#include \u003csprout/iterator/operation.hpp\u003e\n#include \u003csprout/iterator/type_traits/category.hpp\u003e\n#include \u003csprout/utility/pair/pair.hpp\u003e\n\nnamespace sprout {\n\tnamespace detail {\n\t\ttemplate\u003ctypename RandomAccessIterator, typename T\u003e\n\t\tinline SPROUT_CONSTEXPR RandomAccessIterator\n\t\tfind_impl_ra(\n\t\t\tRandomAccessIterator const\u0026 first, RandomAccessIterator const\u0026 last, T const\u0026 value,\n\t\t\ttypename std::iterator_traits\u003cRandomAccessIterator\u003e::difference_type pivot, RandomAccessIterator const\u0026 found\n\t\t\t)\n\t\t{\n\t\t\treturn found != first ? found\n\t\t\t\t: pivot == 0 ? (*first == value ? first : last)\n\t\t\t\t: sprout::detail::find_impl_ra(\n\t\t\t\t\tsprout::next(first, pivot), last, value,\n\t\t\t\t\t(sprout::distance(first, last) - pivot) / 2,\n\t\t\t\t\tsprout::detail::find_impl_ra(\n\t\t\t\t\t\tfirst, sprout::next(first, pivot), value,\n\t\t\t\t\t\tpivot / 2,\n\t\t\t\t\t\tfirst\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t;\n\t\t}\n\t\ttemplate\u003ctypename RandomAccessIterator, typename T\u003e\n\t\tinline SPROUT_CONSTEXPR typename std::enable_if\u003c\n\t\t\tsprout::is_constant_distance_iterator\u003cRandomAccessIterator\u003e::value,\n\t\t\tRandomAccessIterator\n\t\t\u003e::type\n\t\tfind(\n\t\t\tRandomAccessIterator const\u0026 first, RandomAccessIterator const\u0026 last, T const\u0026 value,\n\t\t\tstd::random_access_iterator_tag*\n\t\t\t)\n\t\t{\n\t\t\treturn first == last ? last\n\t\t\t\t: sprout::detail::find_impl_ra(first, last, value, sprout::distance(first, last) / 2, first)\n\t\t\t\t;\n\t\t}\n\n\t\ttemplate\u003ctypename InputIterator, typename T\u003e\n\t\tinline SPROUT_CONSTEXPR sprout::pair\u003cInputIterator, bool\u003e\n\t\tfind_impl_1(\n\t\t\tsprout::pair\u003cInputIterator, bool\u003e const\u0026 current,\n\t\t\tInputIterator const\u0026 last, T const\u0026 value, typename std::iterator_traits\u003cInputIterator\u003e::difference_type n\n\t\t\t)\n\t\t{\n\t\t\ttypedef sprout::pair\u003cInputIterator, bool\u003e type;\n\t\t\treturn current.second || current.first == last ? current\n\t\t\t\t: n == 1 ? *current.first == value ? type(current.first, true) : type(sprout::next(current.first), false)\n\t\t\t\t: sprout::detail::find_impl_1(\n\t\t\t\t\tsprout::detail::find_impl_1(\n\t\t\t\t\t\tcurrent,\n\t\t\t\t\t\tlast, value, n / 2\n\t\t\t\t\t\t),\n\t\t\t\t\tlast, value, n - n / 2\n\t\t\t\t\t)\n\t\t\t\t;\n\t\t}\n\t\ttemplate\u003ctypename InputIterator, typename T\u003e\n\t\tinline SPROUT_CONSTEXPR sprout::pair\u003cInputIterator, bool\u003e\n\t\tfind_impl(\n\t\t\tsprout::pair\u003cInputIterator, bool\u003e const\u0026 current,\n\t\t\tInputIterator const\u0026 last, T const\u0026 value, typename std::iterator_traits\u003cInputIterator\u003e::difference_type n\n\t\t\t)\n\t\t{\n\t\t\treturn current.second || current.first == last ? current\n\t\t\t\t: sprout::detail::find_impl(\n\t\t\t\t\tsprout::detail::find_impl_1(\n\t\t\t\t\t\tcurrent,\n\t\t\t\t\t\tlast, value, n\n\t\t\t\t\t\t),\n\t\t\t\t\tlast, value, n * 2\n\t\t\t\t\t)\n\t\t\t\t;\n\t\t}\n\t\ttemplate\u003ctypename InputIterator, typename T\u003e\n\t\tinline SPROUT_CONSTEXPR InputIterator\n\t\tfind(\n\t\t\tInputIterator const\u0026 first, InputIterator const\u0026 last, T const\u0026 value,\n\t\t\tstd::input_iterator_tag*\n\t\t\t)\n\t\t{\n\t\t\ttypedef sprout::pair\u003cInputIterator, bool\u003e type;\n\t\t\treturn sprout::detail::find_impl(type(first, false), last, value, 1).first;\n\t\t}\n\t}\t// namespace detail\n\n\t// 25.2.5 Find\n\t//\n\t//\trecursion depth:\n\t//\t\tO(log N)\n\t//\n\ttemplate\u003ctypename InputIterator, typename T\u003e\n\tinline SPROUT_CONSTEXPR InputIterator\n\tfind(InputIterator first, InputIterator last, T const\u0026 value) {\n\t\ttypedef typename std::iterator_traits\u003cInputIterator\u003e::iterator_category* category;\n\t\treturn sprout::detail::find(first, last, value, category());\n\t}\n}\t// namespace sprout\n\n#endif\t// #ifndef SPROUT_ALGORITHM_FIND_HPP\n```\n\nここに崩壊したかに見えたコンパイル時の世界の魔界は完全にその権威を取り戻した(Doctor X風)。\n\nC++14constexprはこのコンパイル時計算を**再び**一般的な人類の手の届くものにするものです。\n\nこのconstexprの制限緩和によって、コンパイル時にできないことは概ね\n\n- I/O\n- 動的メモリ（new/delete）\n- 例外処理（try-catch）\n- RAII（デストラクタを使った後処理）\n- ラムダ式\n- グローバル変数の参照\n\nになりました。ラムダ式については後述するがC++17で概ね制約がなくなりました。動的メモリについては現在C++標準化委員会にこれを許可する提案が出ています。I/OのうちInputの部分はFile literalなる奇想天外なものが同じくC++標準化委員会に提案されています。\n\n結果として先の魔界じみたコードは、概ね次のような一般的な人類でも読めるものに変貌を遂げたのです。\n\n\n```cpp:C++14\n//Copyright (c) 2013-2014 Bolero MURAKAMI\ntemplate\u003ctypename InputIterator, typename T\u003e\nconstexpr InputIterator\nfind(InputIterator first, InputIterator last, T const\u0026 value) {\n  for (; first != last; ++first)\n    if (*first == value) {\n      return first;\n    }\n  return last;\n}\n```\n\nもはや普段我々が書く関数と差はほとんどないですね！\n[縄文アートグループ展 ARTs of JOMON in Kioicho(12/4～12/25)に出品している岡山の陶芸家な某中３女子](https://twitter.com/bolero_MURAKAMI)でなくても理解できます。\nconstexprは市民の義務と言えるでしょう。\n\n- [C++14 時代の constexpr プログラミング作法 - ボレロ村上 - ENiyGmaA Code](http://boleros.hateblo.jp/entry/20131203/1386011596)\n- [constexprの制限緩和 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14/relaxing_constraints_on_constexpr.html)\n- [ｃonstexpr関数はコンパイル時処理。これはいい。実行時が霞んで見える。cpuの嬌声が聞こえてきそうだ](https://www.slideshare.net/GenyaMurakami/onstexprcpu)\n- [中３女子でもわかる constexpr](https://www.slideshare.net/GenyaMurakami/constexpr-10458089)\n\n## 宣言時のメンバ初期化を持つ型の集成体初期化を許可 \t\n\n細かいこと抜きにして実用的な話をすると\n\n```cpp:C++11\nstd::array\u003cint, 3\u003e ar = {{ 1, 2, 3 }};\n```\n\nを\n\n```cpp:C++14\nstd::array\u003cint, 3\u003e ar = { 1, 2, 3 };\n```\n\nとかけるようになったという話です。\n\n- [宣言時のメンバ初期化を持つ型の集成体初期化を許可 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14/brace_elision_in_array_temporary_initialization.html)\n\n## `[[deprecated]]`属性\n\n本来の用途はライブラリ開発者がユーザーに「このAPIは使わないでくれ、そのうち削除する」と伝えるためのものです。\nこのattributeが付いているとコンパイラは警告なりエラーを吐きます。\n\nこれを**悪用して、リファクタリングするときに消したいものにこのattributeをつけて利用されているところを列挙する**という使い方があります。\n\ngrepすればいいやん、とかVSのIntelliSenseで呼び出しツリーとか参照見れるでしょ、と思うかもしれませんが、grepだと別の名前空間のやつが引っかかったりして面倒で、VSのはわりとよくバグるというかコンパイラとIntelliSenseで別のバグを同時に引くと解読不能なのでこいつがすごく便利です。\n\n以前から各コンパイラが独自拡張でこの機能を実装していたので、それが標準化されたと思っていいと思います。\n\n- [[[deprecated]]属性 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp14/deprecated_attr.html)\n\n## `std::make_unique()`を追加\n\nなぜC++11に`make_shard`があるのに`make_unique`がないのかという思いでいっぱいですが、C++14で追加されました。\n\n```cpp:C++14\nauto p1 = std::make_unique\u003cstd::pair\u003cint, int\u003e\u003e(3, 1);\n```\n\nこれによって**`new`/`delete`は書いてはいけないもの**になりました。代わりに`std::unique_ptr`/`std::shard_ptr`を使いましょう。\n\nなおどのようにスマートポインタを使うべきかは\n[C++ スマートポインタのパターン](https://qiita.com/kojiohta/items/596802df9cfa881ad9c4)\nというスマートな記事を発見したのでそちらを参照してください。\n\n## `std::exchange()`を追加\n\nこれ自体は別に大した関数じゃなくて、値を書き換え、書き換え前の値を返す、というただそれだけの関数です。真の目的は\n[非推奨だった bool 型に対するインクリメント演算子を削除(C++17)](https://cpprefjp.github.io/lang/cpp17/remove_deprecated_increment_of_bool.html)\nへの布石です。\n\n## リテラル演算子\n\n痒いところに手が届く新機能です。\n\nこれまで\n\n```cpp:C++11\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#define STRINGIFY(n) #n\n#define TOSTRING(n) STRINGIFY(n)\n\nstd::string foo(const char* str1)\n{\n    return std::string(\"s1:\") + str1 + \" in line\" + TOSTRING(__LINE__);\n}\nint main()\n{\n    std::cout \u003c\u003c foo(\"arikitari\") \u003c\u003c std::endl;\n}\n```\n\nとか\n\n```cpp:C++11\n#include \u003cchrono\u003e\n#include \u003cthread\u003e\nint main()\n{\n    const auto current = std::chrono::high_resolution_clock::now();\n    //do something\n    std::this_thread::sleep_until(current + std::chrono::seconds(3));\n}\n```\n\nみたいなコードを書いていたと思いますが、`std::string(\"s1:\")`にしても`std::chrono::seconds(3)`にしても冗長で、`using namespace`とか`using s = std::string`とかするのもだるいですよね。\n\nところでC++11で、User Defined Literalsという機能が追加されました。こいつを標準ライブラリで追加したのがC++14での変更です。つまり\n\n```cpp:C++14\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#define STRINGIFY(n) #n\n#define TOSTRING(n) STRINGIFY(n)\n\nstd::string foo(const char* str1)\n{\n    using namespace std::string_literals;\n    //using namespace std::literals;//これでもいい\n    //using namespace std::literals::string_literals;//これでもいいが長い\n    //using namespace std;//しないことを強くすすめる\n    return \"s1:\"s + str1 + \" in line\" + TOSTRING(__LINE__);\n}\nint main()\n{\n    std::cout \u003c\u003c foo(\"arikitari\") \u003c\u003c std::endl;\n}\n```\n\nとか\n\n```cpp:C++14\n#include \u003cchrono\u003e\n#include \u003cthread\u003e\nint main()\n{\n    using namespace std::chrono_literals;\n    //using namespace std::literals;//これでもいい\n    //using namespace std::literals::chrono_literals;//これでもいいが長い\n    //using namespace std;//しないことを強くすすめる\n    //using namespace std::chorono;//しないことをすすめる\n    const auto current = std::chrono::high_resolution_clock::now();\n    //do something\n    std::this_thread::sleep_until(current + 3s);\n}\n```\n\nのようにかけるわけです。すっきり。\n\n例は挙げていませんが複素数ライブラリ(`\u003ccomplex\u003e`)向けにも追加されています。\n\n- [sリテラル - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/reference/string/basic_string/op_s.html)\n- [duration - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/reference/chrono/duration.html)\n- [complex - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/reference/complex.html)\n\n# (C++14 ... C++17]\n\n変更点一覧は\n[C++17 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17.html)\nにまとまっています。\n\ncpprefjpではC++17の新機能解説を現在執筆中ですが、それに加わる人をきっと、多分、おそらく、may be、募集していると思います。\n[Issues · cpprefjp/site | is:issue is:open label:TASK C++17](https://github.com/cpprefjp/site/issues?utf8=%E2%9C%93\u0026q=is%3Aissue+is%3Aopen+label%3ATASK+C%2B%2B17)\nこの辺を見て書けそうなのがあったらPull Requestを投げてください。\n(早く`if constexpr`文の導入背景を調べて追記しないと・・・)\n\nあと @kazatsuyu 氏の\n[久々なのでC++17の情報を集めてみる - Qiita](https://qiita.com/kazatsuyu/items/1d46b85f08c6e9a8bcaf)\nと内容かぶっているじゃねーか、という話もありますが、もうすこしざっくりした話をします。\n\n## インライン変数\n\nC++ではtemplateを使うと実質その定義をヘッダに書かないといけないので、開き直ってヘッダーオンリーライブラリというのが広く存在します(コンパイル時間は犠牲になった)。\n\nしかしながら、例えばmutexなど外部リンケージを持つ変数を作る必要があることがあり、ヘッダーオンリーでは素直には記述できませんでした。\n\nインライン変数はこれを解決します。\n\n```cpp:C++14ヘッダー\nstruct X {\n  // ヘッダでは変数の宣言のみを行い\n  static int foo;\n};\n```\n\n```cpp:C++14ソース\n// 変数fooを定義する\nint X::foo;\n```\n\nこれが\n\n```cpp:C++17\nstruct X {\n  // ソースで変数fooを定義する必要がない\n  static inline int foo;\n};\n```\n\nのようになります。\n\n恩恵としてはヘッダーオンリーのライブラリが増えて気軽に外部ライブラリを使えるようになるんじゃないかと思います。(そんなことよりはようmoduleよこせ)\n\n- [インライン変数 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17/inline_variables.html)\n\n## 構造化束縛\n\n**個人的にイチオシのC++17新機能です。**\n\n```cpp:C++11\nstd::pair\u003cint, std::string\u003e f() { return { 2, \"s\" }; }\nint main()\n{\n    std::pair\u003cint, std::string\u003e p = f();\n    int id = p.first;\n    std::string message = p.second;\n}\n```\n\nのように書いていたのが\n\n```cpp:C++17\nstd::pair\u003cint, std::string\u003e f() { return { 2, \"s\" }; }\nint main()\n{\n    auto [id, message] = f();\n}\n```\n\nと書けるようになる機能です。\n\n実際の利用例としては、\n\n```cpp:C++17\n//Copyright Cpprefjp CC BY\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\n#include \u003cstring\u003e\n\nint main()\n{\n    std::map\u003cstd::string, int\u003e m = {\n        {\"Alice\", 3},\n        {\"Bob\", 1},\n        {\"Carol\", 4}\n    };\n\n    // mapの各要素をキーと値に分解する。\n    // const auto\u0026ではなくauto\u0026にした場合は、\n    // const std::string\u0026型のkey変数と、\n    // int\u0026型のvalue変数に分解される。\n    for (const auto\u0026 [key, value] : m) {\n        std::cout \u003c\u003c key \u003c\u003c \" : \" \u003c\u003c value \u003c\u003c std::endl;\n    }\n}\n```\n\nのように使えます。\n\nで、こいつのポテンシャル(潜在的能力)が意外に高くて、\n\n```cpp:C++17\n#include \"print_struct.hpp\"\n#include \u003ciostream\u003e\nstruct inner\n{\n  const char *p;\n  int n;\n};\nstruct outer\n{\n  int m;\n  inner i;\n};\nint main()\n{\n  outer o{3, {\"foo\", 88}};\n  using namespace print_struct;\n  std::cout \u003c\u003c o \u003c\u003c '\\n';\n}\n```\n\n魔法のヘッダーファイル`print_struct.hpp`をincludeし、`using namespace print_struct;`で`operator\u003c\u003c`を名前探索の対象に含めることで、publicなメンバ変数を含むクラスが`std::cout`で表示できるということができたりします。\n[Playful Programming: Serializing structs with C++17 structured bindings](http://playfulprogramming.blogspot.jp/2016/12/serializing-structs-with-c17-structured.html?spref=tw)\n\n- [構造化束縛 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17/structured_bindings.html)\n\n## `[[maybe_unused]]`属性\n\nデバッグ用に`assert`の呼び出しを書くときに一回変数に受けておきたいということがあるわけですが、そうするとReleaseビルドするときに、「変数~~は利用されていません」みたいに怒られると悲しいですね。なので仕方なく`#ifdef _DENUG`〜〜`#endif`とかする。でもそれって非常に非効率的。これはattributeの出番でしょ！ということで追加されました。\n\n- [[[maybe_unused]]属性 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17/maybe_unused.html)\n\n## 値のコピー省略を保証\n\nこれまでC++の多くのコンパイラはRVO(Return Value Optimization)と呼ばれる最適化を実装してきました。つまり、\n\n```cpp\n//copy\n#include \u003ciostream\u003e\nstruct Hoge {\n  Hoge(int i = 0) : x(i) {}\n  Hoge(const Hoge\u0026) { std::cout \u003c\u003c \"copy ctor call\"; }\n  int x;\n};\nHoge rvo() {\n  return Hoge();\n}\nint main() {\n  Hoge a = rvo();  // copy が呼ばれないかもしれない(RVO)\n  Hoge b = a;  // copy が呼ばれる\n  return 0;\n}\n```\n\nこのようにコピー/ムーブコンストラクタの呼び出しを省略することがありました。\n\nC++17ではこのRVOを事実上強制し、**コピー/ムーブコンストラクタがなくても**関数の戻り値として使えるようになりました。\n\nなおこれよりさらに進んだNRVOに関しては変化なしなのでその場合はコピー/ムーブコンストラクタが必要です。\n\n## if文とswitch文の条件式と初期化を分離\n\n変数のスコープをなるべく小さくしろというのはよく言われる話で、言語側でも\n\n```cpp:C99_C++11\nfor(int i = 0; i \u003c 55; ++i){\n    //do something\n}\n```\n\nというように`for`文のなかで変数宣言ができるようになったりしていました。\n\nC++17では`if`文と`switch`文でもそれができるようになりました。\n\n```cpp:C++17\nstd::string s;\n//do something\nif(std::size_t pos = s.find_first_of(' '); std::string::npos != pos){\n   //do something\n}\n```\n\n- [if文とswitch文の条件式と初期化を分離 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17/selection_statements_with_initializer.html)\n\n## `if constexpr`文\n\nこれまでC++には2つのif文がありました\n\n- プリプロセス時: `#if`〜`#elif`〜`#else`〜`#endif`\n- 実行時: `if`\n\nここに新たに\n\n- コンパイル時: `if constexpr`\n\nが追加されます。\n\nもはや\n[C99からC++14を駆け抜けるC++講座 - Qiita#templateでif](https://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8#template%E3%81%A7if)\nで取り上げたクラステンプレートの部分特殊化を利用したコンパイル時条件分岐やSFINAEを利用したコンパイル時条件分岐やオーバーロードを利用したコンパイル時条件分岐(可変長引数などで)は忘れていいものになりました。\n\n- [if constexpr 文 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17/if_constexpr.html)\n\n## `constexpr`ラムダ\n\nC++11で追加されたlambda式が関数オブジェクトを生成するsyntax sugerであるというのは\n[関数の創世から深淵まで駆け抜ける関数とはなんぞや講座 - Qiita](https://qiita.com/yumetodo/items/cdfb41781d32d98be1b4)\nで触れましたが、その生成される関数オブジェクトの`operator ()`が、条件を満たすと自動的にconstexpr指定されます、という機能です。\n\n```cpp:C++17\nint main()\n{\n    auto f = []{ return 42 ; } ;\n\n    constexpr int value = f() ; // OK\n}\n```\n\nなお**一部の**C++erの皆様に申し上げると、SFINAEの文脈では使えません。C++20はよ！\n\n## 畳み込み式(fold式)\n\nこれは無視できない新機能ではあるんだけど、魔界過ぎて解説は省略。C++14のconstexpr制限緩和のところで書いた再帰オーダーを下げるというのに大きく貢献するので、[岡山の陶芸家な某中３女子](https://twitter.com/bolero_MURAKAMI)あたりが喜びそうではあります。\nがしかし再帰地獄も大概だったけれど、fold式も大概だと私は思うんだ。\n\nまあなんだ、\n\n```cpp:C++17\ntemplate\u003ctypename ...Args\u003e\nauto sum(Args\u0026\u0026 ...args) {\n    return (... + args);\n}\n```\n\nみたいな`()`で囲まれて`...`が出てきて、C++11の可変長引数の展開ではなさそうだったらこれだ。\n\nただ書けなくても読めないとC++17時代こいつを見かける機会は増えるかもしれない。\n\nそれは2017年8月のこと。\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eそうなるとサイズ自動確保のテンプレートが欲しいな。\u003cbr\u003e\u003cbr\u003esizeof\u0026lt;int,bool,char,int64\u0026gt;::valueって書くと\u003cbr\u003e64が帰ってくる。\u003cbr\u003e要は1番でかいバイト数を返すメタ関数\u003c/p\u003e\u0026mdash; らいパン粉haskell修行者 (@elipmoc101) \u003ca href=\"https://twitter.com/elipmoc101/status/892349660739719168?ref_src=twsrc%5Etfw\"\u003eAugust 1, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://t.co/yJb8JIAAMN\"\u003ehttps://t.co/yJb8JIAAMN\u003c/a\u003e\u003cbr\u003eつまりこういうのが必要と。 \u003ca href=\"https://t.co/RnlHSK1R94\"\u003ehttps://t.co/RnlHSK1R94\u003c/a\u003e\u003c/p\u003e\u0026mdash; yumetodo-レポート辛い (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/892374990837882881?ref_src=twsrc%5Etfw\"\u003eAugust 1, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eよく考えたらstd::maxはconstexprになっているので使えた\u003ca href=\"https://t.co/jFHFFnjvWs\"\u003ehttps://t.co/jFHFFnjvWs\u003c/a\u003e\u003c/p\u003e\u0026mdash; 白山風露@ᓚᘏᗢ (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/892384017063976964?ref_src=twsrc%5Etfw\"\u003eAugust 1, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\n```cpp:C++17\n#include \u003ciostream\u003e\n#include \u003ccstddef\u003e\n#include \u003calgorithm\u003e\n\ntemplate\u003ctypename ...Types\u003e\nconstexpr auto max_sizeof_v = []() constexpr {\n    std::size_t v = 0;\n    return ((v = std::max(sizeof(Types), v)), ..., v);\n}();\n\nint main()\n{\n    std::cout \u003c\u003c max_sizeof_v\u003cstd::int64_t, int, char, bool\u003e \u003c\u003c std::endl;\n}\n```\n\nhttps://wandbox.org/permlink/O2gxJuItJuzC1etu\n\nこういうコードにある日突然遭遇するかもしれないから。\n\nなおこの一連のツイートにはオチがあってC++14でもっと短くかけることが判明しているので興味がある人は辿られたし[。](https://wandbox.org/permlink/qVcnV28SAfEGvj2F)\n\n- [久々なのでC++17の情報を集めてみる - Qiita#fold式](https://qiita.com/kazatsuyu/items/1d46b85f08c6e9a8bcaf#fold%E5%BC%8F)\n- [畳み込み式 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp17/folding_expressions.html)\n\n## filesystem\n\n**みなさん、聞きましたか？この現代社会、ファイル/ディレクトリの操作すら標準APIを提供できないクソ言語がここにあったようです！**\n\nやっとかよ、という思いが満載です。ようやくパーミッションとかとか含めたファイル/ディレクトリの操作ができるようになります！\n\n解説するとそれだけで記事が一つ書けるので、江添さんが執筆している\n\n[cpp17book/073-cpp17-lib-filesystem.md at master · EzoeRyou/cpp17book](https://github.com/EzoeRyou/cpp17book/blob/master/073-cpp17-lib-filesystem.md)\n\nに解説は譲ります。\n\n## Parallelism\n\nC++11で`\u003cthread\u003e`が入り、C++でもようやくスレッドを作れるようになったわけですが、これを効率的に使うのは意外と難しかったりします。\n\n例えばもっとも要望が多そうな`for`文をマルチスレッド化したい、という場合(ループ間に依存がない場合)\n\n```cpp:C++11\nnamespace parallel {\n\ttemplate\u003c\n\t\ttypename Index, typename Func,\n\t\ttypename RawIndexType = Index,\n\t\ttypename ...Args,\n\t\tstd::enable_if_t\u003cstd::is_unsigned\u003cIndex\u003e::value \u0026\u0026 std::is_integral\u003cRawIndexType\u003e::value, std::nullptr_t\u003e = nullptr\n\t\u003e\n\tinline void par_for(Index num, Func\u0026\u0026 f, Args\u0026\u0026 ...args) {\n\t\tconst unsigned int thread_num = std::thread::hardware_concurrency();\n\t\tif (thread_num \u003c 2) {//thread 非対応\n\t\t\tf(static_cast\u003cRawIndexType\u003e(0), static_cast\u003cRawIndexType\u003e(num), std::forward\u003cArgs\u003e(args)...);\n\t\t}\n\t\telse {\n\t\t\tconst auto task_num = num / thread_num;\n\t\t\tconst auto task_rest = num % thread_num;\n\t\t\tstd::vector\u003cstd::thread\u003e th;\n\t\t\tth.reserve(thread_num);\n\t\t\tfor (unsigned int i = 0; i \u003c thread_num; ++i) {\n\t\t\t\tth.emplace_back(\n\t\t\t\t\tstd::forward\u003cFunc\u003e(f),\n\t\t\t\t\tstatic_cast\u003cRawIndexType\u003e((i) ? i * task_num + task_rest : 0),\n\t\t\t\t\tstatic_cast\u003cRawIndexType\u003e((i + 1) * task_num + task_rest),\n\t\t\t\t\tstd::forward\u003cArgs\u003e(args)...\n\t\t\t\t);\n\t\t\t}\n\t\t\tfor (auto\u0026\u0026 t : th) t.join();\n        }\n    }\n}\nnamespace sigmoid_contrast {\n\tBOOL proc(FILTER* fp, FILTER_PROC_INFO* fpip) // This is the main image manipulation function\n\t{\n\t\tconst filter_proxy fc(fp);\n#ifdef USECLOCK\n\t\tch::time_point\u003cch::steady_clock\u003e start_con;\n\t\tif (fc.any_of(check::echo_benchmark, check::save_benchmark)) start_con = ch::steady_clock::now();\n#endif\n\n\t\tST.change_param(fc[track::midtone] / 100.0f, static_cast\u003cfloat\u003e(fc[track::strength]));\n\n\t\tif (fc.none_of(check::R, check::G, check::B)){\n\t\t\t/* Scan Y channel data */\n\t\t\tparallel::par_for(fpip-\u003eh, [fpip](int begin, int end) {\n\t\t\t\tfor (int r = begin; r \u003c end; r++){\n\t\t\t\t\tfor (int c = 0; c \u003c fpip-\u003ew; c++){\n\t\t\t\t\t\tPIXEL_YC* const px = fpip-\u003eycp_edit + r* fpip-\u003emax_w + c;\n\t\t\t\t\t\tpx-\u003ey = ST.lookup(px-\u003ey);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n        }\n    }\n}\n```\n\n(コードは[yumetodo/SigContrastFastAviUtl: Sigmodial/Logit contrast Aviutl plugin. IM is not used.](https://github.com/yumetodo/SigContrastFastAviUtl)より抜粋)\n\nのように書けばいいように見えます(**すでに十分面倒**)。\n\nところがこれだとスレッドを並列化したい`for`ごとに作る事になります。一般にスレッドを作るコストはそこそこ重いので、高速化のためには一度作ったスレッドを使いまわすようにする必要があります。\n\nそうなると生産者-消費者パターンを実装して・・・となり、おおよそ普通にプログラマが書けるコードではなくなります。\n\nそこでこれまではIntel© TBBなんかを使ってきたのですが(上記コードをそれで書き換えると約5倍高速化)、C++標準でそれはやってほしい。\n\nそういう要望に答えるべくC++17では、`\u003calgorithm\u003e`ヘッダ全般およびその他一部関数で並列化ができるようなオーバーロードを追加しました。\n\n実行ポリシー(`std::execution::seq`, `std::execution::par`, `std::execution::par_unseq`)を定義して、それを引数に渡してあげるとそれに基づいて実行してくれます。\n\n詳細な解説は使いたいアルゴリズム関数のページ、もしくは\n\n[cpp17book/044-cpp17-lib-parallel-algorithm.md at master · EzoeRyou/cpp17book](https://github.com/EzoeRyou/cpp17book/blob/master/044-cpp17-lib-parallel-algorithm.md)\n\nを参照してください。\n\nなお今回のは第一弾にすぎないので第二弾があるっぽいです。\n\n## `std::optional`\n\nRustなどと違い、C++の`std::optional`はイテレータを持たないので、\n\n```cpp\n#include \u003ciostream\u003e\nstd::optional\u003cint\u003e foo() { return 3; }\nint main()\n{\n    for(auto\u0026\u0026 i : foo()){\n        //only when optional holds value\n        std::cout \u003c\u003c i \u003c\u003c std::endl;\n    }\n}\n```\n\nのようなことはできません。\n\n- [Shouldn't std::optional be a container? - Google グループ](https://groups.google.com/a/isocpp.org/forum/#!topic/std-proposals/in38mPp2NiU)\n- [Iterating over/transforming std::optional - Google グループ](https://groups.google.com/a/isocpp.org/forum/?fromgroups#!searchin/std-proposals/optional/std-proposals/KeD14jNkuhs/54EB299kBAAJ)\n\n要望はあるみたいだし、[Sprout](https://github.com/bolero-MURAKAMI/Sprout)はそれを実装しているんですけどね～。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003esprout::optional にコンテナインタフェースを追加しました。\u003ca href=\"https://t.co/CgbXSNpl5D\"\u003ehttps://t.co/CgbXSNpl5D\u003c/a\u003e\u003ca href=\"https://t.co/DFw7i4Nby2\"\u003ehttps://t.co/DFw7i4Nby2\u003c/a\u003e\u003c/p\u003e\u0026mdash; 狂える中３女子ボレロ村上／陶芸C++er (@bolero_MURAKAMI) \u003ca href=\"https://twitter.com/bolero_MURAKAMI/status/702792883791749120?ref_src=twsrc%5Etfw\"\u003e2016年2月25日\u003c/a\u003e\u003c/blockquote\u003e\n\n- [optional - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/reference/optional/optional.html)\n\n## `\u003citerator\u003e`に`size()`追加\n\n**これで`_countof`とか`numof`とか`NUMOF`とかその手のマクロを作らなくても配列の大きさが求められます！**\n\n- [size - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/reference/iterator/size.html)\n\n## [中級者向け]多相アロケータとメモリプール\n\nC++中級者ならメモリーアロケータの存在くらいは知っているはず。C++17ではこれまでのアロケーター利用の仕様への謝罪と反省の意を込めて(?)`std::pmr`名前空間が追加され、`std::prm::memory_resource`を継承したアロケータを書けばいい感じになるようになりました。\n\n・・・などと知ったかぶって書こうとしましたが、私はC++中級者ではないので理解できていません。\n\n@MitsutakaTakeda 氏のAltPlus Advent Calendar 2017 17日目の記事である\n[Polymorphic Allocator in C++17 - Qiita](https://qiita.com/MitsutakaTakeda/items/48980faa9498c46b15b2)\n\nに丸投げします。\n\n## 標準イテレータ全般と`array`の変更操作に`constexpr`を追加\n\n最適化の手法で事前に計算してテーブル引き、なんて手法があります。\n\nC++14constexprのお陰で、その計算をコンパイル時にやりたい、という要求が生まれたわけですが、どういうわけかこれまで`std::array`の変更操作(`operator[]`とか)には`constexpr`が指定されていなかったので、[Sprout](https://github.com/bolero-MURAKAMI/Sprout)を使って\n\n```cpp:C++14\nSPROUT_CXX14_CONSTEXPR sprout::array\u003cstd::uint8_t, 1000\u003e make_mod_table_ysr() {\n    sprout::array\u003cstd::uint8_t, 1000\u003e re{};\n    for (size_t i = 0; i \u003c 1000; ++i) {\n        size_t mod = i % 11;\n        re[i] = static_cast\u003cstd::uint8_t\u003e(mod \u003c= 1 ? 0 : 11 - mod);\n    }\n    return re;\n}\n```\n\n(コードは[C++でマイナンバーのチェックデジットを計算する - Qiita](https://qiita.com/yumetodo/items/600ca0df422010cbc4c1)より抜粋)\n\nと書いてきたわけですが、C++17からはようやくarrayクラスを自分で作らなくてもそれができるようになりました。\n\nこの他、イテレータ全般も対応したようです。\n\n## 値を範囲内に収める`clamp()`関数を追加\n\n値を範囲内に丸める処理というのは頻出する割にはこれまでC++標準にそれをする関数はなく、`std::min`/`std::max`を使うか三項演算子で書く必要がありました。\n\nC++17になってようやくこれを行う関数が提案され、無事にC++17に採用されました。\n\n引数の順序で賛否両論あるようですが、**値・最小値・最大値(・比較関数)**の順になりました。\n\n## 所有権を持たない文字列クラスである`basic_string_view`を追加\n\nC++には文字列クラスとして`std::string`があるわけですが、基本的にはアロケーションが発生し、また部分文字列を取る場合には文字列のコピーが発生します。また場合によっては例外も発生します。\n\n高速化のために、このアロケーションやらコピーを避けようと思うと、`std::string`の**メンバー関数の恩恵が受けられず**、極めて冗長なコードを書くことになります。\n\nまた関数の引数などで文字列を受け取る時、実行速度を考えるとこれまで`const char*`版と`std::string`の2つのオーバーロードを用意する必要がありましたが、これが`std::string_view`で代替できるようになります。\n\n`std::string_view`は文字列開始位置のポインタと長さを保持します。これによって文字列のコピーをすることなく文字列を参照できるわけですね。\n\nただし当たり前ですがNULL終端しないので、文字列へのポインタのみしか受け取らないC APIには直接渡せません。長さも一緒に渡せるように変更するなり、ライブラリ作者に要望しましょう。\nex.) DxLibの作者さんに要望を投げた例: [[task]文字列の長さ指定付き関数を追加](http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026no=4243)\n\n![slide-1](https://image.slidesharecdn.com/c1zstringview-161105052915/95/boost-21-c1zstringview-1-638.jpg?cb=1478323849)\n[**Boost.勉強会 #21 札幌「C++1zにstring_viewが導入されてうれしいので紹介します」**](https://www.slideshare.net/maraigue/boost-21-c1zstringview) from @h_hiro_\n\n## `basic_string::data()`メンバ関数の非const版を追加\n\nこれはC-likeなAPIと文字列をやり取りしていた人には朗報です。\n\n[そろそろWindowsでUTF-16とShift-JISの変換方法をC++erらしくまとめようか](https://qiita.com/yumetodo/items/453d14eff41b805d8fc4)\nのコードを例に解説します。\n\n```cpp:Win32API\n#include \u003cstring\u003e\n#include \u003cwindows.h\u003e\n#include \u003ccstring\u003e\nstd::wstring shift_jis_to_utf_16(const std::string\u0026 str)\n{\n    static_assert(sizeof(wchar_t) == 2, \"this function is windows only\");\n    const int len = ::MultiByteToWideChar(CP_ACP, 0, str.c_str(), -1, nullptr, 0);\n    std::wstring re(len * 2 + 2, L'\\0');\n    if (!::MultiByteToWideChar(CP_ACP, 0, str.c_str(), -1, \u0026re[0], len)) {\n        //中略\n    }\n}\n```\n\nC++11以前は、`std::basic_string`が所有している文字列を格納しているメモリ領域が連続している保証がありませんでした。\n\nC++11になってこの連続が保証され、`std::basic_string`をバッファとして利用する上記のようなコードが書けるようになりました(変数`re`)。\n\nこれの何が嬉しいかというと、自前でメモリー確保してバッファを作ってそれをまたコピーするという作業が不要になってコピー回数とアロケーション回数が減らせる→**高速化できる**ということです。\n\nところで`std::basic_string`には太古の昔から`data()`というメンバ関数がありました。にもかかわらず文字列を格納しているメモリ領域の先頭へのポインタを取るのに`\u0026re[0]`のように書くのって**なんか変**です。\n\n理由としてはこれまでメンバ関数`data()`が\n\n```cpp\nconst charT* data() const;          // C++03 まで\n\nconst charT* data() const noexcept; // C++11 から\n```\n\nのように定義されていて、返却されるポインタがconst修飾されているという問題がありました。\n\nつまり上記の目的のためには`\u0026re[0]`と書くしかありませんでした(`const_cast`するとUBだった)。\n\n今回非const版が追加されたことで\n\n```cpp\nCharT* data() noexcept; //C++17から\n```\n\n素直に書けるようになりました。\n\nなおC++11時代からそうですが、このポインタをいじって書き込んでいい範囲は`[0...size())`なので、`\\0`が書き込まれる場所はいじってはいけません。つまりデカ目に確保してあとで`resize`しましょう。\n\nこの件に関しては @yohhoy さんの\n\n- [文字列取得バッファとしてのstd::string - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20130413/p1)\n- [文字列取得バッファとしてのstd::string リターンズ - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20160327/p1)\n\nが詳しいので詳細はそちらに譲ります。\n\n## ロケール依存なし、フォーマット解析なしの高速な文字列・数値変換関数として、to_chars()とfrom_chars()を追加\n\nこれは、この記事を見ているような人に直接恩恵があるわけじゃないですが、間接的に影響があります。\n\nこれまでC/C++に標準で提供されていた文字列→数値変換/数値→文字列変換はAPIとしてはたくさんの関数がありましたが、集約されるところ`strtol`系関数/`sprintf`関数に集約され、それ以外はそのラッパーとしての存在でした。\n\nこれらはまずロケールに依存しており、数値→文字列変換については`sprintf`なのでフォーマット解析が挟まったりと余計な処理が挟まっていました。\n\n今回の追加によってこれとは別系統の変換手段ができたので、例えば**JSONのシリアライズ/デシリアライズが速くなる**とかライブラリのバグが潰れるとかそういう恩恵があるかなと思います。\n\n## `hypot()`関数の3引数版を追加\n\n皆さん義務教育で3平方の定理とかピタゴラスの定理という名前で習ったアレをやるのが`std::hypot`の処理内容です。直角三角形の斜辺の長さの2乗は他の2辺の長さの2乗和に等しい、というあれです。\n\n何に使うかというとゲームなんかで直交座標系において2点間の距離の計算やベクトルの長さを計算するために使うわけですね。\n\nでもこれまで2次元版しかなかったので3次元版もほしい。そういう要望に答えたのがこの変更です。\n\n- [hypot - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/reference/cmath/hypot.html)\n\n## 最大公約数と最小公倍数の関数として、`gcd()`と`lcm()`を追加\n\n最大公約数と最小公倍数なんてものは義務教育で習う初歩的なものでたいしてコード量もいらない。\n\n```cpp\n// N3845のリファレンス実装例\n// 仮にclib名前空間内に置く\nnamespace clib {\n\n// 任意の整数型で動くテンプレート版のabs\ntemplate\u003c class T \u003e\nconstexpr auto abs( T i ) -\u003e enable_if_t\u003c is_integral\u003cT\u003e{}(), T \u003e\n{\n    return i \u003c T(0) ? -i : i; }\n}\n\n// 二つの実引数が整数型であるかどうかを確認し、また共通の型を返すメタ関数common_int_t\ntemplate\u003c class M, class N = M \u003e\nusing common_int_t = enable_if_t\u003c is_integral\u003cM\u003e{}() and is_integral\u003cN\u003e{}()\n, common_type_t\u003cM,N\u003e\n\u003e ;\n\n// 最大公約数\ntemplate\u003c class M, class N \u003e\nconstexpr auto gcd( M m, N n ) -\u003e common_int_t\u003cM,N\u003e\n{\nusing CT = common_int_t\u003cM,N\u003e;\nreturn n == 0 ? clib::abs\u003cCT\u003e(m) : gcd\u003cCT,CT\u003e(n, m % n);\n}\n\n// 最小公倍数\ntemplate\u003c class M, class N \u003e\nconstexpr auto lcm( M m, N n ) -\u003e common_int_t\u003cM,N\u003e\n{ return abs((m / gcd(m,n)) * n); }\n```\n\nしかし、だからこそてんでんばらに書くのではなく、標準化されるべきです。というわけで追加されました。\n\n**なお競技プログラミングなどで`using namespace std;`してきた人で自前で`gcd()`/`lcm()`書いていた人は名前衝突で死にます**。\n\n## `std::iterator`クラスを非推奨化\n\ncpprefjpの\n\n\u003eこのクラスを使用しても、イテレータ定義は簡単にならなかった\n\nという言葉にすべてが集約されるよね。どうせみんなイテレータ作るのに一応継承してたけど自前でイテレータの要件満たすための型定義書いてたでしょ。**いらんかったよね。**\n\n昨年の初心者C++ AdCの記事である\n[イテレータの解説をするなんて今更佳代 - Qiita](https://qiita.com/yumetodo/items/245e94a0e85db9bf5cbb)\nでも結局自分で型定義し直しています。\n\nそんなことよりはようイテレータがもっとかんたんに書ける仕組みを、syntax sugarをよこせ！\n\n## `\u003ccodecvt\u003e`を非推奨化。\n\n**みなさん、聞きましたか？この現代社会、文字コード変換すら標準APIを提供できないクソ言語がここにあるようです！**\n\nせっかくC++11で問題は山積みながら入ったと思ったらこれだよ！これだからアルファベット至上主義者共は・・・(なぞのとばっちり\n\nというわけでiconvのような外部ライブラリ使うとかUnicode変換くらいなら自前で書くかしましょう。\n\n・・・何を言ってるのかわからねーと思うが、俺もわからねぇ！[ニコニコ(く)](http://www.nicovideo.jp/tag/Niconico(%E3%81%8F%E3%81%9D)%E3%81%B8%E3%81%AE%E5%8F%8D%E5%BF%9C%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA)よかよっぽどクソでしょ。まじでありえねー。\n\n# C++の未来\n\nC++はC++標準化委員会(WG21)でその仕様が議論され、規格化され、最終的にISO/IECで標準化され、我々が使うコンパイラなんかはこれに従って実装されます。\n\nそのC++標準化委員会がC++に追加する大きな機能のロードマップは\n\n[Current Status : Standard C++](https://isocpp.org/std/status)で見ることができます。\n\n執筆時点で確認したら\n\n![loadmap](https://isocpp.org/files/img/wg21-timeline-2017-11.png)\n\nとなっていますね。\n\n2D graphicsというのが見えると思いますが、これは将来GUIを標準化しようという茨の道へと進むことを暗示しているのでしょうか。\n\nNetworkingというのはboost.asio相当のものになると思われます。はやく標準入りしてほしいです。\n\n## C++20\n\nC++11でリジェクトされ、内容を縮小して再提案されたC++17でも入らずにいたConceptはC++20に入りそうです。**やっとかよ！**。\n\n\n# 追記\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++14からだね\u003c/p\u003e\u0026mdash; キュアいなむのみたま (@range_v3) \u003ca href=\"https://twitter.com/range_v3/status/941917865506095104?ref_src=twsrc%5Etfw\"\u003eDecember 16, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\nC++11からC++17という部分に対する指摘が来ました。意図としては(C++11 ... C++17]という半開区間だったんですががが。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":2,"created_at":"2017-12-16T15:06:38+09:00","group":null,"id":"68f58de43094519ae899","likes_count":186,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C++14","versions":[]},{"name":"C++17","versions":[]},{"name":"C++1z","versions":[]}],"title":"C++11からC++17を駆け抜けるC++講座","updated_at":"2019-04-02T11:22:46+09:00","url":"https://qiita.com/yumetodo/items/68f58de43094519ae899","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"初心者cadvent-calendar-2017\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E5%BF%83%E8%80%85cadvent-calendar-2017\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初心者C++Advent Calendar 2017\u003c/h1\u003e\n\n\u003cp\u003eこの記事は初心者C++Advent Calendar 2017 12日目の記事です\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/sumomoneko/items/678a05fad9e7b3be359f\" id=\"reference-3228bce6f48990b68968\"\u003e\u0026lt;\u0026lt; 11日目|autoの推論まとめ、あるいはautoは忖度などしない件\u003c/a\u003e || \u003ca href=\"https://qiita.com/qiitamatumoto/items/47a22cbcb8393e869761\" id=\"reference-5829e1da6202b6740b58\"\u003e13日目|C++の分割コンパイル時に関数のオーバーロード(void test(int)と void test(double)はどうやって区別されているか？ \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e本来もっとあとに記事を出す予定でしたがなんか空いているのでゆるふわ記事を出します。ガチな記事は12/15までお待ち下さい。\u003c/p\u003e\n\n\u003cp\u003eまだ初心者C++ AdC、\u003cdel\u003e2つ\u003c/del\u003e1つ空いてますね。だれか\u003ccode\u003estd::string_view\u003c/code\u003eについて書きませんか？？私は時間が足りません。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ありきたりなcmakeのプロジェクト作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%82%E3%82%8A%E3%81%8D%E3%81%9F%E3%82%8A%E3%81%AAcmake%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eありきたりなCMakeのプロジェクト作成\u003c/h1\u003e\n\n\u003cp\u003eCMakeも極めればだいぶ色々できるスクリプト言語らしく、\u003ccode\u003eFindxxx\u003c/code\u003e系のスクリプトをのぞくと毎回うわぁとなってしまいます。\u003c/p\u003e\n\n\u003cp\u003eがしかし多くのCMakeユーザーに必要なのはそんなガチな書き方じゃなくてもっとゆるふわな、そういう動機のはず。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"先行記事\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%88%E8%A1%8C%E8%A8%98%E4%BA%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e先行記事\u003c/h1\u003e\n\n\u003cp\u003e当然CMakeなんて超メジャーツール、日本語の解説がないわけがない。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/termoshtt/items/539541c180dfc40a1189\" id=\"reference-d5c939caa0883a78d31f\"\u003eごく簡単なcmakeの使い方\u003c/a\u003e: 多分いちばん有名な記事\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/m_mizutani/items/e51e9f17c1a29dbf5669\" id=\"reference-813309a02b5fb4e7ba21\"\u003e中規模なC++の新しいプロジェクトを作るときにやるべきこと 2016年版\u003c/a\u003e: CMake含めた総合的な話\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/takeshi-uchitane/items/04f558cb405245cfabea\" id=\"reference-3a03150e4ff12a55b1d8\"\u003ec++14 with openmp + gtest-1.8のcmake環境を整備する\u003c/a\u003e: gtestを自動で拾おうとしている\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/termoshtt/items/7f7090f9d0c52bcd2630\" id=\"reference-355a50250414d99ef22f\"\u003ecmakeでビルド時にシェルスクリプトを実行する\u003c/a\u003e: カスタムターゲットについて\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/mrk_21/items/ab32a83a12f5d37acc64\" id=\"reference-5e8acf445f51e51d7e43\"\u003eCMake: モジュール\u003c/a\u003e: そもそもモジュールとはなんぞ\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/mrk_21/items/186439952a6665184444\" id=\"reference-a04a21f47270c6db6bad\"\u003eCMake: キャッシュ変数と環境変数\u003c/a\u003e: 設定項目付きCMakeを書くなら必読\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://qiita.com/tnishinaga/items/c01dfd5f43e446653cd1\" id=\"reference-c97b5f95831aef0ea006\"\u003eたのしい組み込みCMake\u003c/a\u003e: CMakeのノウハウのかまたり\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e自分がQiitaでストックしていた記事だけでもこんなものがあった。なかでも\u003ccode\u003eごく簡単なcmakeの使い方\u003c/code\u003eは極めて簡潔でわかりやすい。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"問題点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題点\u003c/h1\u003e\n\n\u003cp\u003eたしかに\u003ccode\u003eごく簡単なcmakeの使い方\u003c/code\u003eはわかりやすいんだけど、実際書こうとするともうすこし色々書かないと実用に耐えない。その辺を解説している記事がたどり着きにくく、StackOverflow何かを読まないといけない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"本題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%AC%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e本題\u003c/h1\u003e\n\n\u003cp\u003eまあまず実際に使っているプロジェクトを見るのが早いだろう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/YSRKEN/KanColleSimulator_KAI/blob/master/KCS_CUI/source/CMakeLists.txt\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/YSRKEN/KanColleSimulator_KAI/blob/master/KCS_CUI/source/CMakeLists.txt\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecmake_minimum_required\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eVERSION 3.1\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eenable_language\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD 14\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# C++14...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD_REQUIRED ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...is required...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_EXTENSIONS OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...without compiler extensions like gnu++11\u003c/span\u003e\n\u003cspan class=\"nb\"\u003efind_package\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eThreads REQUIRED\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e## Set our project name\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eproject\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eKCS_CUI\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003ekcs_kai_src \n    config.cpp\n    exception.cpp\n    fleet.cpp\n    kammusu.cpp\n    main.cpp\n    mapdata.cpp\n    other.cpp\n    random.cpp\n    result.cpp\n    simulator.cpp\n    weapon.cpp\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eMSVC\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Force to always compile with W4\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS MATCHES \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eREGEX REPLACE \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/W4\"\u003c/span\u003e CMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e /W4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eelseif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Update if necessary\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -Wall -Wextra -Wno-long-long -pedantic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e## Define the executable\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eKCS_CUI \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ekcs_kai_src\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eKCS_CUI Threads::Threads\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e解説していく。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"まずやること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずやること\u003c/h2\u003e\n\n\u003cp\u003eプロジェクトの名前を決める。普通これがそのまま実行ファイルなりライブラリの名前になる。\u003c/p\u003e\n\n\u003cp\u003eこれが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eproject\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eKCS_CUI\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eの部分だ。以降の\u003ccode\u003eKCS_CUI\u003c/code\u003eの部分はここで決定したものを使う。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ソースファイルの列挙\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%88%97%E6%8C%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eソースファイルの列挙\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eCMakeLists.txt\u003c/code\u003eからみた相対パスでソースファイルを列挙する。\u003c/p\u003e\n\n\u003cp\u003eなお\u003ccode\u003e#include \"xxx.h\"\u003c/code\u003eのようにincludeされているものについては書かなくてもCMakeがいい感じにしてくれる。つまり翻訳単位となる\u003ccode\u003e.cpp\u003c/code\u003eファイルが該当する。\u003c/p\u003e\n\n\u003cp\u003e今回は可読性の観点から\u003ccode\u003ekcs_kai_src\u003c/code\u003eという変数に格納した。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003ekcs_kai_src \n    config.cpp\n    exception.cpp\n    fleet.cpp\n    kammusu.cpp\n    main.cpp\n    mapdata.cpp\n    other.cpp\n    random.cpp\n    result.cpp\n    simulator.cpp\n    weapon.cpp\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eCMakeの変数のガバガバさがわかる(違。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c14でコンパイルする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c14%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++14でコンパイルする\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eenable_language\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD 14\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# C++14...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD_REQUIRED ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...is required...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_EXTENSIONS OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...without compiler extensions like gnu++11\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eの部分だ。\u003ccode\u003eCMAKE_CXX_STANDARD\u003c/code\u003eに\u003ccode\u003e11\u003c/code\u003eとか\u003ccode\u003e14\u003c/code\u003eとか\u003ccode\u003e17\u003c/code\u003eとか指定すればいいはずだ。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eCMAKE_CXX_EXTENSIONS\u003c/code\u003eを\u003ccode\u003eOFF\u003c/code\u003eにしておかないとGNU拡張のよく分からんのが使えてしまう。C++erならそんなことはしないはずだ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"警告レベルの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AD%A6%E5%91%8A%E3%83%AC%E3%83%99%E3%83%AB%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e警告レベルの設定\u003c/h2\u003e\n\n\u003cp\u003eC++erなら、Visual C++なら\u003ccode\u003e/W4\u003c/code\u003e、GCC/Clangなら\u003ccode\u003e-Wall -Wextra\u003c/code\u003eくらいはつけて使っているはずだ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eMSVC\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Force to always compile with W4\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS MATCHES \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eREGEX REPLACE \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/W4\"\u003c/span\u003e CMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e /W4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eelseif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Update if necessary\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -Wall -Wextra -Wno-long-long -pedantic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eそれがこの部分だ。なおVisual Studio Clang CodeGenについては考慮していない。今回はなんとなく\u003ccode\u003e-Wno-long-long -pedantic\u003c/code\u003eもつけている。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コンパイル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンパイル\u003c/h2\u003e\n\n\u003cp\u003eではコンパイルコマンドを発行しよう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eKCS_CUI \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ekcs_kai_src\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c11-threadを使う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c11-thread%E3%82%92%E4%BD%BF%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++11 Threadを使う\u003c/h2\u003e\n\n\u003cp\u003e今回の対象となるソースコードはC++11で追加されたThreadを使っている。こいつを使うには例えばpthreadとリンクしないといけなかったりする。その辺をやっているのが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003efind_package\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eThreads REQUIRED\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eKCS_CUI Threads::Threads\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eだ。この合わせて2行でよきに計らってくれる。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ちょっとしたオプションを使いたい時\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E3%81%97%E3%81%9F%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84%E6%99%82\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eちょっとしたオプションを使いたい時\u003c/h1\u003e\n\n\u003cp\u003eこれも実例を見たほうが早いだろう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/random_generator_iterator/blob/master/CMakeLists.txt\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/random_generator_iterator/blob/master/CMakeLists.txt\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecmake_minimum_required\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eVERSION 2.8\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eenable_language\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD 14\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# C++14...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD_REQUIRED ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...is required...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_EXTENSIONS OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...without compiler extensions like gnu++11\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e## Use the variable PROJECT_NAME for changing the target name\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e PROJECT_NAME \u003cspan class=\"s2\"\u003e\"random_generator_iterator\"\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e## Set our project name\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eproject\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePROJECT_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eSRCS \u003cspan class=\"s2\"\u003e\"main.cpp\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Update if necessary\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eoption\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eUSE_RDRND \u003cspan class=\"s2\"\u003e\"enable rdrnd\"\u003c/span\u003e 1\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eoption\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eUSE_RDSEED \u003cspan class=\"s2\"\u003e\"enable rdseed\"\u003c/span\u003e 0\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eUSE_RDRND\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -mrdrnd\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eUSE_RDSEED\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -mrdseed\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -Wall -Wextra\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e## Define the executable\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePROJECT_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eSRCS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e特に難しいことはない。オプションに\u003cstrong\u003e文字列を指定させたい場合以外は\u003c/strong\u003e単に\u003ccode\u003eoption\u003c/code\u003eを呼び出せばいい。第一引数が変数名でそれを見て適宜条件分岐すればいい。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"findxxx系をつかう-boostとopenssllibresslを例に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#findxxx%E7%B3%BB%E3%82%92%E3%81%A4%E3%81%8B%E3%81%86-boost%E3%81%A8openssllibressl%E3%82%92%E4%BE%8B%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eFindxxx系をつかう: BoostとOpenSSL/LibreSSLを例に\u003c/h1\u003e\n\n\u003cp\u003e次に示すCMakeは\u003ca href=\"http://yumetodo.hateblo.jp/entry/2017/04/06/141933\" rel=\"nofollow noopener\" target=\"_blank\"\u003e書いたときは付属してくる\u003ccode\u003eFindBoost.cmake\u003c/code\u003eにバグが有って\u003c/a\u003eワークアラウンドとしてレポジトリにパッチを当てたものを置いており、CMakeのバージョンを見て切り替えている。\u003c/p\u003e\n\n\u003cp\u003eなお\u003ca href=\"https://github.com/yumetodo/boost_asio_ssl_file_dl_test/issues/6\" rel=\"nofollow noopener\" target=\"_blank\"\u003eどういうわけかLibreSSLだとCMake側はいいのだがリンクでコケる。なんでや\u003c/a\u003e。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/boost_asio_ssl_file_dl_test/blob/support_libressl/CMakeLists.txt\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/boost_asio_ssl_file_dl_test/blob/support_libressl/CMakeLists.txt\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecmake_minimum_required\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eVERSION 3.7.2\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eenable_language\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD 14\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# C++14...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD_REQUIRED ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...is required...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_EXTENSIONS OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...without compiler extensions like gnu++11\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Config options\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eoption\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBOOST_ASIO_SSL_FILE_DL_TEST_USE_LIBRE_SSL \u003cspan class=\"s2\"\u003e\"Use LibreSSL instead of OpenSSL\"\u003c/span\u003e TRUE\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Set our project name\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eproject\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Source files\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test_src\n    boost_asio_ssl_file_dl_test/Source.cpp\n    boost_asio_ssl_file_dl_test/downloader.cpp\n    boost_asio_ssl_file_dl_test/downloader_impl.cpp\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# find libraries and include\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# find thread library\u003c/span\u003e\n\u003cspan class=\"nb\"\u003efind_package\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eThreads REQUIRED\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# find Boost\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# https://cmake.org/cmake/help/v3.7/module/FindBoost.html\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_MAJOR_VERSION\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e.\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_MINOR_VERSION\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e LESS 3.8\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_MODULE_PATH \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_MODULE_PATH\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/cmake/modules\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eFindBoost\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eSTATUS \u003cspan class=\"s2\"\u003e\"FindBoost: commit 9a8881c975ba8d814c39d52c370f3277afa80fda is used.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBoost_USE_MULTITHREADED ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBoost_USE_STATIC_LIBS OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBoost_USE_STATIC_RUNTIME OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBoost_USE_DEBUG_RUNTIME OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBoost_DEBUG ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_definitions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eBoost_LIB_DIAGNOSTIC_DEFINITIONS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_required_components\n    system date_time regex zlib bzip2 iostreams\n    \u003cspan class=\"c1\"\u003e# thread\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003efind_package\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBoost 1.59 REQUIRED COMPONENTS \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eboost_required_components\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eNOT Boost_FOUND\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   Config options\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBOOST_ROOT \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eBOOST_ROOT\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e CACHE PATH \u003cspan class=\"s2\"\u003e\"Set boost root directory\"\u003c/span\u003e FORCE\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBOOST_LIBRARYDIR \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eBOOST_LIBRARYDIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e CACHE PATH \u003cspan class=\"s2\"\u003e\"Set boost library directory\"\u003c/span\u003e FORCE\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eFATAL_ERROR \u003cspan class=\"s2\"\u003e\"Fail to find Boost\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nb\"\u003einclude_directories\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eBoost_INCLUDE_DIRS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# find SSL Library\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBOOST_ASIO_SSL_FILE_DL_TEST_USE_LIBRE_SSL\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   find LibreSSL\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_MODULE_PATH \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_MODULE_PATH\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/cmake/modules\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eFindLibreSSL\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003efind_package\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eLibreSSL\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eNOT LIBRESSL_FOUND\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eFATAL_ERROR \u003cspan class=\"s2\"\u003e\"Fail to find LibreSSL\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# exit\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eSTATUS \u003cspan class=\"s2\"\u003e\"LibreSSL_INCLUDE_DIR: \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eLibreSSL_INCLUDE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003einclude_directories\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eLibreSSL_INCLUDE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   find OpenSSL\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   https://cmake.org/cmake/help/v3.7/module/FindOpenSSL.html\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003efind_package\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eOpenSSL REQUIRED\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eNOT OPENSSL_FOUND\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eFATAL_ERROR \u003cspan class=\"s2\"\u003e\"Fail to find OpenSSL\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# exit\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eSTATUS \u003cspan class=\"s2\"\u003e\"OPENSSL_INCLUDE_DIR: \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOPENSSL_INCLUDE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003einclude_directories\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOPENSSL_INCLUDE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Update compiler waring flags\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eMSVC\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Force to always compile with W4\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS MATCHES \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eREGEX REPLACE \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/W4\"\u003c/span\u003e CMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e /W4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eelseif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Update if necessary\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -Wall -Wextra -Wno-long-long -pedantic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Compile\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eboost_asio_ssl_file_dl_test_src\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Link\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test Threads::Threads\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test Boost::disable_autolinking \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eBoost_LIBRARIES\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eBOOST_ASIO_SSL_FILE_DL_TEST_USE_LIBRE_SSL\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eLibreSSL_LIBRARIES\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test OpenSSL::SSL\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003etarget_link_libraries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eboost_asio_ssl_file_dl_test OpenSSL::Crypto\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e基本的に\u003ccode\u003eFindxx.cmake\u003c/code\u003eのたぐいはファイルを見に行くとコメントで使い方をちゃんと書いてくれているのでそれに従えばいい。というよりそれぞれ微妙に作法が違うので統一的な説明ができない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"少しづつ設定を変えて同じソースコードをビルドしたいとき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%B0%91%E3%81%97%E3%81%A5%E3%81%A4%E8%A8%AD%E5%AE%9A%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E5%90%8C%E3%81%98%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e少しづつ設定を変えて同じソースコードをビルドしたいとき\u003c/h1\u003e\n\n\u003cp\u003eベンチマークなどで、マクロの定義を差し替えて同じソースコードから複数のbinaryを吐きたいことがある。実例を見よう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/qsort\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/qsort\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003edirectory構成は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e/project root\n├── benchmark.sh\n├── CMakeLists.txt\n├── main_prog.cpp\n├── mm88.h\n├── mm88c.c\n├── qs10a5.c\n├── qs10a5.h\n├── qs9e17.c\n├── qs9e17.h\n├── random_device.hpp\n├── qs10a5\n│   └── CMakeLists.txt\n├── qs10a5m\n│   └── CMakeLists.txt\n├── qs9e17\n│   └── CMakeLists.txt\n└── qsort\n    ├── CMakeLists.txt\n    └── main.cpp\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じです。この場合以下のように記述するとルートディレクトリで\u003ccode\u003ecmake\u003c/code\u003eすると全部まとめてビルドされます．\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e/CMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecmake_minimum_required\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eVERSION 3.3\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eenable_language\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD 14\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# C++14...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_STANDARD_REQUIRED ON\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...is required...\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_EXTENSIONS OFF\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e#...without compiler extensions like gnu++11\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Update compiler waring flags\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eMSVC\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Force to always compile with W4\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS MATCHES \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eREGEX REPLACE \u003cspan class=\"s2\"\u003e\"/W[0-4]\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/W4\"\u003c/span\u003e CMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e /W4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eelseif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e# Update if necessary\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eCMAKE_CXX_FLAGS \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CXX_FLAGS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e -Wall -Wextra -Wno-long-long -pedantic\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eendif\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003eadd_subdirectory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqsort\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_subdirectory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqs9e17\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_subdirectory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqs10a5\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_subdirectory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqs10a5m\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    FILES \u003cspan class=\"s2\"\u003e\"./benchmark.sh\"\u003c/span\u003e\n    PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE\n    DESTINATION \u003cspan class=\"s2\"\u003e\".\"\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e/qs10a5/CMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    SRCS\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../main_prog.cpp\"\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../mm88c.c\"\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../qs10a5.c\"\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_definitions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e-DUSE_QS10A5\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqs10a5 \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eSRCS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eTARGETS qs10a5 RUNTIME DESTINATION \u003cspan class=\"s2\"\u003e\".\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e/qs10a5m/CMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    SRCS\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../main_prog.cpp\"\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../mm88c.c\"\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../qs10a5.c\"\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_definitions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e-DUSE_QS10A5 -DMEMCPY\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqs10a5m \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eSRCS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eTARGETS qs10a5m RUNTIME DESTINATION \u003cspan class=\"s2\"\u003e\".\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e/qs9e17/CMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    SRCS\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../main_prog.cpp\"\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../mm88c.c\"\u003c/span\u003e\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../qs9e17.c\"\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_definitions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e-DUSE_QS9E17\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqs9e17 \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eSRCS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eTARGETS qs9e17 RUNTIME DESTINATION \u003cspan class=\"s2\"\u003e\".\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e/qsort/CMakeLists.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    SRCS\n    \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eCMAKE_CURRENT_SOURCE_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/../main_prog.cpp\"\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_definitions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e-DUSE_STDLIB_QSORT\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eqsort \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eSRCS\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eTARGETS qsort RUNTIME DESTINATION \u003cspan class=\"s2\"\u003e\".\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003emkdir \u003c/span\u003ebuild\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003ebuild\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecmake \u003cspan class=\"nt\"\u003e-DCMAKE_INSTALL_PREFIX\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"../bin\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e-DCMAKE_BUILD_TYPE\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eRelease ..\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003emake \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ../bin\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"natvisファイルをvsのプロジェクトに追加したいとき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#natvis%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92vs%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%9F%E3%81%84%E3%81%A8%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eNatvisファイルをVSのプロジェクトに追加したいとき\u003c/h1\u003e\n\n\u003cp\u003eVisual Studioのデバッガでの表示をカスタマイズするものとしてNatvisがあるわけですが、\u003cbr\u003e\n\u003ca href=\"https://docs.microsoft.com/en-US/visualstudio/debugger/create-custom-views-of-native-objects\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCreate custom views of native objects in the debugger | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.vcxproj\u003c/code\u003eでそれを追加して認識させるためには\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e  \u003cspan class=\"nt\"\u003e\u0026lt;ItemGroup\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;Natvis\u003c/span\u003e \u003cspan class=\"na\"\u003eInclude=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"inferior_vector.natvis\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/ItemGroup\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようなものが書かれていれば認識されます。ではCMakeからこれを吐き出すには？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eadd_executable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u0026lt;project name\u0026gt; \u0026lt;source files\u0026gt;... \u0026lt;natvis files\u0026gt;...\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e単に\u003ccode\u003eadd_executable\u003c/code\u003eに指定してあげればいいようです(\u003ca href=\"https://teratail.com/questions/114946\" rel=\"nofollow noopener\" target=\"_blank\"\u003eThanks\u003c/a\u003e \u003ca href=\"/Chironian\" class=\"user-mention js-hovercard\" title=\"Chironian\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"Chironian\"\u003e@Chironian\u003c/a\u003e )。順番はどうでもいいです。\u003c/p\u003e\n\n\u003cp\u003eVS以外には単に無視されるので\u003ccode\u003eif(MSVC)\u003c/code\u003eとか書く必要はないです。\u003c/p\u003e\n\n\u003cp\u003eちなみに\u003ca href=\"https://gitlab.kitware.com/cmake/cmake/issues/16043\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCMake3.7.0から\u003c/a\u003eなので、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cmake\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecmake_minimum_required\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003eVERSION 3.7.0\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eしましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cmakeのもしくは付属のfindxxxcmakeにバグを見つけた時\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cmake%E3%81%AE%E3%82%82%E3%81%97%E3%81%8F%E3%81%AF%E4%BB%98%E5%B1%9E%E3%81%AEfindxxxcmake%E3%81%AB%E3%83%90%E3%82%B0%E3%82%92%E8%A6%8B%E3%81%A4%E3%81%91%E3%81%9F%E6%99%82\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCMakeの、もしくは付属の\u003ccode\u003eFindxxx.cmake\u003c/code\u003eにバグを見つけた時\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003eLet's contribute!\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eGithubにもCMakeのレポジトリがありますが、\u003cstrong\u003eただの案山子\u003c/strong\u003eなのでGitLabのほうを見に行きましょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://gitlab.kitware.com/cmake/cmake/blob/master/CONTRIBUTING.rst\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://gitlab.kitware.com/cmake/cmake/blob/master/CONTRIBUTING.rst\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこのへんよく読んでMerge Requestを投げつけましょう。ローカルにgit hock入れさせられます。\u003c/p\u003e\n\n\u003cp\u003e自分が過去に投げてMergeされたやつ↓\u003cbr\u003e\n\u003ca href=\"https://gitlab.kitware.com/cmake/cmake/merge_requests/673\" rel=\"nofollow noopener\" target=\"_blank\"\u003eFindBoost: Fix release name candidate list construction (!673) · Merge Requests · CMake / CMake · GitLab\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eC#周りはまだバグが多そうな印象なので(適当)チャンスですね。\u003cbr\u003e\n\u003ca href=\"/Chironian\" class=\"user-mention js-hovercard\" title=\"Chironian\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"Chironian\"\u003e@Chironian\u003c/a\u003e 氏が先月あたり\u003cbr\u003e\n\u003ca href=\"https://gitlab.kitware.com/cmake/cmake/merge_requests/1449\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCSharp: fix generation fail in environment except English (!1449) · Merge Requests · CMake / CMake · GitLab\u003c/a\u003e\u003cbr\u003e\n投げてましたね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cmakeでライブラリをビルドするとき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cmake%E3%81%A7%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCMakeでライブラリをビルドするとき\u003c/h1\u003e\n\n\u003cp\u003eFindxxx系を作って提供するのは時代遅れになりつつあり、xxx-config.cmakeを自動生成させるようにするべきです。\u003c/p\u003e\n\n\u003cp\u003eこのときcmake2.8.12以降を使い、また\u003ccode\u003ecmake_minimum_required\u003c/code\u003eもそのようにしましょう(さもないと\u003ca href=\"https://cmake.org/cmake/help/latest/policy/CMP0022.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCMP0022\u003c/a\u003eが出る)。\u003c/p\u003e\n\n\u003cp\u003e詳細は\u003cbr\u003e\n\u003ca href=\"https://qiita.com/osamu0329/items/134de918c0ffa7f0557b\" id=\"reference-a826e5fbba3551f8bdf2\"\u003eお手軽な xxx-config.cmake の作成方法\u003c/a\u003e\u003cbr\u003e\nがよくまとまっているので丸投げします。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 初心者C++Advent Calendar 2017\n\nこの記事は初心者C++Advent Calendar 2017 12日目の記事です\n\n[\u003c\u003c 11日目|autoの推論まとめ、あるいはautoは忖度などしない件](https://qiita.com/sumomoneko/items/678a05fad9e7b3be359f) || [13日目|C++の分割コンパイル時に関数のオーバーロード(void test(int)と void test(double)はどうやって区別されているか？ \u003e\u003e](https://qiita.com/qiitamatumoto/items/47a22cbcb8393e869761)\n\n本来もっとあとに記事を出す予定でしたがなんか空いているのでゆるふわ記事を出します。ガチな記事は12/15までお待ち下さい。\n\nまだ初心者C++ AdC、~~2つ~~1つ空いてますね。だれか`std::string_view`について書きませんか？？私は時間が足りません。\n\n# ありきたりなCMakeのプロジェクト作成\n\nCMakeも極めればだいぶ色々できるスクリプト言語らしく、`Findxxx`系のスクリプトをのぞくと毎回うわぁとなってしまいます。\n\nがしかし多くのCMakeユーザーに必要なのはそんなガチな書き方じゃなくてもっとゆるふわな、そういう動機のはず。\n\n# 先行記事\n\n当然CMakeなんて超メジャーツール、日本語の解説がないわけがない。\n\n- [ごく簡単なcmakeの使い方](https://qiita.com/termoshtt/items/539541c180dfc40a1189): 多分いちばん有名な記事\n- [中規模なC++の新しいプロジェクトを作るときにやるべきこと 2016年版](https://qiita.com/m_mizutani/items/e51e9f17c1a29dbf5669): CMake含めた総合的な話\n- [c++14 with openmp + gtest-1.8のcmake環境を整備する](https://qiita.com/takeshi-uchitane/items/04f558cb405245cfabea): gtestを自動で拾おうとしている\n- [cmakeでビルド時にシェルスクリプトを実行する](https://qiita.com/termoshtt/items/7f7090f9d0c52bcd2630): カスタムターゲットについて\n- [CMake: モジュール](https://qiita.com/mrk_21/items/ab32a83a12f5d37acc64): そもそもモジュールとはなんぞ\n- [CMake: キャッシュ変数と環境変数](https://qiita.com/mrk_21/items/186439952a6665184444): 設定項目付きCMakeを書くなら必読\n- [たのしい組み込みCMake](https://qiita.com/tnishinaga/items/c01dfd5f43e446653cd1): CMakeのノウハウのかまたり\n\n自分がQiitaでストックしていた記事だけでもこんなものがあった。なかでも`ごく簡単なcmakeの使い方`は極めて簡潔でわかりやすい。\n\n# 問題点\n\nたしかに`ごく簡単なcmakeの使い方`はわかりやすいんだけど、実際書こうとするともうすこし色々書かないと実用に耐えない。その辺を解説している記事がたどり着きにくく、StackOverflow何かを読まないといけない。\n\n# 本題\n\nまあまず実際に使っているプロジェクトを見るのが早いだろう。\n\nhttps://github.com/YSRKEN/KanColleSimulator_KAI/blob/master/KCS_CUI/source/CMakeLists.txt\n\n```cmake:CMakeLists.txt\ncmake_minimum_required(VERSION 3.1)\nenable_language(CXX)\nset(CMAKE_CXX_STANDARD 14) # C++14...\nset(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...\nset(CMAKE_CXX_EXTENSIONS OFF) #...without compiler extensions like gnu++11\nfind_package(Threads REQUIRED)\n\n## Set our project name\nproject(KCS_CUI)\n\nset(kcs_kai_src \n\tconfig.cpp\n\texception.cpp\n\tfleet.cpp\n\tkammusu.cpp\n\tmain.cpp\n\tmapdata.cpp\n\tother.cpp\n\trandom.cpp\n\tresult.cpp\n\tsimulator.cpp\n\tweapon.cpp\n)\nif(MSVC)\n  # Force to always compile with W4\n  if(CMAKE_CXX_FLAGS MATCHES \"/W[0-4]\")\n    string(REGEX REPLACE \"/W[0-4]\" \"/W4\" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")\n  else()\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /W4\")\n  endif()\nelseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)\n  # Update if necessary\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-long-long -pedantic\")\nendif()\n## Define the executable\nadd_executable(KCS_CUI ${kcs_kai_src})\ntarget_link_libraries(KCS_CUI Threads::Threads)\n```\n\n解説していく。\n\n## まずやること\n\nプロジェクトの名前を決める。普通これがそのまま実行ファイルなりライブラリの名前になる。\n\nこれが\n\n```cmake\nproject(KCS_CUI)\n```\n\nの部分だ。以降の`KCS_CUI`の部分はここで決定したものを使う。\n\n## ソースファイルの列挙\n\n`CMakeLists.txt`からみた相対パスでソースファイルを列挙する。\n\nなお`#include \"xxx.h\"`のようにincludeされているものについては書かなくてもCMakeがいい感じにしてくれる。つまり翻訳単位となる`.cpp`ファイルが該当する。\n\n今回は可読性の観点から`kcs_kai_src`という変数に格納した。\n\n```cmake\nset(kcs_kai_src \n    config.cpp\n    exception.cpp\n    fleet.cpp\n    kammusu.cpp\n    main.cpp\n    mapdata.cpp\n    other.cpp\n    random.cpp\n    result.cpp\n    simulator.cpp\n    weapon.cpp\n)\n```\n\nCMakeの変数のガバガバさがわかる(違。\n\n## C++14でコンパイルする\n\n```cmake\nenable_language(CXX)\nset(CMAKE_CXX_STANDARD 14) # C++14...\nset(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...\nset(CMAKE_CXX_EXTENSIONS OFF) #...without compiler extensions like gnu++11\n```\n\nの部分だ。`CMAKE_CXX_STANDARD`に`11`とか`14`とか`17`とか指定すればいいはずだ。\n\n`CMAKE_CXX_EXTENSIONS`を`OFF`にしておかないとGNU拡張のよく分からんのが使えてしまう。C++erならそんなことはしないはずだ。\n\n## 警告レベルの設定\n\nC++erなら、Visual C++なら`/W4`、GCC/Clangなら`-Wall -Wextra`くらいはつけて使っているはずだ。\n\n```cmake\nif(MSVC)\n  # Force to always compile with W4\n  if(CMAKE_CXX_FLAGS MATCHES \"/W[0-4]\")\n    string(REGEX REPLACE \"/W[0-4]\" \"/W4\" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")\n  else()\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /W4\")\n  endif()\nelseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)\n  # Update if necessary\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-long-long -pedantic\")\nendif()\n```\n\nそれがこの部分だ。なおVisual Studio Clang CodeGenについては考慮していない。今回はなんとなく`-Wno-long-long -pedantic`もつけている。\n\n\n## コンパイル\n\nではコンパイルコマンドを発行しよう。\n\n```cmake\nadd_executable(KCS_CUI ${kcs_kai_src})\n```\n\n## C++11 Threadを使う\n\n今回の対象となるソースコードはC++11で追加されたThreadを使っている。こいつを使うには例えばpthreadとリンクしないといけなかったりする。その辺をやっているのが\n\n```cmake\nfind_package(Threads REQUIRED)\n```\n\nと\n\n```cmake\ntarget_link_libraries(KCS_CUI Threads::Threads)\n```\n\nだ。この合わせて2行でよきに計らってくれる。\n\n# ちょっとしたオプションを使いたい時\n\nこれも実例を見たほうが早いだろう。\n\nhttps://github.com/yumetodo/random_generator_iterator/blob/master/CMakeLists.txt\n\n```cmake:CMakeLists.txt\ncmake_minimum_required(VERSION 2.8)\nenable_language(CXX)\nset(CMAKE_CXX_STANDARD 14) # C++14...\nset(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...\nset(CMAKE_CXX_EXTENSIONS OFF) #...without compiler extensions like gnu++11\n\n## Use the variable PROJECT_NAME for changing the target name\nset( PROJECT_NAME \"random_generator_iterator\" )\n\n## Set our project name\nproject(${PROJECT_NAME})\n\nset(SRCS \"main.cpp\")\n\nif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)\n  # Update if necessary\n  option(USE_RDRND \"enable rdrnd\" 1)\n  option(USE_RDSEED \"enable rdseed\" 0)\n  if(USE_RDRND)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mrdrnd\")\n  endif()\n  if(USE_RDSEED)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mrdseed\")\n  endif()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra\")\nendif()\n\n## Define the executable\nadd_executable(${PROJECT_NAME} ${SRCS})\n```\n\n特に難しいことはない。オプションに**文字列を指定させたい場合以外は**単に`option`を呼び出せばいい。第一引数が変数名でそれを見て適宜条件分岐すればいい。\n\n# Findxxx系をつかう: BoostとOpenSSL/LibreSSLを例に\n\n次に示すCMakeは[書いたときは付属してくる`FindBoost.cmake`にバグが有って](http://yumetodo.hateblo.jp/entry/2017/04/06/141933)ワークアラウンドとしてレポジトリにパッチを当てたものを置いており、CMakeのバージョンを見て切り替えている。\n\nなお[どういうわけかLibreSSLだとCMake側はいいのだがリンクでコケる。なんでや](https://github.com/yumetodo/boost_asio_ssl_file_dl_test/issues/6)。\n\nhttps://github.com/yumetodo/boost_asio_ssl_file_dl_test/blob/support_libressl/CMakeLists.txt\n\n```cmake:CMakeLists.txt\ncmake_minimum_required(VERSION 3.7.2)\nenable_language(CXX)\nset(CMAKE_CXX_STANDARD 14) # C++14...\nset(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...\nset(CMAKE_CXX_EXTENSIONS OFF) #...without compiler extensions like gnu++11\n\n#\n# Config options\n#\noption(BOOST_ASIO_SSL_FILE_DL_TEST_USE_LIBRE_SSL \"Use LibreSSL instead of OpenSSL\" TRUE)\n\n#\n# Set our project name\n#\nproject(boost_asio_ssl_file_dl_test)\n\n#\n# Source files\n#\nset(boost_asio_ssl_file_dl_test_src\n    boost_asio_ssl_file_dl_test/Source.cpp\n    boost_asio_ssl_file_dl_test/downloader.cpp\n    boost_asio_ssl_file_dl_test/downloader_impl.cpp\n)\n\n#\n# find libraries and include\n#\n\n# find thread library\nfind_package(Threads REQUIRED)\n\n# find Boost\n# https://cmake.org/cmake/help/v3.7/module/FindBoost.html\nif(${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} LESS 3.8)\n    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake/modules)\n    include(FindBoost)\n    message(STATUS \"FindBoost: commit 9a8881c975ba8d814c39d52c370f3277afa80fda is used.\")\nendif()\nset(Boost_USE_MULTITHREADED ON)\nset(Boost_USE_STATIC_LIBS OFF)\nset(Boost_USE_STATIC_RUNTIME OFF)\nset(Boost_USE_DEBUG_RUNTIME OFF)\nset(Boost_DEBUG ON)\nadd_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\nset(boost_required_components\n    system date_time regex zlib bzip2 iostreams\n    # thread\n)\nfind_package(Boost 1.59 REQUIRED COMPONENTS ${boost_required_components})\nif(NOT Boost_FOUND)\n#   Config options\n    set(BOOST_ROOT ${BOOST_ROOT} CACHE PATH \"Set boost root directory\" FORCE)\n    set(BOOST_LIBRARYDIR ${BOOST_LIBRARYDIR} CACHE PATH \"Set boost library directory\" FORCE)\n    message(FATAL_ERROR \"Fail to find Boost\")\nendif()\ninclude_directories(${Boost_INCLUDE_DIRS})\n\n# find SSL Library\nif(BOOST_ASIO_SSL_FILE_DL_TEST_USE_LIBRE_SSL)\n#   find LibreSSL\n    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake/modules)\n    include(FindLibreSSL)\n    find_package(LibreSSL)\n    if(NOT LIBRESSL_FOUND)\n        message(FATAL_ERROR \"Fail to find LibreSSL\") # exit\n    endif()\n    message(STATUS \"LibreSSL_INCLUDE_DIR: ${LibreSSL_INCLUDE_DIR}\")\n    include_directories(${LibreSSL_INCLUDE_DIR})\nelse()\n#   find OpenSSL\n#   https://cmake.org/cmake/help/v3.7/module/FindOpenSSL.html\n    find_package(OpenSSL REQUIRED)\n    if(NOT OPENSSL_FOUND)\n        message(FATAL_ERROR \"Fail to find OpenSSL\") # exit\n    endif()\n    message(STATUS \"OPENSSL_INCLUDE_DIR: ${OPENSSL_INCLUDE_DIR}\")\n    include_directories(${OPENSSL_INCLUDE_DIR})\nendif()\n\n#\n# Update compiler waring flags\n#\nif(MSVC)\n  # Force to always compile with W4\n  if(CMAKE_CXX_FLAGS MATCHES \"/W[0-4]\")\n    string(REGEX REPLACE \"/W[0-4]\" \"/W4\" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")\n  else()\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /W4\")\n  endif()\nelseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)\n  # Update if necessary\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-long-long -pedantic\")\nendif()\n\n#\n# Compile\n#\nadd_executable(boost_asio_ssl_file_dl_test ${boost_asio_ssl_file_dl_test_src})\n\n#\n# Link\n#\ntarget_link_libraries(boost_asio_ssl_file_dl_test Threads::Threads)\ntarget_link_libraries(boost_asio_ssl_file_dl_test Boost::disable_autolinking ${Boost_LIBRARIES})\nif(BOOST_ASIO_SSL_FILE_DL_TEST_USE_LIBRE_SSL)\n    target_link_libraries(boost_asio_ssl_file_dl_test ${LibreSSL_LIBRARIES})\nelse()\n    target_link_libraries(boost_asio_ssl_file_dl_test OpenSSL::SSL)\n    target_link_libraries(boost_asio_ssl_file_dl_test OpenSSL::Crypto)\nendif()\n```\n\n基本的に`Findxx.cmake`のたぐいはファイルを見に行くとコメントで使い方をちゃんと書いてくれているのでそれに従えばいい。というよりそれぞれ微妙に作法が違うので統一的な説明ができない。\n\n# 少しづつ設定を変えて同じソースコードをビルドしたいとき\n\nベンチマークなどで、マクロの定義を差し替えて同じソースコードから複数のbinaryを吐きたいことがある。実例を見よう。\n\nhttps://github.com/yumetodo/qsort\n\ndirectory構成は\n\n```\n/project root\n├── benchmark.sh\n├── CMakeLists.txt\n├── main_prog.cpp\n├── mm88.h\n├── mm88c.c\n├── qs10a5.c\n├── qs10a5.h\n├── qs9e17.c\n├── qs9e17.h\n├── random_device.hpp\n├── qs10a5\n│   └── CMakeLists.txt\n├── qs10a5m\n│   └── CMakeLists.txt\n├── qs9e17\n│   └── CMakeLists.txt\n└── qsort\n    ├── CMakeLists.txt\n    └── main.cpp\n```\n\nこんな感じです。この場合以下のように記述するとルートディレクトリで`cmake`すると全部まとめてビルドされます．\n\n```cmake:/CMakeLists.txt\ncmake_minimum_required(VERSION 3.3)\nenable_language(CXX)\nset(CMAKE_CXX_STANDARD 14) # C++14...\nset(CMAKE_CXX_STANDARD_REQUIRED ON) #...is required...\nset(CMAKE_CXX_EXTENSIONS OFF) #...without compiler extensions like gnu++11\n\n#\n# Update compiler waring flags\n#\nif(MSVC)\n  # Force to always compile with W4\n  if(CMAKE_CXX_FLAGS MATCHES \"/W[0-4]\")\n    string(REGEX REPLACE \"/W[0-4]\" \"/W4\" CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\")\n  else()\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /W4\")\n  endif()\nelseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)\n  # Update if necessary\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-long-long -pedantic\")\nendif()\n\nadd_subdirectory(qsort)\nadd_subdirectory(qs9e17)\nadd_subdirectory(qs10a5)\nadd_subdirectory(qs10a5m)\n\ninstall(\n    FILES \"./benchmark.sh\"\n    PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE\n    DESTINATION \".\"\n)\n```\n\n```cmake:/qs10a5/CMakeLists.txt\nset(\n    SRCS\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../main_prog.cpp\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../mm88c.c\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../qs10a5.c\"\n)\nadd_definitions(-DUSE_QS10A5)\nadd_executable(qs10a5 ${SRCS})\n\ninstall(TARGETS qs10a5 RUNTIME DESTINATION \".\")\n```\n\n```cmake:/qs10a5m/CMakeLists.txt\nset(\n    SRCS\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../main_prog.cpp\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../mm88c.c\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../qs10a5.c\"\n)\nadd_definitions(-DUSE_QS10A5 -DMEMCPY)\nadd_executable(qs10a5m ${SRCS})\n\ninstall(TARGETS qs10a5m RUNTIME DESTINATION \".\")\n```\n\n```cmake:/qs9e17/CMakeLists.txt\nset(\n    SRCS\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../main_prog.cpp\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../mm88c.c\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../qs9e17.c\"\n)\nadd_definitions(-DUSE_QS9E17)\nadd_executable(qs9e17 ${SRCS})\n\ninstall(TARGETS qs9e17 RUNTIME DESTINATION \".\")\n```\n\n```cmake:/qsort/CMakeLists.txt\nset(\n    SRCS\n    \"${CMAKE_CURRENT_SOURCE_DIR}/../main_prog.cpp\"\n)\nadd_definitions(-DUSE_STDLIB_QSORT)\nadd_executable(qsort ${SRCS})\n\ninstall(TARGETS qsort RUNTIME DESTINATION \".\")\n```\n\n```sh\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_INSTALL_PREFIX=\"../bin\" -DCMAKE_BUILD_TYPE=Release ..\n$ make install\n$ cd ../bin\n```\n\n\n# NatvisファイルをVSのプロジェクトに追加したいとき\n\nVisual Studioのデバッガでの表示をカスタマイズするものとしてNatvisがあるわけですが、\n[Create custom views of native objects in the debugger | Microsoft Docs](https://docs.microsoft.com/en-US/visualstudio/debugger/create-custom-views-of-native-objects)\n\n`.vcxproj`でそれを追加して認識させるためには\n\n```xml\n  \u003cItemGroup\u003e\n    \u003cNatvis Include=\"inferior_vector.natvis\" /\u003e\n  \u003c/ItemGroup\u003e\n```\n\nのようなものが書かれていれば認識されます。ではCMakeからこれを吐き出すには？\n\n```cmake\nadd_executable(\u003cproject name\u003e \u003csource files\u003e... \u003cnatvis files\u003e...)\n```\n\n単に`add_executable`に指定してあげればいいようです([Thanks](https://teratail.com/questions/114946) @Chironian )。順番はどうでもいいです。\n\nVS以外には単に無視されるので`if(MSVC)`とか書く必要はないです。\n\nちなみに[CMake3.7.0から](https://gitlab.kitware.com/cmake/cmake/issues/16043)なので、\n\n```cmake\ncmake_minimum_required(VERSION 3.7.0)\n```\n\nしましょう。\n\n# CMakeの、もしくは付属の`Findxxx.cmake`にバグを見つけた時\n\n**Let's contribute!**\n\nGithubにもCMakeのレポジトリがありますが、**ただの案山子**なのでGitLabのほうを見に行きましょう。\n\nhttps://gitlab.kitware.com/cmake/cmake/blob/master/CONTRIBUTING.rst\n\nこのへんよく読んでMerge Requestを投げつけましょう。ローカルにgit hock入れさせられます。\n\n自分が過去に投げてMergeされたやつ↓\n[FindBoost: Fix release name candidate list construction (!673) · Merge Requests · CMake / CMake · GitLab](https://gitlab.kitware.com/cmake/cmake/merge_requests/673)\n\nC#周りはまだバグが多そうな印象なので(適当)チャンスですね。\n@Chironian 氏が先月あたり\n[CSharp: fix generation fail in environment except English (!1449) · Merge Requests · CMake / CMake · GitLab](https://gitlab.kitware.com/cmake/cmake/merge_requests/1449)\n投げてましたね。\n\n# CMakeでライブラリをビルドするとき\n\nFindxxx系を作って提供するのは時代遅れになりつつあり、xxx-config.cmakeを自動生成させるようにするべきです。\n\nこのときcmake2.8.12以降を使い、また`cmake_minimum_required`もそのようにしましょう(さもないと[CMP0022](https://cmake.org/cmake/help/latest/policy/CMP0022.html)が出る)。\n\n詳細は\n[お手軽な xxx-config.cmake の作成方法](https://qiita.com/osamu0329/items/134de918c0ffa7f0557b)\nがよくまとまっているので丸投げします。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-12-11T19:49:48+09:00","group":null,"id":"bd8f556ab56298f19ba8","likes_count":70,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"CMake","versions":[]},{"name":"C++11","versions":[]}],"title":"ありきたりなCMakeのプロジェクト作成 for C++","updated_at":"2019-05-04T20:35:56+09:00","url":"https://qiita.com/yumetodo/items/bd8f556ab56298f19ba8","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"初心者cadvent-calendar-2017\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E5%BF%83%E8%80%85cadvent-calendar-2017\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初心者C++Advent Calendar 2017\u003c/h1\u003e\n\n\u003cp\u003eこの記事は初心者C++Advent Calendar 2017 10日目の記事です\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/euxn23/items/671266aa23bc63e16111\" id=\"reference-bec3eef75102deabc0e0\"\u003e\u0026lt;\u0026lt; 9日目|他言語経験者はどのように C++ を学び始めるか\u003c/a\u003e || \u003ca href=\"https://qiita.com/sumomoneko/items/678a05fad9e7b3be359f\" id=\"reference-52b23af55a7a1c31aaab\"\u003e11日目|autoの推論まとめ、あるいはautoは忖度などしない件 \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e本来もっとあとに記事を出す予定でしたがなんか空いているのとネタが手に入ったのでゆるふわ記事を出します。ガチな記事は12/15までお待ち下さい。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"元ネタ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%83%E3%83%8D%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e元ネタ\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/imishinist/items/1883b5eef836aeee93ff\" id=\"reference-427d87b0b7dd75f77b2f\"\u003e強いエンジニアにHelloWorldさせてみた(縛りあり)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eすでにC++でやっている人もいて\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/zmtx_pp/items/55a13d75d324eccc2f84\" id=\"reference-3cc6f6b4029f16796894\"\u003e「強いエンジニアにHelloWorldさせてみた」をC++でやってみました。\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"既存のルール\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%97%A2%E5%AD%98%E3%81%AE%E3%83%AB%E3%83%BC%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e既存のルール\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eソースコードにダブルクォート、シングルクォート、数字を書くこと無く、「LIFULL」と出力して下さい。\u003c/li\u003e\n\u003cli\u003e最後に改行を付けること。\u003c/li\u003e\n\u003cli\u003e言語は問いません。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追加の縛り\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E5%8A%A0%E3%81%AE%E7%B8%9B%E3%82%8A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追加の縛り\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eC++11で、C++14ではない\u003c/li\u003e\n\u003cli\u003e標準ライブラリのみ使用可、外部ライブラリ(boostとか)不可\u003c/li\u003e\n\u003cli\u003eマクロ使用禁止\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esizeof\u003c/code\u003e演算子使用禁止\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003estd::array\u003c/code\u003e使用禁止\u003c/li\u003e\n\u003cli\u003eenum/enum class使用禁止\u003c/li\u003e\n\u003cli\u003eコンパイル時に文字列を組み立てる\u003c/li\u003e\n\u003cli\u003e文字コードがASCII互換(UTF-8とかCP932とか)、1byte=8bitな環境で動く\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"基本戦略\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%9F%BA%E6%9C%AC%E6%88%A6%E7%95%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e基本戦略\u003c/h1\u003e\n\n\u003cp\u003eまあまず文字/文字列リテラルが書けず、数字も書けないのがもとの縛りです。この時点で普通のHelloWorldじゃない。\u003c/p\u003e\n\n\u003cp\u003eコンパイル時に文字列を組み立てる制約を追加したので実行時引数から文字列を渡すのはできません。\u003c/p\u003e\n\n\u003cp\u003eマクロは禁じたので先行例みたいに\u003ccode\u003e__LINE__\u003c/code\u003eマクロは使えません。また\u003ccode\u003esizeof\u003c/code\u003e演算子も禁じたので配列の大きさから数字を作ることもできません。\u003c/p\u003e\n\n\u003cp\u003e幸いC++11縛りなので市民の義務であるconstexprが使えます。\u003c/p\u003e\n\n\u003cp\u003eというわけで愚直にASCIIの数値列を作ってやればいいことになります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"詳細\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A9%B3%E7%B4%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e詳細\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"目的の文字列はasciiでどういう数値列か\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%AE%E7%9A%84%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%81%AFascii%E3%81%A7%E3%81%A9%E3%81%86%E3%81%84%E3%81%86%E6%95%B0%E5%80%A4%E5%88%97%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e目的の文字列はASCIIでどういう数値列か\u003c/h2\u003e\n\n\u003cp\u003eお題は\u003ccode\u003eLIFULL\u003c/code\u003eなので\u003ccode\u003e76, 73, 70, 85, 76, 76, 0\u003c/code\u003eとなります。C/C++の文字列はNULL終端することをお忘れなく。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"0と1をどう作るか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0%E3%81%A81%E3%82%92%E3%81%A9%E3%81%86%E4%BD%9C%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e0と1をどう作るか\u003c/h2\u003e\n\n\u003cp\u003e究極0と1さえ作れればあとはこねくり回してどうにかできます。\u003c/p\u003e\n\n\u003cp\u003eC++で0と1・・・といえば\u003ccode\u003ebool\u003c/code\u003e型ですね！C++は\u003ccode\u003ebool\u003c/code\u003e型から整数型に暗黙変換できる言語なので遠慮なく使いましょう！\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e遠回りする手段としては\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etrue_type\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efalse_type\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eという手法やもっと遠回りしてC++14でなら\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;limits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003eone_impl\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eone_impl\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eという手もありますが、冗長なので素直に\u003ccode\u003ebool\u003c/code\u003eを使います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"大きい数をどうやって作るか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%A7%E3%81%8D%E3%81%84%E6%95%B0%E3%82%92%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E4%BD%9C%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e大きい数をどうやって作るか\u003c/h2\u003e\n\n\u003cp\u003eまあひたすら足し算や掛け算で作ってもいいんですが、流石にだるいので\u003ccode\u003estd::numeric_limits\u003c/code\u003eの力を借りましょう。\u003c/p\u003e\n\n\u003cp\u003e例えば63という数字は1byte=8bitを仮定できるので\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003esixty_three\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと表せます。\u003c/p\u003e\n\n\u003cp\u003e別解としては\u003cbr\u003e\n\u003ca href=\"https://qiita.com/snowdrop/items/a5306a5a4720be6c4110\" id=\"reference-4cbaa7cb1831f90a4c7a\"\u003ePythonでHelloWorld(縛り)\u003c/a\u003e\u003cbr\u003e\nの記事でされているように、\u003ccode\u003e76=2*2*19=2*2*(3*3*2+1)\u003c/code\u003eを目指す方法もあります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"答え\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%AD%94%E3%81%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e答え\u003c/h1\u003e\n\n\u003cp\u003eあとは足し算やら引き算やら掛け算するだけですね。変数\u003ccode\u003elifull\u003c/code\u003eがコンパイル時に組み上げられた文字列が格納されています。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;limits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_three\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_six\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_three\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eeighty_five\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_six\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003elifull\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_six\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_three\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eeighty_five\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_six\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseventy_six\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003elifull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/1Eb0hHAG8aV3RGyh\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/1Eb0hHAG8aV3RGyh\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ありきたりな世界\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%82%E3%82%8A%E3%81%8D%E3%81%9F%E3%82%8A%E3%81%AA%E4%B8%96%E7%95%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eありきたりな世界\u003c/h1\u003e\n\n\u003cp\u003e個人的にHelloWorldと聞くとありきたりな世界なのでやってみましょう。\u003c/p\u003e\n\n\u003cp\u003e目指すのは\u003ccode\u003earikitari_na_sekai\u003c/code\u003eをデコードして\u003ccode\u003e97 114 105 107 105 116 97 114 105 95 110 97 95 115 101 107 97 105 0\u003c/code\u003eです。\u003c/p\u003e\n\n\u003cp\u003e100を超える数字がいくつも並んでいます。流石にヘルパー関数がほしいところです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ethree\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003esix\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eseven\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esix\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eeight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003enine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ethree\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ethree\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eeight\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eというわけでこんなものを。\u003ccode\u003echar\u003c/code\u003e型なのでsigned/unsignedどちらにしろ4桁以上はないので可変長テンプレートを持ち出すまでもありません。\u003c/p\u003e\n\n\u003cp\u003eあとはよく出てくる\u003ccode\u003ea\u003c/code\u003eと\u003ccode\u003ei\u003c/code\u003eは別に作っておくと可読性が上がりそうです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enine\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseven\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eというわけで完成品\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ethree\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003esix\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eseven\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esix\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eeight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003enine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ethree\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ethree\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eeight\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etwo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"nf\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enine\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseven\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003earikitari_na_sekai\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseven\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esix\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efour\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enine\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enine\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n  \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eseven\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ezero\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earikitari_na_sekai\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/gNpNllj8PHkOhHtR\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/gNpNllj8PHkOhHtR\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 初心者C++Advent Calendar 2017\n\nこの記事は初心者C++Advent Calendar 2017 10日目の記事です\n\n[\u003c\u003c 9日目|他言語経験者はどのように C++ を学び始めるか](https://qiita.com/euxn23/items/671266aa23bc63e16111) || [11日目|autoの推論まとめ、あるいはautoは忖度などしない件 \u003e\u003e](https://qiita.com/sumomoneko/items/678a05fad9e7b3be359f)\n\n本来もっとあとに記事を出す予定でしたがなんか空いているのとネタが手に入ったのでゆるふわ記事を出します。ガチな記事は12/15までお待ち下さい。\n\n# 元ネタ\n\n[強いエンジニアにHelloWorldさせてみた(縛りあり)](https://qiita.com/imishinist/items/1883b5eef836aeee93ff)\n\nすでにC++でやっている人もいて\n\n[「強いエンジニアにHelloWorldさせてみた」をC++でやってみました。](https://qiita.com/zmtx_pp/items/55a13d75d324eccc2f84)\n\nですね。\n\n# 既存のルール\n\n- ソースコードにダブルクォート、シングルクォート、数字を書くこと無く、「LIFULL」と出力して下さい。\n- 最後に改行を付けること。\n- 言語は問いません。\n\n# 追加の縛り\n\n- C++11で、C++14ではない\n- 標準ライブラリのみ使用可、外部ライブラリ(boostとか)不可\n- マクロ使用禁止\n- `sizeof`演算子使用禁止\n- `std::array`使用禁止\n- enum/enum class使用禁止\n- コンパイル時に文字列を組み立てる\n- 文字コードがASCII互換(UTF-8とかCP932とか)、1byte=8bitな環境で動く\n\n# 基本戦略\n\nまあまず文字/文字列リテラルが書けず、数字も書けないのがもとの縛りです。この時点で普通のHelloWorldじゃない。\n\nコンパイル時に文字列を組み立てる制約を追加したので実行時引数から文字列を渡すのはできません。\n\nマクロは禁じたので先行例みたいに`__LINE__`マクロは使えません。また`sizeof`演算子も禁じたので配列の大きさから数字を作ることもできません。\n\n幸いC++11縛りなので市民の義務であるconstexprが使えます。\n\nというわけで愚直にASCIIの数値列を作ってやればいいことになります。\n\n# 詳細\n\n## 目的の文字列はASCIIでどういう数値列か\n\nお題は`LIFULL`なので`76, 73, 70, 85, 76, 76, 0`となります。C/C++の文字列はNULL終端することをお忘れなく。\n\n## 0と1をどう作るか\n\n究極0と1さえ作れればあとはこねくり回してどうにかできます。\n\nC++で0と1・・・といえば`bool`型ですね！C++は`bool`型から整数型に暗黙変換できる言語なので遠慮なく使いましょう！\n\n```cpp\nconstexpr char zero = false;\nconstexpr char one = true;\n```\n\n遠回りする手段としては\n\n```cpp\n#include \u003ctype_traits\u003e\nconstexpr char zero = std::true_type::value;\nconstexpr char one = std::false_type::value;\n```\n\nという手法やもっと遠回りしてC++14でなら\n\n```cpp:C++14\n#include \u003climits\u003e\nconstexpr char zero = std::numeric_limits\u003cunsigned char\u003e::min();\nconstexpr char one_impl()\n{\n    char t = zero;\n    ++t;\n    return t;\n}\nconstexpr char one = one_impl();\n```\n\nという手もありますが、冗長なので素直に`bool`を使います。\n\n## 大きい数をどうやって作るか\n\nまあひたすら足し算や掛け算で作ってもいいんですが、流石にだるいので`std::numeric_limits`の力を借りましょう。\n\n例えば63という数字は1byte=8bitを仮定できるので\n\n```cpp\nconstexpr char two = one + one;\nconstexpr sixty_three = std::numeric_limits\u003cunsigned char\u003e::max() \u003e\u003e two;\n```\n\nと表せます。\n\n別解としては\n[PythonでHelloWorld(縛り)](https://qiita.com/snowdrop/items/a5306a5a4720be6c4110)\nの記事でされているように、`76=2*2*19=2*2*(3*3*2+1)`を目指す方法もあります。\n\n# 答え\n\nあとは足し算やら引き算やら掛け算するだけですね。変数`lifull`がコンパイル時に組み上げられた文字列が格納されています。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003climits\u003e\nconstexpr char zero = false;\nconstexpr char one = true;\nconstexpr char two = one + one;\nconstexpr char seventy = (std::numeric_limits\u003cunsigned char\u003e::max() \u003e\u003e two) + (two * two * two) - one;\nconstexpr char seventy_three = seventy + two + one;\nconstexpr char seventy_six = seventy_three + two + one;\nconstexpr char eighty_five = seventy_six + two * two * two + one;\nconstexpr const char lifull[] = { seventy_six, seventy_three, seventy, eighty_five, seventy_six, seventy_six, zero };\nint main()\n{\n   std::cout \u003c\u003c lifull \u003c\u003c std::endl;\n}\n```\n\nhttps://wandbox.org/permlink/1Eb0hHAG8aV3RGyh\n\n# ありきたりな世界\n\n個人的にHelloWorldと聞くとありきたりな世界なのでやってみましょう。\n\n目指すのは`arikitari_na_sekai`をデコードして`97 114 105 107 105 116 97 114 105 95 110 97 95 115 101 107 97 105 0`です。\n\n100を超える数字がいくつも並んでいます。流石にヘルパー関数がほしいところです。\n\n```cpp\nconstexpr char zero = false;\nconstexpr char one = true;\nconstexpr char two = one + one;\nconstexpr char three = two + one;\nconstexpr char four = two + two;\nconstexpr char five = four + one;\nconstexpr char six = four + two;\nconstexpr char seven = six + one;\nconstexpr char eight = four * two;\nconstexpr char nine = three * three;\nconstexpr char ten = eight + two;\nconstexpr char fmt(char n) { return n; }\nconstexpr char fmt(char n1, char n2) { return n1 * ten + n2; }\nconstexpr char fmt(char n1, char n2, char n3) { return fmt(n1 * ten + n2, n3); }\n```\n\nというわけでこんなものを。`char`型なのでsigned/unsignedどちらにしろ4桁以上はないので可変長テンプレートを持ち出すまでもありません。\n\nあとはよく出てくる`a`と`i`は別に作っておくと可読性が上がりそうです。\n\n```cpp\nconstexpr char a = fmt(nine, seven);\nconstexpr char i = fmt(one, zero, five);\n```\n\nというわけで完成品\n\n```cpp\n#include \u003ciostream\u003e\nconstexpr char zero = false;\nconstexpr char one = true;\nconstexpr char two = one + one;\nconstexpr char three = two + one;\nconstexpr char four = two + two;\nconstexpr char five = four + one;\nconstexpr char six = four + two;\nconstexpr char seven = six + one;\nconstexpr char eight = four * two;\nconstexpr char nine = three * three;\nconstexpr char ten = eight + two;\nconstexpr char fmt(char n) { return n; }\nconstexpr char fmt(char n1, char n2) { return n1 * ten + n2; }\nconstexpr char fmt(char n1, char n2, char n3) { return fmt(n1 * ten + n2, n3); }\n\nconstexpr char a = fmt(nine, seven);\nconstexpr char i = fmt(one, zero, five);\nconstexpr const char arikitari_na_sekai[] = {\n  a, fmt(one, one, four), i, fmt(one, zero, seven), i, fmt(one, one, six), a, fmt(one, one, four), i,\n  fmt(nine, five),\n  fmt(one, one, zero), a,\n  fmt(nine, five),\n  fmt(one, one, five), fmt(one, zero, one), fmt(one, zero, seven), a, i,\n  zero\n};\nint main()\n{\n  std::cout \u003c\u003c arikitari_na_sekai \u003c\u003c std::endl;\n}\n```\n\nhttps://wandbox.org/permlink/gNpNllj8PHkOhHtR\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-12-10T00:38:09+09:00","group":null,"id":"97e17742607cc8dbb3c3","likes_count":7,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"constexpr","versions":[]},{"name":"競技プログラミング","versions":[]}],"title":"Re:強いエンジニアにHelloWorldさせてみた(縛りあり)(縛り追加)","updated_at":"2019-04-02T22:30:23+09:00","url":"https://qiita.com/yumetodo/items/97e17742607cc8dbb3c3","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003eこの記事は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://biboro.edisonthk.com/snippet/234\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++のSTLをつかったありきたりな素数探索プログラム - Biboro\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://biboro.edisonthk.com/snippet/268\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC言語で素数探索プログラム - Biboro\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://biboro.edisonthk.com/snippet/269\" rel=\"nofollow noopener\" target=\"_blank\"\u003e素数探索プログラム速度対決 - Biboro\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの書き直し版です。BiboroというサイトのURLがすでに3回も変わってて\u003ca href=\"https://twitter.com/takeokunn/status/846297759573393408\" rel=\"nofollow noopener\" target=\"_blank\"\u003eやってられない\u003c/a\u003eので、Qiitaにまとめ直します。\u003c/p\u003e\n\n\u003cp\u003eまた\u003ca href=\"https://chiebukuro.yahoo.co.jp/my/hermittaro\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehermittaro\u003c/a\u003e氏のYahoo!知恵袋への過去の回答で面白いコードが\u003cbr\u003e\n\u003ca href=\"https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11145530946#a359067356\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11145530946#a359067356\u003c/a\u003e\u003cbr\u003e\nあったのでこれも取り上げます\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"動機\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8B%95%E6%A9%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e動機\u003c/h1\u003e\n\n\u003cp\u003e今年始め\u003c/p\u003e\n\n\u003cp\u003ec++とvalarrayによるエラトステネスの篩\u003cbr\u003e\n\u003ca href=\"http://qiita.com/forno/items/2022d523d4e34fd86fe1\" class=\"autolink\" id=\"reference-99f671e3562347cb897d\"\u003ehttp://qiita.com/forno/items/2022d523d4e34fd86fe1\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eという記事がQiitaに投稿されました。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://cpplover.blogspot.com/2014/11/2014-10-pre-urbana-mailings-n4183-n4189.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: 2014-10-pre-Urbana mailingsのレビュー: N4183-N4189\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003evalarrayのことはすっかり忘れ去られているようだ。\u003c/p\u003e\n\n\u003cp\u003e歴史的経緯としては、そもそもvalarrayはベクトル型であった。当時は、ライブラリとしてベクトル演算を最適化する手法が主流であったので、valarrayもライブラリ実装による最適化を想定していた。しかし、1990年代後半から、Expression Templatesなどのテンプレートメタプログラミングを多用した最適化手法が流行り始め、valarrayは時代遅れになって放置された。誰も標準ライブラリから取り除くべきだという主張しなかったので、valarrayはそのまま残ってしまったのだ。\u003c/p\u003e\n\n\u003cp\u003eさて、時代は変わった。コンパイラーの最適化技術は、当時と比べてかなり進歩した。スカラー演算をまとめてベクトル演算にしたり、ループをベクトル演算にしたりといった最適化が行われるようになってきた。しかし、やはりそのような最適化には限界がある。\u003c/p\u003e\n\n\u003cp\u003e多くのC++コンパイラーは、Intrinsicsという、アセンブリとほぼ等しいような薄い関数としてSIMD演算を提供している。しかし、これはあまりにも特定アーキテクチャに深く結びついていて、移植性が低い。\u003c/p\u003e\n\n\u003cp\u003eそこで、最初からSIMDベクトル型というものがあれば、コンパイラーはベクトル演算のコードを吐く際の最適化のヒントとして使うことができる。valarrayが一周回って最新になった。\u003c/p\u003e\n\n\u003cp\u003e問題は、いまさらvalarrayを大幅に拡張して使うのは互換性の問題や、設計上の想定の違いから無理であろうし、やはり独立した新しいライブラリとなるべきだろう。 \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとあるように、なかなかvalarrayを使う人はいないので珍しい記事です。\u003c/p\u003e\n\n\u003cp\u003eしかし、エラトステネスの篩だったらvalarrayを使わなくても書けます。valarrayに優位性はあるのか？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"比較対象\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%AF%94%E8%BC%83%E5%AF%BE%E8%B1%A1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e比較対象\u003c/h1\u003e\n\n\u003cp\u003eそこで\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003esieve_of_eratosthenes\u003c/code\u003e: \u003ccode\u003estd::vector\u003c/code\u003eでのエラトステネスの篩\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esimple_algrism\u003c/code\u003e: mask方式(\u003ca href=\"https://chiebukuro.yahoo.co.jp/my/hermittaro\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehermittaro\u003c/a\u003e氏)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esimple_algrism_mt\u003c/code\u003e: mask方式を私がむりやりマルチスレッド化したもの\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eforno_method\u003c/code\u003e: \u003ca href=\"/forno\" class=\"user-mention js-hovercard\" title=\"forno\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"forno\"\u003e@forno\u003c/a\u003e 氏の記事にある\u003ccode\u003estd::valarray\u003c/code\u003eでのエラトステネスの篩\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの速度比較をしてみます。比較するのに多少コードをいじっています\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"nf\"\u003esieve_of_eratosthenes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"c1\"\u003e//エラトステネスのふるい\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1u\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//調査対象数iを上回る既知の素数で割ろうとするか、既知の素数で割り切れるまでイテレータを進める\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"c1\"\u003e//既知の素数で割った余りがすべて0でないならば\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//iのオーバーフロー対策\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"nf\"\u003esimple_algrism\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emake_unique\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"nf\"\u003esimple_algrism_mt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunique_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunique_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ethreads\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kr\"\u003ethread\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehardware_concurrency\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esimple_algrism\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ethreads\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003etid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003etid\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003etid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ethreads\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemplace_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003easync\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elaunch\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003easync\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003etid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emake_unique\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003etid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003ethread_num\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n            \u003cspan class=\"n\"\u003etid\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ethreads\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemplace_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eis_prime\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e](\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003epn\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epn\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eis_prime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"nf\"\u003eforno_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprime_vector\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evalarray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprims\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// array of [0] to [limit]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprims\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 0 and 1 aren't primes. (not needed)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efloor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"p\"\u003e))))\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esearch_limit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprims\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprims\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprime_store_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprims\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprime_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結果\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E6%9E%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結果\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9807af23-f686-196e-bbdb-6c3df9898aba.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=0aefa807284251ae0576ea5235600fd8\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9807af23-f686-196e-bbdb-6c3df9898aba.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=0aefa807284251ae0576ea5235600fd8\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/9807af23-f686-196e-bbdb-6c3df9898aba.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9807af23-f686-196e-bbdb-6c3df9898aba.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=55779239a9db522f438a6223e1eed1e4 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Faa6b9508-227f-07fe-6ddf-1fc3bf732051.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e61e3b679089a4d2d603e5f853774a05\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Faa6b9508-227f-07fe-6ddf-1fc3bf732051.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e61e3b679089a4d2d603e5f853774a05\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/aa6b9508-227f-07fe-6ddf-1fc3bf732051.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Faa6b9508-227f-07fe-6ddf-1fc3bf732051.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=ebbb782ca4105d8ede9d750b46db1625 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6efabbde-c672-df33-4f98-5597f7852cf3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=389fc165fbe9b085471f69052288baab\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6efabbde-c672-df33-4f98-5597f7852cf3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=389fc165fbe9b085471f69052288baab\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/6efabbde-c672-df33-4f98-5597f7852cf3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6efabbde-c672-df33-4f98-5597f7852cf3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f69ebc2695defa9d1b9f801efa6a9d44 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esieve_of_eratosthenes\u003c/code\u003eは教科書的なありきたりな実装です。一次関数的と言うよりは二次関数的な増大の仕方をしています。\u003ccode\u003estd::vector::push_back\u003c/code\u003eが遅いんでしょうね。reserveするとかやりようはあるでしょうが・・・。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esimple_algrism\u003c/code\u003eは極めてシンプルなアルゴリズムにもかかわらず以外に高速です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esimple_algrism_mt\u003c/code\u003eはやっぱりマルチスレッド化が無茶だったようで、かえって遅くなりました。$ 2.5 \\times 10^{6} $付近から先で急速に遅くなっています。何なんでしょうか・・・。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eforno_method\u003c/code\u003eが想像以上に高速でした。いや、他の実装に改良の余地が無いわけではないのですが、この比較の中では最速でした。\u003c/p\u003e\n\n\u003cp\u003eところでエラトステネスの篩は計算量\u003ccode\u003eO(n loglogn)\u003c/code\u003eと聞いたんですが、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eset xrange [0:200000]\nplot x*log(log(x))\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとかgnuplotで適当に作ったグラフによれば\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F460e30af-fb65-f922-2060-6356a64bff84.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=33c4bcc579e81eb06669b1f61d8cb2eb\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F460e30af-fb65-f922-2060-6356a64bff84.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=33c4bcc579e81eb06669b1f61d8cb2eb\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/460e30af-fb65-f922-2060-6356a64bff84.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F460e30af-fb65-f922-2060-6356a64bff84.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=dfa1f97ddbe289c3a80991319d501c1c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eとなったんですが、これって直線・・・？私のgnuplotの使い方が違う？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003evalarrayに優位性はあるのか？という問いですが、コードが複雑にならずそこそこ速いコードが書けるようで意外とええやん、という思いです。\u003cbr\u003e\nただしもうちょっとSIMD考えた新たなベクトル型が欲しいところです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考\u003c/h1\u003e\n\n\u003cp\u003e検証に使ったコードは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/prime_num_searcher\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/prime_num_searcher\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eにあります。WPFの勉強がてら作ったGUIで上のグラフは作ってます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"余談\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%99%E8%AB%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e余談\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"/forno\" class=\"user-mention js-hovercard\" title=\"forno\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"forno\"\u003e@forno\u003c/a\u003e 氏の記事の直後から記事を書き始めたのですが、グラフをWPFで書こうとしてたら脱線に脱線を重ねて気がつけば11月・・・。\u003c/p\u003e\n","body":"# はじめに\n\nこの記事は\n\n- [C++のSTLをつかったありきたりな素数探索プログラム - Biboro](http://biboro.edisonthk.com/snippet/234)\n- [C言語で素数探索プログラム - Biboro](http://biboro.edisonthk.com/snippet/268)\n- [素数探索プログラム速度対決 - Biboro](http://biboro.edisonthk.com/snippet/269)\n\nの書き直し版です。BiboroというサイトのURLがすでに3回も変わってて[やってられない](https://twitter.com/takeokunn/status/846297759573393408)ので、Qiitaにまとめ直します。\n\nまた[hermittaro](https://chiebukuro.yahoo.co.jp/my/hermittaro)氏のYahoo!知恵袋への過去の回答で面白いコードが\nhttps://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11145530946#a359067356\nあったのでこれも取り上げます\n\n# 動機\n\n今年始め\n\nc++とvalarrayによるエラトステネスの篩\nhttp://qiita.com/forno/items/2022d523d4e34fd86fe1\n\nという記事がQiitaに投稿されました。\n\n\u003e[本の虫: 2014-10-pre-Urbana mailingsのレビュー: N4183-N4189](https://cpplover.blogspot.com/2014/11/2014-10-pre-urbana-mailings-n4183-n4189.html)\n\n\u003e valarrayのことはすっかり忘れ去られているようだ。\n\n\u003e 歴史的経緯としては、そもそもvalarrayはベクトル型であった。当時は、ライブラリとしてベクトル演算を最適化する手法が主流であったので、valarrayもライブラリ実装による最適化を想定していた。しかし、1990年代後半から、Expression Templatesなどのテンプレートメタプログラミングを多用した最適化手法が流行り始め、valarrayは時代遅れになって放置された。誰も標準ライブラリから取り除くべきだという主張しなかったので、valarrayはそのまま残ってしまったのだ。\n\u003e \n\u003e さて、時代は変わった。コンパイラーの最適化技術は、当時と比べてかなり進歩した。スカラー演算をまとめてベクトル演算にしたり、ループをベクトル演算にしたりといった最適化が行われるようになってきた。しかし、やはりそのような最適化には限界がある。\n\u003e \n\u003e 多くのC++コンパイラーは、Intrinsicsという、アセンブリとほぼ等しいような薄い関数としてSIMD演算を提供している。しかし、これはあまりにも特定アーキテクチャに深く結びついていて、移植性が低い。\n\u003e \n\u003e そこで、最初からSIMDベクトル型というものがあれば、コンパイラーはベクトル演算のコードを吐く際の最適化のヒントとして使うことができる。valarrayが一周回って最新になった。\n\u003e \n\u003e 問題は、いまさらvalarrayを大幅に拡張して使うのは互換性の問題や、設計上の想定の違いから無理であろうし、やはり独立した新しいライブラリとなるべきだろう。 \n\nとあるように、なかなかvalarrayを使う人はいないので珍しい記事です。\n\nしかし、エラトステネスの篩だったらvalarrayを使わなくても書けます。valarrayに優位性はあるのか？\n\n# 比較対象\n\nそこで\n\n- `sieve_of_eratosthenes`: `std::vector`でのエラトステネスの篩\n- `simple_algrism`: mask方式([hermittaro](https://chiebukuro.yahoo.co.jp/my/hermittaro)氏)\n- `simple_algrism_mt`: mask方式を私がむりやりマルチスレッド化したもの\n- `forno_method`: @forno 氏の記事にある`std::valarray`でのエラトステネスの篩\n\nの速度比較をしてみます。比較するのに多少コードをいじっています\n\n```cpp\nprime_vector sieve_of_eratosthenes(const prime_store_t generate_max) {//エラトステネスのふるい\n\tif (generate_max \u003c= 1u) return {};\n\tprime_vector prime_num;\n\tprime_num.push_back(2);\n\tfor (prime_store_t i = 3; i \u003c= generate_max; i += 2) {\n\t\tauto it = prime_num.begin();\n\t\tconst auto limit = prime_store_t(std::sqrt(i));\n\t\t//調査対象数iを上回る既知の素数で割ろうとするか、既知の素数で割り切れるまでイテレータを進める\n\t\tfor (; it != prime_num.end() \u0026\u0026 *it \u003c= limit \u0026\u0026 i % *it; it++);\n\t\tif (i % *it) {//既知の素数で割った余りがすべて0でないならば\n\t\t\tprime_num.push_back(i);\n\t\t}\n\t\tif (i == std::numeric_limits\u003cprime_store_t\u003e::max()) break;//iのオーバーフロー対策\n\t}\n\treturn prime_num;\n}\nprime_vector simple_algrism(const prime_store_t generate_max) {\n\tprime_vector prime_num;\n\tauto p = std::make_unique\u003cchar[]\u003e(generate_max + 1);\n\tp[0] = p[1] = 1;\n\tfor (size_t j = 2; j \u003c generate_max; j++) {\n\t\tfor (size_t k = j + j; k \u003c= generate_max; k += j) p[k] = 1;\n\t}\n\tfor (size_t j = 0; j \u003c= generate_max; j++) if (!p[j]) prime_num.push_back(j);\n\treturn prime_num;\n}\nprime_vector simple_algrism_mt(const prime_store_t generate_max) {\n\tstd::vector\u003cstd::unique_ptr\u003cstd::uint8_t[]\u003e\u003e p;\n\tstd::vector\u003cstd::future\u003cstd::unique_ptr\u003cstd::uint8_t[]\u003e\u003e\u003e threads;\n\tconst auto thread_num = std::thread::hardware_concurrency();\n\tif (thread_num \u003c 2) return simple_algrism(generate_max);\n\tp.reserve(thread_num);\n\tthreads.reserve(thread_num);\n\tfor (std::uint8_t tid = 0; tid \u003c thread_num; ++tid) {\n\t\tthreads.emplace_back(std::async(\n\t\t\tstd::launch::async,\n\t\t\t[generate_max, thread_num](std::uint8_t tid) {\n\t\t\t\tauto p = std::make_unique\u003cstd::uint8_t[]\u003e(generate_max + 1);\n\t\t\t\tp[0] = p[1] = 1;\n\t\t\t\tfor (size_t j = 2 + tid; j \u003c generate_max; j += thread_num) {\n\t\t\t\t\tfor (size_t k = j + j; k \u003c= generate_max; k += j) p[k] = 1;\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\ttid\n\t\t));\n\t}\n\tfor (auto\u0026\u0026 t : threads) {\n\t\tp.emplace_back(t.get());\n\t}\n\tauto is_prime = [\u0026p](std::size_t index) -\u003e bool {\n\t\tfor (auto\u0026\u0026 pn : p) if (pn[index]) return false;\n\t\treturn true;\n\t};\n\tprime_vector prime_num;\n\tfor (size_t j = 0; j \u003c= generate_max; j++) if (is_prime(j)) prime_num.push_back(j);\n\treturn prime_num;\n}\nprime_vector forno_method(const prime_store_t limit) {\n\tprime_vector prime_num;\n\tstd::valarray\u003cbool\u003e prims(true, limit + 1); // array of [0] to [limit]\n\tprims[std::slice(0, 2, 1)] = false; // 0 and 1 aren't primes. (not needed)\n\n\tconst prime_store_t search_limit{ static_cast\u003cprime_store_t\u003e(std::floor(std::sqrt(static_cast\u003clong double\u003e(limit)))) + 1 };\n\tfor (prime_store_t i{ 2 }; i \u003c search_limit; ++i) if (prims[i]) {\n\t\tprims[std::slice(i*i, limit / i - (i - 1), i)] = false;\n\t}\n\tfor (prime_store_t i{ 2 }; i \u003c= limit; ++i) if (prims[i]) prime_num.push_back(i);\n\treturn prime_num;\n}\n```\n\n# 結果\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/9807af23-f686-196e-bbdb-6c3df9898aba.png)\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/aa6b9508-227f-07fe-6ddf-1fc3bf732051.png)\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/6efabbde-c672-df33-4f98-5597f7852cf3.png)\n\n`sieve_of_eratosthenes`は教科書的なありきたりな実装です。一次関数的と言うよりは二次関数的な増大の仕方をしています。`std::vector::push_back`が遅いんでしょうね。reserveするとかやりようはあるでしょうが・・・。\n\n`simple_algrism`は極めてシンプルなアルゴリズムにもかかわらず以外に高速です。\n\n`simple_algrism_mt`はやっぱりマルチスレッド化が無茶だったようで、かえって遅くなりました。$ 2.5 \\times 10^{6} $付近から先で急速に遅くなっています。何なんでしょうか・・・。\n\n`forno_method`が想像以上に高速でした。いや、他の実装に改良の余地が無いわけではないのですが、この比較の中では最速でした。\n\nところでエラトステネスの篩は計算量`O(n loglogn)`と聞いたんですが、\n\n```gnuplot\nset xrange [0:200000]\nplot x*log(log(x))\n```\n\nとかgnuplotで適当に作ったグラフによれば\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/460e30af-fb65-f922-2060-6356a64bff84.png)\n\nとなったんですが、これって直線・・・？私のgnuplotの使い方が違う？\n\n# 結論\n\nvalarrayに優位性はあるのか？という問いですが、コードが複雑にならずそこそこ速いコードが書けるようで意外とええやん、という思いです。\nただしもうちょっとSIMD考えた新たなベクトル型が欲しいところです。\n\n# 参考\n\n検証に使ったコードは\n\nhttps://github.com/yumetodo/prime_num_searcher\n\nにあります。WPFの勉強がてら作ったGUIで上のグラフは作ってます。\n\n# 余談\n\n@forno 氏の記事の直後から記事を書き始めたのですが、グラフをWPFで書こうとしてたら脱線に脱線を重ねて気がつけば11月・・・。\n","coediting":false,"comments_count":3,"created_at":"2017-11-18T03:41:56+09:00","group":null,"id":"8a885b4f774e88daad85","likes_count":12,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"素数","versions":[]},{"name":"エラトステネスの篩","versions":[]}],"title":"C++で素数を列挙する実装を比較する","updated_at":"2017-11-18T15:32:41+09:00","url":"https://qiita.com/yumetodo/items/8a885b4f774e88daad85","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"きっかけ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eきっかけ\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"/ncaq\" class=\"user-mention js-hovercard\" title=\"ncaq\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"ncaq\"\u003e@ncaq\u003c/a\u003e 氏が\u003cbr\u003e\n\u003ca href=\"https://www.ncaq.net/2017/10/15/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGNU/Linuxにおけるゴミ箱ディレクトリは.Trash/$uid/と.Trash-$uid/のどちらが正しいのか調べていたらtrash-cliのコメントが動作と違ったのでissueを開きました - ncaq\u003c/a\u003e\u003cbr\u003e\nというブログを書いていて、\u003cbr\u003e\n\u003ca href=\"https://github.com/andreafrancia/trash-cli/issues/108\" rel=\"nofollow noopener\" target=\"_blank\"\u003etrash-cli prefers $topdir/.Trash-$uid to the trash directory over $topdir/.Trash/$uid · Issue #108 · andreafrancia/trash-cli\u003c/a\u003e\u003cbr\u003e\nIssueも投げられていた。\u003c/p\u003e\n\n\u003cp\u003eしかし specを読むうちに、あれなんか違わね？と思った。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ncaq-氏の記事の要約\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ncaq-%E6%B0%8F%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AE%E8%A6%81%E7%B4%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003encaq 氏の記事の要約\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003e$topdir/.Trash/$uid\u003c/code\u003eを使うべきなはずなのになんでnautilus(gio trash)もtrash-cliも\u003ccode\u003e$topdir/.Trash-$uid\u003c/code\u003e使っちゃうの？これっておかしくない？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参照するspec\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8Bspec\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参照するspec\u003c/h1\u003e\n\n\u003cp\u003eTrash specification\u003cbr\u003e\n\u003ca href=\"https://specifications.freedesktop.org/trash-spec/trashspec-latest.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://specifications.freedesktop.org/trash-spec/trashspec-latest.html\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"場面設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A0%B4%E9%9D%A2%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e場面設定\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003espec曰く、通常使うゴミ箱ディレクトリとして\u003cem\u003ehome trash\u003c/em\u003eディレクトリがある。\u003c/li\u003e\n\u003cli\u003e削除したいファイルが、\u003cem\u003ehome trash\u003c/em\u003eディレクトリが存在しないドライブ/ファイルシステムにある場合、これを使おうとするとコピーコストがかかるのでマウントされているすべてのドライブ/ファイルシステムに(\u003cem\u003ehome trash\u003c/em\u003eディレクトリが存在するドライブ/ファイルシステムを除く)ゴミ箱ディレクトリを作れる\u003cstrong\u003e(MAY)\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e作れる場所は\u003ccode\u003e$topdir/.Trash/$uid\u003c/code\u003eか\u003ccode\u003e$topdir/.Trash-$uid\u003c/code\u003e(\u003ccode\u003e$uid\u003c/code\u003eはユーザー固有の数字)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"specを解読した\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#spec%E3%82%92%E8%A7%A3%E8%AA%AD%E3%81%97%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003especを解読した\u003c/h1\u003e\n\n\u003cp\u003e解読の鍵となるのは\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://specifications.freedesktop.org/trash-spec/trashspec-latest.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://specifications.freedesktop.org/trash-spec/trashspec-latest.html\u003c/a\u003e\u003cbr\u003e\nThe following paragraph applies ONLY to the case when the implementation supports trashing in the top directory, and a $topdir/.Trash does not exist or has not passed the checks:\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe following paragraphってのは\u003ccode\u003e$topdir/.Trash-$uid\u003c/code\u003eの生成の話。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003e$topdir/.Trash\u003c/code\u003eを作成できるのは\u003cstrong\u003eadministratorだけ\u003c/strong\u003e((ファイルシステムが対応していたら)\u003cem\u003esticky bit\u003c/em\u003e を作成時に立てる)\u003c/li\u003e\n\u003cli\u003eすべてのuserは\u003ccode\u003e$topdir/.Trash\u003c/code\u003eが存在するとき、そこに書き込み権限を持っている\u003c/li\u003e\n\u003cli\u003eもし\u003ccode\u003e$topdir/.Trash\u003c/code\u003eが存在して、チェック項目(\u003cem\u003esticky bit\u003c/em\u003eとかsymbolic linkじゃないこととかとか。Trash specificationを参照されたし)をクリアしたら\n\n\u003col\u003e\n\u003cli\u003euserは\u003ccode\u003e$topdir/.Trash/$uid\u003c/code\u003eを生成できる(実装は自動的に生成しなければならない\u003cstrong\u003e(MUST)\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003euserは\u003ccode\u003e$topdir/.Trash/$uid\u003c/code\u003eをゴミ箱ディレクトリとして使える\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eもし\u003ccode\u003e$topdir/.Trash\u003c/code\u003eが\u003cstrong\u003eが存在しなかった\u003c/strong\u003eもしくはチェック項目をクリアできなかった場合\n\n\u003col\u003e\n\u003cli\u003euserは\u003ccode\u003e$topdir/.Trash-$uid\u003c/code\u003eを生成できる(実装は自動的に生成しなければならない\u003cstrong\u003e(MUST)\u003c/strong\u003e)\u003c/li\u003e\n\u003cli\u003euserは\u003ccode\u003e$topdir/.Trash-$uid\u003c/code\u003eをゴミ箱ディレクトリとして使える\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ncaq氏の検証の考察\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ncaq%E6%B0%8F%E3%81%AE%E6%A4%9C%E8%A8%BC%E3%81%AE%E8%80%83%E5%AF%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003encaq氏の検証の考察\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e2017-10-15T22:21:11 ncaq@akaza/pts/7(0) /mnt/usbstick\n% ll\n合計 68K\ndrwxrwxrwx 1 root root  64K 10月 15 22:20 ./\ndrwxr-xr-x 9 root root 4.0K 10月 16  2015 ../\n2017-10-15T22:21:11 ncaq@akaza/pts/7(0) /mnt/usbstick\n% touch example\n2017-10-15T22:21:17 ncaq@akaza/pts/7(0) /mnt/usbstick\n% ll\n合計 68K\ndrwxrwxrwx 1 root root  64K 10月 15 22:21 ./\ndrwxr-xr-x 9 root root 4.0K 10月 16  2015 ../\n-rwxrwxrwx 1 root root    0 10月 15 22:21 example*\n2017-10-15T22:21:19 ncaq@akaza/pts/7(0) /mnt/usbstick\n% trash-put example\n2017-10-15T22:21:31 ncaq@akaza/pts/7(0) /mnt/usbstick\n% tree -a \n.\n└── [drwxrwxrwx  240]  .Trash-1000/\n    ├── [drwxrwxrwx  144]  files/\n    │   └── [-rwxrwxrwx    0]  example*\n    └── [drwxrwxrwx  168]  info/\n        └── [-rwxrwxrwx   59]  example.trashinfo*\n\n3 directories, 2 files\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな実験をしたそうな。\u003c/p\u003e\n\n\u003cp\u003eこれをさっきの解読結果を踏まえて考察すると、\u003ccode\u003e$topdir/.Trash\u003c/code\u003eが存在していない状況下なので、当然\u003ccode\u003e$topdir/.Trash/$uid\u003c/code\u003eは生成できない。なので\u003ccode\u003e$topdir/.Trash-$uid\u003c/code\u003eを生成してゴミ箱ディレクトリにしたよ、という状況だとわかる。\u003c/p\u003e\n\n\u003cp\u003eこれってのはspecに合致していて問題ない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ncaq氏が問題にしていたtrash-cliのプログラム内のコメント\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ncaq%E6%B0%8F%E3%81%8C%E5%95%8F%E9%A1%8C%E3%81%AB%E3%81%97%E3%81%A6%E3%81%84%E3%81%9Ftrash-cli%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E5%86%85%E3%81%AE%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003encaq氏が問題にしていたtrash-cliのプログラム内のコメント\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/andreafrancia/trash-cli/blob/887996cb45496ebc30e6e6f2a40adf64fa21da32/trashcli/put.py#L135-L146\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/andreafrancia/trash-cli/blob/887996cb45496ebc30e6e6f2a40adf64fa21da32/trashcli/put.py#L135-L146\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"python\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e        \u003cspan class=\"s\"\u003e\"\"\"\n        Trash a file in the appropriate trash directory.\n        If the file belong to the same volume of the trash home directory it\n        will be trashed in the home trash directory.\n        Otherwise it will be trashed in one of the relevant volume trash\n        directories.\n        Each volume can have two trash directories, they are\n            - $volume/.Trash/$uid\n            - $volume/.Trash-$uid\n        Firstly the software attempt to trash the file in the first directory\n        then try to trash in the second trash directory.\n        \"\"\"\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれだ。言っていることとしては、\u003ccode\u003e$volume/.Trash/$uid\u003c/code\u003eがゴミ箱ディレクトリにできるかまず調べて、だめだったら\u003ccode\u003e$volume/.Trash-$uid\u003c/code\u003eをゴミ箱ディレクトリにするってことだから、ちょっと端折りすぎ感あるけどspecといっていることは変わらないので問題ない\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003cp\u003eという私の解釈があっているといいな(願望)\u003c/p\u003e\n\n\u003cp\u003e間違ってるよ、って人は\u003cbr\u003e\n\u003ca href=\"https://github.com/andreafrancia/trash-cli/issues/108\" rel=\"nofollow noopener\" target=\"_blank\"\u003etrash-cli prefers $topdir/.Trash-$uid to the trash directory over $topdir/.Trash/$uid · Issue #108 · andreafrancia/trash-cli\u003c/a\u003e\u003cbr\u003e\nまで\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eオッ\u003c/p\u003e— エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919606995631554561?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年10月15日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eなるほどね\u003c/p\u003e— エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919607018943528961?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年10月15日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e私が間違っていたことが明らかになりなるほど~って感じ\u003c/p\u003e— エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919607666174935040?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年10月15日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eなぜ私はこれを読み飛ばしていたのか理解に苦しむねペチペチ\u003c/p\u003e— エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919609570288312320?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年10月15日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003encaq commented \u003ca href=\"https://github.com/andreafrancia/trash-cli/issues/108#issuecomment-336726421\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年10月16日 2:17 JST\u003c/a\u003e\u003cbr\u003e\nI misread Spec.\u003cbr\u003e\nI understand to implementation and comment of trash-cli is correct.\u003cbr\u003e\nThank @yumetodo .\u003cbr\u003e\nI close this issue.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eという感じでIssueが閉じた\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# きっかけ\n\n@ncaq 氏が\n[GNU/Linuxにおけるゴミ箱ディレクトリは.Trash/$uid/と.Trash-$uid/のどちらが正しいのか調べていたらtrash-cliのコメントが動作と違ったのでissueを開きました - ncaq](https://www.ncaq.net/2017/10/15/)\nというブログを書いていて、\n[trash-cli prefers $topdir/.Trash-$uid to the trash directory over $topdir/.Trash/$uid · Issue #108 · andreafrancia/trash-cli](https://github.com/andreafrancia/trash-cli/issues/108)\nIssueも投げられていた。\n\nしかし specを読むうちに、あれなんか違わね？と思った。\n\n# ncaq 氏の記事の要約\n\n`$topdir/.Trash/$uid`を使うべきなはずなのになんでnautilus(gio trash)もtrash-cliも`$topdir/.Trash-$uid`使っちゃうの？これっておかしくない？\n\n# 参照するspec\n\nTrash specification\nhttps://specifications.freedesktop.org/trash-spec/trashspec-latest.html\n\n# 場面設定\n\n1. spec曰く、通常使うゴミ箱ディレクトリとして*home trash*ディレクトリがある。\n2. 削除したいファイルが、*home trash*ディレクトリが存在しないドライブ/ファイルシステムにある場合、これを使おうとするとコピーコストがかかるのでマウントされているすべてのドライブ/ファイルシステムに(*home trash*ディレクトリが存在するドライブ/ファイルシステムを除く)ゴミ箱ディレクトリを作れる**(MAY)**\n3. 作れる場所は`$topdir/.Trash/$uid`か`$topdir/.Trash-$uid`(`$uid`はユーザー固有の数字)\n\n# specを解読した\n\n解読の鍵となるのは\n\n\u003ehttps://specifications.freedesktop.org/trash-spec/trashspec-latest.html\n\u003eThe following paragraph applies ONLY to the case when the implementation supports trashing in the top directory, and a $topdir/.Trash does not exist or has not passed the checks:\n\nThe following paragraphってのは`$topdir/.Trash-$uid`の生成の話。\n\n1. `$topdir/.Trash`を作成できるのは**administratorだけ**((ファイルシステムが対応していたら)*sticky bit* を作成時に立てる)\n2. すべてのuserは`$topdir/.Trash`が存在するとき、そこに書き込み権限を持っている\n3. もし`$topdir/.Trash`が存在して、チェック項目(*sticky bit*とかsymbolic linkじゃないこととかとか。Trash specificationを参照されたし)をクリアしたら\n    1. userは`$topdir/.Trash/$uid`を生成できる(実装は自動的に生成しなければならない**(MUST)**)\n    2. userは`$topdir/.Trash/$uid`をゴミ箱ディレクトリとして使える\n4. もし`$topdir/.Trash`が**が存在しなかった**もしくはチェック項目をクリアできなかった場合\n    1. userは`$topdir/.Trash-$uid`を生成できる(実装は自動的に生成しなければならない**(MUST)**)\n    2. userは`$topdir/.Trash-$uid`をゴミ箱ディレクトリとして使える\n\n# ncaq氏の検証の考察\n\n```\n2017-10-15T22:21:11 ncaq@akaza/pts/7(0) /mnt/usbstick\n% ll\n合計 68K\ndrwxrwxrwx 1 root root  64K 10月 15 22:20 ./\ndrwxr-xr-x 9 root root 4.0K 10月 16  2015 ../\n2017-10-15T22:21:11 ncaq@akaza/pts/7(0) /mnt/usbstick\n% touch example\n2017-10-15T22:21:17 ncaq@akaza/pts/7(0) /mnt/usbstick\n% ll\n合計 68K\ndrwxrwxrwx 1 root root  64K 10月 15 22:21 ./\ndrwxr-xr-x 9 root root 4.0K 10月 16  2015 ../\n-rwxrwxrwx 1 root root    0 10月 15 22:21 example*\n2017-10-15T22:21:19 ncaq@akaza/pts/7(0) /mnt/usbstick\n% trash-put example\n2017-10-15T22:21:31 ncaq@akaza/pts/7(0) /mnt/usbstick\n% tree -a \n.\n└── [drwxrwxrwx  240]  .Trash-1000/\n    ├── [drwxrwxrwx  144]  files/\n    │   └── [-rwxrwxrwx    0]  example*\n    └── [drwxrwxrwx  168]  info/\n        └── [-rwxrwxrwx   59]  example.trashinfo*\n\n3 directories, 2 files\n```\n\nこんな実験をしたそうな。\n\nこれをさっきの解読結果を踏まえて考察すると、`$topdir/.Trash`が存在していない状況下なので、当然`$topdir/.Trash/$uid`は生成できない。なので`$topdir/.Trash-$uid`を生成してゴミ箱ディレクトリにしたよ、という状況だとわかる。\n\nこれってのはspecに合致していて問題ない。\n\n# ncaq氏が問題にしていたtrash-cliのプログラム内のコメント\n\nhttps://github.com/andreafrancia/trash-cli/blob/887996cb45496ebc30e6e6f2a40adf64fa21da32/trashcli/put.py#L135-L146\n\n```python\n        \"\"\"\n        Trash a file in the appropriate trash directory.\n        If the file belong to the same volume of the trash home directory it\n        will be trashed in the home trash directory.\n        Otherwise it will be trashed in one of the relevant volume trash\n        directories.\n        Each volume can have two trash directories, they are\n            - $volume/.Trash/$uid\n            - $volume/.Trash-$uid\n        Firstly the software attempt to trash the file in the first directory\n        then try to trash in the second trash directory.\n        \"\"\"\n```\n\nこれだ。言っていることとしては、`$volume/.Trash/$uid`がゴミ箱ディレクトリにできるかまず調べて、だめだったら`$volume/.Trash-$uid`をゴミ箱ディレクトリにするってことだから、ちょっと端折りすぎ感あるけどspecといっていることは変わらないので問題ない\n\n# まとめ\n\nという私の解釈があっているといいな(願望)\n\n間違ってるよ、って人は\n[trash-cli prefers $topdir/.Trash-$uid to the trash directory over $topdir/.Trash/$uid · Issue #108 · andreafrancia/trash-cli](https://github.com/andreafrancia/trash-cli/issues/108)\nまで\n\n# 追記\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eオッ\u003c/p\u003e\u0026mdash; エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919606995631554561?ref_src=twsrc%5Etfw\"\u003e2017年10月15日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eなるほどね\u003c/p\u003e\u0026mdash; エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919607018943528961?ref_src=twsrc%5Etfw\"\u003e2017年10月15日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e私が間違っていたことが明らかになりなるほど~って感じ\u003c/p\u003e\u0026mdash; エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919607666174935040?ref_src=twsrc%5Etfw\"\u003e2017年10月15日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eなぜ私はこれを読み飛ばしていたのか理解に苦しむねペチペチ\u003c/p\u003e\u0026mdash; エヌユル (@ncaq) \u003ca href=\"https://twitter.com/ncaq/status/919609570288312320?ref_src=twsrc%5Etfw\"\u003e2017年10月15日\u003c/a\u003e\u003c/blockquote\u003e\n\n\u003encaq commented [2017年10月16日 2:17 JST](https://github.com/andreafrancia/trash-cli/issues/108#issuecomment-336726421)\n\u003eI misread Spec.\n\u003eI understand to implementation and comment of trash-cli is correct.\n\u003eThank @yumetodo .\n\u003eI close this issue.\n\nという感じでIssueが閉じた\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-10-16T02:08:13+09:00","group":null,"id":"4d2b5dde7ae65df40997","likes_count":5,"private":false,"reactions_count":0,"tags":[{"name":"Linux","versions":[]},{"name":"trash","versions":[]},{"name":"spec","versions":[]}],"title":"Re:GNU/Linuxにおけるゴミ箱ディレクトリは.Trash/$uid/と.Trash-$uid/のどちらが正しいのか","updated_at":"2019-04-03T01:29:44+09:00","url":"https://qiita.com/yumetodo/items/4d2b5dde7ae65df40997","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"きっかけ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eきっかけ\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e文章が変になったのでもう一度、C++入門書を書きたいが、いまC++を新規に学ぶ人、つまり対象読者はどんな人だろうか。 \u003ca href=\"https://t.co/tddQVh2Rz1\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/tddQVh2Rz1\u003c/a\u003e\u003c/p\u003e— Ryou Ezoe (@EzoeRyou) \u003ca href=\"https://twitter.com/EzoeRyou/status/918837779181604864?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eOctober 13, 2017\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eというわけで\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://cpplover.blogspot.jp/2017/10/c17.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++17の参考書を書き上げた\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eを見に行った。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eこれを考えると、次に書くべきC++入門書は、プログラミング入門書である必要はない。対象読者はすでに別の言語でプログラミングの基礎にある程度触れていることを想定して書いてもよいはずだ。つまり、環境構築や、変数とは箱のようなものであるといった比喩表現はいらない。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eこれは本当だろうか？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cのコンパイラとか入手\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%81%A8%E3%81%8B%E5%85%A5%E6%89%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++のコンパイラとか入手\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"windows\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#windows\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWindows\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"visual-studio\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#visual-studio\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVisual Studio\u003c/h3\u003e\n\n\u003cp\u003eWindowsを使うユーザー数は無視できず、ではWindowsで使えるC++開発環境はなにか、となるとやはりVisual Studioが挙げられる。\u003c/p\u003e\n\n\u003cp\u003eそこまで罠なく環境構築できるし、問題となっていたインストール速度も2017で大幅な改善が図られた。エディタとしては正規表現に難があるが使えなくもない。IntelliSenseは他者の追従を許さない。デバッガとしても優秀である。\u003c/p\u003e\n\n\u003cp\u003eもちろんC++erの皆様はVisual Studioが内蔵するC++コンパイラ\u003ccode\u003ecl.exe\u003c/code\u003e、通称MSVCの糞さについてはよくご存知だとは思うが、バグが多いものの一応C++14 constexprが利用でき、間もなく待望のC++98の機能であるTwo Phase Look-upが実装される(今更)。\u003c/p\u003e\n\n\u003cp\u003eMSVCが気に食わなければコンパイラをClangに差し替えることもできる(ただしClangのバージョンが3.8)。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"cbuilder\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cbuilder\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++Builder\u003c/h3\u003e\n\n\u003cp\u003eみんなVSばかり叩くが、こいつの糞さを忘れてはいけない。\u003ccode\u003ebcc32.exe\u003c/code\u003eとかいう救いようのない糞を内蔵している。内蔵コンパイラをClangに切り替えるというニュースが昨年業界を駆け巡ったが、蓋を開けてみれば\u003ccode\u003ebcc32c.exe\u003c/code\u003eと言う名のLLVM3.3/Clang3.3とかいう化石が増えただけだった。\u003cstrong\u003e化石生産機\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"msys2\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#msys2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMSYS2\u003c/h3\u003e\n\n\u003cp\u003eGCCやClangをWindowsで使おうと思ったらとりあえずMSYS2を検討するべきだ。導入もインストーラーから入れるぶんには罠なくできる。パッケージ管理システムにはArch Linuxでおなじみ\u003ccode\u003epacman\u003c/code\u003eが採用され、ほぼ最新のコンパイラやライブラリ群が利用できる。ついでにみんなだいすきgitも手に入る。もちろん\u003ccode\u003ePKGBUILD\u003c/code\u003eを書いて\u003ccode\u003emakepkg\u003c/code\u003eとかもできるし、\u003cbr\u003e\n\u003ca href=\"https://github.com/Alexpux/MINGW-packages/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/Alexpux/MINGW-packages/\u003c/a\u003e\u003cbr\u003e\nでmsys2公式が\u003ccode\u003ePKGBUILD\u003c/code\u003eを提供してくれている。\u003c/p\u003e\n\n\u003cp\u003e何もしなくても\u003ccode\u003emintty.exe\u003c/code\u003eが使われ、文字化けなく利用でき、デフォルトの\u003ccode\u003e.bashrc\u003c/code\u003eにかかれている\u003ccode\u003ePS1\u003c/code\u003e環境変数もおしゃれな感じにカスタマイズされている。\u003c/p\u003e\n\n\u003cp\u003eただプログラミングこれから始めるぞ、ってひとに勧められるかと、Windowsユーザーの殆どはコマンドなんて叩いたことはないだろうから、勧めにくい。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"windows-subsystem-for-linuxwsl\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#windows-subsystem-for-linuxwsl\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWindows Subsystem for Linux(WSL)\u003c/h3\u003e\n\n\u003cp\u003eLinuxがWindowsの上で動くというやつだ。Windows10で追加されたが、あれは\u003ccode\u003efork()\u003c/code\u003eシステム命令は一応あるが遅く、UNIX文化と相容れないので個人的にはないなぁと思っている。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"mingw\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mingw\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMinGW\u003c/h3\u003e\n\n\u003cp\u003eどういうわけかもっとも罠の多いこいつでGCC環境を作りたがる。\u003ccode\u003emingw-get\u003c/code\u003eとかいうわけがわからんパッケージ管理システムを使わされる。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"linux\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#linux\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLinux\u003c/h2\u003e\n\n\u003cp\u003eLinuxといってもパッケージ管理システムからして多種多様なわけだが、RedHatとGentooから逃げておけば特に困らずに環境構築できるはずだ。コマンド一つで環境が整う。はっきり言ってコンパイラを手に入れるだけであればLinuxのほうが楽だ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"macos\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#macos\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emacOS\u003c/h2\u003e\n\n\u003cp\u003e一見パッケージ管理システムがあるから楽かと思いきやそうでもない。どうもXCodeから逃げられないようだ。というか筆者はMac使いだったのはプログラミングのプの字も知らない小学校3年までであるので(Mac OS 8とかのころ)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cプログラム執筆環境\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E5%9F%B7%E7%AD%86%E7%92%B0%E5%A2%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++プログラム執筆環境\u003c/h1\u003e\n\n\u003cp\u003eコンパイラが手に入ってもC++のコードを快適に書けるかは別問題だ。Syntax Highlightは絶対欲しいし、IntelliSenseもほしい。ターミナルが統合されててほしいし、gitのようなバージョン管理システムやビルドシステムとの連携があると嬉しい。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"マルチプラットフォーム\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9E%E3%83%AB%E3%83%81%E3%83%97%E3%83%A9%E3%83%83%E3%83%88%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eマルチプラットフォーム\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"vim\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vim\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVim\u003c/h3\u003e\n\n\u003cp\u003eテキストエディタ戦争の片翼。\u003ca href=\"https://mattn.kaoriya.net/software/vim/20170724011404.htm\" rel=\"nofollow noopener\" target=\"_blank\"\u003e最近\u003ccode\u003e:terminal\u003c/code\u003eを実装したらしい\u003c/a\u003e。Windowsで使うにはちょっとつらい。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://tyru.hatenablog.com/entry/20130326/vimmers_over_vim_jp\" rel=\"nofollow noopener\" target=\"_blank\"\u003evim-jpのお陰でコミュニティが活性化しており\u003c/a\u003e、なんか強い。\u003c/p\u003e\n\n\u003cp\u003eWindows以外では元から入っているかさもなくばコマンド一つで手に入る。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"emacs\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#emacs\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eEmacs\u003c/h2\u003e\n\n\u003cp\u003eテキストエディタ戦争の片翼。Emacs 24.2あたりからターミナルが使えるようになったらしい。使ったことない。Windowsで使うにはちょっとつらい。\u003c/p\u003e\n\n\u003cp\u003eWindows以外では元から入っているかさもなくばコマンド一つで手に入る。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"vscode\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vscode\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVSCode\u003c/h2\u003e\n\n\u003cp\u003e最近流行りのElectronとかいうアプリごとにChromeと悪魔合体した何かを立ち上げてくるGUIエンジンで作られている。内部で\u003ca href=\"https://cpplover.blogspot.jp/2017/10/vs-codedomcanvas.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e相当dirtyなハックを\u003c/a\u003e重ねた結果、Atomなんかよりはるかにメモリー消費が少ないし動作が軽い(それでもメモリー食うが)。\u003c/p\u003e\n\n\u003cp\u003eプラグイン開発が盛んで、昔のFirefoxを思い出す。それらのお陰でgitやらcmakeやらも快適に使える。\u003c/p\u003e\n\n\u003cp\u003eMSが作っているだけあって、Windowsではインストーラーから罠なく導入できるし、Linuxでも.deb/.rpmが配布されていて、Arch LinuxではAURにあるので導入には困らない。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"qt-creator\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#qt-creator\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eQt Creator\u003c/h2\u003e\n\n\u003cp\u003e意外とまともなGUIコード開発環境が手に入る。今日も\u003ca href=\"https://qiita.com/MuriNishimori/items/b4c7304bb4d1f378865b\" id=\"reference-ae7bac5275753efa8cf1\"\u003eVSCodeつらい、Qt Creatorいいそ\u003c/a\u003eみたいな記事が上がってた。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"code-lite\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#code-lite\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCode Lite\u003c/h2\u003e\n\n\u003cp\u003ecmakeと組み合わせて使う文には悪くない。Qt Creatorより軽快なイメージ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c環境構築は解説不要か\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%81%AF%E8%A7%A3%E8%AA%AC%E4%B8%8D%E8%A6%81%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++環境構築は解説不要か\u003c/h1\u003e\n\n\u003cp\u003e環境構築はWindowsだとちょっとつらいソフトもいくつかあるが、基本的には手順をStep-by-stepで解説する必要はない、というか解説書いてもわりところころ変わるから意味がない。\u003c/p\u003e\n\n\u003cp\u003eしかし、こういう環境があるよ、という紹介は必要だろう。\u003cstrong\u003eさもないと学習用C言語開発環境とかbcc32とかいう糞of糞に正面衝突してしまう。\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"対象読者はすでに別の言語でプログラミングの基礎にある程度触れていることを想定して書いてよいか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AF%BE%E8%B1%A1%E8%AA%AD%E8%80%85%E3%81%AF%E3%81%99%E3%81%A7%E3%81%AB%E5%88%A5%E3%81%AE%E8%A8%80%E8%AA%9E%E3%81%A7%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%AB%E3%81%82%E3%82%8B%E7%A8%8B%E5%BA%A6%E8%A7%A6%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E6%83%B3%E5%AE%9A%E3%81%97%E3%81%A6%E6%9B%B8%E3%81%84%E3%81%A6%E3%82%88%E3%81%84%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e対象読者はすでに別の言語でプログラミングの基礎にある程度触れていることを想定して書いてよいか\u003c/h1\u003e\n\n\u003cp\u003eこれは筆者の勝手だから別にいいのだが、ちょっとまってほしい。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eはたしてまともなC++入門書は存在するだろうか\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e個人的な持論として、CでOSSに貢献するためのC入門とC++を学ぶためのC入門は大きく違う、と思っている。\u003c/p\u003e\n\n\u003cp\u003eいやいや、「独習C++」とか「やさしいC++」とか書店に行けばたくさんあるだろ、というかも知れない。しかしちょっとまってほしい。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e果たしてC++11以前とC++以降では同じ言語だろうか\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e言語仕様、標準ライブラリ共に大幅に拡張されたC++11の前後を同室と捉えるのには賛同し難い。もちろんC++は互換性に非常に気を使う言語だからごく僅かなbreaking changeはあるものの(\u003ccode\u003eauto\u003c/code\u003e keywordなど)昔のコードは今でもコンパイルできる。\u003c/p\u003e\n\n\u003cp\u003eしかしながら、今新しくプログラムを書く、といったときにプログラムの設計は大きく違うはずだ。\u003c/p\u003e\n\n\u003cp\u003eいやいや、「プログラミング言語C++ 第4版」があるだろ、という声があるかもしれない(残念ながらまだ入手していない)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eしかしそれ以外になにかあったろうか\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eそういうわけで、C++のまともな入門書の需要は存在する、と思う。\u003c/p\u003e\n\n\u003cp\u003eもちろん他の言語から来た人向けの解説書と言うのはこれまた需要がある。\u003cbr\u003e\nちょうど今JavaScriptのそういった本が\u003cbr\u003e\n\u003ca href=\"https://github.com/asciidwango/js-primer\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/asciidwango/js-primer\u003c/a\u003e\u003cbr\u003e\nまさに執筆中だ。C++にもこういうのがあっていいはずだ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003cp\u003e江添さんが次に書くべきC++入門書は、プログラミング入門書である必要はない、\u003cstrong\u003eとは言い切れない\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003eもちろん何を書くかは自由なのだが。\u003c/p\u003e\n","body":"# きっかけ\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e文章が変になったのでもう一度、C++入門書を書きたいが、いまC++を新規に学ぶ人、つまり対象読者はどんな人だろうか。 \u003ca href=\"https://t.co/tddQVh2Rz1\"\u003ehttps://t.co/tddQVh2Rz1\u003c/a\u003e\u003c/p\u003e\u0026mdash; Ryou Ezoe (@EzoeRyou) \u003ca href=\"https://twitter.com/EzoeRyou/status/918837779181604864?ref_src=twsrc%5Etfw\"\u003eOctober 13, 2017\u003c/a\u003e\u003c/blockquote\u003e\n\nというわけで\n\n[本の虫: C++17の参考書を書き上げた](https://cpplover.blogspot.jp/2017/10/c17.html)\n\nを見に行った。\n\n\u003eこれを考えると、次に書くべきC++入門書は、プログラミング入門書である必要はない。対象読者はすでに別の言語でプログラミングの基礎にある程度触れていることを想定して書いてもよいはずだ。つまり、環境構築や、変数とは箱のようなものであるといった比喩表現はいらない。\n\nこれは本当だろうか？\n\n# C++のコンパイラとか入手\n\n## Windows\n### Visual Studio\n\nWindowsを使うユーザー数は無視できず、ではWindowsで使えるC++開発環境はなにか、となるとやはりVisual Studioが挙げられる。\n\nそこまで罠なく環境構築できるし、問題となっていたインストール速度も2017で大幅な改善が図られた。エディタとしては正規表現に難があるが使えなくもない。IntelliSenseは他者の追従を許さない。デバッガとしても優秀である。\n\nもちろんC++erの皆様はVisual Studioが内蔵するC++コンパイラ`cl.exe`、通称MSVCの糞さについてはよくご存知だとは思うが、バグが多いものの一応C++14 constexprが利用でき、間もなく待望のC++98の機能であるTwo Phase Look-upが実装される(今更)。\n\nMSVCが気に食わなければコンパイラをClangに差し替えることもできる(ただしClangのバージョンが3.8)。\n\n### C++Builder\n\nみんなVSばかり叩くが、こいつの糞さを忘れてはいけない。`bcc32.exe`とかいう救いようのない糞を内蔵している。内蔵コンパイラをClangに切り替えるというニュースが昨年業界を駆け巡ったが、蓋を開けてみれば`bcc32c.exe`と言う名のLLVM3.3/Clang3.3とかいう化石が増えただけだった。**化石生産機**。\n\n### MSYS2\n\nGCCやClangをWindowsで使おうと思ったらとりあえずMSYS2を検討するべきだ。導入もインストーラーから入れるぶんには罠なくできる。パッケージ管理システムにはArch Linuxでおなじみ`pacman`が採用され、ほぼ最新のコンパイラやライブラリ群が利用できる。ついでにみんなだいすきgitも手に入る。もちろん`PKGBUILD`を書いて`makepkg`とかもできるし、\nhttps://github.com/Alexpux/MINGW-packages/\nでmsys2公式が`PKGBUILD`を提供してくれている。\n\n何もしなくても`mintty.exe`が使われ、文字化けなく利用でき、デフォルトの`.bashrc`にかかれている`PS1`環境変数もおしゃれな感じにカスタマイズされている。\n\nただプログラミングこれから始めるぞ、ってひとに勧められるかと、Windowsユーザーの殆どはコマンドなんて叩いたことはないだろうから、勧めにくい。\n\n### Windows Subsystem for Linux(WSL)\n\nLinuxがWindowsの上で動くというやつだ。Windows10で追加されたが、あれは`fork()`システム命令は一応あるが遅く、UNIX文化と相容れないので個人的にはないなぁと思っている。\n\n### MinGW\n\nどういうわけかもっとも罠の多いこいつでGCC環境を作りたがる。`mingw-get`とかいうわけがわからんパッケージ管理システムを使わされる。\n\n## Linux\n\nLinuxといってもパッケージ管理システムからして多種多様なわけだが、RedHatとGentooから逃げておけば特に困らずに環境構築できるはずだ。コマンド一つで環境が整う。はっきり言ってコンパイラを手に入れるだけであればLinuxのほうが楽だ。\n\n## macOS\n\n一見パッケージ管理システムがあるから楽かと思いきやそうでもない。どうもXCodeから逃げられないようだ。というか筆者はMac使いだったのはプログラミングのプの字も知らない小学校3年までであるので(Mac OS 8とかのころ)\n\n# C++プログラム執筆環境\n\nコンパイラが手に入ってもC++のコードを快適に書けるかは別問題だ。Syntax Highlightは絶対欲しいし、IntelliSenseもほしい。ターミナルが統合されててほしいし、gitのようなバージョン管理システムやビルドシステムとの連携があると嬉しい。\n\n## マルチプラットフォーム\n\n### Vim\n\nテキストエディタ戦争の片翼。[最近`:terminal`を実装したらしい](https://mattn.kaoriya.net/software/vim/20170724011404.htm)。Windowsで使うにはちょっとつらい。\n\n[vim-jpのお陰でコミュニティが活性化しており](http://tyru.hatenablog.com/entry/20130326/vimmers_over_vim_jp)、なんか強い。\n\nWindows以外では元から入っているかさもなくばコマンド一つで手に入る。\n\n## Emacs\n\nテキストエディタ戦争の片翼。Emacs 24.2あたりからターミナルが使えるようになったらしい。使ったことない。Windowsで使うにはちょっとつらい。\n\nWindows以外では元から入っているかさもなくばコマンド一つで手に入る。\n\n## VSCode\n\n最近流行りのElectronとかいうアプリごとにChromeと悪魔合体した何かを立ち上げてくるGUIエンジンで作られている。内部で[相当dirtyなハックを](https://cpplover.blogspot.jp/2017/10/vs-codedomcanvas.html)重ねた結果、Atomなんかよりはるかにメモリー消費が少ないし動作が軽い(それでもメモリー食うが)。\n\nプラグイン開発が盛んで、昔のFirefoxを思い出す。それらのお陰でgitやらcmakeやらも快適に使える。\n\nMSが作っているだけあって、Windowsではインストーラーから罠なく導入できるし、Linuxでも.deb/.rpmが配布されていて、Arch LinuxではAURにあるので導入には困らない。\n\n## Qt Creator\n\n意外とまともなGUIコード開発環境が手に入る。今日も[VSCodeつらい、Qt Creatorいいそ](https://qiita.com/MuriNishimori/items/b4c7304bb4d1f378865b)みたいな記事が上がってた。\n\n## Code Lite\n\ncmakeと組み合わせて使う文には悪くない。Qt Creatorより軽快なイメージ。\n\n# C++環境構築は解説不要か\n\n環境構築はWindowsだとちょっとつらいソフトもいくつかあるが、基本的には手順をStep-by-stepで解説する必要はない、というか解説書いてもわりところころ変わるから意味がない。\n\nしかし、こういう環境があるよ、という紹介は必要だろう。**さもないと学習用C言語開発環境とかbcc32とかいう糞of糞に正面衝突してしまう。**\n\n# 対象読者はすでに別の言語でプログラミングの基礎にある程度触れていることを想定して書いてよいか\n\nこれは筆者の勝手だから別にいいのだが、ちょっとまってほしい。\n\n**はたしてまともなC++入門書は存在するだろうか**\n\n個人的な持論として、CでOSSに貢献するためのC入門とC++を学ぶためのC入門は大きく違う、と思っている。\n\nいやいや、「独習C++」とか「やさしいC++」とか書店に行けばたくさんあるだろ、というかも知れない。しかしちょっとまってほしい。\n\n**果たしてC++11以前とC++以降では同じ言語だろうか**\n\n言語仕様、標準ライブラリ共に大幅に拡張されたC++11の前後を同室と捉えるのには賛同し難い。もちろんC++は互換性に非常に気を使う言語だからごく僅かなbreaking changeはあるものの(`auto` keywordなど)昔のコードは今でもコンパイルできる。\n\nしかしながら、今新しくプログラムを書く、といったときにプログラムの設計は大きく違うはずだ。\n\nいやいや、「プログラミング言語C++ 第4版」があるだろ、という声があるかもしれない(残念ながらまだ入手していない)\n\n**しかしそれ以外になにかあったろうか**\n\nそういうわけで、C++のまともな入門書の需要は存在する、と思う。\n\nもちろん他の言語から来た人向けの解説書と言うのはこれまた需要がある。\nちょうど今JavaScriptのそういった本が\nhttps://github.com/asciidwango/js-primer\nまさに執筆中だ。C++にもこういうのがあっていいはずだ。\n\n# まとめ\n\n江添さんが次に書くべきC++入門書は、プログラミング入門書である必要はない、**とは言い切れない**。\n\nもちろん何を書くかは自由なのだが。\n\n","coediting":false,"comments_count":0,"created_at":"2017-10-14T03:06:29+09:00","group":null,"id":"7f37297eb83adf9314a8","likes_count":21,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++17","versions":[]}],"title":"Re:C++入門書を書きたいが、いまC++を新規に学ぶ人、つまり対象読者はどんな人だろうか。","updated_at":"2017-10-14T13:37:55+09:00","url":"https://qiita.com/yumetodo/items/7f37297eb83adf9314a8","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"動機\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8B%95%E6%A9%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e動機\u003c/h1\u003e\n\n\u003cp\u003eWPFではWindows.Formと違い、DPIが変更されたことやウィンドウの移動、リサイズなどを知る方法がない。つまり自分でウィンドウプロシージャを書かないといけない。しかもウィンドウプロシージャに全部書きだすとそれどこのC言語？となるのでもちろんC#使いが所持する\u003cstrong\u003e基本的人権\u003c/strong\u003eの一つ\u003ccode\u003eevent\u003c/code\u003eを使いたい。つまり\u003ccode\u003eevent\u003c/code\u003e実装コードも書く必要がある。\u003c/p\u003e\n\n\u003cp\u003eここでMVVMパターンにおけるViewにあたる\u003ccode\u003eWindow\u003c/code\u003eクラスを継承する\u003ccode\u003epartial\u003c/code\u003eクラスにそんな処理をごちゃごちゃ書きたくない、でもWindowクラスの幾つかのイベントをホックしないといけない・・・\u003c/p\u003e\n\n\u003cp\u003eこれは別クラスに押し込めてViewはそのクラスを継承するべきでは、と思った。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"書いた\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9B%B8%E3%81%84%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e書いた\u003c/h1\u003e\n\n\u003cp\u003e省略するとまず\u003ccode\u003eSystem.Windows\u003c/code\u003e名前空間に\u003ccode\u003eWindow\u003c/code\u003eクラスが多分こんな感じである。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eWindow\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Windows\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eWindow\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eContentControl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eIWindowService\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//なんか\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eそしてウィンドウプロシージャやらイベントやらを実装したクラスを作った\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eMoreEventWindow.cs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003eprime_num_searcher_gui\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMoreEventWindow\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eWindow\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eevent\u003c/span\u003e \u003cspan class=\"n\"\u003eEventHandler\u003c/span\u003e \u003cspan class=\"n\"\u003eResizeBegin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprotected\u003c/span\u003e \u003cspan class=\"k\"\u003evirtual\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eOnResizeBegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eResizeBegin\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"nf\"\u003eInvoke\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eevent\u003c/span\u003e \u003cspan class=\"n\"\u003eEventHandler\u003c/span\u003e \u003cspan class=\"n\"\u003eResizeEnd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprotected\u003c/span\u003e \u003cspan class=\"k\"\u003evirtual\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eOnResizeEnd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eResizeEnd\u003c/span\u003e\u003cspan class=\"p\"\u003e?.\u003c/span\u003e\u003cspan class=\"nf\"\u003eInvoke\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eIntPtr\u003c/span\u003e \u003cspan class=\"nf\"\u003eWndProc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIntPtr\u003c/span\u003e \u003cspan class=\"n\"\u003ehwnd\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eIntPtr\u003c/span\u003e \u003cspan class=\"n\"\u003ewParam\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eIntPtr\u003c/span\u003e \u003cspan class=\"n\"\u003elParam\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eref\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003ehandled\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//略\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//ばっさり省略\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eMoreEventWindow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResizeBegin\u003c/span\u003e \u003cspan class=\"p\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisBeingMoved\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eResizeEnd\u003c/span\u003e \u003cspan class=\"p\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisBeingMoved\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMove\u003c/span\u003e \u003cspan class=\"p\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003etrue\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewillBeAdjusted\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eIsLocationGood\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewillBeAdjusted\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eOnDelayedDpiChanged\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eDelayedDpiChangedEventArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edpiOld\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewParam_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elParam_\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eさてこれを継承させよう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eMainWindow.xaml.cs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003eprime_num_searcher_gui\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e/// \u0026lt;summary\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e/// MainWindow.xaml の相互作用ロジック\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e/// \u0026lt;/summary\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003epartial\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMainWindow\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eMoreEventWindow\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eMainWindow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebenchmarkExecuter_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eEnvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIs64BitOperatingSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkExecuter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"prime_num_searcher_x64.exe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkExecuter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"prime_num_searcher.exe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nf\"\u003eInitializeComponent\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSourceInitialized\u003c/span\u003e \u003cspan class=\"p\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehWnd_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eWindowInteropHelper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003eHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebenchmarkResultManager_\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eBenchmarkResultManager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehWnd_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"問題発生\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C%E7%99%BA%E7%94%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題発生\u003c/h1\u003e\n\n\u003cp\u003eMainWindowクラスの中で\u003ccode\u003eSystem.Windows.Window\u003c/code\u003e内にあるものが一切使えない。なんでや？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"原因\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8E%9F%E5%9B%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e原因\u003c/h1\u003e\n\n\u003cp\u003eXAML側でもこのMainWindowクラスを自動生成している。だからこそ\u003ccode\u003epartial\u003c/code\u003eキーワードが\u003ccode\u003eMainWindow\u003c/code\u003eクラスに指定されているわけですね。\u003c/p\u003e\n\n\u003cp\u003eで、XAML側の基底クラス指定とC#側の基底クラス指定が一致しないので何もできない状態になっていたんですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"解決策\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決策\u003c/h1\u003e\n\n\u003cp\u003examl側の基底クラス指定を変えましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;Window\u003c/span\u003e \u003cspan class=\"na\"\u003ex:Class=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"prime_num_searcher_gui.MainWindow\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:x=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/winfx/2006/xaml\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:d=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/expression/blend/2008\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:mc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:local=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"clr-namespace:prime_num_searcher_gui\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:oxy=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003emc:Ignorable=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"d\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eTitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"PrimeNumSearchBenchmark\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eHeight=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"408\"\u003c/span\u003e \u003cspan class=\"na\"\u003eWidth=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"760\"\u003c/span\u003e \u003cspan class=\"na\"\u003eMinHeight=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"428\"\u003c/span\u003e \u003cspan class=\"na\"\u003eMinWidth=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"408\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eLoaded=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Window_Loaded\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eFontFamily=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Yu Gothic Medium\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- 略 --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/Window\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれを\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;local:MoreEventWindow\u003c/span\u003e \u003cspan class=\"na\"\u003ex:Class=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"prime_num_searcher_gui.MainWindow\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:x=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/winfx/2006/xaml\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:d=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/expression/blend/2008\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:mc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:local=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"clr-namespace:prime_num_searcher_gui\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003exmlns:oxy=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003emc:Ignorable=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"d\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eTitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"PrimeNumSearchBenchmark\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eHeight=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"408\"\u003c/span\u003e \u003cspan class=\"na\"\u003eWidth=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"760\"\u003c/span\u003e \u003cspan class=\"na\"\u003eMinHeight=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"428\"\u003c/span\u003e \u003cspan class=\"na\"\u003eMinWidth=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"408\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eLoaded=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Window_Loaded\"\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eFontFamily=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Yu Gothic Medium\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- 略 --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/local:MoreEventWindow\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこうじゃ。\u003c/p\u003e\n\n\u003cp\u003eルートのtagが\u003ccode\u003eWindow\u003c/code\u003eになっていてこれこそが\u003ccode\u003ex:Class=\"prime_num_searcher_gui.MainWindow\"\u003c/code\u003eで指定している\u003ccode\u003eprime_num_searcher_gui.MainWindow\u003c/code\u003eクラスの基底クラスが\u003ccode\u003eWindow\u003c/code\u003eだと指定していたので、\u003ccode\u003exmlns:local=\"clr-namespace:prime_num_searcher_gui\"\u003c/code\u003eを指定した上でこれを\u003ccode\u003elocal:MoreEventWindow\u003c/code\u003eに置き換えたんですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"感想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%84%9F%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e感想\u003c/h1\u003e\n\n\u003cp\u003e原因をググってるときになんかxamlもいじらないととかいうサイトばかり見つけてんなわけね～だろ、こいつらみんな狂ってやがる・・・、とか本気で思ってましたが、メロンパンと黒糖蒸しパンと梨を食べて冷静になったあとで\u003ccode\u003epartial\u003c/code\u003e指定されている意味を考えたらすんなり納得できました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://blog.okazuki.jp/entry/20091025/1256472760\" rel=\"nofollow noopener\" target=\"_blank\"\u003eWPFでFormの継承(Windowの継承 or 見た目の継承？） - かずきのBlog@hatena\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eに感謝を。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eyumetodoさんが凄いC#コードを書いていたので2度見しています。なんとコメントしたら良いものか……\u003ca href=\"https://twitter.com/hashtag/%E8%A6%81%E3%81%99%E3%82%8B%E3%81%AB%E7%A7%81%E3%81%AE%E8%85%95%E3%81%8C%E8%B6%B3%E3%82%8A%E3%81%A6%E3%81%AA%E3%81%84?src=hash\u0026amp;ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#要するに私の腕が足りてない\u003c/a\u003e\u003ca href=\"https://t.co/msHH0ANBeE\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/msHH0ANBeE\u003c/a\u003e\u003c/p\u003e— YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913806475578896384?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年9月29日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eWinAPIと格闘している辺りが……\u003c/p\u003e— YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913807468655820802?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年9月29日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eどっちといった話ではなく、C#でそんなにWinAPI直叩きしないイメージがあるもので……\u003c/p\u003e— YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913817086400458752?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年9月29日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eところでなんで私はXAML書きながらウィンドウプロシージャ書いてるんだ・・・？\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eyumetodoさんの出題(？)である「DPIが動的に変化しても自ウィンドウのスクショを撮る方法」についていろいろ考えていますが、簡単ではありませんね……\u003cbr\u003e次のコードは「DPIが100％表示なら」正常に動くのですが \u003ca href=\"https://t.co/8y7Dgko0iU\" rel=\"nofollow noopener\" target=\"_blank\"\u003epic.twitter.com/8y7Dgko0iU\u003c/a\u003e\u003c/p\u003e— YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913847822851596288?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年9月29日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ソースコード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eソースコード\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/prime_num_searcher/tree/feat/save_graph_image\" rel=\"nofollow noopener\" target=\"_blank\"\u003eyumetodo/prime_num_searcher at feat/save_graph_image\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e問題が起きていたのは \u003ca href=\"https://github.com/yumetodo/prime_num_searcher/commit/b2679f4e1ab8138fb0c39c69091c6e4b33f46bce\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003eb2679f4\u003c/code\u003e\u003c/a\u003eで、解決したのが\u003ca href=\"https://github.com/yumetodo/prime_num_searcher/commit/231cb133661c54b39ab046aeb69d821a7897f77d\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003e231cb13\u003c/code\u003e\u003c/a\u003eです。\u003c/p\u003e\n","body":"# 動機\n\nWPFではWindows.Formと違い、DPIが変更されたことやウィンドウの移動、リサイズなどを知る方法がない。つまり自分でウィンドウプロシージャを書かないといけない。しかもウィンドウプロシージャに全部書きだすとそれどこのC言語？となるのでもちろんC#使いが所持する**基本的人権**の一つ`event`を使いたい。つまり`event`実装コードも書く必要がある。\n\nここでMVVMパターンにおけるViewにあたる`Window`クラスを継承する`partial`クラスにそんな処理をごちゃごちゃ書きたくない、でもWindowクラスの幾つかのイベントをホックしないといけない・・・\n\nこれは別クラスに押し込めてViewはそのクラスを継承するべきでは、と思った。\n\n# 書いた\n\n省略するとまず`System.Windows`名前空間に`Window`クラスが多分こんな感じである。\n\n```csharp:Window\nnamespace System.Windows\n{\n    public class Window : ContentControl, IWindowService {\n        //なんか\n    }\n}\n```\n\nそしてウィンドウプロシージャやらイベントやらを実装したクラスを作った\n\n```csharp:MoreEventWindow.cs\nnamespace prime_num_searcher_gui\n{\n    public class MoreEventWindow : Window\n    {\n        public event EventHandler ResizeBegin;\n        protected virtual void OnResizeBegin(EventArgs e) =\u003e ResizeBegin?.Invoke(this, e);\n        public event EventHandler ResizeEnd;\n        protected virtual void OnResizeEnd(EventArgs e) =\u003e ResizeEnd?.Invoke(this, e);\n        private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)\n        {\n            //略\n        }\n        //ばっさり省略\n        public MoreEventWindow()\n        {\n            this.ResizeBegin += (object sender, EventArgs e) =\u003e { this.isBeingMoved = true; };\n            this.ResizeEnd += (object sender, EventArgs e) =\u003e { this.isBeingMoved = false; };\n            this.Move += (object sender, EventArgs e) =\u003e\n            {\n                if(true == this.willBeAdjusted \u0026\u0026 this.IsLocationGood())\n                {\n                    this.willBeAdjusted = false;\n                    this.OnDelayedDpiChanged(new DelayedDpiChangedEventArgs(this.dpiOld, this.wParam_, this.lParam_));\n                }\n            };\n        }\n    }\n}\n```\n\n\nさてこれを継承させよう。\n\n```csharp:MainWindow.xaml.cs\nnamespace prime_num_searcher_gui\n{\n    /// \u003csummary\u003e\n    /// MainWindow.xaml の相互作用ロジック\n    /// \u003c/summary\u003e\n    public partial class MainWindow : MoreEventWindow\n    {\n        public MainWindow()\n        {\n            this.benchmarkExecuter_ = (Environment.Is64BitOperatingSystem) ? new BenchmarkExecuter(\"prime_num_searcher_x64.exe\") : new BenchmarkExecuter(\"prime_num_searcher.exe\");\n            InitializeComponent();\n            this.SourceInitialized += (object sender, EventArgs e) =\u003e\n            {\n                this.hWnd_ = new WindowInteropHelper(this).Handle;\n                this.benchmarkResultManager_ = new BenchmarkResultManager(this.hWnd_);\n            };\n        }\n    }\n}\n```\n\n# 問題発生\n\nMainWindowクラスの中で`System.Windows.Window`内にあるものが一切使えない。なんでや？\n\n# 原因\n\nXAML側でもこのMainWindowクラスを自動生成している。だからこそ`partial`キーワードが`MainWindow`クラスに指定されているわけですね。\n\nで、XAML側の基底クラス指定とC#側の基底クラス指定が一致しないので何もできない状態になっていたんですね。\n\n# 解決策\n\nxaml側の基底クラス指定を変えましょう。\n\n```xml\n\u003cWindow x:Class=\"prime_num_searcher_gui.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:prime_num_searcher_gui\"\n        xmlns:oxy=\"clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf\"\n        mc:Ignorable=\"d\"\n        Title=\"PrimeNumSearchBenchmark\"\n        Height=\"408\" Width=\"760\" MinHeight=\"428\" MinWidth=\"408\"\n        Loaded=\"Window_Loaded\"\n        FontFamily=\"Yu Gothic Medium\"\u003e\n    \u003c!-- 略 --\u003e\n\u003c/Window\u003e\n```\n\nこれを\n\n```xml\n\u003clocal:MoreEventWindow x:Class=\"prime_num_searcher_gui.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:prime_num_searcher_gui\"\n        xmlns:oxy=\"clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf\"\n        mc:Ignorable=\"d\"\n        Title=\"PrimeNumSearchBenchmark\"\n        Height=\"408\" Width=\"760\" MinHeight=\"428\" MinWidth=\"408\"\n        Loaded=\"Window_Loaded\"\n        FontFamily=\"Yu Gothic Medium\"\u003e\n    \u003c!-- 略 --\u003e\n\u003c/local:MoreEventWindow\u003e\n```\n\nこうじゃ。\n\nルートのtagが`Window`になっていてこれこそが`x:Class=\"prime_num_searcher_gui.MainWindow\"`で指定している`prime_num_searcher_gui.MainWindow`クラスの基底クラスが`Window`だと指定していたので、`xmlns:local=\"clr-namespace:prime_num_searcher_gui\"`を指定した上でこれを`local:MoreEventWindow`に置き換えたんですね。\n\n# 感想\n\n原因をググってるときになんかxamlもいじらないととかいうサイトばかり見つけてんなわけね～だろ、こいつらみんな狂ってやがる・・・、とか本気で思ってましたが、メロンパンと黒糖蒸しパンと梨を食べて冷静になったあとで`partial`指定されている意味を考えたらすんなり納得できました。\n\n[WPFでFormの継承(Windowの継承 or 見た目の継承？） - かずきのBlog@hatena](http://blog.okazuki.jp/entry/20091025/1256472760)\n\nに感謝を。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eyumetodoさんが凄いC#コードを書いていたので2度見しています。なんとコメントしたら良いものか……\u003ca href=\"https://twitter.com/hashtag/%E8%A6%81%E3%81%99%E3%82%8B%E3%81%AB%E7%A7%81%E3%81%AE%E8%85%95%E3%81%8C%E8%B6%B3%E3%82%8A%E3%81%A6%E3%81%AA%E3%81%84?src=hash\u0026amp;ref_src=twsrc%5Etfw\"\u003e#要するに私の腕が足りてない\u003c/a\u003e\u003ca href=\"https://t.co/msHH0ANBeE\"\u003ehttps://t.co/msHH0ANBeE\u003c/a\u003e\u003c/p\u003e\u0026mdash; YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913806475578896384?ref_src=twsrc%5Etfw\"\u003e2017年9月29日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eWinAPIと格闘している辺りが……\u003c/p\u003e\u0026mdash; YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913807468655820802?ref_src=twsrc%5Etfw\"\u003e2017年9月29日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eどっちといった話ではなく、C#でそんなにWinAPI直叩きしないイメージがあるもので……\u003c/p\u003e\u0026mdash; YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913817086400458752?ref_src=twsrc%5Etfw\"\u003e2017年9月29日\u003c/a\u003e\u003c/blockquote\u003e\n\nところでなんで私はXAML書きながらウィンドウプロシージャ書いてるんだ・・・？\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eyumetodoさんの出題(？)である「DPIが動的に変化しても自ウィンドウのスクショを撮る方法」についていろいろ考えていますが、簡単ではありませんね……\u003cbr\u003e次のコードは「DPIが100％表示なら」正常に動くのですが \u003ca href=\"https://t.co/8y7Dgko0iU\"\u003epic.twitter.com/8y7Dgko0iU\u003c/a\u003e\u003c/p\u003e\u0026mdash; YSR@デレステP (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/913847822851596288?ref_src=twsrc%5Etfw\"\u003e2017年9月29日\u003c/a\u003e\u003c/blockquote\u003e\n\n\n# ソースコード\n\n[yumetodo/prime_num_searcher at feat/save_graph_image](https://github.com/yumetodo/prime_num_searcher/tree/feat/save_graph_image)\n\n問題が起きていたのは [`b2679f4`](https://github.com/yumetodo/prime_num_searcher/commit/b2679f4e1ab8138fb0c39c69091c6e4b33f46bce)で、解決したのが[`231cb13`](https://github.com/yumetodo/prime_num_searcher/commit/231cb133661c54b39ab046aeb69d821a7897f77d)です。\n","coediting":false,"comments_count":2,"created_at":"2017-09-30T19:36:02+09:00","group":null,"id":"f57e1a5d2ee8ce2af8fe","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"C#","versions":[]},{"name":"WPF","versions":[]}],"title":"WPF初心者ですがWindowクラスにイベントを追加したクラスを継承して使いたいです","updated_at":"2017-09-30T19:36:02+09:00","url":"https://qiita.com/yumetodo/items/f57e1a5d2ee8ce2af8fe","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"対象とするvscodeのバージョン\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AF%BE%E8%B1%A1%E3%81%A8%E3%81%99%E3%82%8Bvscode%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e対象とするVSCodeのバージョン\u003c/h1\u003e\n\n\u003cp\u003e15.1 or later\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"先行研究\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%88%E8%A1%8C%E7%A0%94%E7%A9%B6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e先行研究\u003c/h1\u003e\n\n\u003cp\u003eまずもって、この話をググると、msys2のgitを使う話が混ざってきて、それだけでもggrbility(検索可能性)がない。\u003c/p\u003e\n\n\u003cp\u003eまあまず引っかかるのは\u003c/p\u003e\n\n\u003cp\u003eVisual Studio CodeのIntegrated Terminalでmsys2のzshを使う - 備忘録β版\u003cbr\u003e\n\u003ca href=\"http://yami-beta.hateblo.jp/entry/2016/06/08/000000\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://yami-beta.hateblo.jp/entry/2016/06/08/000000\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eだろう。\u003c/p\u003e\n\n\u003cp\u003eすると\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003emattnさんによる実行モジュールがあるようなので、そちらを用いると良さそうです。（コメント欄参照）\u003cbr\u003e\n\u003ca href=\"https://gist.github.com/mattn/000735084394601b225a861af4afd35e\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVisual Studio Code で msys2 の bash を使う方法 · GitHub\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとか言われて、見に行くと\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ego で bash-login.go をビルドした後、出来上がった exe を以下の様に指定する。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eえ、goでビルド・・・？って思いがあふれる。一回作ればいいって言ったってだるいものはだるい。\u003c/p\u003e\n\n\u003cp\u003e他に情報がないかと思って見ていると\u003c/p\u003e\n\n\u003cp\u003eVisual Studio Codeの統合シェルをMSYS2のBashにしたら.bash_profileが読み込まれなかった - Qiita\u003cbr\u003e\n\u003ca href=\"http://qiita.com/catfist/items/ea925fb9e0ba5c0ba9f3\" class=\"autolink\" id=\"reference-83bd415bfe081e655e53\"\u003ehttp://qiita.com/catfist/items/ea925fb9e0ba5c0ba9f3\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eというのが見つかるが、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eワークスペースを作業ディレクトリとして開いてくれない\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとか言っている。しかもその解決のためにVSCodeの拡張を使うとかいう暴挙に出ている。ゼッテー嫌だ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"visual-studio-codeの統合シェルをmsys2のbashにするには\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#visual-studio-code%E3%81%AE%E7%B5%B1%E5%90%88%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%92msys2%E3%81%AEbash%E3%81%AB%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVisual Studio Codeの統合シェルをMSYS2のbashにするには\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"json\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003esetting.json\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"terminal.integrated.shell.windows\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"C:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003emsys64\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003eusr\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003ebin\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s2\"\u003ebash.exe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"terminal.integrated.env.windows\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"MSYSTEM\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"MINGW64\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"CHERE_INVOKING\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"1\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"terminal.integrated.shellArgs.windows\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"--login\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"terminal.integrated.cursorStyle\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"line\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eを設定に書けば良い。\u003ccode\u003eterminal.integrated.cursorStyle\u003c/code\u003eは好みで。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"解説\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E8%AA%AC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解説\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"terminalintegratedshellwindows\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#terminalintegratedshellwindows\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eterminal.integrated.shell.windows\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003ebashへのフルパスを指定する。このときmsys2のbashではないなにか(ex. git-bashのbash)を指定してはだめだ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"terminalintegratedenvwindows\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#terminalintegratedenvwindows\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eterminal.integrated.env.windows\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e環境変数を設定できる。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"msystem\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#msystem\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eMSYSTEM\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003emsys2ユーザーならご存知と思うが、\u003ccode\u003e$PATH\u003c/code\u003eが3種類(\u003ccode\u003e/usr/bin\u003c/code\u003e, \u003ccode\u003e/mingw32/bin\u003c/code\u003e,  \u003ccode\u003e/mingw64/bin\u003c/code\u003e)あるのに対応していて、\u003ccode\u003eMSYS\u003c/code\u003e, \u003ccode\u003eMINGW32\u003c/code\u003e, \u003ccode\u003eMINGW64\u003c/code\u003eがある。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eMSYS\u003c/code\u003eはmsys2のパッケージを作るときとか以外はお世話にならない(わけでもない\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eMINGW32\u003c/code\u003eはgccの例外モデルがBorlandの特許の関係でSEHではなくdwarfなi686向けの環境である。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eMINGW64\u003c/code\u003eはおそらくもっともよく使う環境だ。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"chere_invoking\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#chere_invoking\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eCHERE_INVOKING\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003ebashにログイン時に\u003cstrong\u003e作業ディレクトリ\u003c/strong\u003eを環境変数\u003ccode\u003e$HOME\u003c/code\u003eのパスにするかを決めるフラグで、\u003ccode\u003e1\u003c/code\u003eに設定すると移動を阻止します。\u003c/p\u003e\n\n\u003cp\u003eVisual Studio Codeの統合シェルをMSYS2のBashにしたら.bash_profileが読み込まれなかった - Qiita\u003cbr\u003e\n\u003ca href=\"http://qiita.com/catfist/items/ea925fb9e0ba5c0ba9f3\" class=\"autolink\"\u003ehttp://qiita.com/catfist/items/ea925fb9e0ba5c0ba9f3\u003c/a\u003e\u003cbr\u003e\nで\u003cstrong\u003eワークスペースを作業ディレクトリとして開いてくれないとか言っていたのはこれを設定していないせいだ\u003c/strong\u003e。\u003ca href=\"/catfist\" class=\"user-mention js-hovercard\" title=\"catfist\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"catfist\"\u003e@catfist\u003c/a\u003e さんみたいに、わざわざ\u003ca href=\"https://marketplace.visualstudio.com/items?itemName=Tyriar.vscode-terminal-here\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVSCodeの拡張\u003c/a\u003eを使う必要はない。\u003c/p\u003e\n\n\u003cp\u003eまあ\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eの中身が奇っ怪すぎるのでわからなくても仕方ない感はある。\u003c/p\u003e\n\n\u003cp\u003e参考リンク:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ameblo.jp/mizuk6n/theme-10002628249.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCygwin導入＆ある程度日本語化（Cygwin-JE未使用）｜mizuk6nの【公開備忘録】\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"msys-opt\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#msys-opt\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eMSYS\u003c/code\u003e (opt)\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"json\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"terminal.integrated.env.windows\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"MSYS\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"winsymlinks:nativestrict\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように、\u003ccode\u003ewinsymlinks:nativestrict\u003c/code\u003eを指定するとシンボリックリンクが\u003ccode\u003e.lnk\u003c/code\u003eファイルじゃなくて本物のシンボリックリンクになる。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"msys2_path_type-opt\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#msys2_path_type-opt\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eMSYS2_PATH_TYPE\u003c/code\u003e (opt)\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003eMSYS2_PATH_TYPE\u003c/code\u003eは環境変数\u003ccode\u003ePATH\u003c/code\u003eをどうするか決めるものだ。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e/etc/profile\u003c/code\u003eを覗くと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003eMSYS2_PATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"/usr/local/bin:/usr/bin:/bin\"\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eMANPATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/usr/local/man:/usr/share/man:/usr/man:/share/man'\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eINFOPATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'/usr/local/info:/usr/share/info:/usr/info:/share/info'\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eMSYS2_PATH_TYPE\u003c/span\u003e\u003cspan class=\"k\"\u003e:-\u003c/span\u003e\u003cspan class=\"nv\"\u003eminimal\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e \u003cspan class=\"k\"\u003ein\n  \u003c/span\u003estrict\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# Do not inherit any path configuration, and allow for full customization\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# of external path. This is supposed to be used in special cases such as\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# debugging without need to change this file, but not daily usage.\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eunset \u003c/span\u003eORIGINAL_PATH\n    \u003cspan class=\"p\"\u003e;;\u003c/span\u003e\n  inherit\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# Inherit previous path. Note that this will make all of the Windows path\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# available in current shell, with possible interference in project builds.\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003eORIGINAL_PATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eORIGINAL_PATH\u003c/span\u003e\u003cspan class=\"k\"\u003e:-${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePATH\u003c/span\u003e\u003cspan class=\"k\"\u003e}}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e;;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# Do not inherit any path configuration but configure a default Windows path\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# suitable for normal usage with minimal external interference.\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003eWIN_ROOT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"si\"\u003e$(\u003c/span\u003e\u003cspan class=\"nv\"\u003ePATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eMSYS2_PATH\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e \u003cspan class=\"nb\"\u003eexec \u003c/span\u003ecygpath \u003cspan class=\"nt\"\u003e-Wu\u003c/span\u003e\u003cspan class=\"si\"\u003e)\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003eORIGINAL_PATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eWIN_ROOT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/System32:\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eWIN_ROOT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eWIN_ROOT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/System32/Wbem:\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eWIN_ROOT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/System32/WindowsPowerShell/v1.0/\"\u003c/span\u003e\n\u003cspan class=\"k\"\u003eesac\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書かれている。通常は指定しなくていいが、\u003ccode\u003estrict\u003c/code\u003eモードと\u003ccode\u003einherit\u003c/code\u003eモードがあることくらい頭に入れておいてもいいかもしれない。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"terminalintegratedshellargswindows\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#terminalintegratedshellargswindows\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eterminal.integrated.shellArgs.windows\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003e--login\u003c/code\u003eを渡している。\u003ccode\u003e-l\u003c/code\u003eでも同じだ。\u003c/p\u003e\n\n\u003cp\u003eここでbashのmanを読んでみよう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"man\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eBASH(1)                                                      General Commands Manual                                                     BASH(1)\n\nNAME\n       bash - GNU Bourne-Again SHell\nOPTIONS\n       -l        Make bash act as if it had been invoked as a login shell (see INVOCATION below).\n\n       --login\n              Equivalent to -l.\n\n       --noprofile\n              Do  not  read  either  the  system-wide  startup  file  /etc/profile  or any of the personal initialization files ~/.bash_profile,\n              ~/.bash_login, or ~/.profile.  By default, bash reads these files when it is invoked as a login shell (see INVOCATION below).\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eまあ\u003ccode\u003esee INVOCATION below\u003c/code\u003eとか言っているが自分で読んでくれ。要約すると、\u003ccode\u003e-l\u003c/code\u003eまたは\u003ccode\u003e--login\u003c/code\u003eをつけないと\u003ccode\u003e~/.bash_profile\u003c/code\u003eは読み込まないぞ、となる。\u003c/p\u003e\n\n\u003cp\u003e詳しくはログインシェルとインタラクティブシェルのお話なので\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/incep/items/7e5760de0c2c748296aa\" id=\"reference-51156390b86b7b3fee46\"\u003eログインシェルとインタラクティブシェルと~/.bashrc達の関係 - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://kanonji.info/blog/2013/06/20/bash%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%B7%E3%82%A7%E3%83%AB%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%82%B7%E3%82%A7%E3%83%AB/\" rel=\"nofollow noopener\" target=\"_blank\"\u003ebashのログインシェルとインタラクティブシェル | kanonjiのブログ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eを参照のこと。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"terminalintegratedcursorstyle-opt\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#terminalintegratedcursorstyle-opt\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eterminal.integrated.cursorStyle\u003c/code\u003e (opt)\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eなくても動く\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eターミナルのカーソルの形状を選べる。規定は\u003ccode\u003e\"block\"\u003c/code\u003eだ。私は線状のほうが好きなので\u003ccode\u003e\"line\"\u003c/code\u003eにした。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F46ef93e1-d3cc-c6d9-8ee0-f3f440b4eaa6.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7eb73606ded99eaeb4c125acaf5f1d2a\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F46ef93e1-d3cc-c6d9-8ee0-f3f440b4eaa6.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7eb73606ded99eaeb4c125acaf5f1d2a\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/46ef93e1-d3cc-c6d9-8ee0-f3f440b4eaa6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F46ef93e1-d3cc-c6d9-8ee0-f3f440b4eaa6.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=c0fe5cca845fcec8691d807ca53b5ea0 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eやったぜ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記-ビルドタスクを使うときの注意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-%E3%83%93%E3%83%AB%E3%83%89%E3%82%BF%E3%82%B9%E3%82%AF%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記: ビルドタスクを使うときの注意\u003c/h1\u003e\n\n\u003cp\u003eビルドタスクをふつうの設定で動かそうとすると、パス区切り文字の問題から動きません。そこで\u003ccode\u003etask.json\u003c/code\u003eの構成ごとに\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"json\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"windows\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"options\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"shell\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"executable\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"cmd.exe\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"args\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"/d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"/c\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのような内容を追記することで、タスクを動かすときだけシェルを切り替えられ、うまくいきます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/microsoft/vscode/issues/35593#issuecomment-488728912\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/microsoft/vscode/issues/35593#issuecomment-488728912\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eちなみに\u003ccode\u003elanch.json\u003c/code\u003e、つまりデバッグ実行の方はなんかうまく行った試しがありません。\u003c/p\u003e\n","body":"# 対象とするVSCodeのバージョン\n\n15.1 or later\n\n# 先行研究\n\nまずもって、この話をググると、msys2のgitを使う話が混ざってきて、それだけでもggrbility(検索可能性)がない。\n\nまあまず引っかかるのは\n\nVisual Studio CodeのIntegrated Terminalでmsys2のzshを使う - 備忘録β版\nhttp://yami-beta.hateblo.jp/entry/2016/06/08/000000\n\nだろう。\n\nすると\n\n\u003emattnさんによる実行モジュールがあるようなので、そちらを用いると良さそうです。（コメント欄参照）\n\u003e[Visual Studio Code で msys2 の bash を使う方法 · GitHub](https://gist.github.com/mattn/000735084394601b225a861af4afd35e)\n\nとか言われて、見に行くと\n\n\u003ego で bash-login.go をビルドした後、出来上がった exe を以下の様に指定する。\n\nえ、goでビルド・・・？って思いがあふれる。一回作ればいいって言ったってだるいものはだるい。\n\n他に情報がないかと思って見ていると\n\nVisual Studio Codeの統合シェルをMSYS2のBashにしたら.bash_profileが読み込まれなかった - Qiita\nhttp://qiita.com/catfist/items/ea925fb9e0ba5c0ba9f3\n\nというのが見つかるが、\n\n\u003eワークスペースを作業ディレクトリとして開いてくれない\n\nとか言っている。しかもその解決のためにVSCodeの拡張を使うとかいう暴挙に出ている。ゼッテー嫌だ。\n\n# Visual Studio Codeの統合シェルをMSYS2のbashにするには\n\n```json:setting.json\n{\n    \"terminal.integrated.shell.windows\": \"C:\\\\msys64\\\\usr\\\\bin\\\\bash.exe\",\n    \"terminal.integrated.env.windows\": {\n        \"MSYSTEM\": \"MINGW64\",\n        \"CHERE_INVOKING\": \"1\"\n    },\n    \"terminal.integrated.shellArgs.windows\": [\n        \"--login\"\n    ],\n    \"terminal.integrated.cursorStyle\": \"line\"\n}\n```\n\nを設定に書けば良い。`terminal.integrated.cursorStyle`は好みで。\n\n# 解説\n## `terminal.integrated.shell.windows`\n\nbashへのフルパスを指定する。このときmsys2のbashではないなにか(ex. git-bashのbash)を指定してはだめだ。\n\n## `terminal.integrated.env.windows`\n\n環境変数を設定できる。\n\n### `MSYSTEM`\n\nmsys2ユーザーならご存知と思うが、`$PATH`が3種類(`/usr/bin`, `/mingw32/bin`,  `/mingw64/bin`)あるのに対応していて、`MSYS`, `MINGW32`, `MINGW64`がある。\n\n`MSYS`はmsys2のパッケージを作るときとか以外はお世話にならない(わけでもない\n\n`MINGW32`はgccの例外モデルがBorlandの特許の関係でSEHではなくdwarfなi686向けの環境である。\n\n`MINGW64`はおそらくもっともよく使う環境だ。\n\n### `CHERE_INVOKING`\n\nbashにログイン時に**作業ディレクトリ**を環境変数`$HOME`のパスにするかを決めるフラグで、`1`に設定すると移動を阻止します。\n\nVisual Studio Codeの統合シェルをMSYS2のBashにしたら.bash_profileが読み込まれなかった - Qiita\nhttp://qiita.com/catfist/items/ea925fb9e0ba5c0ba9f3\nで**ワークスペースを作業ディレクトリとして開いてくれないとか言っていたのはこれを設定していないせいだ**。@catfist さんみたいに、わざわざ[VSCodeの拡張](https://marketplace.visualstudio.com/items?itemName=Tyriar.vscode-terminal-here)を使う必要はない。\n\nまあ`msys2_shell.cmd`の中身が奇っ怪すぎるのでわからなくても仕方ない感はある。\n\n参考リンク:\n\n- [Cygwin導入＆ある程度日本語化（Cygwin-JE未使用）｜mizuk6nの【公開備忘録】](https://ameblo.jp/mizuk6n/theme-10002628249.html)\n\n### `MSYS` (opt)\n\n```json\n{\n    \"terminal.integrated.env.windows\": {\n        \"MSYS\": \"winsymlinks:nativestrict\",\n    },\n}\n```\n\nのように、`winsymlinks:nativestrict`を指定するとシンボリックリンクが`.lnk`ファイルじゃなくて本物のシンボリックリンクになる。\n\n### `MSYS2_PATH_TYPE` (opt)\n\n`MSYS2_PATH_TYPE`は環境変数`PATH`をどうするか決めるものだ。\n\n`/etc/profile`を覗くと\n\n```bash\nMSYS2_PATH=\"/usr/local/bin:/usr/bin:/bin\"\nMANPATH='/usr/local/man:/usr/share/man:/usr/man:/share/man'\nINFOPATH='/usr/local/info:/usr/share/info:/usr/info:/share/info'\n\ncase \"${MSYS2_PATH_TYPE:-minimal}\" in\n  strict)\n    # Do not inherit any path configuration, and allow for full customization\n    # of external path. This is supposed to be used in special cases such as\n    # debugging without need to change this file, but not daily usage.\n    unset ORIGINAL_PATH\n    ;;\n  inherit)\n    # Inherit previous path. Note that this will make all of the Windows path\n    # available in current shell, with possible interference in project builds.\n    ORIGINAL_PATH=\"${ORIGINAL_PATH:-${PATH}}\"\n    ;;\n  *)\n    # Do not inherit any path configuration but configure a default Windows path\n    # suitable for normal usage with minimal external interference.\n    WIN_ROOT=\"$(PATH=${MSYS2_PATH} exec cygpath -Wu)\"\n    ORIGINAL_PATH=\"${WIN_ROOT}/System32:${WIN_ROOT}:${WIN_ROOT}/System32/Wbem:${WIN_ROOT}/System32/WindowsPowerShell/v1.0/\"\nesac\n```\n\nのように書かれている。通常は指定しなくていいが、`strict`モードと`inherit`モードがあることくらい頭に入れておいてもいいかもしれない。\n\n## `terminal.integrated.shellArgs.windows`\n\n`--login`を渡している。`-l`でも同じだ。\n\nここでbashのmanを読んでみよう。\n\n```man\nBASH(1)                                                      General Commands Manual                                                     BASH(1)\n\nNAME\n       bash - GNU Bourne-Again SHell\nOPTIONS\n       -l        Make bash act as if it had been invoked as a login shell (see INVOCATION below).\n\n       --login\n              Equivalent to -l.\n\n       --noprofile\n              Do  not  read  either  the  system-wide  startup  file  /etc/profile  or any of the personal initialization files ~/.bash_profile,\n              ~/.bash_login, or ~/.profile.  By default, bash reads these files when it is invoked as a login shell (see INVOCATION below).\n```\n\nまあ`see INVOCATION below`とか言っているが自分で読んでくれ。要約すると、`-l`または`--login`をつけないと`~/.bash_profile`は読み込まないぞ、となる。\n\n詳しくはログインシェルとインタラクティブシェルのお話なので\n\n- [ログインシェルとインタラクティブシェルと~/.bashrc達の関係 - Qiita](http://qiita.com/incep/items/7e5760de0c2c748296aa)\n- [bashのログインシェルとインタラクティブシェル | kanonjiのブログ](http://kanonji.info/blog/2013/06/20/bash%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%B7%E3%82%A7%E3%83%AB%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%82%B7%E3%82%A7%E3%83%AB/)\n\nを参照のこと。\n\n## `terminal.integrated.cursorStyle` (opt)\n\n**なくても動く**\n\nターミナルのカーソルの形状を選べる。規定は`\"block\"`だ。私は線状のほうが好きなので`\"line\"`にした。\n\n# 最後に\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/46ef93e1-d3cc-c6d9-8ee0-f3f440b4eaa6.png)\n\n\nやったぜ。\n\n# 追記: ビルドタスクを使うときの注意\n\nビルドタスクをふつうの設定で動かそうとすると、パス区切り文字の問題から動きません。そこで`task.json`の構成ごとに\n\n```json\n            \"windows\": {\n                \"options\": {\n                    \"shell\": {\n                        \"executable\": \"cmd.exe\",\n                        \"args\": [\"/d\", \"/c\"]\n                    }\n                },\n            }\n```\n\nのような内容を追記することで、タスクを動かすときだけシェルを切り替えられ、うまくいきます。\n\nhttps://github.com/microsoft/vscode/issues/35593#issuecomment-488728912\n\nちなみに`lanch.json`、つまりデバッグ実行の方はなんかうまく行った試しがありません。\n","coediting":false,"comments_count":2,"created_at":"2017-09-03T00:04:13+09:00","group":null,"id":"42132a1e8435504448aa","likes_count":51,"private":false,"reactions_count":0,"tags":[{"name":"Bash","versions":[]},{"name":"msys2","versions":[]},{"name":"VisualStudioCode","versions":[]}],"title":"Visual Studio Code 15.1の統合シェルをMSYS2のbashにする","updated_at":"2020-02-10T20:51:36+09:00","url":"https://qiita.com/yumetodo/items/42132a1e8435504448aa","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"解決策1-cmakeをつかう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%961-cmake%E3%82%92%E3%81%A4%E3%81%8B%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決策1: CMakeをつかう\u003c/h1\u003e\n\n\u003cp\u003eまあ一番確実だし、他のコンパイラでも使えるしコンパイラのバージョンなんでいうわかりにくい指標ではなく対応している言語機能で制約することもできる(らしい)が、まあそれは他のサイトに解説を譲る。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"解決策2あえてcmakeを使わないという選択肢\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%962%E3%81%82%E3%81%88%E3%81%A6cmake%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%AA%E3%81%84%E3%81%A8%E3%81%84%E3%81%86%E9%81%B8%E6%8A%9E%E8%82%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決策2:あえてCMakeを使わないという選択肢\u003c/h1\u003e\n\n\u003cp\u003e今回の本題。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"condition-attribute\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#condition-attribute\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eCondition\u003c/code\u003e attribute\u003c/h2\u003e\n\n\u003cp\u003eC++プロジェクトの実体は\u003ccode\u003e.vcxproj\u003c/code\u003eという拡張子のxmlファイルである。xmlのattributeをハックして条件分岐できるようになっている、いわゆる\u003ccode\u003eCondition\u003c/code\u003e attributeだ、汚いです。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-conditions\" rel=\"nofollow noopener\" target=\"_blank\"\u003eMSBuild の条件 | Microsoft Docs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-conditional-constructs\" rel=\"nofollow noopener\" target=\"_blank\"\u003eMSBuild Conditional Constructs | Microsoft Docs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこいつを活用する。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"複数バージョンで利用するときの障害となるのはなにか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A4%87%E6%95%B0%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A7%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E9%9A%9C%E5%AE%B3%E3%81%A8%E3%81%AA%E3%82%8B%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e複数バージョンで利用するときの障害となるのはなにか\u003c/h2\u003e\n\n\u003cp\u003eそもそもなんで普通に作ったプロジェクトが他のVisual Studioのバージョンで開けないのかを確認する。\u003c/p\u003e\n\n\u003cp\u003eまあ理由は簡単で\u003ccode\u003ePlatform Toolset\u003c/code\u003eが指定されているものと開いたVSの持っているVC++のバージョンが合わないと「アップグレードしますか？」というダイアログが出るわけだ。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fmsdnshared.blob.core.windows.net%2Fmedia%2F2016%2F02%2Fprop-pages-all-toolsets.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7b2128e6236df3121b36eb62f76f3e57\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fmsdnshared.blob.core.windows.net%2Fmedia%2F2016%2F02%2Fprop-pages-all-toolsets.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7b2128e6236df3121b36eb62f76f3e57\" alt=\"C++ Property Pages - List of all C++ Platform Toolsets\" data-canonical-src=\"https://msdnshared.blob.core.windows.net/media/2016/02/prop-pages-all-toolsets.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fmsdnshared.blob.core.windows.net%2Fmedia%2F2016%2F02%2Fprop-pages-all-toolsets.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=09f02ac5fc1b6dcccd9aecb8da2121f9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e.vcxproj\u003c/code\u003eの中で該当する部分を見てみよう。下のxmlは普通にC++のプロジェクトを作ったときのものである\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e.vcxproj\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;Project\u003c/span\u003e \u003cspan class=\"na\"\u003eDefaultTargets=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Build\"\u003c/span\u003e \u003cspan class=\"na\"\u003eToolsVersion=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"15.0\"\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"c\"\u003e\u0026lt;!-- 中略 --\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;Import\u003c/span\u003e \u003cspan class=\"na\"\u003eProject=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Debug|Win32'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev141\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Release|Win32'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003efalse\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev141\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;WholeProgramOptimization\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/WholeProgramOptimization\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Debug|x64'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev141\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Release|x64'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003efalse\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev141\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;WholeProgramOptimization\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/WholeProgramOptimization\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"c\"\u003e\u0026lt;!-- 中略 --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/Project\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e自動生成の設定ファイルでも\u003ccode\u003eCondition\u003c/code\u003e attributeが使われているあたりなんか怖いが、問題となっているのは\u003ccode\u003ePlatformToolset\u003c/code\u003e tagだ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"platformtoolsetもconditionで分ければいいじゃない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#platformtoolset%E3%82%82condition%E3%81%A7%E5%88%86%E3%81%91%E3%82%8C%E3%81%B0%E3%81%84%E3%81%84%E3%81%98%E3%82%83%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003ePlatformToolset\u003c/code\u003eも\u003ccode\u003eCondition\u003c/code\u003eで分ければいいじゃない\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003evcxcompat.props\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;Project\u003c/span\u003e \u003cspan class=\"na\"\u003eToolsVersion=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"4.0\"\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(VisualStudioVersion)' == '12.0'\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev120\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(VisualStudioVersion)' == '14.0'\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev140\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(VisualStudioVersion)' == '15.0'\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;PlatformToolset\u0026gt;\u003c/span\u003ev141\u003cspan class=\"nt\"\u003e\u0026lt;/PlatformToolset\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/Project\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eつまりこういうファイルを作ってこれを読み込めばいい。なんで\u003ccode\u003eVisualStudioVersion\u003c/code\u003eが\u003ccode\u003e15.0\u003c/code\u003eのとき\u003ccode\u003ePlatformToolset\u003c/code\u003eが\u003ccode\u003ev150\u003c/code\u003eじゃないんや！という疑問については\u003cbr\u003e\n\u003ca href=\"http://qiita.com/Chironian/items/1432eb8b59eb2eefcd2d\" id=\"reference-26591ff09fc8841360d9\"\u003eVisual C++ 2017のバージョン番号がややこしすぎる件\u003c/a\u003e\u003cbr\u003e\nを参照してほしい。主にはbinary capabilityの問題だ。\u003cbr\u003e\n上記ではVS2013/VS2015/VS2017に対応させたが、もちろん必要に応じて適宜いじれば良い。\u003c/p\u003e\n\n\u003cp\u003e具体的には、これを\u003ccode\u003evcxcompat.props\u003c/code\u003eという名前で(説明の都合上)\u003ccode\u003e.vcxproj\u003c/code\u003eがある場所に(説明の都合上、ただの相対パス指定)\u003cstrong\u003eUTF-8で\u003c/strong\u003e(BOMはどっちでも)保存し、\u003ccode\u003e.vcxproj\u003c/code\u003eは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e.vcxproj\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;Project\u003c/span\u003e \u003cspan class=\"na\"\u003eDefaultTargets=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Build\"\u003c/span\u003e \u003cspan class=\"na\"\u003eToolsVersion=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"15.0\"\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"c\"\u003e\u0026lt;!-- 中略 --\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;Import\u003c/span\u003e \u003cspan class=\"na\"\u003eProject=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;Import\u003c/span\u003e \u003cspan class=\"na\"\u003eProject=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"vcxcompat.props\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Debug|Win32'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Release|Win32'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003efalse\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;WholeProgramOptimization\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/WholeProgramOptimization\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Debug|x64'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;PropertyGroup\u003c/span\u003e \u003cspan class=\"na\"\u003eCondition=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"'$(Configuration)|$(Platform)'=='Release|x64'\"\u003c/span\u003e \u003cspan class=\"na\"\u003eLabel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Configuration\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;ConfigurationType\u0026gt;\u003c/span\u003eApplication\u003cspan class=\"nt\"\u003e\u0026lt;/ConfigurationType\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;UseDebugLibraries\u0026gt;\u003c/span\u003efalse\u003cspan class=\"nt\"\u003e\u0026lt;/UseDebugLibraries\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;WholeProgramOptimization\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/WholeProgramOptimization\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;CharacterSet\u0026gt;\u003c/span\u003eUnicode\u003cspan class=\"nt\"\u003e\u0026lt;/CharacterSet\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/PropertyGroup\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"c\"\u003e\u0026lt;!-- 中略 --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/Project\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eというふうに書き換えればよい。何が変わったかはまあdiffればいいと思うが、\u003ccode\u003eImport\u003c/code\u003e tagが増えて、\u003ccode\u003ePlatformToolset\u003c/code\u003eタグが消滅した。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実例\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/VFR-maniac/L-SMASH-Works/tree/master/AviSynth\" rel=\"nofollow noopener\" target=\"_blank\"\u003eL-SMASH-Works/AviSynth at master · VFR-maniac/L-SMASH-Works\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/S-H-GAMELINKS/Novel.Game.Engine.LINKS\" rel=\"nofollow noopener\" target=\"_blank\"\u003eS-H-GAMELINKS/Novel.Game.Engine.LINKS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 解決策1: CMakeをつかう\n\nまあ一番確実だし、他のコンパイラでも使えるしコンパイラのバージョンなんでいうわかりにくい指標ではなく対応している言語機能で制約することもできる(らしい)が、まあそれは他のサイトに解説を譲る。\n\n# 解決策2:あえてCMakeを使わないという選択肢\n\n今回の本題。\n\n## `Condition` attribute\nC++プロジェクトの実体は`.vcxproj`という拡張子のxmlファイルである。xmlのattributeをハックして条件分岐できるようになっている、いわゆる`Condition` attributeだ、汚いです。\n\n- [MSBuild の条件 | Microsoft Docs](https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-conditions)\n- [MSBuild Conditional Constructs | Microsoft Docs](https://docs.microsoft.com/ja-jp/visualstudio/msbuild/msbuild-conditional-constructs)\n\nこいつを活用する。\n\n## 複数バージョンで利用するときの障害となるのはなにか\n\nそもそもなんで普通に作ったプロジェクトが他のVisual Studioのバージョンで開けないのかを確認する。\n\nまあ理由は簡単で`Platform Toolset`が指定されているものと開いたVSの持っているVC++のバージョンが合わないと「アップグレードしますか？」というダイアログが出るわけだ。\n\n![C++ Property Pages - List of all C++ Platform Toolsets](https://msdnshared.blob.core.windows.net/media/2016/02/prop-pages-all-toolsets.png)\n\n`.vcxproj`の中で該当する部分を見てみよう。下のxmlは普通にC++のプロジェクトを作ったときのものである\n\n```xml:.vcxproj\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cProject DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003e\n  \u003c!-- 中略 --\u003e\n  \u003cImport Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" /\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003etrue\u003c/UseDebugLibraries\u003e\n    \u003cPlatformToolset\u003ev141\u003c/PlatformToolset\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003efalse\u003c/UseDebugLibraries\u003e\n    \u003cPlatformToolset\u003ev141\u003c/PlatformToolset\u003e\n    \u003cWholeProgramOptimization\u003etrue\u003c/WholeProgramOptimization\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003etrue\u003c/UseDebugLibraries\u003e\n    \u003cPlatformToolset\u003ev141\u003c/PlatformToolset\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003efalse\u003c/UseDebugLibraries\u003e\n    \u003cPlatformToolset\u003ev141\u003c/PlatformToolset\u003e\n    \u003cWholeProgramOptimization\u003etrue\u003c/WholeProgramOptimization\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003c!-- 中略 --\u003e\n\u003c/Project\u003e\n```\n\n自動生成の設定ファイルでも`Condition` attributeが使われているあたりなんか怖いが、問題となっているのは`PlatformToolset` tagだ。\n\n## `PlatformToolset`も`Condition`で分ければいいじゃない\n\n```xml:vcxcompat.props\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cProject ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003e\n  \u003cPropertyGroup Label=\"Configuration\" Condition=\"'$(VisualStudioVersion)' == '12.0'\"\u003e\n    \u003cPlatformToolset\u003ev120\u003c/PlatformToolset\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Label=\"Configuration\" Condition=\"'$(VisualStudioVersion)' == '14.0'\"\u003e\n    \u003cPlatformToolset\u003ev140\u003c/PlatformToolset\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Label=\"Configuration\" Condition=\"'$(VisualStudioVersion)' == '15.0'\"\u003e\n    \u003cPlatformToolset\u003ev141\u003c/PlatformToolset\u003e\n  \u003c/PropertyGroup\u003e\n\u003c/Project\u003e\n```\n\nつまりこういうファイルを作ってこれを読み込めばいい。なんで`VisualStudioVersion`が`15.0`のとき`PlatformToolset`が`v150`じゃないんや！という疑問については\n[Visual C++ 2017のバージョン番号がややこしすぎる件](http://qiita.com/Chironian/items/1432eb8b59eb2eefcd2d)\nを参照してほしい。主にはbinary capabilityの問題だ。\n上記ではVS2013/VS2015/VS2017に対応させたが、もちろん必要に応じて適宜いじれば良い。\n\n具体的には、これを`vcxcompat.props`という名前で(説明の都合上)`.vcxproj`がある場所に(説明の都合上、ただの相対パス指定)**UTF-8で**(BOMはどっちでも)保存し、`.vcxproj`は\n\n```xml:.vcxproj\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cProject DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"\u003e\n  \u003c!-- 中略 --\u003e\n  \u003cImport Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" /\u003e\n  \u003cImport Project=\"vcxcompat.props\" /\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003etrue\u003c/UseDebugLibraries\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003efalse\u003c/UseDebugLibraries\u003e\n    \u003cWholeProgramOptimization\u003etrue\u003c/WholeProgramOptimization\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003etrue\u003c/UseDebugLibraries\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003cPropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\"\u003e\n    \u003cConfigurationType\u003eApplication\u003c/ConfigurationType\u003e\n    \u003cUseDebugLibraries\u003efalse\u003c/UseDebugLibraries\u003e\n    \u003cWholeProgramOptimization\u003etrue\u003c/WholeProgramOptimization\u003e\n    \u003cCharacterSet\u003eUnicode\u003c/CharacterSet\u003e\n  \u003c/PropertyGroup\u003e\n  \u003c!-- 中略 --\u003e\n\u003c/Project\u003e\n```\n\nというふうに書き換えればよい。何が変わったかはまあdiffればいいと思うが、`Import` tagが増えて、`PlatformToolset`タグが消滅した。\n\n## 実例\n\n- [L-SMASH-Works/AviSynth at master · VFR-maniac/L-SMASH-Works](https://github.com/VFR-maniac/L-SMASH-Works/tree/master/AviSynth)\n- [S-H-GAMELINKS/Novel.Game.Engine.LINKS](https://github.com/S-H-GAMELINKS/Novel.Game.Engine.LINKS)\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-07-31T01:22:47+09:00","group":null,"id":"a8324efaf83c9c08d168","likes_count":10,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"VisualStudio","versions":[]},{"name":"VisualC++","versions":[]}],"title":"複数バージョンのVisual Studioで開けるC++のプロジェクトを作る","updated_at":"2019-04-03T12:18:08+09:00","url":"https://qiita.com/yumetodo/items/a8324efaf83c9c08d168","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"元ネタ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%83%E3%83%8D%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e元ネタ\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eif文の誤解 - Qiita\u003cbr\u003e\n\u003ca href=\"http://qiita.com/Ratty27/items/c142412bc6114e2f5c4c\" class=\"autolink\" id=\"reference-919e9eb56997a5647395\"\u003ehttp://qiita.com/Ratty27/items/c142412bc6114e2f5c4c\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eという記事が先日Qiitaに投稿された。この記事には誤解がある。C++erに限定して話を進めよう。C++に限定しない誤解もあるがすでにコメントで指摘されているのでここでは触れない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"if文が要求するのはbool型の値であるという誤解\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#if%E6%96%87%E3%81%8C%E8%A6%81%E6%B1%82%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AFbool%E5%9E%8B%E3%81%AE%E5%80%A4%E3%81%A7%E3%81%82%E3%82%8B%E3%81%A8%E3%81%84%E3%81%86%E8%AA%A4%E8%A7%A3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e「if文が要求するのはbool型の値である」という誤解\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e例えば C++ なら、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"err\"\u003e条件式\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eというように考えていませんか？　これは間違いで、実際には\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eです。\u003c/p\u003e\n\n\u003cp\u003eですので、if 文には true か false のどちらかを与える、というのが基本的な考え方です。\u003c/p\u003e\n\n\u003cp\u003eそして、if 文は引数としての bool 値が true の時に、{} 内の処理を実行する、という構文なのです\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eですから、例えば\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれは次のように書き換えることができます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eis_zero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eis_zero\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e元記事によればif文が要求するのはbool型の値であり、条件式ではない、と主張しており、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eis_zero\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eis_zero\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eが等価だと主張している。ところがこれはそうではない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c11c14c17のifswitchwhilefor文を解剖する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c11c14c17%E3%81%AEifswitchwhilefor%E6%96%87%E3%82%92%E8%A7%A3%E5%89%96%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++11/C++14/C++17のif/switch/while/for文を解剖する\u003c/h1\u003e\n\n\u003cp\u003eまずは規格書をあたって見る必要がありそうだ。ところでC++17でこの辺の文法に変化があったのでついでに触れておく。というのはcpprefjpのその辺の解説がまだ中途半端だからだ、\u003ca href=\"https://github.com/cpprefjp/site/issues/415\" rel=\"nofollow noopener\" target=\"_blank\"\u003e私が書いていないから(ぇ\u003c/a\u003e。まあ変わったと言っても、\u003ccode\u003eif constexpr\u003c/code\u003e文の導入とif/switch文への初期化文の導入だけなので大差はないのだが。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c14まで\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c14%E3%81%BE%E3%81%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++14まで\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e§ 6.4 stmt.select \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eselection-statement:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eif\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eif\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e\u003c/code\u003e\u003cstrong\u003e\u003ccode\u003eelse\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eswitch\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e§ 6.5 stmt.iter\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eiteration-statement:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e) statement\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003edo\u003c/code\u003e\u003c/strong\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\u003cstrong\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e) ;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003efor\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003efor-init-statement condition\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e;\u003c/code\u003e\u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003efor\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003efor-range-declaration\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e:\u003c/code\u003e\u003cem\u003e\u003ccode\u003efor-range-initializer\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c17\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c17\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++17\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e§ 9.4 stmt.select\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eselection-statement:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eif constexpr\u003c/code\u003e\u003c/strong\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003einit-statement\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eif constexpr\u003c/code\u003e\u003c/strong\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003einit-statement\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e\u003c/code\u003e\u003cstrong\u003e\u003ccode\u003eelse\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003eswitch\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003einit-statement\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e§ 9.5 stmt.iter\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eiteration-statement:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e) statement\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003edo\u003c/code\u003e\u003c/strong\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\u003cstrong\u003e\u003ccode\u003ewhile\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e) ;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003efor\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003einit-statement condition\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e;\u003c/code\u003e\u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ccode\u003efor\u003c/code\u003e\u003c/strong\u003e\u003ccode\u003e(\u003c/code\u003e\u003cem\u003e\u003ccode\u003efor-range-declaration\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e:\u003c/code\u003e\u003cem\u003e\u003ccode\u003efor-range-initializer\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\u003cem\u003e\u003ccode\u003estatement\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"conditionとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#condition%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003econdition\u003c/code\u003eとは\u003c/h1\u003e\n\n\u003cp\u003eどうも問題となっているのは\u003ccode\u003econdition\u003c/code\u003eのようだ。こいつは何者か？\u003c/p\u003e\n\n\u003cp\u003eC++14までとC++17で書き方は変わっているが言っていることは同じだ。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e\u003ccode\u003eattribute-specifier-seq\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003cem\u003e\u003ccode\u003edecl-specifier-seq declarator brace-or-equal-initializer\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eってのは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eFILE\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003efp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sample.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"rb\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//変数fpがこのスコープで有効\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eみたいなやつだ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c14まで-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c14%E3%81%BE%E3%81%A7-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++14まで\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e§ 6.4 stmt.select\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003econdition:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eattribute-specifier-seq\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003cem\u003e\u003ccode\u003e\u003c/code\u003e\u003ccode\u003edecl-specifier-seq declarator\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e=\u003c/code\u003e\u003cem\u003e\u003ccode\u003einitializer-clause\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eattribute-specifier-seq\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003cem\u003e\u003ccode\u003e\u003c/code\u003e\u003ccode\u003edecl-specifier-seq declarator braced-init-list\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c17-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c17-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++17\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e§ 9 stmt.stmt\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003econdition:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003eattribute-specifier-seq\u003c/code\u003e\u003c/em\u003e\u003csub\u003e\u003cem\u003e\u003ccode\u003eopt\u003c/code\u003e\u003c/em\u003e\u003c/sub\u003e\u003cem\u003e\u003ccode\u003edecl-specifier-seq declarator brace-or-equal-initializer\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e§ 11.6 dcl.init\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003e\u003ccode\u003ebrace-or-equal-initializer:\u003c/code\u003e\u003c/em\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e=\u003c/code\u003e\u003cem\u003e\u003ccode\u003einitializer-clause\u003c/code\u003e\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cem\u003e\u003ccode\u003ebraced-init-list\u003c/code\u003e\u003c/em\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"特殊なcondition--contextually-converted-to-bool\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%89%B9%E6%AE%8A%E3%81%AAcondition--contextually-converted-to-bool\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e特殊な\u003ccode\u003econdition\u003c/code\u003e = \u003ccode\u003econtextually converted to bool\u003c/code\u003e\n\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003econdition\u003c/code\u003eとはようは\u003ccode\u003eexpression\u003c/code\u003e(式)ないし初期化宣言文だとわかったが、どんな\u003ccode\u003eexpression\u003c/code\u003eや初期化宣言文でもいいかというとそういうわけでもない。\u003ccode\u003eswitch\u003c/code\u003e文以外の\u003ccode\u003econdition\u003c/code\u003eは\u003ccode\u003econtextually converted to bool\u003c/code\u003e(文脈上boolに変換される)という変換がなされる。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e(～C++14)§ 6.4 stmt.select\u003cbr\u003e\n(C++17)§ 9 stmt.stmt\u003c/p\u003e\n\n\u003cp\u003e4 \u003cstrong\u003eThe value of a \u003cem\u003econdition\u003c/em\u003e that is an initialized declaration in a statement other than a \u003ccode\u003eswitch\u003c/code\u003e statement is the value of the declared variable contextually converted to \u003ccode\u003ebool\u003c/code\u003e\u003c/strong\u003e (Clause 7). \u003cstrong\u003eIf that conversion is ill-formed, the program is ill-formed.\u003c/strong\u003e The value of a \u003cem\u003econdition\u003c/em\u003e that is an initialized declaration in a \u003ccode\u003eswitch\u003c/code\u003e statement is the value of the declared variable if it has integral or enumeration type, or of that variable implicitly converted to integral or enumeration type otherwise. \u003cstrong\u003eThe value of a \u003cem\u003econdition\u003c/em\u003e that is an expression is the value of the expression, contextually converted to \u003ccode\u003ebool\u003c/code\u003e for statements other than \u003ccode\u003eswitch\u003c/code\u003e; if that conversion is ill-formed, the program is ill-formed.\u003c/strong\u003e The value of the \u003cem\u003econdition\u003c/em\u003e will be referred to as simply “the condition” where the usage is unambiguous.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ccode\u003econtextually converted to bool\u003c/code\u003eという変換が合法かは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eという式が合法かどうかで判断される。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e(～C++14)§ 4 conv\u003cbr\u003e\n(C++17)§ 7 conv\u003c/p\u003e\n\n\u003cp\u003eCertain language constructs require that an expression be converted to a Boolean value. An expression \u003ccode\u003ee\u003c/code\u003e appearing in such a context is said to be \u003cem\u003econtextually converted to \u003ccode\u003ebool\u003c/code\u003e\u003c/em\u003e and is well-formed if and only if the declaration \u003ccode\u003ebool t(e);\u003c/code\u003e is well-formed, for some invented temporary variable \u003ccode\u003et\u003c/code\u003e (11.6).\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"元記事の誤解\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%83%E8%A8%98%E4%BA%8B%E3%81%AE%E8%AA%A4%E8%A7%A3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e元記事の誤解\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"contextually-converted-to-bool\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#contextually-converted-to-bool\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003econtextually converted to bool\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eさて、元記事の誤解が見えてきた。次のような例を見てみよう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eexplicit\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is not zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/WkKoIWNj2YSm03Iv\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/WkKoIWNj2YSm03Iv\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e元記事の主張が正しければ\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eexplicit\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is not zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/cP2Ll1e7rh7SJCNe\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/cP2Ll1e7rh7SJCNe\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこう書き換えてもいいはずだが、これはコンパイルエラーだ。\u003ccode\u003ebool\u003c/code\u003e型変数への=初期化文は\u003cbr\u003e\n\u003ccode\u003econtextually converted to bool\u003c/code\u003eという変換が行われる文脈ではないからだ。\u003c/p\u003e\n\n\u003cp\u003e元記事の言いたかったことを表すコードは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003eexplicit\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is not zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/HTpOZMzZweYZlQYo\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/HTpOZMzZweYZlQYo\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこうあるべきだった。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"そもそもexpression以外もかける\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82expression%E4%BB%A5%E5%A4%96%E3%82%82%E3%81%8B%E3%81%91%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eそもそも\u003ccode\u003eexpression\u003c/code\u003e以外もかける\u003c/h2\u003e\n\n\u003cp\u003eまあ\u003ccode\u003econtextually converted to bool\u003c/code\u003eという変換が起こったときに合法な\u003ccode\u003eexpression\u003c/code\u003eという意味で\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと書くのはまだいいとして、そもそもわりとはじめに書いたように\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eFILE\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003efp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sample.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"rb\"\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//変数fpがこのスコープで有効\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eexpression\u003c/code\u003e以外も書ける。これを無視するのはどうなんだろうか。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpplover.blogspot.jp/2015/09/ccontextually-converted-to-bool.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++の規格におけるcontextually converted to boolという用語について\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 元ネタ\n\n\u003eif文の誤解 - Qiita\n\u003ehttp://qiita.com/Ratty27/items/c142412bc6114e2f5c4c\n\nという記事が先日Qiitaに投稿された。この記事には誤解がある。C++erに限定して話を進めよう。C++に限定しない誤解もあるがすでにコメントで指摘されているのでここでは触れない。\n\n# 「if文が要求するのはbool型の値である」という誤解\n\n\u003e例えば C++ なら、\n\u003e\n```cpp\n  if( 条件式 ) {}\n```\n\n\u003eというように考えていませんか？　これは間違いで、実際には\n\n\u003e\n```cpp\n  if( bool ) {}\n```\n\n\u003eです。\n\u003e\n\u003eですので、if 文には true か false のどちらかを与える、というのが基本的な考え方です。\n\u003e\n\u003eそして、if 文は引数としての bool 値が true の時に、{} 内の処理を実行する、という構文なのです\n\u003e\n\u003e---\n\u003eですから、例えば\n\u003e\n```cpp\nif( a == 0 ) {}\n```\n\n\u003eこれは次のように書き換えることができます。\n\n\u003e\n```cpp\nbool is_zero = (a == 0);\nif( is_zero ) {}\n```\n\n元記事によればif文が要求するのはbool型の値であり、条件式ではない、と主張しており、\n\n```cpp\nif( a == 0 ) {}\n```\n\n```cpp\nbool is_zero = (a == 0);\nif( is_zero ) {}\n```\n\nが等価だと主張している。ところがこれはそうではない。\n\n# C++11/C++14/C++17のif/switch/while/for文を解剖する\n\nまずは規格書をあたって見る必要がありそうだ。ところでC++17でこの辺の文法に変化があったのでついでに触れておく。というのはcpprefjpのその辺の解説がまだ中途半端だからだ、[私が書いていないから(ぇ](https://github.com/cpprefjp/site/issues/415)。まあ変わったと言っても、`if constexpr`文の導入とif/switch文への初期化文の導入だけなので大差はないのだが。\n\n## C++14まで\n\n\u003e§ 6.4 stmt.select \n\u003e\n\u003e- *`selection-statement:`*\n\u003e  - **`if`**` ( `*`condition`*` ) `*`statement`*\n\u003e  - **`if`**` ( `*`condition`*` ) `*`statement`*` `**`else`**` `*`statement`*\n\u003e  - **`switch`**` ( `*`condition`*` ) `*`statement`*\n\u003e\n\u003e§ 6.5 stmt.iter\n\u003e\n\u003e- *`iteration-statement:`*\n\u003e  - **`while`**` ( `*`condition`*` ) statement`\n\u003e  - **`do`***` statement `***`while`**` ( `*`expression`*` ) ;`\n\u003e  - **`for`**` ( `*`for-init-statement condition`*\u003csub\u003e*`opt`*\u003c/sub\u003e`; `*`expression`*\u003csub\u003e*`opt`*\u003c/sub\u003e`) `*`statement`*\n\u003e  - **`for`**` ( `*`for-range-declaration`*` : `*`for-range-initializer`*` ) `*`statement`*\n\n\n## C++17\n\n\u003e§ 9.4 stmt.select\n\u003e\n\u003e- *`selection-statement:`*\n\u003e  - **`if constexpr`**\u003csub\u003e*`opt`*\u003c/sub\u003e` ( `*`init-statement`*\u003csub\u003e*`opt`*\u003c/sub\u003e` `*`condition`*` ) `*`statement`*\n\u003e  - **`if constexpr`**\u003csub\u003e*`opt`*\u003c/sub\u003e` ( `*`init-statement`*\u003csub\u003e*`opt`*\u003c/sub\u003e` `*`condition`*` ) `*`statement`*` `**`else`**` `*`statement`*\n\u003e  - **`switch`**` ( `*`init-statement`*\u003csub\u003e*`opt`*\u003c/sub\u003e` `*`condition`*` ) `*`statement`*\n\u003e\n\u003e§ 9.5 stmt.iter\n\u003e\n\u003e- *`iteration-statement:`*\n\u003e  - **`while`**` ( `*`condition`*` ) statement`\n\u003e  - **`do`***` statement `***`while`**` ( `*`expression`*` ) ;`\n\u003e  - **`for`**` ( `*`init-statement condition`*\u003csub\u003e*`opt`*\u003c/sub\u003e`; `*`expression`*\u003csub\u003e*`opt`*\u003c/sub\u003e`) `*`statement`*\n\u003e  - **`for`**` ( `*`for-range-declaration`*` : `*`for-range-initializer`*` ) `*`statement`*\n\n# `condition`とは\n\nどうも問題となっているのは`condition`のようだ。こいつは何者か？\n\nC++14までとC++17で書き方は変わっているが言っていることは同じだ。\n\n\u003e*`attribute-specifier-seq`*\u003csub\u003e*`opt`*\u003c/sub\u003e*` decl-specifier-seq declarator brace-or-equal-initializer`*\n\nってのは\n\n```cpp\nif(FILE* fp = fopen(\"sample.txt\", \"rb\")) {\n  //変数fpがこのスコープで有効\n}\n```\n\nみたいなやつだ。\n\n## C++14まで\n\n\u003e§ 6.4 stmt.select\n\u003e\n\u003e- *`condition:`*\n\u003e  - *`expression`*\n\u003e  - *`attribute-specifier-seq`*\u003csub\u003e*`opt`*\u003c/sub\u003e*` ``decl-specifier-seq declarator `*`=`*` initializer-clause`*\n\u003e  - *`attribute-specifier-seq`*\u003csub\u003e*`opt`*\u003c/sub\u003e*` ``decl-specifier-seq declarator braced-init-list`*\n\n## C++17\n\n\u003e§ 9 stmt.stmt\n\u003e\n\u003e- *`condition:`*\n\u003e  - *`expression`*\n\u003e  - *`attribute-specifier-seq`*\u003csub\u003e*`opt`*\u003c/sub\u003e*` decl-specifier-seq declarator brace-or-equal-initializer`*\n\u003e\n\u003e§ 11.6 dcl.init\n\u003e\n\u003e- *`brace-or-equal-initializer:`*\n\u003e  - `= `*`initializer-clause`*\n\u003e  - *`braced-init-list`*\n\n# 特殊な`condition` = `contextually converted to bool`\n\n`condition`とはようは`expression`(式)ないし初期化宣言文だとわかったが、どんな`expression`や初期化宣言文でもいいかというとそういうわけでもない。`switch`文以外の`condition`は`contextually converted to bool`(文脈上boolに変換される)という変換がなされる。\n\n\u003e(～C++14)§ 6.4 stmt.select\n\u003e(C++17)§ 9 stmt.stmt\n\u003e\n\u003e4 **The value of a *condition* that is an initialized declaration in a statement other than a `switch` statement is the value of the declared variable contextually converted to `bool`** (Clause 7). **If that conversion is ill-formed, the program is ill-formed.** The value of a *condition* that is an initialized declaration in a `switch` statement is the value of the declared variable if it has integral or enumeration type, or of that variable implicitly converted to integral or enumeration type otherwise. **The value of a *condition* that is an expression is the value of the expression, contextually converted to `bool` for statements other than `switch`; if that conversion is ill-formed, the program is ill-formed.** The value of the *condition* will be referred to as simply “the condition” where the usage is unambiguous.\n\n`contextually converted to bool`という変換が合法かは\n\n```cpp\nbool t(e) ;\n```\n\nという式が合法かどうかで判断される。\n\n\u003e(～C++14)§ 4 conv\n\u003e(C++17)§ 7 conv\n\u003e\n\u003eCertain language constructs require that an expression be converted to a Boolean value. An expression `e` appearing in such a context is said to be *contextually converted to `bool`* and is well-formed if and only if the declaration `bool t(e);` is well-formed, for some invented temporary variable `t` (11.6).\n\n# 元記事の誤解\n\n## `contextually converted to bool`\nさて、元記事の誤解が見えてきた。次のような例を見てみよう。\n\n```cpp\n#include \u003ciostream\u003e\nstruct Hoge{\n    int n;\n    constexpr explicit operator bool() const { return 0 != this-\u003en; }\n};\nint main()\n{\n    constexpr Hoge hoge = {};\n    if (hoge){\n        std::cout \u003c\u003c \"is not zero\" \u003c\u003c std::endl;\n    }\n    else {\n        std::cout \u003c\u003c \"is zero\" \u003c\u003c std::endl;\n    }\n}\n```\n\nhttps://wandbox.org/permlink/WkKoIWNj2YSm03Iv\n\n元記事の主張が正しければ\n\n```cpp\n#include \u003ciostream\u003e\nstruct Hoge{\n    int n;\n    constexpr explicit operator bool() const { return 0 != this-\u003en; }\n};\nint main()\n{\n    constexpr Hoge hoge = {};\n    bool b = (hoge == 0);\n    if (b){\n        std::cout \u003c\u003c \"is not zero\" \u003c\u003c std::endl;\n    }\n    else {\n        std::cout \u003c\u003c \"is zero\" \u003c\u003c std::endl;\n    }\n}\n```\n\nhttps://wandbox.org/permlink/cP2Ll1e7rh7SJCNe\n\nこう書き換えてもいいはずだが、これはコンパイルエラーだ。`bool`型変数への=初期化文は\n`contextually converted to bool`という変換が行われる文脈ではないからだ。\n\n元記事の言いたかったことを表すコードは\n\n```cpp\n#include \u003ciostream\u003e\nstruct Hoge{\n    int n;\n    constexpr explicit operator bool() const { return 0 != this-\u003en; }\n};\nint main()\n{\n    constexpr Hoge hoge = {};\n    bool b(hoge);\n    if (b){\n        std::cout \u003c\u003c \"is not zero\" \u003c\u003c std::endl;\n    }\n    else {\n        std::cout \u003c\u003c \"is zero\" \u003c\u003c std::endl;\n    }\n}\n```\n\nhttps://wandbox.org/permlink/HTpOZMzZweYZlQYo\n\nこうあるべきだった。\n\n## そもそも`expression`以外もかける\n\nまあ`contextually converted to bool`という変換が起こったときに合法な`expression`という意味で\n\n\u003e\n```cpp\nif( bool ) {}\n```\n\nと書くのはまだいいとして、そもそもわりとはじめに書いたように\n\n```cpp\nif(FILE* fp = fopen(\"sample.txt\", \"rb\")) {\n  //変数fpがこのスコープで有効\n}\n```\n\n`expression`以外も書ける。これを無視するのはどうなんだろうか。\n\n# 参考\n\n- [本の虫: C++の規格におけるcontextually converted to boolという用語について](\nhttps://cpplover.blogspot.jp/2015/09/ccontextually-converted-to-bool.html)\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":2,"created_at":"2017-07-16T00:09:18+09:00","group":null,"id":"cbc9d6b35b1bcbecda6f","likes_count":27,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C++17","versions":[]},{"name":"C++規格書リーディング","versions":[]}],"title":"「if文の誤解」のC++における誤解","updated_at":"2019-04-03T12:18:57+09:00","url":"https://qiita.com/yumetodo/items/cbc9d6b35b1bcbecda6f","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"wandboxとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#wandbox%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWandboxとは\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eオンラインコード実行環境です。\u003c/p\u003e\n\n\u003cp\u003e以前\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/ef24708900b0535aa28c\" id=\"reference-1d4c55c6af089a39a453\"\u003e君はまだWandboxの真の実力を知らない～C++er目線で～\u003c/a\u003e\u003cbr\u003e\nでガッツリ触れたので見てください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ユーザー認証が来た\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E8%AA%8D%E8%A8%BC%E3%81%8C%E6%9D%A5%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eユーザー認証が来た\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eWandbox に GitHub 認証を入れました。認証した状態で Share したコードの一覧を、後で読み返すことができます。UIをもうちょい綺麗なのに直したりタイトル付けたりAPI用意したりといった機能は後で頑張る予定。 \u003ca href=\"https://t.co/yXejP6yzMj\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/yXejP6yzMj\u003c/a\u003e\u003c/p\u003e— めるぽん(🐾) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/880823265387659265\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月30日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"/melpon\" class=\"user-mention js-hovercard\" title=\"melpon\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"melpon\"\u003e@melpon\u003c/a\u003e氏のこのツイートを見てこの記事を書くことに決めた。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"使い方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使い方\u003c/h1\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"sign-in\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#sign-in\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSign in\u003c/h1\u003e\n\n\u003cp\u003e前提としてGithubのアカウントが必要である。まあQiita読んでいる人なら持っているような気がするが。\u003c/p\u003e\n\n\u003cp\u003eまずはSign inボタンを押す。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F5dbdc0e0-c4ca-79c6-99a2-e4ef3d6ff507.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e67c68aa2cfcc739cbf2188f62631647\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F5dbdc0e0-c4ca-79c6-99a2-e4ef3d6ff507.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e67c68aa2cfcc739cbf2188f62631647\" alt=\"Sign in PC\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/5dbdc0e0-c4ca-79c6-99a2-e4ef3d6ff507.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F5dbdc0e0-c4ca-79c6-99a2-e4ef3d6ff507.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=2f8af98605bbf0ebd83690ae430d7ad9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8ed3399f-5b49-fca0-d60a-ddb32dbeb8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d7e5fb1ac259b868cdad24bad6c2541f\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8ed3399f-5b49-fca0-d60a-ddb32dbeb8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d7e5fb1ac259b868cdad24bad6c2541f\" alt=\"Sign in mobile\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/8ed3399f-5b49-fca0-d60a-ddb32dbeb8fc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8ed3399f-5b49-fca0-d60a-ddb32dbeb8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=efc5759d7f1d63b8715075574cba7533 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e次にGithubにまだログインしていない場合はログインする。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F26800e0b-5883-40c4-8bae-d7a15c699eb7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=80da5b38e9942946d0e5c5df7996a6df\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F26800e0b-5883-40c4-8bae-d7a15c699eb7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=80da5b38e9942946d0e5c5df7996a6df\" alt=\"Github login\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/26800e0b-5883-40c4-8bae-d7a15c699eb7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F26800e0b-5883-40c4-8bae-d7a15c699eb7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d05da057b822a4b5df3499a233e96706 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eするとOAuthの権限確認画面が来る。\u003ccode\u003eAuthorize melpon\u003c/code\u003eをクリックする。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F08d20c60-2275-5e88-005b-65bd698a7280.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e210d78b513e162690b2463ce04b897e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F08d20c60-2275-5e88-005b-65bd698a7280.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e210d78b513e162690b2463ce04b897e\" alt=\"OAuth\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/08d20c60-2275-5e88-005b-65bd698a7280.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F08d20c60-2275-5e88-005b-65bd698a7280.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d9d4afaeae884b11ed1c918b9da22a62 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eダークな暗黒さを感じる( #とは )UIになる\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ff9957db3-16fb-d9ea-f029-2d373c6ac3ea.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=75e3d2f80ac74956576ac939a8677a43\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ff9957db3-16fb-d9ea-f029-2d373c6ac3ea.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=75e3d2f80ac74956576ac939a8677a43\" alt=\"Dark UI\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/f9957db3-16fb-d9ea-f029-2d373c6ac3ea.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ff9957db3-16fb-d9ea-f029-2d373c6ac3ea.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=0e700102552cced06fdf6e2a51474493 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"できること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eできること\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コード公開機能が微妙に変化する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E5%85%AC%E9%96%8B%E6%A9%9F%E8%83%BD%E3%81%8C%E5%BE%AE%E5%A6%99%E3%81%AB%E5%A4%89%E5%8C%96%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコード公開機能が微妙に変化する。\u003c/h2\u003e\n\n\u003cp\u003eRunした時にあった\u003ccode\u003eShare\u003c/code\u003e ボタン(旧 \u003ccode\u003eShare This Code\u003c/code\u003eボタン)がSign inしていると\u003ccode\u003eShare by [user icon]\u003c/code\u003eになります。\u003c/p\u003e\n\n\u003cp\u003eかつて\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2e0b2c0e-a07a-1f90-ce2c-d5fa941b05a5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1a9ce3506e6b4fb2d5e9cf791be54edc\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2e0b2c0e-a07a-1f90-ce2c-d5fa941b05a5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1a9ce3506e6b4fb2d5e9cf791be54edc\" alt=\"old\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/2e0b2c0e-a07a-1f90-ce2c-d5fa941b05a5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2e0b2c0e-a07a-1f90-ce2c-d5fa941b05a5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=377758eb0910cd103228ce648048cf76 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e現在(Sign inしていない場合)\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F44418d34-0bfb-8b51-fe0b-5391953730cc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=63123df6ef6476f6d609152ce4acd7d5\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F44418d34-0bfb-8b51-fe0b-5391953730cc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=63123df6ef6476f6d609152ce4acd7d5\" alt=\"no Sign in\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/44418d34-0bfb-8b51-fe0b-5391953730cc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F44418d34-0bfb-8b51-fe0b-5391953730cc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bd382841b57a06fa571fb532daf67a8c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e現在(Sign inしてる場合)\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9fe6bc48-0323-d774-df3d-d34e4d6b857a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7fd7b4f08922a539cefae95d8e508051\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9fe6bc48-0323-d774-df3d-d34e4d6b857a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7fd7b4f08922a539cefae95d8e508051\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/9fe6bc48-0323-d774-df3d-d34e4d6b857a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9fe6bc48-0323-d774-df3d-d34e4d6b857a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=32dd5908b1c5671b51037a2adec7039d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コード一覧が見られる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%83%89%E4%B8%80%E8%A6%A7%E3%81%8C%E8%A6%8B%E3%82%89%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコード一覧が見られる\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ehttps://wandbox.org/user/:username\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eにアクセスすると、\u003cstrong\u003eSign inしてるときに\u003ccode\u003eShare by [user icon]\u003c/code\u003eを押したコードがリストアップされます\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e例えば私の場合は\u003cbr\u003e\n\u003ca href=\"https://wandbox.org/user/yumetodo\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/user/yumetodo\u003c/a\u003e\u003cbr\u003e\nになるわけですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"あとがき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%82%E3%81%A8%E3%81%8C%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eあとがき\u003c/h1\u003e\n\n\u003cp\u003eまだUIはいじるみたいなことを言っているので変わってたら臨機応変に対応してください。\u003c/p\u003e\n\n\u003cp\u003eAPIはまだっぽいので、API来たら追記します。\u003c/p\u003e\n\n\u003cp\u003eああ、あとWandboxでは\u003ca href=\"https://gist.github.com/melpon/8f5d7a8e991ed466d09cf887bd8d92ce\" rel=\"nofollow noopener\" target=\"_blank\"\u003e企業・個人スポンサーを引き続き募集しているらしいです\u003c/a\u003e、ステーキ駆動開発ですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# Wandboxとは\n\nhttps://wandbox.org/\n\nオンラインコード実行環境です。\n\n以前\n[君はまだWandboxの真の実力を知らない～C++er目線で～](http://qiita.com/yumetodo/items/ef24708900b0535aa28c)\nでガッツリ触れたので見てください。\n\n# ユーザー認証が来た\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eWandbox に GitHub 認証を入れました。認証した状態で Share したコードの一覧を、後で読み返すことができます。UIをもうちょい綺麗なのに直したりタイトル付けたりAPI用意したりといった機能は後で頑張る予定。 \u003ca href=\"https://t.co/yXejP6yzMj\"\u003ehttps://t.co/yXejP6yzMj\u003c/a\u003e\u003c/p\u003e\u0026mdash; めるぽん(🐾) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/880823265387659265\"\u003e2017年6月30日\u003c/a\u003e\u003c/blockquote\u003e\n\n@melpon氏のこのツイートを見てこの記事を書くことに決めた。\n\n# 使い方\n\n# Sign in\n\n前提としてGithubのアカウントが必要である。まあQiita読んでいる人なら持っているような気がするが。\n\nまずはSign inボタンを押す。\n\n![Sign in PC](https://qiita-image-store.s3.amazonaws.com/0/94177/5dbdc0e0-c4ca-79c6-99a2-e4ef3d6ff507.png)\n![Sign in mobile](https://qiita-image-store.s3.amazonaws.com/0/94177/8ed3399f-5b49-fca0-d60a-ddb32dbeb8fc.png)\n\n次にGithubにまだログインしていない場合はログインする。\n\n![Github login](https://qiita-image-store.s3.amazonaws.com/0/94177/26800e0b-5883-40c4-8bae-d7a15c699eb7.png)\n\nするとOAuthの権限確認画面が来る。`Authorize melpon`をクリックする。\n\n![OAuth](https://qiita-image-store.s3.amazonaws.com/0/94177/08d20c60-2275-5e88-005b-65bd698a7280.png)\n\nダークな暗黒さを感じる( #とは )UIになる\n\n![Dark UI](https://qiita-image-store.s3.amazonaws.com/0/94177/f9957db3-16fb-d9ea-f029-2d373c6ac3ea.png)\n\n\n# できること\n\n## コード公開機能が微妙に変化する。\n\nRunした時にあった`Share` ボタン(旧 `Share This Code`ボタン)がSign inしていると`Share by [user icon]`になります。\n\nかつて\n![old](https://qiita-image-store.s3.amazonaws.com/0/94177/2e0b2c0e-a07a-1f90-ce2c-d5fa941b05a5.png)\n\n現在(Sign inしていない場合)\n![no Sign in](https://qiita-image-store.s3.amazonaws.com/0/94177/44418d34-0bfb-8b51-fe0b-5391953730cc.png)\n\n現在(Sign inしてる場合)\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/9fe6bc48-0323-d774-df3d-d34e4d6b857a.png)\n\n## コード一覧が見られる\n\n`https://wandbox.org/user/:username`\n\nにアクセスすると、**Sign inしてるときに`Share by [user icon]`を押したコードがリストアップされます**。\n\n例えば私の場合は\nhttps://wandbox.org/user/yumetodo\nになるわけですね。\n\n# あとがき\n\nまだUIはいじるみたいなことを言っているので変わってたら臨機応変に対応してください。\n\nAPIはまだっぽいので、API来たら追記します。\n\nああ、あとWandboxでは[企業・個人スポンサーを引き続き募集しているらしいです](https://gist.github.com/melpon/8f5d7a8e991ed466d09cf887bd8d92ce)、ステーキ駆動開発ですね。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-07-04T03:45:43+09:00","group":null,"id":"76277399df7057f6d4d5","likes_count":5,"private":false,"reactions_count":0,"tags":[{"name":"Wandbox","versions":[]}],"title":"WandboxにGithubを利用したユーザー認証が来た","updated_at":"2019-04-03T12:21:53+09:00","url":"https://qiita.com/yumetodo/items/76277399df7057f6d4d5","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"読者がまずやるべきこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%AD%E8%80%85%E3%81%8C%E3%81%BE%E3%81%9A%E3%82%84%E3%82%8B%E3%81%B9%E3%81%8D%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e読者がまずやるべきこと\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003e「右辺値」「左辺値」という言葉を忘れる\u003c/strong\u003e。それらは言葉そのものが間違いだ\u003c/li\u003e\n\u003cli\u003eもし読者であるあなたがC++の規格書を読んだことがないならば、\u003ccode\u003evalue categories\u003c/code\u003e, \u003ccode\u003eprvalue\u003c/code\u003e, \u003ccode\u003exvalue\u003c/code\u003eという言葉を忘れる。コードを書く上でひたすら有害である。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"lvalueとrvalue\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#lvalue%E3%81%A8rvalue\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003elvalueとrvalue\u003c/h1\u003e\n\n\u003cp\u003eそう、規格書ではlvalueとrvalueとなっている。「右辺値」「左辺値」というのは\u003cstrong\u003e誤訳だ\u003c/strong\u003e(正確には時代遅れ)、もう一度言うが直ちに脳内から消去するべきである。\u003c/p\u003e\n\n\u003cp\u003elvalueとrvalueとは\u003cstrong\u003eいずれもオブジェクトだ\u003c/strong\u003e。オブジェクトという言葉が聞き慣れないなら、初心者向けのC言語本でみかける、箱、とか容器とか入れ物でもいい。\u003c/p\u003e\n\n\u003cp\u003eでは何が違うのか。誤解を恐れずにまとめてみよう。\u003c/p\u003e\n\n\u003cp\u003elvalue := 名前のあるオブジェクト\u003c/p\u003e\n\n\u003cp\u003ervalue := \u003cstrong\u003e名前のない\u003c/strong\u003eオブジェクト\u003c/p\u003e\n\n\u003cp\u003eもう一度言おう。\u003cstrong\u003elvalueとrvalueの違いは名前があるかないか\u003c/strong\u003e、ただそれだけだ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rvalueの例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue%E3%81%AE%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalueの例\u003c/h2\u003e\n\n\u003cp\u003e名前がないならrvalueだ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//以下rvalue\u003c/span\u003e\n  \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"mf\"\u003e2.4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/yDxh2zztEh5IUgxO\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/yDxh2zztEh5IUgxO\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"lvalueの例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#lvalue%E3%81%AE%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003elvalueの例\u003c/h2\u003e\n\n\u003cp\u003e名前、もっというと変数名がついていればlvalueだ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//lvalue\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//lvalue\u003c/span\u003e\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//lvalue\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//lvalue\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//lvalue\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/HauFIjDbjyMYstGR\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/HauFIjDbjyMYstGR\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"lvalueとrvalueの寿命life-time\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#lvalue%E3%81%A8rvalue%E3%81%AE%E5%AF%BF%E5%91%BDlife-time\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003elvalueとrvalueの寿命(life time)\u003c/h1\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e種類\u003c/th\u003e\n\u003cth\u003e寿命\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003estatic storage(グローバル変数や関数内static変数)\u003c/td\u003e\n\u003ctd\u003eプログラムの終了まで\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e自動変数(いわゆるstack変数)\u003c/td\u003e\n\u003ctd\u003eスコープの終わりまで\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ervalue\u003c/td\u003e\n\u003ctd\u003e式の終わりまで\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//プログラムの終了まで\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//プログラムの終了まで\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//プログラムの終了まで\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//スコープの終わりまで\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//式の終わりまで\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/5naiUqrVCMz2Ra1t\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/5naiUqrVCMz2Ra1t\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rvalueの寿命が延長されるとき\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue%E3%81%AE%E5%AF%BF%E5%91%BD%E3%81%8C%E5%BB%B6%E9%95%B7%E3%81%95%E3%82%8C%E3%82%8B%E3%81%A8%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalueの寿命が延長されるとき\u003c/h2\u003e\n\n\u003cp\u003eものすごくわかりにくいし混乱しやすいからいっそ忘れてくれてもいい、と言いたい。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/UFvgqOAtjMBCZFbT\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/UFvgqOAtjMBCZFbT\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ef()\u003c/code\u003eの評価結果は明らかにrvalueだ。これを参照型変数にひも付けている。このときもし\u003ccode\u003ef()\u003c/code\u003eが返すrvalueが式の終わり、つまり\u003cstrong\u003eひも付けた直後に寿命が尽きてしまうと仮定すると、参照型変数は亜空間の別名ということになり\u003c/strong\u003e、NULL referenceとかいうありえない状態になってしまう。\u003cbr\u003e\nなのでそんなことはなくちゃんと\u003cstrong\u003eひも付けた参照型変数の寿命に等しい\u003c/strong\u003e、という規定がある。\u003c/p\u003e\n\n\u003cp\u003eでここまでならわかりやすいのだが、これは\u003cstrong\u003eすべてのrvalueについて言えるわけではない\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003eで、結論としては、\u003cstrong\u003e関数の引数以外でrvalue referenceを使うなということです。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/fujinochan/items/4dc0e07b05af87c53241\" id=\"reference-815ff8114489e6e410f2\"\u003e右辺値参照型変数の参照先を解放してはいけない\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"rvalueならば所有権を持たないという社会的合意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue%E3%81%AA%E3%82%89%E3%81%B0%E6%89%80%E6%9C%89%E6%A8%A9%E3%82%92%E6%8C%81%E3%81%9F%E3%81%AA%E3%81%84%E3%81%A8%E3%81%84%E3%81%86%E7%A4%BE%E4%BC%9A%E7%9A%84%E5%90%88%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalueならば所有権を持たないという社会的合意\u003c/h1\u003e\n\n\u003cp\u003ervalueはchainすることはあるかもしれないが、最終的に変数に代入するか変数を初期化するかのいずれかに用いることが基本的には多い。\u003c/p\u003e\n\n\u003cp\u003eなので\u003cstrong\u003e所有権\u003c/strong\u003eという新たな概念を導入し、\u003cstrong\u003ervalueならば所有権を持たない\u003c/strong\u003eという社会的合意を形成する。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e所有権を持たないならば対象オブジェクトをいかに書き換えようとも文句は言われない\u003c/strong\u003e。つまりここで、rvalue referenceで受け取ったものは自由にいじくり回していい、という社会的合意を行う。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003edisabler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eis_disabled\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eis_disabled\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e//大事な処理\u003c/span\u003e\n      \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"大事な処理が実行されました\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003efriend\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003edisabler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003edisabler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//hそのものはlvalueだがhの実態はrvalue\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//Hoge::foo内の大事な処理が実行されないようにフラグを変更しちゃう\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eis_disabled\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"大事な処理を殺してやった\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003edisabler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"大事な処理は生きています\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//大事な処理は実行される\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 大事な処理が実行されました\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e//hはlvalueなのでvoid disabler(Hoge\u0026amp;\u0026amp;)の方ではなく\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//void disabler(const Hoge\u0026amp;)の方を呼び出す\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edisabler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 大事な処理は生きています\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e//大事な処理は実行される\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 大事な処理が実行されました\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e//rvalue referenceへのキャストの評価結果はrvalueなので\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//void disabler(const Hoge\u0026amp;)の方よりも優先度が高い\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//void disabler(Hoge\u0026amp;\u0026amp;)の方を呼び出す\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edisabler\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 大事な処理を殺してやった\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e//大事な処理は実行されない\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/aLUCw5BprK3EjqAd\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/aLUCw5BprK3EjqAd\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"rvalueならばmoveしてよいという社会的合意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue%E3%81%AA%E3%82%89%E3%81%B0move%E3%81%97%E3%81%A6%E3%82%88%E3%81%84%E3%81%A8%E3%81%84%E3%81%86%E7%A4%BE%E4%BC%9A%E7%9A%84%E5%90%88%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalueならばmoveしてよいという社会的合意\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"move-semanticsとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#move-semantics%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emove semanticsとは\u003c/h2\u003e\n\n\u003cp\u003e動的確保した領域を指すなどしている、ポインタがクラスメンバーにあるとき、この\u003cstrong\u003eポインタを単純にコピーすること\u003c/strong\u003e(新たにメモリー確保してポインタの指す先までcopyしたりはしない)。\u003c/p\u003e\n\n\u003cp\u003eお前のものは俺もの、というジャイアン方式だ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rvalueならばmoveしてよい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue%E3%81%AA%E3%82%89%E3%81%B0move%E3%81%97%E3%81%A6%E3%82%88%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalueならばmoveしてよい\u003c/h2\u003e\n\n\u003cp\u003emoveはいつでも安全なわけではない。ポインタがいつの間にか無効になっていたなんてことが起こるえるので発見困難なバグになる。ではいつならmoveしていいのか？\u003cstrong\u003e所有権を持っていないオブジェクトに対してだ\u003c/strong\u003e。言い換えると、\u003cstrong\u003ervalue referenceに対してはmoveを行っても安全である\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003eなぜか？rvalueならば所有権を持たないという社会的合意があるからだ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;cstring\u0026gt;\n#include \u0026lt;cstddef\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003einferior_string\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy constructor\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"c1\"\u003e//move constructor\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//disable input object's destructor. DO NO FORGEET!!!\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy constructor call\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//move constructor call\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//inferior_string str3 = static_cast\u0026lt;inferior_string\u0026amp;\u0026amp;\u0026gt;(str);//同じ意味\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/Ame2XHIjS0oB0oLW\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/Ame2XHIjS0oB0oLW\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003elvalueの所有権を放棄したと\u003cstrong\u003e偽装する\u003c/strong\u003eにはrvalue referenceにキャストすれば良い。さっきから言っているように、rvalue referenceへのキャスト式の評価結果はrvalueだ。\u003c/p\u003e\n\n\u003cp\u003eしかし\u003ccode\u003estatic_cast\u0026lt;inferior_string\u0026amp;\u0026amp;\u0026gt;(str)\u003c/code\u003eのようなキャストを毎回書くのはめんｄ。プログラマーは怠惰であるべきだ。\u003c/p\u003e\n\n\u003cp\u003eここで先に述べた、rvalue referenceを返す関数の呼び出しの評価結果はrvalueである、という性質を利用する。つまりつぎのようなラッパー関数が書ける。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eしかしmoveしたいすべてのクラスに対してこういうラッパー関数を書いて回るのは馬鹿げている。そこでtemplateの出番だ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eutility_C++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eremove_reference\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eremove_reference\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこういうラッパー関数がSTLには存在する。利用するには\u003ccode\u003e#include \u0026lt;utility\u0026gt;\u003c/code\u003eする必要がある(が大体他のヘッダを読み込むともれなく読み込まれている)\u003c/p\u003e\n\n\u003cp\u003eただし、さっきから言っているように\u003ccode\u003estd::move\u003c/code\u003eはただのキャストなのでもちろんmove semantics以外の目的にも使える。しかし可読性の観点からそうするべきではない。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yohhoy/items/0f44c44090b4a55b5f3c\" id=\"reference-00bcef0d0af42c1a318e\"\u003estd::moveは使用上の注意をよく読み、用法・用量を守って正しくお使い下さい。\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eあとそもそもの話でrvalue referneceを受け取る引数がないものに\u003ccode\u003estd::move\u003c/code\u003eつかって渡すのは意味がない。むしろあかん。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yohhoy/items/2f47d9bc65e0e449b411\" id=\"reference-ec0489961ab3494ec456\"\u003estd::moveはムーブとは限らない\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"lvalueとrvalueの違いは名前があるかないかの例外\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#lvalue%E3%81%A8rvalue%E3%81%AE%E9%81%95%E3%81%84%E3%81%AF%E5%90%8D%E5%89%8D%E3%81%8C%E3%81%82%E3%82%8B%E3%81%8B%E3%81%AA%E3%81%84%E3%81%8B%E3%81%AE%E4%BE%8B%E5%A4%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e「lvalueとrvalueの違いは名前があるかないか」の例外\u003c/h1\u003e\n\n\u003cp\u003eまあ歴史的経緯とか現実的な処理系との兼ね合いとかそもそも説明を簡略化しすぎた弊害というか、流石にこの説明には穴がある。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eInterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//lvalue referenceへのキャスト式の評価結果はlvalue\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003emyclass1\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eInterface\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003emyclass1\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"myclass1\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//arrがlvalueなのでそれのoperator[]の評価結果も\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//lvalue referenceを返す系組み込みoperatorなのでlvalue\u003c/span\u003e\n  \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//lvalue referenceを返す関数の呼び出しの評価結果はlvalue\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//関数型へのrvalue reference型へのキャスト式の評価結果はlvalue\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//文字列リテラルはlvalue\u003c/span\u003e\n  \u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//operator*の評価結果はlvalue\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/qi7OhVkGZAqVQNMm\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/qi7OhVkGZAqVQNMm\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eoperator*\u003c/code\u003e以外にも例には書いていないが、参照を返す組み込みoperator全般も概ね例外となる。\u003c/p\u003e\n\n\u003cp\u003e関数型へのrvalue reference型へのキャスト式とかいういつ使うのか謎なものは忘れるとして、\u003cstrong\u003elvalue referenceは名前の有無にかかわらずlvalueである\u003c/strong\u003eということだろう。\u003c/p\u003e\n\n\u003cp\u003e文字列リテラルはちょっと考えればわかるが、あれは殆どの処理系で実行オブジェクトにそのまま埋め込まれる。つまり実行時には明確にメモリー上に実態がある。文字列リテラルというのはそのメモリーの別名、lvalue referenceだと捉えることもできるだろう。\u003c/p\u003e\n\n\u003cp\u003eしかし正確性を求めて、規格書リーディングをするのは本末転倒だし、名前の有無という圧倒的わかりやすさの前には、このくらいの例外は目をつぶっていいと思う。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"アドレスを取得できるか否かで判別できるのではないか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E5%8F%96%E5%BE%97%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B%E5%90%A6%E3%81%8B%E3%81%A7%E5%88%A4%E5%88%A5%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%AE%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%84%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eアドレスを取得できるか否かで判別できるのではないか\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003elvalueはアドレスを取得できるがrvalueはアドレスを取得できない。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eこれは一見見分ける強力な手段に思える。しかし考えて欲しい。コードを書くときにいちいちアドレス演算子を書いてコンパイルしてみるなんて悠長なことをするだろうか、いいやしない。もっと脳内で簡単に判別できるものが必要だ。やはり名前の有無が一番わかり易いだろう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"rvalueをxvalueとprvalueに分解して理解する必要はあるのか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue%E3%82%92xvalue%E3%81%A8prvalue%E3%81%AB%E5%88%86%E8%A7%A3%E3%81%97%E3%81%A6%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B%E5%BF%85%E8%A6%81%E3%81%AF%E3%81%82%E3%82%8B%E3%81%AE%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalueをxvalueとprvalueに分解して理解する必要はあるのか\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003eない\u003c/strong\u003e。今日限りを持って記憶から抹消するべきだ。\u003c/p\u003e\n\n\u003cp\u003exvalueとprvalueが何かについては\u003cbr\u003e\n\u003ca href=\"http://en.cppreference.com/w/cpp/language/value_category\" rel=\"nofollow noopener\" target=\"_blank\"\u003eValue categories - cppreference.com\u003c/a\u003e\u003cbr\u003e\nによくまとまっている。\u003c/p\u003e\n\n\u003cp\u003ervalueの寿命が延長される条件の理解には必要やろ！という声があるかもしれないが、前述の通り、引数以外にrvalue referenceを使うべきではないので全く持って必要ない。\u003c/p\u003e\n\n\u003cp\u003eなんで理解する必要がないかについては\u003cbr\u003e\n\u003ca href=\"https://togetter.com/li/1123805\" rel=\"nofollow noopener\" target=\"_blank\"\u003elvalueとrvalueとmoveと - Togetterまとめ\u003c/a\u003e\u003cbr\u003e\nを参照して欲しい。コードを書くのに一ミリも寄与しないどころか混乱するだけで、有害であるとはっきりわかる。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003cp\u003elvalueとrvalueの違いは\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e名前があればlvalue、なければrvalue\u003c/li\u003e\n\u003cli\u003eただしlvalue referenceは常にlvalue\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eでとりあえずはいいと思う。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 読者がまずやるべきこと\n\n1. **「右辺値」「左辺値」という言葉を忘れる**。それらは言葉そのものが間違いだ\n2. もし読者であるあなたがC++の規格書を読んだことがないならば、`value categories`, `prvalue`, `xvalue`という言葉を忘れる。コードを書く上でひたすら有害である。\n\n# lvalueとrvalue\n\nそう、規格書ではlvalueとrvalueとなっている。「右辺値」「左辺値」というのは**誤訳だ**(正確には時代遅れ)、もう一度言うが直ちに脳内から消去するべきである。\n\nlvalueとrvalueとは**いずれもオブジェクトだ**。オブジェクトという言葉が聞き慣れないなら、初心者向けのC言語本でみかける、箱、とか容器とか入れ物でもいい。\n\nでは何が違うのか。誤解を恐れずにまとめてみよう。\n\nlvalue := 名前のあるオブジェクト\n\nrvalue := **名前のない**オブジェクト\n\nもう一度言おう。**lvalueとrvalueの違いは名前があるかないか**、ただそれだけだ。\n\n## rvalueの例\n\n名前がないならrvalueだ。\n\n```cpp\nstruct Hoge {};\nint f() { return 3; }\nint\u0026\u0026 g() { return 4; }\nint main() {\n  //以下rvalue\n  3;\n  2.4;\n  f();\n  g();\n  Hoge{};\n}\n```\n\nhttps://wandbox.org/permlink/yDxh2zztEh5IUgxO\n\n## lvalueの例\n\n名前、もっというと変数名がついていればlvalueだ。\n\n```cpp\nint\u0026\u0026 g() { return 4; }\nint a;//lvalue\nstatic double b;//lvalue\nnamespace {\n  char c;//lvalue\n}\nint main() {\n  unsigned int n;//lvalue\n  int\u0026\u0026 n = g();//lvalue\n}\n```\n\nhttps://wandbox.org/permlink/HauFIjDbjyMYstGR\n\n# lvalueとrvalueの寿命(life time)\n\n| 種類                                             | 寿命                 |\n|--------------------------------------------------|----------------------|\n| static storage(グローバル変数や関数内static変数) | プログラムの終了まで |\n| 自動変数(いわゆるstack変数)                      | スコープの終わりまで |\n| rvalue                                           | 式の終わりまで       |\n\n```cpp\nint f() { return 5; }\nint a = 0;//プログラムの終了まで\nstatic double b = 3.2;//プログラムの終了まで\nint main()\n{\n  static char c = 2;//プログラムの終了まで\n  {\n    int n = 0;//スコープの終わりまで\n    f();//式の終わりまで\n  }\n}\n```\n\nhttps://wandbox.org/permlink/5naiUqrVCMz2Ra1t\n\n## rvalueの寿命が延長されるとき\n\nものすごくわかりにくいし混乱しやすいからいっそ忘れてくれてもいい、と言いたい。\n\n```cpp\nint f() { return 3; }\nint main()\n{\n  int\u0026\u0026 n1 = f();\n  const int\u0026 n2 = f();\n}\n```\n\nhttps://wandbox.org/permlink/UFvgqOAtjMBCZFbT\n\n`f()`の評価結果は明らかにrvalueだ。これを参照型変数にひも付けている。このときもし`f()`が返すrvalueが式の終わり、つまり**ひも付けた直後に寿命が尽きてしまうと仮定すると、参照型変数は亜空間の別名ということになり**、NULL referenceとかいうありえない状態になってしまう。\nなのでそんなことはなくちゃんと**ひも付けた参照型変数の寿命に等しい**、という規定がある。\n\nでここまでならわかりやすいのだが、これは**すべてのrvalueについて言えるわけではない**。\n\nで、結論としては、**関数の引数以外でrvalue referenceを使うなということです。**\n\n[右辺値参照型変数の参照先を解放してはいけない](http://qiita.com/fujinochan/items/4dc0e07b05af87c53241)\n\n# rvalueならば所有権を持たないという社会的合意\n\nrvalueはchainすることはあるかもしれないが、最終的に変数に代入するか変数を初期化するかのいずれかに用いることが基本的には多い。\n\nなので**所有権**という新たな概念を導入し、**rvalueならば所有権を持たない**という社会的合意を形成する。\n\n**所有権を持たないならば対象オブジェクトをいかに書き換えようとも文句は言われない**。つまりここで、rvalue referenceで受け取ったものは自由にいじくり回していい、という社会的合意を行う。\n\n```cpp\n#include \u003ciostream\u003e\n\nclass Hoge;\nvoid disabler(Hoge\u0026\u0026 h);\nclass Hoge {\nprivate:\n  bool is_disabled;\npublic:\n  Hoge() = default;\n  void foo()\n  {\n    if(!this-\u003eis_disabled) {\n      //大事な処理\n      std::cout \u003c\u003c \"大事な処理が実行されました\" \u003c\u003c std::endl;\n    }\n  }\n  friend void disabler(Hoge\u0026\u0026 h);\n};\nvoid disabler(Hoge\u0026\u0026 h)\n{\n  //hそのものはlvalueだがhの実態はrvalue\n  //Hoge::foo内の大事な処理が実行されないようにフラグを変更しちゃう\n  h.is_disabled = true;\n  std::cout \u003c\u003c \"大事な処理を殺してやった\" \u003c\u003c std::endl;\n}\nvoid disabler(const Hoge\u0026)\n{\n  std::cout \u003c\u003c \"大事な処理は生きています\" \u003c\u003c std::endl;\n}\nint main()\n{\n  Hoge h = {};\n  //大事な処理は実行される\n  h.foo();// =\u003e 大事な処理が実行されました\n\n  //hはlvalueなのでvoid disabler(Hoge\u0026\u0026)の方ではなく\n  //void disabler(const Hoge\u0026)の方を呼び出す\n  disabler(h);// =\u003e 大事な処理は生きています\n\n  //大事な処理は実行される\n  h.foo();// =\u003e 大事な処理が実行されました\n\n  //rvalue referenceへのキャストの評価結果はrvalueなので\n  //void disabler(const Hoge\u0026)の方よりも優先度が高い\n  //void disabler(Hoge\u0026\u0026)の方を呼び出す\n  disabler(static_cast\u003cHoge\u0026\u0026\u003e(h));// =\u003e 大事な処理を殺してやった\n\n  //大事な処理は実行されない\n  h.foo();\n}\n```\n\nhttps://wandbox.org/permlink/aLUCw5BprK3EjqAd\n\n# rvalueならばmoveしてよいという社会的合意\n\n## move semanticsとは\n\n動的確保した領域を指すなどしている、ポインタがクラスメンバーにあるとき、この**ポインタを単純にコピーすること**(新たにメモリー確保してポインタの指す先までcopyしたりはしない)。\n\nお前のものは俺もの、というジャイアン方式だ。\n\n## rvalueならばmoveしてよい\n\nmoveはいつでも安全なわけではない。ポインタがいつの間にか無効になっていたなんてことが起こるえるので発見困難なバグになる。ではいつならmoveしていいのか？**所有権を持っていないオブジェクトに対してだ**。言い換えると、**rvalue referenceに対してはmoveを行っても安全である**。\n\nなぜか？rvalueならば所有権を持たないという社会的合意があるからだ。\n\n```cpp\n#include \u003ccstring\u003e\n#include \u003ccstddef\u003e\n#include \u003ciostream\u003e\nclass inferior_string\n{\npublic:\n    inferior_string() noexcept : m_s_(nullptr), m_len_(0), m_capacity_(0) {}\n    inferior_string(const char* str)\n    {\n        const std::size_t len = (nullptr == str) ? 0 : std::strlen(str);\n        if(0 == len){\n            this-\u003em_s_ = nullptr;\n            this-\u003em_len_ = this-\u003em_capacity_ = 0;\n        }\n        else{\n            const std::size_t cap = 2 * len;\n            this-\u003em_s_ = new char[cap]();\n            std::memcpy(this-\u003em_s_, str, len);//copy\n\n            this-\u003em_len_ = len;\n            this-\u003em_capacity_ = cap;\n        }\n    }\n    inferior_string(const inferior_string\u0026 o)//copy constructor\n    {\n        if(0 == o.m_len_){\n            this-\u003em_s_ = nullptr;\n            this-\u003em_len_ = this-\u003em_capacity_ = 0;\n        }\n        else{\n            const std::size_t cap = o.m_len_ * 2;\n            this-\u003em_s_ = new char[cap]();\n            std::memcpy(this-\u003em_s_, o.m_s_, o.m_len_);//copy\n            this-\u003em_len_ = o.m_len_;\n            this-\u003em_capacity_ = cap;\n        }\n    }\n    inferior_string(inferior_string\u0026\u0026 o) noexcept\n    : m_s_(o.m_s_), m_len_(o.m_len_), m_capacity_(o.m_capacity_)//move constructor\n    {\n        o.m_s_ = nullptr;//disable input object's destructor. DO NO FORGEET!!!\n    }\n    ~inferior_string()\n    {\n        delete[] this-\u003em_s_;\n    }\n    const char* c_str() const noexcept { return this-\u003em_s_; }\nprivate:\n    char* m_s_;\n    std::size_t m_len_;\n    std::size_t m_capacity_;\n};\nstd::ostream\u0026 operator\u003c\u003c (std::ostream\u0026 os, const inferior_string\u0026 str){\n    os \u003c\u003c str.c_str();\n    return os;\n}\nint main()\n{\n    inferior_string str = \"arikitari\";\n    inferior_string str2 = str;//copy constructor call\n    std::cout \u003c\u003c str \u003c\u003c \", \" \u003c\u003c str2 \u003c\u003c \", \";\n    inferior_string str3 = std::move(str);//move constructor call\n    //inferior_string str3 = static_cast\u003cinferior_string\u0026\u0026\u003e(str);//同じ意味\n    std::cout \u003c\u003c str3 \u003c\u003c std::endl;\n    return 0;\n\n}\n```\n\nhttps://wandbox.org/permlink/Ame2XHIjS0oB0oLW\n\nlvalueの所有権を放棄したと**偽装する**にはrvalue referenceにキャストすれば良い。さっきから言っているように、rvalue referenceへのキャスト式の評価結果はrvalueだ。\n\nしかし`static_cast\u003cinferior_string\u0026\u0026\u003e(str)`のようなキャストを毎回書くのはめんｄ。プログラマーは怠惰であるべきだ。\n\nここで先に述べた、rvalue referenceを返す関数の呼び出しの評価結果はrvalueである、という性質を利用する。つまりつぎのようなラッパー関数が書ける。\n\n```cpp\ninferior_string\u0026\u0026 move(inferior_string\u0026 str)\n{\n  return static_cast\u003cinferior_string\u0026\u0026\u003e(str)\n}\n```\n\nしかしmoveしたいすべてのクラスに対してこういうラッパー関数を書いて回るのは馬鹿げている。そこでtemplateの出番だ。\n\n```cpp:utility_C++14\n#include \u003ctype_traits\u003e\n\nnamespace std {\n\ntemplate \u003cclass T\u003e\nconstexpr typename std::remove_reference\u003cT\u003e::type\u0026\u0026 move(T\u0026\u0026 t)\n{\n  return static_cast\u003cstd::remove_reference\u003cT\u003e::type\u0026\u0026\u003e(t) ;\n}\n\n}\n```\n\nこういうラッパー関数がSTLには存在する。利用するには`#include \u003cutility\u003e`する必要がある(が大体他のヘッダを読み込むともれなく読み込まれている)\n\nただし、さっきから言っているように`std::move`はただのキャストなのでもちろんmove semantics以外の目的にも使える。しかし可読性の観点からそうするべきではない。\n\n[std::moveは使用上の注意をよく読み、用法・用量を守って正しくお使い下さい。](http://qiita.com/yohhoy/items/0f44c44090b4a55b5f3c)\n\nあとそもそもの話でrvalue referneceを受け取る引数がないものに`std::move`つかって渡すのは意味がない。むしろあかん。\n\n[std::moveはムーブとは限らない](http://qiita.com/yohhoy/items/2f47d9bc65e0e449b411)\n\n# 「lvalueとrvalueの違いは名前があるかないか」の例外\n\nまあ歴史的経緯とか現実的な処理系との兼ね合いとかそもそも説明を簡略化しすぎた弊害というか、流石にこの説明には穴がある。\n\n```cpp\n#include \u003ciostream\u003e\n\nint\u0026 f1(int\u0026 n){ return n; }\nvoid f2(int) {}\ntemplate\u003ctypename Base\u003e\nstruct Interface {\n  void print()\n  {\n    //lvalue referenceへのキャスト式の評価結果はlvalue\n    static_cast\u003cBase\u0026\u003e(*this).print();\n  }\n};\nclass myclass1 : Interface\u003cmyclass1\u003e {\npublic:\n    void print(){ std::cout \u003c\u003c \"myclass1\" \u003c\u003c std::endl; }\n};\nint main()\n{\n  int n = 3;\n  int arr[3] = {};\n  //arrがlvalueなのでそれのoperator[]の評価結果も\n  //lvalue referenceを返す系組み込みoperatorなのでlvalue\n  arr[1];\n  //lvalue referenceを返す関数の呼び出しの評価結果はlvalue\n  f1(n);\n  //関数型へのrvalue reference型へのキャスト式の評価結果はlvalue\n  static_cast\u003cvoid (\u0026\u0026)(int)\u003e(f2);\n  //文字列リテラルはlvalue\n  \"arikitari\";\n  //operator*の評価結果はlvalue\n  *(new int());\n}\n```\n\nhttps://wandbox.org/permlink/qi7OhVkGZAqVQNMm\n\n`operator*`以外にも例には書いていないが、参照を返す組み込みoperator全般も概ね例外となる。\n\n関数型へのrvalue reference型へのキャスト式とかいういつ使うのか謎なものは忘れるとして、**lvalue referenceは名前の有無にかかわらずlvalueである**ということだろう。\n\n文字列リテラルはちょっと考えればわかるが、あれは殆どの処理系で実行オブジェクトにそのまま埋め込まれる。つまり実行時には明確にメモリー上に実態がある。文字列リテラルというのはそのメモリーの別名、lvalue referenceだと捉えることもできるだろう。\n\nしかし正確性を求めて、規格書リーディングをするのは本末転倒だし、名前の有無という圧倒的わかりやすさの前には、このくらいの例外は目をつぶっていいと思う。\n\n## アドレスを取得できるか否かで判別できるのではないか\n\n**lvalueはアドレスを取得できるがrvalueはアドレスを取得できない。**\n\nこれは一見見分ける強力な手段に思える。しかし考えて欲しい。コードを書くときにいちいちアドレス演算子を書いてコンパイルしてみるなんて悠長なことをするだろうか、いいやしない。もっと脳内で簡単に判別できるものが必要だ。やはり名前の有無が一番わかり易いだろう。\n\n# rvalueをxvalueとprvalueに分解して理解する必要はあるのか\n\n**ない**。今日限りを持って記憶から抹消するべきだ。\n\nxvalueとprvalueが何かについては\n[Value categories - cppreference.com](http://en.cppreference.com/w/cpp/language/value_category)\nによくまとまっている。\n\nrvalueの寿命が延長される条件の理解には必要やろ！という声があるかもしれないが、前述の通り、引数以外にrvalue referenceを使うべきではないので全く持って必要ない。\n\nなんで理解する必要がないかについては\n[lvalueとrvalueとmoveと - Togetterまとめ](https://togetter.com/li/1123805)\nを参照して欲しい。コードを書くのに一ミリも寄与しないどころか混乱するだけで、有害であるとはっきりわかる。\n\n# まとめ\n\nlvalueとrvalueの違いは\n\n- 名前があればlvalue、なければrvalue\n- ただしlvalue referenceは常にlvalue\n\nでとりあえずはいいと思う。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":7,"created_at":"2017-06-26T03:39:29+09:00","group":null,"id":"8eae5714a6cfe1c0407d","likes_count":44,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]}],"title":"みんなlvalueとrvalueを難しく考えすぎちゃいないかい？","updated_at":"2019-04-03T12:22:20+09:00","url":"https://qiita.com/yumetodo/items/8eae5714a6cfe1c0407d","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e\u003ca href=\"https://teratail.com/questions/80733\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC - C言語のunsigned doubleとは何か？(80733)｜teratail\u003c/a\u003e\u003cbr\u003e\nより。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include\u0026lt;stdio.h\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e  \u003cspan class=\"n\"\u003eaa\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e345\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esigned\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003ebb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e4509\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003ecc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"mi\"\u003e472873\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eaa\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%f\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003egccではエラーになる\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eprog.cc: In function 'int main()':\nprog.cc:4:22: error: 'signed' or 'unsigned' invalid for 'aa'\n     unsigned double  aa = 0.345;\n                      ^~\nprog.cc:5:19: error: 'signed' or 'unsigned' invalid for 'bb'\n     signed double bb = 0.4509;\n                   ^~\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eところがvisual studio 2015 ver 14.0.25431.01 update3では\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ewarning C4076: 'unsigned': cannot be used with type 'double'\nwarning C4076: 'signed': cannot be used with type 'double'\nwarning C4477: 'printf' : format string '%f' requires an argument of type 'double', but variadic argument 1 has type 'unsigned int'\nwarning C4477: 'printf' : format string '%f' requires an argument of type 'double', but variadic argument 1 has type 'int'\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとなる。ここでC4076の説明を読みに行こう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://docs.microsoft.com/ja-jp/cpp/error-messages/compiler-warnings/compiler-warning-level-1-c4076\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCompiler Warning (level 1) C4076 | Microsoft Docs\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e'typemod' : can not be used with type 'typename'\u003cbr\u003e\nA type modifier, whether it is signed or \u003ccode\u003eunsigned\u003c/code\u003e, cannot be used with a noninteger type. \u003cstrong\u003etypemod is ignored.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003etypemod is ignoredだぁ？いやそれignoreしちゃっていいのかい？明らかに意図に反するコードを作っちゃわないかい？\u003c/p\u003e\n\n\u003cp\u003eここで疑問なのはこれは合法なのかということだ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"規格書を読む\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A6%8F%E6%A0%BC%E6%9B%B8%E3%82%92%E8%AA%AD%E3%82%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e規格書を読む\u003c/h1\u003e\n\n\u003cp\u003e調査中です、しばらくお待ちください。情報提供もお待ちしています...\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++11 規格書だと 7.1.6 (特に 7.1.6.2) が問題になりそう。\u003c/p\u003e— Tsukasa #01 [要出典] (@a4lg) \u003ca href=\"https://twitter.com/a4lg/status/877500280576671745\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月21日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://friends.nico/users/EzoeRyou/updates/3585576\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F32ff7040-6a53-5da5-f24a-ad18027d4a4a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=04ab4703ee2541a48c3a4b332a443119\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/32ff7040-6a53-5da5-f24a-ad18027d4a4a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F32ff7040-6a53-5da5-f24a-ad18027d4a4a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=e51625c6d47fa8ec612a059e64c6d642 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eまだ規格書読み途中ですが7.1.6見る限り特に制約はしていなさそうです。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eこの件を調べようとして long int は int long と書いても良いことを今更発見した。\u003cbr\u003e\u003cbr\u003eunsigned doubleをunsigned intとして扱う処理系は合法か？ by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/zZXnCD5syB\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/zZXnCD5syB\u003c/a\u003e\u003c/p\u003e— 齊藤敦志@仕事ください (@SaitoAtsushi) \u003ca href=\"https://twitter.com/SaitoAtsushi/status/877831452242595840\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月22日\u003c/a\u003e\n\u003c/blockquote\u003e\n","body":"[C - C言語のunsigned doubleとは何か？(80733)｜teratail](https://teratail.com/questions/80733)\nより。\n\n```c\n#include\u003cstdio.h\u003e\n\nint main() {\n    unsigned double  aa = 0.345;\n    signed double bb = 0.4509;\n    double cc = 0.472873;\n    printf(\"%f\\n\", aa);\n    printf(\"%f\\n\", bb);\n    printf(\"%f\\n\", cc);\n}\n```\n\ngccではエラーになる\n\n```\nprog.cc: In function 'int main()':\nprog.cc:4:22: error: 'signed' or 'unsigned' invalid for 'aa'\n     unsigned double  aa = 0.345;\n                      ^~\nprog.cc:5:19: error: 'signed' or 'unsigned' invalid for 'bb'\n     signed double bb = 0.4509;\n                   ^~\n```\n\nところがvisual studio 2015 ver 14.0.25431.01 update3では\n\n```\nwarning C4076: 'unsigned': cannot be used with type 'double'\nwarning C4076: 'signed': cannot be used with type 'double'\nwarning C4477: 'printf' : format string '%f' requires an argument of type 'double', but variadic argument 1 has type 'unsigned int'\nwarning C4477: 'printf' : format string '%f' requires an argument of type 'double', but variadic argument 1 has type 'int'\n```\n\nとなる。ここでC4076の説明を読みに行こう。\n\n[Compiler Warning (level 1) C4076 | Microsoft Docs](https://docs.microsoft.com/ja-jp/cpp/error-messages/compiler-warnings/compiler-warning-level-1-c4076)\n\n\u003e'typemod' : can not be used with type 'typename'\nA type modifier, whether it is signed or `unsigned`, cannot be used with a noninteger type. **typemod is ignored.**\n\ntypemod is ignoredだぁ？いやそれignoreしちゃっていいのかい？明らかに意図に反するコードを作っちゃわないかい？\n\nここで疑問なのはこれは合法なのかということだ。\n\n# 規格書を読む\n\n調査中です、しばらくお待ちください。情報提供もお待ちしています...\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++11 規格書だと 7.1.6 (特に 7.1.6.2) が問題になりそう。\u003c/p\u003e\u0026mdash; Tsukasa #01 [要出典] (@a4lg) \u003ca href=\"https://twitter.com/a4lg/status/877500280576671745\"\u003e2017年6月21日\u003c/a\u003e\u003c/blockquote\u003e\n\n[![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/32ff7040-6a53-5da5-f24a-ad18027d4a4a.png)](https://friends.nico/users/EzoeRyou/updates/3585576)\n\nまだ規格書読み途中ですが7.1.6見る限り特に制約はしていなさそうです。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eこの件を調べようとして long int は int long と書いても良いことを今更発見した。\u003cbr\u003e\u003cbr\u003eunsigned doubleをunsigned intとして扱う処理系は合法か？ by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/zZXnCD5syB\"\u003ehttps://t.co/zZXnCD5syB\u003c/a\u003e\u003c/p\u003e\u0026mdash; 齊藤敦志@仕事ください (@SaitoAtsushi) \u003ca href=\"https://twitter.com/SaitoAtsushi/status/877831452242595840\"\u003e2017年6月22日\u003c/a\u003e\u003c/blockquote\u003e\n","coediting":false,"comments_count":3,"created_at":"2017-06-21T21:10:57+09:00","group":null,"id":"3bb5c9a4d68f544da939","likes_count":7,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"VC++","versions":[]},{"name":"C++規格書リーディング","versions":[]}],"title":"unsigned doubleをunsigned intとして扱う処理系は合法か？","updated_at":"2017-06-23T10:14:14+09:00","url":"https://qiita.com/yumetodo/items/3bb5c9a4d68f544da939","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e先日話題になった記事に\u003c/p\u003e\n\n\u003cp\u003eQiitaのぐるぐるまわるコメントテスト会場 \u003c/p\u003e\n\n\u003cp\u003eがあった。記事そのものは非公開になってしまったが(実はURL推測できる)\u003c/p\u003e\n\n\u003cp\u003eQiitaのぐるぐるまわるコメントテスト会場が面白い - ちら帳\u003cbr\u003e\n\u003ca href=\"http://chira-memo.hatenablog.com/entry/2017/06/15/192343\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://chira-memo.hatenablog.com/entry/2017/06/15/192343\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eに内容の要約がある。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"本題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%AC%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e本題\u003c/h1\u003e\n\n\u003cp\u003e皆さんはQiitaにツイートを埋め込めていたのをご存知かと思う。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yyu/items/d7483b63f701ae1d1c50\" id=\"reference-d16e214a92435caee9b9\"\u003eQiitaはTwitterのツイートを埋め込める\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e私も愛用していた。\u003c/p\u003e\n\n\u003cp\u003eところがこの弊害か埋め込まれなくなってしまった(単なる\u003ccode\u003eblockquote\u003c/code\u003eに)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;blockquote\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"twitter-tweet\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-lang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ja\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;p\u003c/span\u003e \u003cspan class=\"na\"\u003elang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ja\"\u003c/span\u003e \u003cspan class=\"na\"\u003edir=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ltr\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eQiitaのぐるぐるまわるコメントテスト会場が面白い - ちら帳 \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://t.co/8g2WjXv5Z9\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003ehttps://t.co/8g2WjXv5Z9\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\u003c/span\u003e\u003cspan class=\"ni\"\u003e\u0026amp;mdash;\u003c/span\u003e yumetodo-C++erだけど化学科 (@yumetodo) \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://twitter.com/yumetodo/status/875752648674205697\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e2017年6月16日\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;/blockquote\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書いても\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eQiitaのぐるぐるまわるコメントテスト会場が面白い - ちら帳 \u003ca href=\"https://t.co/8g2WjXv5Z9\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/8g2WjXv5Z9\u003c/a\u003e\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/875752648674205697\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月16日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e埋め込まれていない。\u003c/p\u003e\n\n\u003cp\u003eQiitaでTwitterのツイートを埋め込める時代は終わりました。\u003c/p\u003e\n\n\u003cp\u003eここでQiitaの利用規約を見てみましょう。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e§ 12\u003cbr\u003e\n1. 本サービスはTwitter、Facebook、GitHub等の外部サービスと連携してサービスを提供することがありますが、ユーザーは、自らの責任において外部サービスを利用するものとし、当社は、外部サービスの利用に関連してユーザーに発生した損害について、一切の責任を負いません。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eQiitaをこの件で責めるのは筋違いっぽいです。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eQiitaでTwitterのツイートを埋め込める時代は終わりました。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eQiita:Team ではまだ続いてるけど、やっぱ終わるかな。\u003cbr\u003eQiitaでTwitterのツイートを埋め込める時代は終わりました by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/KjcR0wyOhg\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/KjcR0wyOhg\u003c/a\u003e\u003c/p\u003e— masuda kaz (@masudakz) \u003ca href=\"https://twitter.com/masudakz/status/876601030091210752\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月19日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0232541a-7ad0-8ea9-4b64-4cf9ea6f98a1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=306081a94d08b1f9e3b1e0ea59b60e97\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0232541a-7ad0-8ea9-4b64-4cf9ea6f98a1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=306081a94d08b1f9e3b1e0ea59b60e97\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/0232541a-7ad0-8ea9-4b64-4cf9ea6f98a1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0232541a-7ad0-8ea9-4b64-4cf9ea6f98a1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=b8a65c878b4dc70315b934e97c67d532 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiitadon.com/users/qiita_staff/updates/7470\" rel=\"nofollow noopener\" target=\"_blank\"\u003eQiita公式「それはどうかな…😏」\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://pawoo.net/@yumetodo/21579824\" rel=\"nofollow noopener\" target=\"_blank\"\u003e私「えっ」\u003c/a\u003e\u003cbr\u003e\n(急いで見に来る)→復活している\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/increments/qiita-markdown/pull/52\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAllow \u003ccode\u003e\u0026lt;blockquote class=\"twitter-tweet\"\u0026gt;\u003c/code\u003e by yuku-t · Pull Request #52 · increments/qiita-markdown\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eQiitaでTwitterのツイートを埋め込める時代が再び訪れました\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiitadon.com/users/qiita_staff/updates/7473\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F25f201a4-d2cf-edaf-02c8-3b942ef465dc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cf960ef0943c377d986c4f73e67b4c98\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/25f201a4-d2cf-edaf-02c8-3b942ef465dc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F25f201a4-d2cf-edaf-02c8-3b942ef465dc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f5d58aca6a28425fdae738c3b750940c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e何が始まるんです？\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://blog.qiita.com/post/162037299989/disable-html-class\" rel=\"nofollow noopener\" target=\"_blank\"\u003eQiitaにおいてHTML要素の属性指定ができなくなりました - Qiita Blog\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4af9ecfa-6ce9-ae5f-efc5-d6d549909d8b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d528c02d2f25c42b949052674fb07b0d\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4af9ecfa-6ce9-ae5f-efc5-d6d549909d8b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d528c02d2f25c42b949052674fb07b0d\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/4af9ecfa-6ce9-ae5f-efc5-d6d549909d8b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4af9ecfa-6ce9-ae5f-efc5-d6d549909d8b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=9ab19fe2156bb4feeafc526b2020af08 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://qiitadon.com/users/qiita_staff/updates/7626\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://qiitadon.com/users/qiita_staff/updates/7626\u003c/a\u003e\u003cbr\u003e\nというわけで昨日少し触れた件についてのご報告です。Tweetはすでに対応済みですが、その他こんなサービスのEmbedができれば嬉しい〜とかあったらぜひ。Codepenとか貼りたいですよね。\u003c/p\u003e\n\n\u003cp\u003eQiitaにおいてHTML要素の属性指定ができなくなりました\u003cbr\u003e\n\u003ca href=\"http://blog.qiita.com/post/162037299989/disable-html-class\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://blog.qiita.com/post/162037299989/disable-html-class\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記-2020-03-05\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-2020-03-05\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記: 2020-03-05\u003c/h1\u003e\n\n\u003cp\u003eQiitaがデフォルトでTwitterの\u003ccode\u003ehttps://platform.twitter.com/widgets.js\u003c/code\u003eを代理で読み込んでくれなくなったようです。\u003c/p\u003e\n\n\u003cp\u003e記事本文中、もしくはコメントで\u003ccode\u003e\u0026lt;script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u0026gt;\u0026lt;/script\u0026gt;\u003c/code\u003eを記述することで埋め込めるようになります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"先日話題になった記事に\n\nQiitaのぐるぐるまわるコメントテスト会場 \n\nがあった。記事そのものは非公開になってしまったが(実はURL推測できる)\n\nQiitaのぐるぐるまわるコメントテスト会場が面白い - ちら帳\nhttp://chira-memo.hatenablog.com/entry/2017/06/15/192343\n\nに内容の要約がある。\n\n# 本題\n\n皆さんはQiitaにツイートを埋め込めていたのをご存知かと思う。\n[QiitaはTwitterのツイートを埋め込める](http://qiita.com/yyu/items/d7483b63f701ae1d1c50)\n\n私も愛用していた。\n\n\nところがこの弊害か埋め込まれなくなってしまった(単なる`blockquote`に)\n\n```html\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eQiitaのぐるぐるまわるコメントテスト会場が面白い - ちら帳 \u003ca href=\"https://t.co/8g2WjXv5Z9\"\u003ehttps://t.co/8g2WjXv5Z9\u003c/a\u003e\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/875752648674205697\"\u003e2017年6月16日\u003c/a\u003e\u003c/blockquote\u003e\n```\n\nのように書いても\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eQiitaのぐるぐるまわるコメントテスト会場が面白い - ちら帳 \u003ca href=\"https://t.co/8g2WjXv5Z9\"\u003ehttps://t.co/8g2WjXv5Z9\u003c/a\u003e\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/875752648674205697\"\u003e2017年6月16日\u003c/a\u003e\u003c/blockquote\u003e\n\n埋め込まれていない。\n\nQiitaでTwitterのツイートを埋め込める時代は終わりました。\n\nここでQiitaの利用規約を見てみましょう。\n\n\u003e§ 12\n\u003e1. 本サービスはTwitter、Facebook、GitHub等の外部サービスと連携してサービスを提供することがありますが、ユーザーは、自らの責任において外部サービスを利用するものとし、当社は、外部サービスの利用に関連してユーザーに発生した損害について、一切の責任を負いません。\n\nQiitaをこの件で責めるのは筋違いっぽいです。\n\n**QiitaでTwitterのツイートを埋め込める時代は終わりました。**\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eQiita:Team ではまだ続いてるけど、やっぱ終わるかな。\u003cbr\u003eQiitaでTwitterのツイートを埋め込める時代は終わりました by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/KjcR0wyOhg\"\u003ehttps://t.co/KjcR0wyOhg\u003c/a\u003e\u003c/p\u003e\u0026mdash; masuda kaz (@masudakz) \u003ca href=\"https://twitter.com/masudakz/status/876601030091210752\"\u003e2017年6月19日\u003c/a\u003e\u003c/blockquote\u003e\n\n# 追記\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/0232541a-7ad0-8ea9-4b64-4cf9ea6f98a1.png)\n\n[Qiita公式「それはどうかな…😏」](https://qiitadon.com/users/qiita_staff/updates/7470)\n[私「えっ」](https://pawoo.net/@yumetodo/21579824)\n(急いで見に来る)→復活している\n\n[Allow `\u003cblockquote class=\"twitter-tweet\"\u003e` by yuku-t · Pull Request #52 · increments/qiita-markdown](https://github.com/increments/qiita-markdown/pull/52)\n\n**QiitaでTwitterのツイートを埋め込める時代が再び訪れました**\n\n[![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/25f201a4-d2cf-edaf-02c8-3b942ef465dc.png)](https://qiitadon.com/users/qiita_staff/updates/7473)\n\n何が始まるんです？\n\n[QiitaにおいてHTML要素の属性指定ができなくなりました - Qiita Blog](http://blog.qiita.com/post/162037299989/disable-html-class)\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/4af9ecfa-6ce9-ae5f-efc5-d6d549909d8b.png)\n\n\u003ehttps://qiitadon.com/users/qiita_staff/updates/7626\n\u003eというわけで昨日少し触れた件についてのご報告です。Tweetはすでに対応済みですが、その他こんなサービスのEmbedができれば嬉しい〜とかあったらぜひ。Codepenとか貼りたいですよね。\n\u003e\n\u003eQiitaにおいてHTML要素の属性指定ができなくなりました\nhttp://blog.qiita.com/post/162037299989/disable-html-class\n\n# 追記: 2020-03-05\n\nQiitaがデフォルトでTwitterの`https://platform.twitter.com/widgets.js`を代理で読み込んでくれなくなったようです。\n\n記事本文中、もしくはコメントで`\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e`を記述することで埋め込めるようになります。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":7,"created_at":"2017-06-18T04:38:01+09:00","group":null,"id":"bb710bc890e6dd50b9e1","likes_count":35,"private":false,"reactions_count":0,"tags":[{"name":"Qiita","versions":[]}],"title":"QiitaでTwitterのツイートを埋め込める時代は終わりました→再び訪れました","updated_at":"2020-03-05T12:43:05+09:00","url":"https://qiita.com/yumetodo/items/bb710bc890e6dd50b9e1","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"強そうな人からcのclassに関連する謎な用語を使われたときにみるもの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BC%B7%E3%81%9D%E3%81%86%E3%81%AA%E4%BA%BA%E3%81%8B%E3%82%89c%E3%81%AEclass%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E8%AC%8E%E3%81%AA%E7%94%A8%E8%AA%9E%E3%82%92%E4%BD%BF%E3%82%8F%E3%82%8C%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E3%81%BF%E3%82%8B%E3%82%82%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e強そうな人からC++のclassに関連する謎な用語を使われたときにみるもの\u003c/h1\u003e\n\n\u003cp\u003eC++を使うにあたって規格書を読まないということはありえないので、どうしても専門用語が多くなっしまいます。\u003c/p\u003e\n\n\u003cp\u003e誰かに質問したときに謎な専門用語が混じっていることもあるかと思います。そんな時のためにかるく解説をします。\u003c/p\u003e\n\n\u003cp\u003eただし、\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/b0ff58617f2733d4ffa1\" id=\"reference-a6695be8da76133f5f09\"\u003eC++入門者に贈るclass入門とclass/structキーワードの使い分け\u003c/a\u003e\u003cbr\u003e\nの内容を理解していることを前提とします。\u003c/p\u003e\n\n\u003cp\u003e以下、規格書の引用部分でバージョン間で差異のある部分、及びそれに該当する解説箇所は\u003cfont color=\"red\"\u003e赤字\u003c/font\u003eで示します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"user-declared\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#user-declared\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003euser-declared\u003c/h1\u003e\n\n\u003cp\u003e残念ながら規格書を読んでも判然としません。ただ、ユーザーが関数を宣言したら\u003ccode\u003euser-declared\u003c/code\u003eになるようです。\u003ccode\u003e= default\u003c/code\u003e/\u003ccode\u003e= delete\u003c/code\u003e 指定も含むと解するべきかと思われます。\u003cbr\u003e\n言い換えると、\u003ccode\u003e= delete\u003c/code\u003e 指定しても宣言は残っている、と。\u003c/p\u003e\n\n\u003cp\u003e宣言が残っていればいいんですね。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20140704/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e特殊メンバ関数とコンパイラによる暗黙宣言 - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"user-provided\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#user-provided\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003euser-provided\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 8.4.2.5 dcl.fct.def.default\u003cbr\u003e\nA \u003cfont color=\"red\"\u003especial member function\u003c/font\u003e is \u003ccode\u003euser-provided\u003c/code\u003e if it is user-declared and \u003cstrong\u003enot explicitly defaulted or deleted\u003c/strong\u003e on its first declaration.\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 8.4.2.5 dcl.fct.def.default\u003cbr\u003e\nA \u003cfont color=\"red\"\u003efunction\u003c/font\u003e is \u003ccode\u003euser-provided\u003c/code\u003e if it is user-declared and \u003cstrong\u003enot explicitly defaulted or deleted\u003c/strong\u003e on its first declaration.\u003c/p\u003e\n\n\u003cp\u003eN4659(C++17)\u003cbr\u003e\n§ 11.4.2.5 dcl.fct.def.default\u003cbr\u003e\nA \u003cfont color=\"red\"\u003efunction\u003c/font\u003e is \u003ccode\u003euser-provided\u003c/code\u003e if it is user-declared and \u003cstrong\u003enot explicitly defaulted or deleted\u003c/strong\u003e on its first declaration.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003enot A or Bは、\u003ccode\u003e(!A \u0026amp;\u0026amp; !B) \u0026lt;=\u0026gt; !(A || B)\u003c/code\u003eという意味なので、not explicitlyはdefaultedとdeletedにかかっています。\u003cbr\u003e\ncf.) \u003ca href=\"https://oshiete.goo.ne.jp/qa/2089050.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://oshiete.goo.ne.jp/qa/2089050.html\u003c/a\u003e\u003cbr\u003e\nandまで含めて解釈すると、\u003ccode\u003eA \u0026amp;\u0026amp; (!(B || C))\u003c/code\u003eと解釈するべきです。\u003c/p\u003e\n\n\u003cp\u003eつまり、先の\u003ccode\u003euser-declared\u003c/code\u003eから\u003ccode\u003e= default\u003c/code\u003e/\u003ccode\u003e= delete\u003c/code\u003e 指定されたものを除くもの、となっています。C++11だと特殊メンバ関数に対してのみの定義になっていますが、言っていることとしては同じですね。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e大事なことだからもう一度、\u003ccode\u003e= default\u003c/code\u003e/\u003ccode\u003e= delete\u003c/code\u003e 指定されたものはuser-providedではありません。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\u003cspan class=\"c1\"\u003e//user-provided\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//not user-provided, but user-declared\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//not user-provided, but user-declared\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//user-provided\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//not user-provided, but user-declared\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//f(h);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこういうことか？宣言の形態についてであって、定義についてはみていなさそう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"trivial\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivial\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivial\u003c/h1\u003e\n\n\u003cp\u003eそれ単体は規格では定義されていません。英単語的には、自明な、というような意味らしいです。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\"trivial\"というのは\"コンパイラがシンボルを作成する必要がない\"ということのような気がするな。もちろん規格には実装がどう振る舞うかは書いてないわけだけど\u003c/p\u003e— 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/873176362550411264\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月9日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eまあtrivialだからってシンボルを作成しないとも限りませんしね\u003ca href=\"https://t.co/h6XFHBdTsh\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/h6XFHBdTsh\u003c/a\u003e\u003c/p\u003e— 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/873399548483297280\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月10日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eただこのあと見ていくように\u003ccode\u003euser-provided\u003c/code\u003eではないことが最低要件になっていて、そうするとこの推測は正しい気がします。ゆるふわ定義。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"trivialなデストラクタを持つhas-a-trivial-destructor\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivial%E3%81%AA%E3%83%87%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%82%92%E6%8C%81%E3%81%A4has-a-trivial-destructor\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivialなデストラクタを持つ(has a trivial destructor)\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 12.4.5 class.dtor\u003cbr\u003e\nA destructor is trivial if it is not user-provided and if:\u003cbr\u003e\n— the destructor is not virtual,\u003cbr\u003e\n— all of the direct base classes of its class have trivial destructors, and\u003cbr\u003e\n— for all of the non-static data members of its class that are of class type (or array thereof), each such class has a trivial destructor.\u003cbr\u003e\nOtherwise, the destructor is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 12.4.5 class.dtor\u003cbr\u003e\n5 A destructor is trivial if it is not user-provided and if:\u003cbr\u003e\n(5.4) — the destructor is not virtual,\u003cbr\u003e\n(5.5) — all of the direct base classes of its class have trivial destructors, and\u003cbr\u003e\n(5.6) — for all of the non-static data members of its class that are of class type (or array thereof), each such class has a trivial destructor.\u003cbr\u003e\nOtherwise, the destructor is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eN4659(C++17)\u003cbr\u003e\n§ 15.4.6 class.dtor\u003cbr\u003e\n6 A destructor is trivial if it is not user-provided and if:\u003cbr\u003e\n(6.1) — the destructor is not virtual,\u003cbr\u003e\n(6.2) — all of the direct base classes of its class have trivial destructors, and\u003cbr\u003e\n(6.3) — for all of the non-static data members of its class that are of class type (or array thereof), each such class has a trivial destructor.\u003cbr\u003e\nOtherwise, the destructor is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC++17で定義している節が移動しましたが、内容は変わっていません。\u003c/p\u003e\n\n\u003cp\u003e対象となるクラスがtrivialなデストラクタを持つためには\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eデストラクタは\u003ccode\u003euser-provided\u003c/code\u003eではない\u003c/li\u003e\n\u003cli\u003eデストラクターはvirtualではない\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eことが大前提になります。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003euser-provided\u003c/code\u003eではない、とは\u003cstrong\u003e\u003ccode\u003e= default\u003c/code\u003e/\u003ccode\u003e= delete\u003c/code\u003e 指定していてもいい\u003c/strong\u003e、ということです。\u003cbr\u003e\nデストラクタをdeleteってどういうこと？という人は\u003cbr\u003e\n\u003ca href=\"https://teratail.com/questions/35601\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++ - C++11で、デストラクタ = deleteとする意味について(35601)｜teratail\u003c/a\u003e\u003cbr\u003e\nを見に行きましょう。\u003c/p\u003e\n\n\u003cp\u003eさらに\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e非staticデータメンバーのデストラクターは、すべてtrivialである\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e非staticメンバ変数にも上記の2条件が適応されます。\u003c/p\u003e\n\n\u003cp\u003eもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e直接の基底クラスのデストラクターは、すべてtrivialである\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記3条件を満たす必要があるということです。\u003cbr\u003e\nなぜならvirtual指定された関数と同名の関数を派生クラスで定義するとそれもvirtualになるからです。もちろんデストラクタも例外ではありません。\u003cbr\u003e\ncf.) \u003ca href=\"http://qiita.com/yumetodo/items/f3ceb1a64a1540f85568\" id=\"reference-64777e3e5819b3cb3fd6\"\u003eそのoverride指定は合法ですか？違法ですか？\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eC++で継承関係を作るとき、多くの場合安全性を考えて基底クラスのデストラクタをvirtual指定します。\u003cbr\u003e\n\u003ca href=\"http://d.hatena.ne.jp/ajiyoshi/20080925/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++では基底クラスにvirtualデストラクタを書こう - ＊「ふっかつのじゅもんがちがいます。」withぬこ\u003c/a\u003e\u003cbr\u003e\nしかし、その時点でtrivialなデストラクタを持っていないんですね。\u003c/p\u003e\n\n\u003cp\u003eデストラクターはvirtualではない、とは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHasNotUserProvidedVitrualDtorClass\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"k\"\u003evirtual\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003eHasNotUserProvidedVitrualDtorClass\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003e= default\u003c/code\u003e指定されたvirtualデストラクタを除外するための条件です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"trivialに破棄可能trivially-destructible\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivial%E3%81%AB%E7%A0%B4%E6%A3%84%E5%8F%AF%E8%83%BDtrivially-destructible\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivialに破棄可能(trivially destructible)\u003c/h1\u003e\n\n\u003cp\u003etrivialに破棄可能とは、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etrivialなデストラクタを持つ(has a trivial destructor)\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eデストラクタが削除されていない\u003c/strong\u003e(is destructible)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの2条件を満たすものを言います。\u003cstrong\u003etrivialなデストラクタを持つ、とtrivialに破棄可能、は同義ではありません\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eデストラクタが削除されていない、とは\u003ccode\u003e=delete\u003c/code\u003e指定されている場合(explicitly deleted)や、暗黙に削除されている場合などを含みます。\u003cbr\u003e\nこれは\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_destructible.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_destructible\u003c/code\u003e\u003c/a\u003eで調査可能です。\u003c/p\u003e\n\n\u003cp\u003e条件をみたすかどうかは、\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_destructible.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_destructible\u003c/code\u003e\u003c/a\u003eで調べることができます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eC1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// トリビアルなデストラクタを持っている\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e// 特殊関数ではないメンバ関数は持っている\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eC2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e// 非トリビアルなデストラクタを持っている\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003eC2\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// 組み込み型は全てトリビアルに破棄可能\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_trivially_destructible\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"int is trivially destructible\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_trivially_destructible\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"int* is trivially destructible\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// ユーザー定義型は、ユーザー定義のデストラクタを持っていなければトリビアルに破棄可能\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_trivially_destructible\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eC1\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"C1 is trivially destructible\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_trivially_destructible\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eC2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"C2 isn't trivially destructible\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eCC BY 3.0\u003c/code\u003e: \u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_destructible.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://cpprefjp.github.io/reference/type_traits/is_trivially_destructible.html\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"trivialなコピームーブコンストラクタを持つhas-a-trivial-copymove-constructor\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivial%E3%81%AA%E3%82%B3%E3%83%94%E3%83%BC%E3%83%A0%E3%83%BC%E3%83%96%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%82%92%E6%8C%81%E3%81%A4has-a-trivial-copymove-constructor\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivialなコピー/ムーブコンストラクタを持つ(has a trivial copy/move constructor)\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 12.8 class.copy\u003cbr\u003e\n12 A copy/move constructor for class X is trivial if it is not user-provided and if\u003cbr\u003e\n— class X \u003cstrong\u003ehas no virtual functions\u003c/strong\u003e (10.3) and no virtual base classes (10.1), and\u003cbr\u003e\n— the constructor selected to copy/move each direct base class subobject is trivial, and\u003cbr\u003e\n— for each non-static data member of X that is of class type (or array thereof), the constructor selected to copy/move that member is trivial;\u003cbr\u003e\notherwise the copy/move constructor is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 12.8 class.copy\u003cbr\u003e\n12 A copy/move constructor for class X is trivial if it is not user-provided\u003cfont color=\"red\"\u003e, its parameter-type-list is equivalent to the parameter-type-list of an implicit declaration, \u003c/font\u003eand if\u003cbr\u003e\n(12.1) — class X \u003cstrong\u003ehas no virtual functions\u003c/strong\u003e (10.3) and no virtual base classes (10.1), and\u003cbr\u003e\n\u003cfont color=\"red\"\u003e(12.2) — class X \u003cstrong\u003ehas no non-static data members of volatile-qualified type\u003c/strong\u003e, and\u003c/font\u003e\u003cbr\u003e\n(12.3) — the constructor selected to copy/move each direct base class subobject is trivial, and\u003cbr\u003e\n(12.4) — for each non-static data member of X that is of class type (or array thereof), the constructor selected to copy/move that member is trivial;\u003cbr\u003e\notherwise the copy/move constructor is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eN4569(C++17)\u003cbr\u003e\n§ 15.8.1 class.copy.ctor\u003cbr\u003e\n11 A copy/move constructor for class X is trivial if it is not user-provided and if:\u003cbr\u003e\n(11.1) — class X \u003cstrong\u003ehas no virtual functions\u003c/strong\u003e (13.3) and no virtual base classes (13.1), and\u003cbr\u003e\n(11.2) — the constructor selected to copy/move each direct base class subobject is trivial, and\u003cbr\u003e\n(11.3) — for each non-static data member of X that is of class type (or array thereof), the constructor selected to copy/move that member is trivial;\u003cbr\u003e\notherwise the copy/move constructor is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eなんかC++14だけ制約が多いです。C++17から定義している節が移動しました。\u003c/p\u003e\n\n\u003cp\u003e対象となるクラスがtrivialなコピー/ムーブコンストラクタを持つためには\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eコピー/ムーブコンストラクタは\u003ccode\u003euser-provided\u003c/code\u003eではない\u003c/li\u003e\n\u003cli\u003e\n\u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003e仮引数リストが暗黙に宣言された場合の仮引数リストと同じ\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003evirtual関数を持たず\u003c/strong\u003e、virtual基本クラスも持たない\u003c/li\u003e\n\u003cli\u003e\n\u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003evolatile修飾された型の非staticデータメンバーを持たない\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eが前提条件です。また、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eクラス型か、クラスの配列型の非staticデータメンバーをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e非staticメンバ変数についても先の4条件が適応されます。\u003c/p\u003e\n\n\u003cp\u003eもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e直接の基底クラスのサブオブジェクトをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記5条件を満たす必要があるということです。\u003c/p\u003e\n\n\u003cp\u003etrivialなデストラクタの要件と大きく違うのは、\u003cstrong\u003evirtual関数を持っていはいけない\u003c/strong\u003eことでしょうか。\u003c/p\u003e\n\n\u003cp\u003e仮引数リストが暗黙に宣言された場合の仮引数リストと同じ、というのは\u003cstrong\u003e正直何言っているのかわからない\u003c/strong\u003eです。ユーザー定義してはいけないんだから嫌でも暗黙に宣言された場合の仮引数リストと同じになると思うんですが・・・。\u003cbr\u003e\nこれはあれか？コピー/ムーブコンストラクタを\u003ccode\u003e= delete\u003c/code\u003eする場合は\u003ccode\u003eX(const X\u0026amp;)\u003c/code\u003e/\u003ccode\u003eX(X\u0026amp;\u0026amp;)\u003c/code\u003eに対してのみ\u003ccode\u003e= delete\u003c/code\u003eしろってことか？しかもこの文言、C++14のみあるんだよな・・・、何なんだ一体・・・。\u003c/p\u003e\n\n\u003cp\u003evolatileの話もなぜかC++14だけあって\u003cstrong\u003eよくわからない\u003c/strong\u003eです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"tirivalにコピームーブ構築可能trivially-copymove-constructible\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tirival%E3%81%AB%E3%82%B3%E3%83%94%E3%83%BC%E3%83%A0%E3%83%BC%E3%83%96%E6%A7%8B%E7%AF%89%E5%8F%AF%E8%83%BDtrivially-copymove-constructible\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etirivalにコピー/ムーブ構築可能(trivially copy/move constructible)\u003c/h1\u003e\n\n\u003cp\u003etirivalにコピー/ムーブ構築可能、であるためには\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etrivialなコピー/ムーブコンストラクタを持つ(has copy/move constructor)\u003c/li\u003e\n\u003cli\u003eコピー/ムーブ構築可能(is copy/move constructible)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの2条件を満たす必要があります。\u003c/p\u003e\n\n\u003cp\u003eコピー/ムーブ構築可能とは、特定の引数のときに構築可能(is constructible)、に定義がたらい回されており、これは\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 20.10.4.3 meta.unary.prop\u003cbr\u003e\n6 \u003cfont color=\"red\"\u003eGiven the following function prototype:\u003c/font\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eadd_rvalue_reference\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ethe predicate condition for a template specialization \u003ccode\u003eis_constructible\u0026lt;T, Args...\u0026gt;\u003c/code\u003e shall be satisfied if and only if the following variable definition would be well-formed for some invented variable t:\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"nf\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e()...);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003e[ Note:\u003c/em\u003e These tokens are never interpreted as a function declaration. \u003cem\u003e—end note ]\u003c/em\u003e Access checking is\u003cbr\u003e\nperformed as if in a context unrelated to \u003ccode\u003eT\u003c/code\u003e and any of the \u003ccode\u003eArgs\u003c/code\u003e. Only the validity of the immediate context of the variable initialization is considered. \u003cem\u003e[ Note:\u003c/em\u003e The evaluation of the initialization can result in side effects such as the instantiation of class template specializations and function template specializations, the generation of implicitly-defined functions, and so on. Such side effects are not in the “immediate context” and can result in the program being ill-formed. \u003cem\u003e—end note ]\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 20.10.4.3 meta.unary.prop\u003cbr\u003e\n7 \u003cfont color=\"red\"\u003eGiven the following function prototype:\u003c/font\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eadd_rvalue_reference_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ethe predicate condition for a template specialization \u003ccode\u003eis_constructible\u0026lt;T, Args...\u0026gt;\u003c/code\u003e shall be satisfied if and only if the following variable definition would be well-formed for some invented variable t:\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"nf\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e()...);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003e[ Note:\u003c/em\u003e These tokens are never interpreted as a function declaration. \u003cem\u003e—end note ]\u003c/em\u003e Access checking is performed as if in a context unrelated to \u003ccode\u003eT\u003c/code\u003e and any of the \u003ccode\u003eArgs\u003c/code\u003e. Only the validity of the immediate context of the variable initialization is considered. \u003cem\u003e[ Note:\u003c/em\u003e The evaluation of the initialization can result in side effects such as the instantiation of class template specializations and function template specializations, the generation of implicitly-defined functions, and so on. Such side effects are not in the “immediate context” and can result in the program being ill-formed. \u003cem\u003e—end note ]\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eN4569\u003cbr\u003e\n§ 23.15.4.3 meta.unary.prop\u003cbr\u003e\n8 The predicate condition for a template specialization \u003ccode\u003eis_constructible\u0026lt;T, Args...\u0026gt;\u003c/code\u003e shall be satisfied if and only if the following variable definition would be well-formed for some invented variable t:\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"nf\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edeclval\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e()...);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003e[ Note:\u003c/em\u003e These tokens are never interpreted as a function declaration. \u003cem\u003e—end note ]\u003c/em\u003e Access checking is performed as if in a context unrelated to \u003ccode\u003eT\u003c/code\u003e and any of the \u003ccode\u003eArgs\u003c/code\u003e. Only the validity of the immediate context of the variable initialization is considered. \u003cem\u003e[ Note:\u003c/em\u003e The evaluation of the initialization can result in side effects such as the instantiation of class template specializations and function template specializations, the generation of implicitly-defined functions, and so on. Such side effects are not in the “immediate context” and can result in the program being ill-formed. \u003cem\u003e—end note ]\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eまあなんかごちゃごちゃ書いている上にC++17から\u003ca href=\"https://cpprefjp.github.io/reference/utility/declval.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::declval\u003c/code\u003e\u003c/a\u003eを使う定義に書き換わっていますが、ようはpublicに宣言されているコンストラクタに指定の引数を渡して見たときにエラーが起きない、つまり呼び出せれば特定の引数のときに構築可能(is constructible)だ、という極めてありきたりな定義になっています。これは\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_constructible.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_constrictible\u003c/code\u003e\u003c/a\u003eで調べられます。\u003c/p\u003e\n\n\u003cp\u003eで、話を戻してtirivalにコピー/ムーブ構築可能かどうかは\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_copy_constructible.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_copy_constructible\u003c/code\u003e\u003c/a\u003e/\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_move_constructible.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_move_constructible\u003c/code\u003e\u003c/a\u003eで調べられます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"trivialなコピームーブ代入演算子を持つtrivially-copymove-assignable\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivial%E3%81%AA%E3%82%B3%E3%83%94%E3%83%BC%E3%83%A0%E3%83%BC%E3%83%96%E4%BB%A3%E5%85%A5%E6%BC%94%E7%AE%97%E5%AD%90%E3%82%92%E6%8C%81%E3%81%A4trivially-copymove-assignable\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivialなコピー/ムーブ代入演算子を持つ(trivially copy/move assignable)\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 12.8 class.copy\u003cbr\u003e\n25 A copy/move assignment operator for class X is trivial if it is not user-provided and if\u003cbr\u003e\n— class X \u003cstrong\u003ehas no virtual functions\u003c/strong\u003e (10.3) and no virtual base classes (10.1), and\u003cbr\u003e\n— the assignment operator selected to copy/move each direct base class subobject is trivial, and\u003cbr\u003e\n— for each non-static data member of X that is of class type (or array thereof), the assignment operator selected to copy/move that member is trivial;\u003cbr\u003e\notherwise the copy/move assignment operator is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 12.8 class.copy\u003cbr\u003e\n25 A copy/move assignment operator for class X is trivial if it is not user-provided\u003cfont color=\"red\"\u003e, its parameter-type-list is equivalent to the parameter-type-list of an implicit declaration, \u003c/font\u003eand if\u003cbr\u003e\n(25.1) — class X \u003cstrong\u003ehas no virtual functions\u003c/strong\u003e (10.3) and no virtual base classes (10.1), and\u003cbr\u003e\n\u003cfont color=\"red\"\u003e(25.2) — class X \u003cstrong\u003ehas no non-static data members of volatile-qualified type\u003c/strong\u003e, and\u003c/font\u003e\u003cbr\u003e\n(25.3) — the assignment operator selected to copy/move each direct base class subobject is trivial, and\u003cbr\u003e\n(25.4) — for each non-static data member of X that is of class type (or array thereof), the assignment operator selected to copy/move that member is trivial;\u003cbr\u003e\notherwise the copy/move assignment operator is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eN4659(C++17)\u003cbr\u003e\n§ 15.8.2 class.copy.assign\u003cbr\u003e\n9 A copy/move assignment operator for class X is trivial if it is not user-provided and if:\u003cbr\u003e\n(9.1) — class X \u003cstrong\u003ehas no virtual functions\u003c/strong\u003e (13.3) and no virtual base classes (13.1), and\u003cbr\u003e\n(9.2) — the assignment operator selected to copy/move each direct base class subobject is trivial, and\u003cbr\u003e\n(9.3) — for each non-static data member of X that is of class type (or array thereof), the assignment operator selected to copy/move that member is trivial;\u003cbr\u003e\notherwise the copy/move assignment operator is \u003cem\u003enon-trivial\u003c/em\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e基本的に「trivialなコピー/ムーブコンストラクタを持つ」と同じです\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e対象となるクラスがtrivialなコピー/ムーブ代入演算子を持つためには\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eコピー/ムーブ代入演算子は\u003ccode\u003euser-provided\u003c/code\u003eではない\u003c/li\u003e\n\u003cli\u003e\n\u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003e仮引数リストが暗黙に宣言された場合の仮引数リストと同じ\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003evirtual関数を持たず\u003c/strong\u003e、virtual基本クラスも持たない\u003c/li\u003e\n\u003cli\u003e\n\u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003evolatile修飾された型の非staticデータメンバーを持たない\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eが前提条件です。また、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eクラスXのクラス型とクラスの配列型の非staticデータメンバーの、コピー/ムーブに使われる代入演算子がトリビアル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e非staticメンバ変数についても先の4条件が適応されます。\u003c/p\u003e\n\n\u003cp\u003eもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e直接の基底クラスのサブオブジェクトで使われるコピー/ムーブの代入演算子がトリビアル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記5条件を満たす必要があるということです。\u003c/p\u003e\n\n\u003cp\u003eで、例によって脳内で調べるのは限界があるので\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_copy_assignable.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_copy_assignable\u003c/code\u003e\u003c/a\u003e/\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_move_assignable.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_move_assignable\u003c/code\u003e\u003c/a\u003eがあります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"トリビアルにコピー可能なクラスtrivially-copyable-class\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%88%E3%83%AA%E3%83%93%E3%82%A2%E3%83%AB%E3%81%AB%E3%82%B3%E3%83%94%E3%83%BC%E5%8F%AF%E8%83%BD%E3%81%AA%E3%82%AF%E3%83%A9%E3%82%B9trivially-copyable-class\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eトリビアルにコピー可能なクラス(trivially copyable class)\u003c/h1\u003e\n\n\u003cp\u003eこの定義がC++11/C++14とC++17で大きく変わっているのでそれぞれ考察していきましょう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c11c14\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c11c14\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++11/C++14\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 9. class\u003cbr\u003e\n6 A trivially copyable class is a class that:\u003cbr\u003e\n— has no non-trivial copy constructors (12.8),\u003cbr\u003e\n— has no non-trivial move constructors (12.8),\u003cbr\u003e\n— has no non-trivial copy assignment operators (13.5.3, 12.8),\u003cbr\u003e\n— has no non-trivial move assignment operators (13.5.3, 12.8), and\u003cbr\u003e\n— has a trivial destructor (12.4).\u003cbr\u003e\nA trivial class is a class that has a trivial default constructor (12.1) and is trivially copyable.\u003cbr\u003e\n[ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 9. class\u003cbr\u003e\n6 A trivially copyable class is a class that:\u003cbr\u003e\n(6.1) — has no non-trivial copy constructors (12.8),\u003cbr\u003e\n(6.2) — has no non-trivial move constructors (12.8),\u003cbr\u003e\n(6.3) — has no non-trivial copy assignment operators (13.5.3, 12.8),\u003cbr\u003e\n(6.4) — has no non-trivial move assignment operators (13.5.3, 12.8), and\u003cbr\u003e\n(6.5) — has a trivial destructor (12.4).\u003cbr\u003e\nA trivial class is a class that has a default constructor (12.1), has no non-trivial default constructors, and is trivially copyable. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC++11/C++14では、対象となるクラスがtrivially copyable classであるためには、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etrivialではないコピーコンストラクタを持たない\u003c/li\u003e\n\u003cli\u003etrivialではないムーブコンストラクタを持たない\u003c/li\u003e\n\u003cli\u003etrivialではないコピー代入演算子を持たない\u003c/li\u003e\n\u003cli\u003etrivialではないムーブ代入演算子を持たない\u003c/li\u003e\n\u003cli\u003etrivialなデストラクタを持つ\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eを満たす必要があります。\u003c/p\u003e\n\n\u003cp\u003e「trivialではない～を持たない」ってすごく回りくどいですね。「すべての～はtrivial」と解釈しましょう。\u003c/p\u003e\n\n\u003cp\u003eそれを踏まえ、上のまとめを合体して解釈すると\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eデストラクターはvirtualではない\u003c/li\u003e\n\u003cli\u003eデストラクタと全てのコピー/ムーブ コンストラクタ/代入演算子は\u003ccode\u003euser-provided\u003c/code\u003eではない\u003c/li\u003e\n\u003cli\u003e\n\u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003eコンストラクタ/代入演算子の仮引数リストが暗黙に宣言された場合の仮引数リストと同じ\u003c/li\u003e\n\u003cli\u003e\n\u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003evolatile修飾された型の非staticデータメンバーを持たない\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003evirtual関数を持たず\u003c/strong\u003e、virtual基本クラスも持たない\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eさらに\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e非staticデータメンバーのデストラクターは、すべてtrivialである\u003c/li\u003e\n\u003cli\u003eクラス型か、クラスの配列型の非staticデータメンバーをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\u003c/li\u003e\n\u003cli\u003eクラスXのクラス型とクラスの配列型の非staticデータメンバーの、コピー/ムーブに使われる代入演算子がトリビアル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e非staticメンバ変数にも上記の3(C++14では5)条件が適応されます。\u003c/p\u003e\n\n\u003cp\u003eもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e直接の基底クラスのデストラクターは、すべてtrivialである\u003c/li\u003e\n\u003cli\u003e直接の基底クラスのサブオブジェクトをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\u003c/li\u003e\n\u003cli\u003e直接の基底クラスのサブオブジェクトで使われるコピー/ムーブの代入演算子がトリビアル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記6(C++14では8)条件を満たす必要があるということです。\u003c/p\u003e\n\n\u003cp\u003e面白いのはデストラクタが\u003ccode\u003e= delete\u003c/code\u003e指定されていてもいいということです。いや、もしかするとCore IssueとかになってC++17の規定がさかのぼって適応とかなってるかもしれませんが。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c17\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c17\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++17\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN4659(C++17)\u003cbr\u003e\n§ 12. class\u003cbr\u003e\n6 A trivially copyable class is a class:\u003cbr\u003e\n(6.1) — where each copy constructor, move constructor, copy assignment operator, and move assignment operator (15.8, 16.5.3) is either deleted or trivial,\u003cbr\u003e\n(6.2) — that has at least one non-deleted copy constructor, move constructor, copy assignment operator, or move assignment operator, and\u003cbr\u003e\n(6.3) — that has a trivial, non-deleted destructor (15.4).\u003cbr\u003e\nA trivial class is a class that is trivially copyable and has one or more default constructors (15.1), all of which are either trivial or deleted and at least one of which is not deleted. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC++11/C++14では、対象となるクラスがtrivially copyable classであるためには、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e全てのコピー/ムーブ コンストラクタ/代入演算子はtrivialもしくは\u003ccode\u003e= delete\u003c/code\u003e指定されている\u003c/li\u003e\n\u003cli\u003eコピー/ムーブ コンストラクタ/代入演算子のうち少なくとも1つは\u003ccode\u003e= delete\u003c/code\u003e指定されていない\u003c/li\u003e\n\u003cli\u003etrivialで\u003ccode\u003e= delete\u003c/code\u003e指定されていないデストラクタを持つ\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eを満たす必要があります。\u003c/p\u003e\n\n\u003cp\u003eC++11/C++14と比べると、回りくどい書き方をやめてスッキリしましたね。また実質的な定義にも変更があります。\u003c/p\u003e\n\n\u003cp\u003e1つ目の「trivialもしくは\u003ccode\u003e= delete\u003c/code\u003e指定されている」というのは\u003cstrong\u003e冗長\u003c/strong\u003eです。ここまで見てきたようにtrivialに\u003ccode\u003e= delete\u003c/code\u003e指定は含まれますからね。多分2つ目と3つ目で「\u003ccode\u003e= delete\u003c/code\u003e指定されていない」と書いたので対称性の観点からわざわざ書いてくれたんでしょう。\u003c/p\u003e\n\n\u003cp\u003e上のまとめを合体して解釈すると\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eデストラクターはvirtualではない\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eデストラクターは\u003ccode\u003e= delete\u003c/code\u003e指定されていない\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eデストラクタと全てのコピー/ムーブ コンストラクタ/代入演算子は\u003ccode\u003euser-provided\u003c/code\u003eではない\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003evirtual関数を持たず\u003c/strong\u003e、virtual基本クラスも持たない\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eコピー/ムーブ コンストラクタ/代入演算子のうち少なくとも1つは\u003ccode\u003e= delete\u003c/code\u003e指定されていない\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eさらに\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e非staticデータメンバーのデストラクターは、すべてtrivialである\u003c/li\u003e\n\u003cli\u003eクラス型か、クラスの配列型の非staticデータメンバーをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\u003c/li\u003e\n\u003cli\u003eクラスXのクラス型とクラスの配列型の非staticデータメンバーの、コピー/ムーブに使われる代入演算子がトリビアル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e非staticメンバ変数にも上記の5条件が適応されます。\u003c/p\u003e\n\n\u003cp\u003eもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e直接の基底クラスのデストラクターは、すべてtrivialである\u003c/li\u003e\n\u003cli\u003e直接の基底クラスのサブオブジェクトをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\u003c/li\u003e\n\u003cli\u003e直接の基底クラスのサブオブジェクトで使われるコピー/ムーブの代入演算子がトリビアル\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこのように追加条件があります。これは言い換えると、\u003cstrong\u003e継承関係にあるクラスのうち基底クラス方向すべてのクラスが\u003c/strong\u003e上記8条件を満たす必要があるということです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"trivially-copyable-classの嬉しいこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivially-copyable-class%E3%81%AE%E5%AC%89%E3%81%97%E3%81%84%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivially copyable classの嬉しいこと\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003etrivially copyable classであれば、\u003ccode\u003ememcpy\u003c/code\u003e関数などで単純なバイト列のコピーができるようになります\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://cpplover.blogspot.jp/2010/06/c0xpod.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++0xにおけるPODの定義\u003c/a\u003e\u003cbr\u003e\nつまり、memcpyでコピー出来るクラスの制限は、だいぶ緩和される。まず、コンストラクタがあってもいいし、継承していてもいい。standard-layout classである必要はない。派生クラスと基本クラスが、共に非staticなデータメンバーをもっていても構わない。アクセス指定もできる。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"trivialなクラスtrivial-class\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#trivial%E3%81%AA%E3%82%AF%E3%83%A9%E3%82%B9trivial-class\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etrivialなクラス(trivial class)\u003c/h1\u003e\n\n\u003cp\u003eこの概念はもともとPODを説明するために必要だったのですが、後述の通りPOD自体がC++20でdeprecatedになったのでこいつも忘れていいです。\u003c/p\u003e\n\n\u003cp\u003eそういうわけであまり重要な議論ではないので割愛したかったのですが、規格の文章だけ上でちらっと出てしまっているので引っ張り直しておきます。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eN3337(C++11)\u003cbr\u003e\n§ 9. class\u003cbr\u003e\nA trivial class is a class that has a trivial default constructor (12.1) and is trivially copyable.\u003cbr\u003e\n[ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\u003c/p\u003e\n\n\u003cp\u003eN4140(C++14)\u003cbr\u003e\n§ 9. class\u003cbr\u003e\nA trivial class is a class that has a default constructor (12.1), has no non-trivial default constructors, and is trivially copyable. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\u003c/p\u003e\n\n\u003cp\u003eN4659(C++17)\u003cbr\u003e\n§ 12. class\u003cbr\u003e\nA trivial class is a class that is trivially copyable and has one or more default constructors (15.1), all of which are either trivial or deleted and at least one of which is not deleted. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC++17でone or more default constructorsとか言い出したんですが、デフォルトコンストラクタが複数ってどういうコッチャ・・・\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"standard-layoutなクラスstandard-layout-class\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#standard-layout%E3%81%AA%E3%82%AF%E3%83%A9%E3%82%B9standard-layout-class\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estandard-layoutなクラス(standard-layout class)\u003c/h1\u003e\n\n\u003cp\u003e2017年にこの記事を書き始めたときは解説する気満々だったんですが、執筆を放置していたら\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/nus_miz/items/d09bfda40d5cc0866675\" id=\"reference-5a85457ff60317e9d56b\"\u003eC++における標準レイアウトクラスの定義\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e先を越されました。こっち見てください。\u003c/p\u003e\n\n\u003cp\u003eこいつにはPODの説明以外にちゃんと役割があるので大切です。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://cpplover.blogspot.com/2010/05/pod.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: PODじゃなくてもいいのでは。\u003c/a\u003e\u003cbr\u003e\nstandard-layout class\u003c/p\u003e\n\n\u003cp\u003eこのクラスは、オブジェクトへのポインターは、クラスの最初のデータメンバーを指し示すことを保証するものである。\u003cstrong\u003eつまり、reinterpret_castを使って、オブジェクトへのポインターを、最初のデータメンバーのポインターにキャストした場合、ポインターは、最初のデータメンバーを指すことが保証される。\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"podなクラスpod-class\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#pod%E3%81%AA%E3%82%AF%E3%83%A9%E3%82%B9pod-class\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePODなクラス(pod class)\u003c/h1\u003e\n\n\u003cp\u003eC++20からdeprecatedになる概念です。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://cpplover.blogspot.com/2010/06/c0xpod.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++0xにおけるPODの定義\u003c/a\u003e\u003cbr\u003e\nPODは、trivial classかつstandard-layout classであること。\u003cbr\u003e\nさらに、非PODな非staticデータメンバーを持たないこと。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003ePODのことは忘れましょう\u003c/strong\u003e。そういうのは考古学者に任せるべきです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考リンク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考リンク\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"working-draft-standard-for-programming-language-c\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#working-draft-standard-for-programming-language-c\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWorking Draft, Standard for Programming Language C++\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e[PDF注意]\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN3337\u003c/a\u003e: C++11 first post-publication draft\u003c/li\u003e\n\u003cli\u003e[PDF注意]\u003ca href=\"https://github.com/cplusplus/draft/blob/master/papers/n4140.pdf?raw=true\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN4140\u003c/a\u003e: C++14 final draft\u003c/li\u003e\n\u003cli\u003e[PDF注意]\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN4569\u003c/a\u003e: C++17 final draft\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c-standard-core-language-issues\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c-standard-core-language-issues\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++ Standard Core Language Issues\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1496\" rel=\"nofollow noopener\" target=\"_blank\"\u003e1496\u003c/a\u003e. Triviality with deleted and missing default constructors\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#1590\" rel=\"nofollow noopener\" target=\"_blank\"\u003e1590\u003c/a\u003e. Bypassing non-copy/move constructor copying\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1734\" rel=\"nofollow noopener\" target=\"_blank\"\u003e1734\u003c/a\u003e. Nontrivial deleted copy functions\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#1928\" rel=\"nofollow noopener\" target=\"_blank\"\u003e1928\u003c/a\u003e. Triviality of deleted special member functions\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"jtc1sc22wg21---papers\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#jtc1sc22wg21---papers\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eJTC1/SC22/WG21 - Papers\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4148.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN4148\u003c/a\u003e: Disallowing Inaccessible Operators From Trivially Copyable\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c11-syntax-and-feature江添亮\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c11-syntax-and-feature%E6%B1%9F%E6%B7%BB%E4%BA%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++11: Syntax and Feature(江添亮)\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11: Syntax and Feature\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"本の虫---江添亮のブログ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%AC%E3%81%AE%E8%99%AB---%E6%B1%9F%E6%B7%BB%E4%BA%AE%E3%81%AE%E3%83%96%E3%83%AD%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e本の虫 - 江添亮のブログ\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2010-05-13: \u003ca href=\"https://cpplover.blogspot.jp/2010/05/pod.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePODじゃなくてもいいのでは。\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2010-06-09: \u003ca href=\"https://cpplover.blogspot.jp/2010/06/c0xpod.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++0xにおけるPODの定義\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cpprefjp-c日本語リファレンス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cpprefjp-c%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecpprefjp C++日本語リファレンス\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_copyable.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_copyable\u003c/code\u003e(C++11)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_trivially_move_assignable.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_trivially_move_assignable\u003c/code\u003e(C++11)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"other-links-about-c\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#other-links-about-c\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eOther Links about C++\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2010-03-08: \u003ca href=\"http://d.hatena.ne.jp/melpon/20100308/1267998293\" rel=\"nofollow noopener\" target=\"_blank\"\u003eデストラクタを呼ばずに再構築 - melpon日記 - HaskellもC++もまともに扱えないへたれのページ\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2010-05-07: \u003ca href=\"http://d.hatena.ne.jp/gintenlabo/20100507/1273261890\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++でデストラクタを呼ばなくていい条件 - 野良C++erの雑記帳\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2010-05-13: \u003ca href=\"http://faithandbrave.hateblo.jp/entry/20100513/1273732111\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++0xではPODでもコンストラクタ相当のことができる・・・？ - Faith and Brave - C++で遊ぼう\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2012-11-22: \u003ca href=\"http://nekko1119.hatenablog.com/entry/20121122/1353576526\" rel=\"nofollow noopener\" target=\"_blank\"\u003etrivial class - C++と色々\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2014-07-04: \u003ca href=\"http://d.hatena.ne.jp/yohhoy/20140704/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e特殊メンバ関数とコンパイラによる暗黙宣言 - yohhoyの日記\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2016-05-21: \u003ca href=\"https://teratail.com/questions/35601\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++ - C++11で、デストラクタ = deleteとする意味について(35601)｜teratail\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e2017-06-09: \u003ca href=\"https://pawoo.net/@yumetodo/19093347\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@EzoeRyou@friends.nico 突然すみません。C - yumetodo - Pawoo\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"other-links\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#other-links\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eOther Links\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://oshiete.goo.ne.jp/qa/2089050.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003enot～orとnot～nor - 英語 解決済 | 教えて!goo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 強そうな人からC++のclassに関連する謎な用語を使われたときにみるもの\n\nC++を使うにあたって規格書を読まないということはありえないので、どうしても専門用語が多くなっしまいます。\n\n誰かに質問したときに謎な専門用語が混じっていることもあるかと思います。そんな時のためにかるく解説をします。\n\nただし、\n[C++入門者に贈るclass入門とclass/structキーワードの使い分け](http://qiita.com/yumetodo/items/b0ff58617f2733d4ffa1)\nの内容を理解していることを前提とします。\n\n以下、規格書の引用部分でバージョン間で差異のある部分、及びそれに該当する解説箇所は\u003cfont color=\"red\"\u003e赤字\u003c/font\u003eで示します。\n\n# user-declared\n\n残念ながら規格書を読んでも判然としません。ただ、ユーザーが関数を宣言したら`user-declared`になるようです。`= default`/`= delete` 指定も含むと解するべきかと思われます。\n言い換えると、`= delete` 指定しても宣言は残っている、と。\n\n宣言が残っていればいいんですね。\n\n- [特殊メンバ関数とコンパイラによる暗黙宣言 - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20140704/p1)\n\n# user-provided\n\n\u003eN3337(C++11)\n\u003e§ 8.4.2.5 dcl.fct.def.default\n\u003eA \u003cfont color=\"red\"\u003especial member function\u003c/font\u003e is `user-provided` if it is user-declared and **not explicitly defaulted or deleted** on its first declaration.\n\n\u003eN4140(C++14)\n\u003e§ 8.4.2.5 dcl.fct.def.default\n\u003eA \u003cfont color=\"red\"\u003efunction\u003c/font\u003e is `user-provided` if it is user-declared and **not explicitly defaulted or deleted** on its first declaration.\n\n\u003eN4659(C++17)\n\u003e§ 11.4.2.5 dcl.fct.def.default\n\u003eA \u003cfont color=\"red\"\u003efunction\u003c/font\u003e is `user-provided` if it is user-declared and **not explicitly defaulted or deleted** on its first declaration.\n\nnot A or Bは、`(!A \u0026\u0026 !B) \u003c=\u003e !(A || B)`という意味なので、not explicitlyはdefaultedとdeletedにかかっています。\ncf.) https://oshiete.goo.ne.jp/qa/2089050.html\nandまで含めて解釈すると、`A \u0026\u0026 (!(B || C))`と解釈するべきです。\n\nつまり、先の`user-declared`から`= default`/`= delete` 指定されたものを除くもの、となっています。C++11だと特殊メンバ関数に対してのみの定義になっていますが、言っていることとしては同じですね。\n\n**大事なことだからもう一度、`= default`/`= delete` 指定されたものはuser-providedではありません。**\n\n```cpp:C++\nclass Hoge {\npublic:\n  Hoge() {}//user-provided\n  Hoge(const Hoge\u0026) = default;//not user-provided, but user-declared\n  Hoge(Hoge\u0026\u0026) = delete;//not user-provided, but user-declared\n};\nint f(Hoge\u0026\u0026);//user-provided\nint f(const Hoge\u0026) = delete;//not user-provided, but user-declared\n\nint main(){\n  Hoge h;\n  //f(h);\n  f(Hoge());\n}\n```\n\nこういうことか？宣言の形態についてであって、定義についてはみていなさそう。\n\n# trivial\n\nそれ単体は規格では定義されていません。英単語的には、自明な、というような意味らしいです。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u0026quot;trivial\u0026quot;というのは\u0026quot;コンパイラがシンボルを作成する必要がない\u0026quot;ということのような気がするな。もちろん規格には実装がどう振る舞うかは書いてないわけだけど\u003c/p\u003e\u0026mdash; 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/873176362550411264\"\u003e2017年6月9日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eまあtrivialだからってシンボルを作成しないとも限りませんしね\u003ca href=\"https://t.co/h6XFHBdTsh\"\u003ehttps://t.co/h6XFHBdTsh\u003c/a\u003e\u003c/p\u003e\u0026mdash; 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/873399548483297280\"\u003e2017年6月10日\u003c/a\u003e\u003c/blockquote\u003e\n\nただこのあと見ていくように`user-provided`ではないことが最低要件になっていて、そうするとこの推測は正しい気がします。ゆるふわ定義。\n\n# trivialなデストラクタを持つ(has a trivial destructor)\n\n\u003eN3337(C++11)\n\u003e§ 12.4.5 class.dtor\n\u003eA destructor is trivial if it is not user-provided and if:\n\u003e— the destructor is not virtual,\n\u003e— all of the direct base classes of its class have trivial destructors, and\n\u003e— for all of the non-static data members of its class that are of class type (or array thereof), each such class has a trivial destructor.\n\u003eOtherwise, the destructor is *non-trivial*.\n\n\u003eN4140(C++14)\n\u003e§ 12.4.5 class.dtor\n\u003e5 A destructor is trivial if it is not user-provided and if:\n\u003e(5.4) — the destructor is not virtual,\n\u003e(5.5) — all of the direct base classes of its class have trivial destructors, and\n\u003e(5.6) — for all of the non-static data members of its class that are of class type (or array thereof), each such class has a trivial destructor.\n\u003eOtherwise, the destructor is *non-trivial*.\n\n\n\u003eN4659(C++17)\n\u003e§ 15.4.6 class.dtor\n\u003e6 A destructor is trivial if it is not user-provided and if:\n\u003e(6.1) — the destructor is not virtual,\n\u003e(6.2) — all of the direct base classes of its class have trivial destructors, and\n\u003e(6.3) — for all of the non-static data members of its class that are of class type (or array thereof), each such class has a trivial destructor.\n\u003e Otherwise, the destructor is *non-trivial*.\n\nC++17で定義している節が移動しましたが、内容は変わっていません。\n\n対象となるクラスがtrivialなデストラクタを持つためには\n\n- デストラクタは`user-provided`ではない\n- デストラクターはvirtualではない\n\nことが大前提になります。\n\n`user-provided`ではない、とは**`= default`/`= delete` 指定していてもいい**、ということです。\nデストラクタをdeleteってどういうこと？という人は\n[C++ - C++11で、デストラクタ = deleteとする意味について(35601)｜teratail](https://teratail.com/questions/35601)\nを見に行きましょう。\n\nさらに\n\n- 非staticデータメンバーのデストラクターは、すべてtrivialである\n\n非staticメンバ変数にも上記の2条件が適応されます。\n\nもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\n\n- 直接の基底クラスのデストラクターは、すべてtrivialである\n\nこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記3条件を満たす必要があるということです。\nなぜならvirtual指定された関数と同名の関数を派生クラスで定義するとそれもvirtualになるからです。もちろんデストラクタも例外ではありません。\ncf.) [そのoverride指定は合法ですか？違法ですか？](http://qiita.com/yumetodo/items/f3ceb1a64a1540f85568)\n\nC++で継承関係を作るとき、多くの場合安全性を考えて基底クラスのデストラクタをvirtual指定します。\n[C++では基底クラスにvirtualデストラクタを書こう - ＊「ふっかつのじゅもんがちがいます。」withぬこ](http://d.hatena.ne.jp/ajiyoshi/20080925/p1)\nしかし、その時点でtrivialなデストラクタを持っていないんですね。\n\nデストラクターはvirtualではない、とは\n\n```cpp:C++\nclass HasNotUserProvidedVitrualDtorClass {\npublic:\n  virtual ~HasNotUserProvidedVitrualDtorClass() = default;\n};\n```\n\n`= default`指定されたvirtualデストラクタを除外するための条件です。\n\n# trivialに破棄可能(trivially destructible)\n\ntrivialに破棄可能とは、\n\n- trivialなデストラクタを持つ(has a trivial destructor)\n- **デストラクタが削除されていない**(is destructible)\n\nの2条件を満たすものを言います。**trivialなデストラクタを持つ、とtrivialに破棄可能、は同義ではありません**\n\nデストラクタが削除されていない、とは`=delete`指定されている場合(explicitly deleted)や、暗黙に削除されている場合などを含みます。\nこれは[`std::is_destructible`](https://cpprefjp.github.io/reference/type_traits/is_destructible.html)で調査可能です。\n\n条件をみたすかどうかは、[`std::is_trivially_destructible`](https://cpprefjp.github.io/reference/type_traits/is_trivially_destructible.html)で調べることができます。\n\n```cpp:C++\n#include \u003ctype_traits\u003e\n\nstruct C1 {\n  // トリビアルなデストラクタを持っている\n\n  // 特殊関数ではないメンバ関数は持っている\n  int f(int x) const { return x; }\n};\n\nstruct C2 {\n  // 非トリビアルなデストラクタを持っている\n  ~C2() {}\n};\n// 組み込み型は全てトリビアルに破棄可能\nstatic_assert(std::is_trivially_destructible\u003cint\u003e::value == true, \"int is trivially destructible\");\nstatic_assert(std::is_trivially_destructible\u003cint*\u003e::value == true, \"int* is trivially destructible\");\n\n// ユーザー定義型は、ユーザー定義のデストラクタを持っていなければトリビアルに破棄可能\nstatic_assert(std::is_trivially_destructible\u003cC1\u003e::value == true, \"C1 is trivially destructible\");\nstatic_assert(std::is_trivially_destructible\u003cC2\u003e::value == false, \"C2 isn't trivially destructible\");\n\nint main() {}\n```\n\n* `CC BY 3.0`: https://cpprefjp.github.io/reference/type_traits/is_trivially_destructible.html\n\n# trivialなコピー/ムーブコンストラクタを持つ(has a trivial copy/move constructor)\n\n\u003eN3337(C++11)\n\u003e§ 12.8 class.copy\n\u003e12 A copy/move constructor for class X is trivial if it is not user-provided and if\n\u003e— class X **has no virtual functions** (10.3) and no virtual base classes (10.1), and\n\u003e— the constructor selected to copy/move each direct base class subobject is trivial, and\n\u003e— for each non-static data member of X that is of class type (or array thereof), the constructor selected to copy/move that member is trivial;\n\u003eotherwise the copy/move constructor is *non-trivial*.\n\n\u003eN4140(C++14)\n\u003e§ 12.8 class.copy\n\u003e12 A copy/move constructor for class X is trivial if it is not user-provided\u003cfont color=\"red\"\u003e, its parameter-type-list is equivalent to the parameter-type-list of an implicit declaration, \u003c/font\u003eand if\n(12.1) — class X **has no virtual functions** (10.3) and no virtual base classes (10.1), and\n\u003cfont color=\"red\"\u003e(12.2) — class X **has no non-static data members of volatile-qualified type**, and\u003c/font\u003e\n(12.3) — the constructor selected to copy/move each direct base class subobject is trivial, and\n(12.4) — for each non-static data member of X that is of class type (or array thereof), the constructor selected to copy/move that member is trivial;\notherwise the copy/move constructor is *non-trivial*.\n\n\u003eN4569(C++17)\n\u003e§ 15.8.1 class.copy.ctor\n\u003e11 A copy/move constructor for class X is trivial if it is not user-provided and if:\n\u003e(11.1) — class X **has no virtual functions** (13.3) and no virtual base classes (13.1), and\n\u003e(11.2) — the constructor selected to copy/move each direct base class subobject is trivial, and\n\u003e(11.3) — for each non-static data member of X that is of class type (or array thereof), the constructor selected to copy/move that member is trivial;\notherwise the copy/move constructor is *non-trivial*.\n\nなんかC++14だけ制約が多いです。C++17から定義している節が移動しました。\n\n対象となるクラスがtrivialなコピー/ムーブコンストラクタを持つためには\n\n- コピー/ムーブコンストラクタは`user-provided`ではない\n- \u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003e仮引数リストが暗黙に宣言された場合の仮引数リストと同じ\n- **virtual関数を持たず**、virtual基本クラスも持たない\n- \u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003evolatile修飾された型の非staticデータメンバーを持たない\n\nが前提条件です。また、\n\n- クラス型か、クラスの配列型の非staticデータメンバーをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\n\n非staticメンバ変数についても先の4条件が適応されます。\n\nもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\n\n- 直接の基底クラスのサブオブジェクトをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\n\nこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記5条件を満たす必要があるということです。\n\ntrivialなデストラクタの要件と大きく違うのは、**virtual関数を持っていはいけない**ことでしょうか。\n\n仮引数リストが暗黙に宣言された場合の仮引数リストと同じ、というのは**正直何言っているのかわからない**です。ユーザー定義してはいけないんだから嫌でも暗黙に宣言された場合の仮引数リストと同じになると思うんですが・・・。\nこれはあれか？コピー/ムーブコンストラクタを`= delete`する場合は`X(const X\u0026)`/`X(X\u0026\u0026)`に対してのみ`= delete`しろってことか？しかもこの文言、C++14のみあるんだよな・・・、何なんだ一体・・・。\n\nvolatileの話もなぜかC++14だけあって**よくわからない**です。\n\n# tirivalにコピー/ムーブ構築可能(trivially copy/move constructible)\n\ntirivalにコピー/ムーブ構築可能、であるためには\n\n- trivialなコピー/ムーブコンストラクタを持つ(has copy/move constructor)\n- コピー/ムーブ構築可能(is copy/move constructible)\n\nの2条件を満たす必要があります。\n\nコピー/ムーブ構築可能とは、特定の引数のときに構築可能(is constructible)、に定義がたらい回されており、これは\n\n\u003eN3337(C++11)\n\u003e§ 20.10.4.3 meta.unary.prop\n\u003e6 \u003cfont color=\"red\"\u003eGiven the following function prototype:\u003c/font\u003e\n\u003e\n```cpp\ntemplate \u003cclass T\u003e\ntypename add_rvalue_reference\u003cT\u003e::type create();\n```\n\n\u003ethe predicate condition for a template specialization `is_constructible\u003cT, Args...\u003e` shall be satisfied if and only if the following variable definition would be well-formed for some invented variable t:\n\u003e\n```cpp\nT t(create\u003cArgs\u003e()...);\n```\n\n\u003e*[ Note:* These tokens are never interpreted as a function declaration. *—end note ]* Access checking is\nperformed as if in a context unrelated to `T` and any of the `Args`. Only the validity of the immediate context of the variable initialization is considered. *[ Note:* The evaluation of the initialization can result in side effects such as the instantiation of class template specializations and function template specializations, the generation of implicitly-defined functions, and so on. Such side effects are not in the “immediate context” and can result in the program being ill-formed. *—end note ]*\n\n\u003eN4140(C++14)\n\u003e§ 20.10.4.3 meta.unary.prop\n\u003e7 \u003cfont color=\"red\"\u003eGiven the following function prototype:\u003c/font\u003e\n\u003e\n```cpp\ntemplate \u003cclass T\u003e\nadd_rvalue_reference_t\u003cT\u003e create() noexcept;\n```\n\n\u003ethe predicate condition for a template specialization `is_constructible\u003cT, Args...\u003e` shall be satisfied if and only if the following variable definition would be well-formed for some invented variable t:\n\u003e\n```cpp\nT t(create\u003cArgs\u003e()...);\n```\n\n\u003e*[ Note:* These tokens are never interpreted as a function declaration. *—end note ]* Access checking is performed as if in a context unrelated to `T` and any of the `Args`. Only the validity of the immediate context of the variable initialization is considered. *[ Note:* The evaluation of the initialization can result in side effects such as the instantiation of class template specializations and function template specializations, the generation of implicitly-defined functions, and so on. Such side effects are not in the “immediate context” and can result in the program being ill-formed. *—end note ]*\n\n\u003eN4569\n\u003e§ 23.15.4.3 meta.unary.prop\n\u003e8 The predicate condition for a template specialization `is_constructible\u003cT, Args...\u003e` shall be satisfied if and only if the following variable definition would be well-formed for some invented variable t:\n\u003e\n```cpp\nT t(declval\u003cArgs\u003e()...);\n```\n\n\u003e*[ Note:* These tokens are never interpreted as a function declaration. *—end note ]* Access checking is performed as if in a context unrelated to `T` and any of the `Args`. Only the validity of the immediate context of the variable initialization is considered. *[ Note:* The evaluation of the initialization can result in side effects such as the instantiation of class template specializations and function template specializations, the generation of implicitly-defined functions, and so on. Such side effects are not in the “immediate context” and can result in the program being ill-formed. *—end note ]*\n\nまあなんかごちゃごちゃ書いている上にC++17から[`std::declval`](https://cpprefjp.github.io/reference/utility/declval.html)を使う定義に書き換わっていますが、ようはpublicに宣言されているコンストラクタに指定の引数を渡して見たときにエラーが起きない、つまり呼び出せれば特定の引数のときに構築可能(is constructible)だ、という極めてありきたりな定義になっています。これは[`std::is_constrictible`](https://cpprefjp.github.io/reference/type_traits/is_constructible.html)で調べられます。\n\nで、話を戻してtirivalにコピー/ムーブ構築可能かどうかは[`std::is_trivially_copy_constructible`](https://cpprefjp.github.io/reference/type_traits/is_trivially_copy_constructible.html)/[`std::is_trivially_move_constructible`](https://cpprefjp.github.io/reference/type_traits/is_trivially_move_constructible.html)で調べられます。\n\n# trivialなコピー/ムーブ代入演算子を持つ(trivially copy/move assignable)\n\n\u003eN3337(C++11)\n\u003e§ 12.8 class.copy\n\u003e25 A copy/move assignment operator for class X is trivial if it is not user-provided and if\n\u003e— class X **has no virtual functions** (10.3) and no virtual base classes (10.1), and\n— the assignment operator selected to copy/move each direct base class subobject is trivial, and\n— for each non-static data member of X that is of class type (or array thereof), the assignment operator selected to copy/move that member is trivial;\n\u003eotherwise the copy/move assignment operator is *non-trivial*.\n\u003e\n\u003eN4140(C++14)\n\u003e§ 12.8 class.copy\n\u003e25 A copy/move assignment operator for class X is trivial if it is not user-provided\u003cfont color=\"red\"\u003e, its parameter-type-list is equivalent to the parameter-type-list of an implicit declaration, \u003c/font\u003eand if\n(25.1) — class X **has no virtual functions** (10.3) and no virtual base classes (10.1), and\n\u003cfont color=\"red\"\u003e(25.2) — class X **has no non-static data members of volatile-qualified type**, and\u003c/font\u003e\n(25.3) — the assignment operator selected to copy/move each direct base class subobject is trivial, and\n\u003e(25.4) — for each non-static data member of X that is of class type (or array thereof), the assignment operator selected to copy/move that member is trivial;\notherwise the copy/move assignment operator is *non-trivial*.\n\u003e\n\u003eN4659(C++17)\n\u003e§ 15.8.2 class.copy.assign\n\u003e9 A copy/move assignment operator for class X is trivial if it is not user-provided and if:\n(9.1) — class X **has no virtual functions** (13.3) and no virtual base classes (13.1), and\n(9.2) — the assignment operator selected to copy/move each direct base class subobject is trivial, and\n(9.3) — for each non-static data member of X that is of class type (or array thereof), the assignment operator selected to copy/move that member is trivial;\notherwise the copy/move assignment operator is *non-trivial*.\n\n\n**基本的に「trivialなコピー/ムーブコンストラクタを持つ」と同じです**\n\n対象となるクラスがtrivialなコピー/ムーブ代入演算子を持つためには\n\n- コピー/ムーブ代入演算子は`user-provided`ではない\n- \u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003e仮引数リストが暗黙に宣言された場合の仮引数リストと同じ\n- **virtual関数を持たず**、virtual基本クラスも持たない\n- \u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003evolatile修飾された型の非staticデータメンバーを持たない\n\nが前提条件です。また、\n\n- クラスXのクラス型とクラスの配列型の非staticデータメンバーの、コピー/ムーブに使われる代入演算子がトリビアル\n\n非staticメンバ変数についても先の4条件が適応されます。\n\nもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\n\n- 直接の基底クラスのサブオブジェクトで使われるコピー/ムーブの代入演算子がトリビアル\n\nこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記5条件を満たす必要があるということです。\n\nで、例によって脳内で調べるのは限界があるので[`std::is_trivially_copy_assignable`](https://cpprefjp.github.io/reference/type_traits/is_trivially_copy_assignable.html)/[`std::is_trivially_move_assignable`](https://cpprefjp.github.io/reference/type_traits/is_trivially_move_assignable.html)があります。\n\n# トリビアルにコピー可能なクラス(trivially copyable class)\n\nこの定義がC++11/C++14とC++17で大きく変わっているのでそれぞれ考察していきましょう。\n\n## C++11/C++14\n\n\u003eN3337(C++11)\n\u003e§ 9. class\n\u003e6 A trivially copyable class is a class that:\n— has no non-trivial copy constructors (12.8),\n— has no non-trivial move constructors (12.8),\n— has no non-trivial copy assignment operators (13.5.3, 12.8),\n— has no non-trivial move assignment operators (13.5.3, 12.8), and\n— has a trivial destructor (12.4).\nA trivial class is a class that has a trivial default constructor (12.1) and is trivially copyable.\n[ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\n\u003e\n\u003eN4140(C++14)\n\u003e§ 9. class\n\u003e6 A trivially copyable class is a class that:\n(6.1) — has no non-trivial copy constructors (12.8),\n(6.2) — has no non-trivial move constructors (12.8),\n(6.3) — has no non-trivial copy assignment operators (13.5.3, 12.8),\n(6.4) — has no non-trivial move assignment operators (13.5.3, 12.8), and\n(6.5) — has a trivial destructor (12.4).\nA trivial class is a class that has a default constructor (12.1), has no non-trivial default constructors, and is trivially copyable. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\n\nC++11/C++14では、対象となるクラスがtrivially copyable classであるためには、\n\n- trivialではないコピーコンストラクタを持たない\n- trivialではないムーブコンストラクタを持たない\n- trivialではないコピー代入演算子を持たない\n- trivialではないムーブ代入演算子を持たない\n- trivialなデストラクタを持つ\n\nを満たす必要があります。\n\n「trivialではない～を持たない」ってすごく回りくどいですね。「すべての～はtrivial」と解釈しましょう。\n\nそれを踏まえ、上のまとめを合体して解釈すると\n\n- デストラクターはvirtualではない\n- デストラクタと全てのコピー/ムーブ コンストラクタ/代入演算子は`user-provided`ではない\n- \u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003eコンストラクタ/代入演算子の仮引数リストが暗黙に宣言された場合の仮引数リストと同じ\n- \u003cfont color=\"red\"\u003e(C++14のみ)\u003c/font\u003evolatile修飾された型の非staticデータメンバーを持たない\n- **virtual関数を持たず**、virtual基本クラスも持たない\n\nさらに\n\n- 非staticデータメンバーのデストラクターは、すべてtrivialである\n- クラス型か、クラスの配列型の非staticデータメンバーをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\n- クラスXのクラス型とクラスの配列型の非staticデータメンバーの、コピー/ムーブに使われる代入演算子がトリビアル\n\n非staticメンバ変数にも上記の3(C++14では5)条件が適応されます。\n\nもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\n\n- 直接の基底クラスのデストラクターは、すべてtrivialである\n- 直接の基底クラスのサブオブジェクトをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\n- 直接の基底クラスのサブオブジェクトで使われるコピー/ムーブの代入演算子がトリビアル\n\nこのように追加条件があります。これは言い換えると、継承関係にあるクラスのうち基底クラス方向すべてのクラスが上記6(C++14では8)条件を満たす必要があるということです。\n\n面白いのはデストラクタが`= delete`指定されていてもいいということです。いや、もしかするとCore IssueとかになってC++17の規定がさかのぼって適応とかなってるかもしれませんが。\n\n## C++17\n\n\u003eN4659(C++17)\n\u003e§ 12. class\n\u003e6 A trivially copyable class is a class:\n(6.1) — where each copy constructor, move constructor, copy assignment operator, and move assignment operator (15.8, 16.5.3) is either deleted or trivial,\n(6.2) — that has at least one non-deleted copy constructor, move constructor, copy assignment operator, or move assignment operator, and\n(6.3) — that has a trivial, non-deleted destructor (15.4).\nA trivial class is a class that is trivially copyable and has one or more default constructors (15.1), all of which are either trivial or deleted and at least one of which is not deleted. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\n\nC++11/C++14では、対象となるクラスがtrivially copyable classであるためには、\n\n- 全てのコピー/ムーブ コンストラクタ/代入演算子はtrivialもしくは`= delete`指定されている\n- コピー/ムーブ コンストラクタ/代入演算子のうち少なくとも1つは`= delete`指定されていない\n- trivialで`= delete`指定されていないデストラクタを持つ\n\nを満たす必要があります。\n\nC++11/C++14と比べると、回りくどい書き方をやめてスッキリしましたね。また実質的な定義にも変更があります。\n\n1つ目の「trivialもしくは`= delete`指定されている」というのは**冗長**です。ここまで見てきたようにtrivialに`= delete`指定は含まれますからね。多分2つ目と3つ目で「`= delete`指定されていない」と書いたので対称性の観点からわざわざ書いてくれたんでしょう。\n\n上のまとめを合体して解釈すると\n\n- デストラクターはvirtualではない\n- **デストラクターは`= delete`指定されていない**\n- デストラクタと全てのコピー/ムーブ コンストラクタ/代入演算子は`user-provided`ではない\n- **virtual関数を持たず**、virtual基本クラスも持たない\n- **コピー/ムーブ コンストラクタ/代入演算子のうち少なくとも1つは`= delete`指定されていない**\n\nさらに\n\n- 非staticデータメンバーのデストラクターは、すべてtrivialである\n- クラス型か、クラスの配列型の非staticデータメンバーをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\n- クラスXのクラス型とクラスの配列型の非staticデータメンバーの、コピー/ムーブに使われる代入演算子がトリビアル\n\n非staticメンバ変数にも上記の5条件が適応されます。\n\nもし対象となるクラスが基底クラスを保つ場合は(なんか継承している場合)\n\n- 直接の基底クラスのデストラクターは、すべてtrivialである\n- 直接の基底クラスのサブオブジェクトをコピー/ムーブするのに使われるコンストラクターがトリビアルであること\n- 直接の基底クラスのサブオブジェクトで使われるコピー/ムーブの代入演算子がトリビアル\n\nこのように追加条件があります。これは言い換えると、**継承関係にあるクラスのうち基底クラス方向すべてのクラスが**上記8条件を満たす必要があるということです。\n\n## trivially copyable classの嬉しいこと\n\n**trivially copyable classであれば、`memcpy`関数などで単純なバイト列のコピーができるようになります**。\n\n\u003e[本の虫: C++0xにおけるPODの定義](https://cpplover.blogspot.jp/2010/06/c0xpod.html)\n\u003eつまり、memcpyでコピー出来るクラスの制限は、だいぶ緩和される。まず、コンストラクタがあってもいいし、継承していてもいい。standard-layout classである必要はない。派生クラスと基本クラスが、共に非staticなデータメンバーをもっていても構わない。アクセス指定もできる。\n\n# trivialなクラス(trivial class)\n\nこの概念はもともとPODを説明するために必要だったのですが、後述の通りPOD自体がC++20でdeprecatedになったのでこいつも忘れていいです。\n\nそういうわけであまり重要な議論ではないので割愛したかったのですが、規格の文章だけ上でちらっと出てしまっているので引っ張り直しておきます。\n\n\u003eN3337(C++11)\n\u003e§ 9. class\n\u003eA trivial class is a class that has a trivial default constructor (12.1) and is trivially copyable.\n[ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\n\u003e\n\u003eN4140(C++14)\n\u003e§ 9. class\n\u003eA trivial class is a class that has a default constructor (12.1), has no non-trivial default constructors, and is trivially copyable. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\n\u003e\n\u003eN4659(C++17)\n\u003e§ 12. class\n\u003eA trivial class is a class that is trivially copyable and has one or more default constructors (15.1), all of which are either trivial or deleted and at least one of which is not deleted. [ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes.—end note ]\n\nC++17でone or more default constructorsとか言い出したんですが、デフォルトコンストラクタが複数ってどういうコッチャ・・・\n\n# standard-layoutなクラス(standard-layout class)\n\n2017年にこの記事を書き始めたときは解説する気満々だったんですが、執筆を放置していたら\n\n[C++における標準レイアウトクラスの定義](https://qiita.com/nus_miz/items/d09bfda40d5cc0866675)\n\n先を越されました。こっち見てください。\n\nこいつにはPODの説明以外にちゃんと役割があるので大切です。\n\n\u003e[本の虫: PODじゃなくてもいいのでは。](https://cpplover.blogspot.com/2010/05/pod.html)\n\u003e standard-layout class\n\u003e\n\u003eこのクラスは、オブジェクトへのポインターは、クラスの最初のデータメンバーを指し示すことを保証するものである。**つまり、reinterpret_castを使って、オブジェクトへのポインターを、最初のデータメンバーのポインターにキャストした場合、ポインターは、最初のデータメンバーを指すことが保証される。**\n\n# PODなクラス(pod class)\n\nC++20からdeprecatedになる概念です。\n\n\u003e[本の虫: C++0xにおけるPODの定義](https://cpplover.blogspot.com/2010/06/c0xpod.html)\n\u003ePODは、trivial classかつstandard-layout classであること。\n\u003eさらに、非PODな非staticデータメンバーを持たないこと。\n\n**PODのことは忘れましょう**。そういうのは考古学者に任せるべきです。\n\n# 参考リンク\n\n## Working Draft, Standard for Programming Language C++\n\n- [PDF注意][N3337](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf): C++11 first post-publication draft\n- [PDF注意][N4140](https://github.com/cplusplus/draft/blob/master/papers/n4140.pdf?raw=true): C++14 final draft\n- [PDF注意][N4569](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf): C++17 final draft\n\n## C++ Standard Core Language Issues\n\n- [1496](http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1496). Triviality with deleted and missing default constructors\n- [1590](http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#1590). Bypassing non-copy/move constructor copying\n- [1734](http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1734). Nontrivial deleted copy functions\n- [1928](http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#1928). Triviality of deleted special member functions\n\n## JTC1/SC22/WG21 - Papers\n\n- [N4148](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4148.html): Disallowing Inaccessible Operators From Trivially Copyable\n\n## C++11: Syntax and Feature(江添亮)\n\n- [C++11: Syntax and Feature](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml)\n\n## 本の虫 - 江添亮のブログ\n\n- 2010-05-13: [PODじゃなくてもいいのでは。](https://cpplover.blogspot.jp/2010/05/pod.html)\n- 2010-06-09: [C++0xにおけるPODの定義](https://cpplover.blogspot.jp/2010/06/c0xpod.html)\n\n## cpprefjp C++日本語リファレンス\n\n- [`std::is_trivially_copyable`(C++11)](https://cpprefjp.github.io/reference/type_traits/is_trivially_copyable.html)\n- [`std::is_trivially_move_assignable`(C++11)](https://cpprefjp.github.io/reference/type_traits/is_trivially_move_assignable.html)\n\n## Other Links about C++\n\n- 2010-03-08: [デストラクタを呼ばずに再構築 - melpon日記 - HaskellもC++もまともに扱えないへたれのページ](http://d.hatena.ne.jp/melpon/20100308/1267998293)\n- 2010-05-07: [C++でデストラクタを呼ばなくていい条件 - 野良C++erの雑記帳](http://d.hatena.ne.jp/gintenlabo/20100507/1273261890)\n- 2010-05-13: [C++0xではPODでもコンストラクタ相当のことができる・・・？ - Faith and Brave - C++で遊ぼう](http://faithandbrave.hateblo.jp/entry/20100513/1273732111)\n- 2012-11-22: [trivial class - C++と色々](http://nekko1119.hatenablog.com/entry/20121122/1353576526)\n- 2014-07-04: [特殊メンバ関数とコンパイラによる暗黙宣言 - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20140704/p1)\n- 2016-05-21: [C++ - C++11で、デストラクタ = deleteとする意味について(35601)｜teratail](https://teratail.com/questions/35601)\n- 2017-06-09: [@EzoeRyou@friends.nico 突然すみません。C - yumetodo - Pawoo](https://pawoo.net/@yumetodo/19093347)\n\n## Other Links\n\n- [not～orとnot～nor - 英語 解決済 | 教えて!goo](https://oshiete.goo.ne.jp/qa/2089050.html)\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-06-10T12:55:59+09:00","group":null,"id":"424cc4d15de4edad436a","likes_count":37,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C++14","versions":[]},{"name":"C++17","versions":[]},{"name":"C++規格書リーディング","versions":[]}],"title":"C++初心者に贈る強そうな人からC++のclassに関連する謎な用語を使われたときにみるもの: trivialとか","updated_at":"2019-04-03T13:48:49+09:00","url":"https://qiita.com/yumetodo/items/424cc4d15de4edad436a","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"注意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意\u003c/h1\u003e\n\n\u003cp\u003eこの記事にはtemplateを利用したサンプルコードや技法が紹介されている場所があります。入門者は卒業した！という方以外はスルーしてください。また\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8\" id=\"reference-9e91d64de717f4bdc7d7\"\u003eC99からC++14を駆け抜けるC++講座\u003c/a\u003e\u003cbr\u003e\nも合わせてお読みください。\u003c/p\u003e\n\n\u003cp\u003eまた、この記事はC++入門者がこの記事をんだ\u003cstrong\u003eだけ\u003c/strong\u003eで内容を理解できることを目的と\u003cstrong\u003eしておらず\u003c/strong\u003e、\u003cstrong\u003e調べるきっかけを与える\u003c/strong\u003eことを意図したものです。当然\u003cstrong\u003eわからない単語や機能がいきなり出てきます\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003eみなさま、\u003ca href=\"http://www.nicovideo.jp/watch/sm25261912\" rel=\"nofollow noopener\" target=\"_blank\"\u003eナマステ\u003c/a\u003e。\u003cbr\u003e\nさて、この記事を読んでいる方ならC言語の構造体についてはすでにご存知だと思います。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんな感じのやつですね。\u003c/p\u003e\n\n\u003cp\u003eところでC++にはなんかClassとかいうのがあるらしい。なんか関数が持てるとかきいたぞ？オブジェクト指向が云々とか誰かが言ってた！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"classとオブジェクト指向は別物です\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#class%E3%81%A8%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%81%AF%E5%88%A5%E7%89%A9%E3%81%A7%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClassとオブジェクト指向は別物です\u003c/h1\u003e\n\n\u003cp\u003eまあそもそも\u003ca href=\"http://qiita.com/hirokidaichi/items/591ad96ab12938878fe1\" id=\"reference-3c5d61248da99a2f76c0\"\u003eC++のオブジェクト指向はオブジェクト指向じゃないみたいな話もありますが\u003c/a\u003eそれはさておき、Classとオブジェクト指向は別物ですといっておく必要はあるでしょう。\u003c/p\u003e\n\n\u003cp\u003eどういうことかというと、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"md\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gh\"\u003e# C++でオブジェクト指向プログラミングをするためにほしい言語機能\u003c/span\u003e\n\u003cspan class=\"p\"\u003e-\u003c/span\u003e Class\n\u003cspan class=\"p\"\u003e-\u003c/span\u003e etc\n.\n.\n.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eであって、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eClass == オブジェクト指向\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eではないということです。実際このあと紹介しますがClassはオブジェクト指向プログラミング以外にも多様な用途があります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"classとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#class%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClassとは\u003c/h1\u003e\n\n\u003cp\u003eめったに使われない機能やC++入門者に説明しづらい機能は省略します。\u003c/p\u003e\n\n\u003cp\u003eCの構造体宣言でタグ名とか言われていた部分がクラス名になります。なのでいちいちtypedefする必要はありません。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFuga\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cの構造体とおなじく非staticなメンバ変数を持てる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E3%81%AE%E6%A7%8B%E9%80%A0%E4%BD%93%E3%81%A8%E3%81%8A%E3%81%AA%E3%81%98%E3%81%8F%E9%9D%9Estatic%E3%81%AA%E3%83%A1%E3%83%B3%E3%83%90%E5%A4%89%E6%95%B0%E3%82%92%E6%8C%81%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCの構造体とおなじく(非staticな)メンバ変数を持てる\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eまあそりゃそうですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"constメンバ変数を持てる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#const%E3%83%A1%E3%83%B3%E3%83%90%E5%A4%89%E6%95%B0%E3%82%92%E6%8C%81%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003econstメンバ変数を持てる\u003c/h2\u003e\n\n\u003cp\u003e忘れろ\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"アクセス指定がある\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E6%8C%87%E5%AE%9A%E3%81%8C%E3%81%82%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eアクセス指定がある\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eprivate\u003c/code\u003e, \u003ccode\u003eprotected\u003c/code\u003e, \u003ccode\u003epublic\u003c/code\u003e の三種類あります。\u003ccode\u003estruct\u003c/code\u003eキーワードでクラスを宣言したときはデフォルトで\u003ccode\u003epublic\u003c/code\u003e、\u003ccode\u003eclass\u003c/code\u003eキーワードでクラスを宣言したときはデフォルトで\u003ccode\u003eprivate\u003c/code\u003eになります。\u003c/p\u003e\n\n\u003cp\u003eなにが嬉しいかは後述します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"型定義をメンバに持てる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%9E%8B%E5%AE%9A%E7%BE%A9%E3%82%92%E3%83%A1%E3%83%B3%E3%83%90%E3%81%AB%E6%8C%81%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e型定義をメンバに持てる\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003evalue_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue_type\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.1\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eクラスの中だけで有効な型aliasです。ぶっちゃけtemplateと組み合わせないとほとんど有り難みがないです。アクセス指定が\u003ccode\u003epublic\u003c/code\u003eのときは、クラスの外から\u003ccode\u003e::\u003c/code\u003e演算子で利用できますが、C++11で追加されたauto型推論とかtemlate alias(解説しません)のせいでめったに\u003ccode\u003e::\u003c/code\u003e演算子をクラスの外から型aliasを使うために使うことはなくなりました。\u003c/p\u003e\n\n\u003cp\u003eちなみに\u003ccode\u003eusing value_type = float;\u003c/code\u003eという記法は\u003ccode\u003eusing alias\u003c/code\u003eというC++11で追加されたtypedefに変わる記法です。\u003ca href=\"http://qiita.com/Linda_pp/items/44a67c64c14cba00eef1\" id=\"reference-f9dfcfaf882b5a5db8e7\"\u003etypedef は C++11 ではオワコン\u003c/a\u003eらしいので積極的に使っていきましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"非staticで非virtualなメンバ関数を持てる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%9Estatic%E3%81%A7%E9%9D%9Evirtual%E3%81%AA%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%82%92%E6%8C%81%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e(非staticで非virtualな)メンバ関数を持てる\u003c/h1\u003e\n\n\u003cp\u003eお待たせしました、「C++のクラスは関数が持てるんだよ～」というあれです。え？ \u003ccode\u003estatic\u003c/code\u003e って？　\u003ccode\u003evirtual\u003c/code\u003e ってなんだって？後述しますが、簡単に言うとふつうのメンバ関数です。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eメンバ関数からメンバ変数にアクセスするには、\u003ccode\u003ethis\u003c/code\u003eという、自分自身のクラスを指す特殊なポインタを利用します。これは暗黙のうちにメンバ関数を呼び出すときに0番目の引数として渡されています。\u003c/p\u003e\n\n\u003cp\u003eC++の場合thisを渡すのが関数呼び出し規約レベル(\u003ccode\u003ethiscall\u003c/code\u003eとか)でやっているのでピンとこないかもしれませんが、例えばRustという言語の場合\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rust\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eRust\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// parse_self_arg\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimpl\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"k\"\u003emut\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003ef3\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003ef4\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBox\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// 生存期間を明示すると以下の通り\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// fn f2\u0026lt;'a\u0026gt;(self: \u0026amp;'a mut A) {}\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e// fn f3\u0026lt;'a\u0026gt;(self: \u0026amp;'a A) {}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eはっきりと明示的に\u003ccode\u003eself\u003c/code\u003eを引数に指定して宣言します(\u003ccode\u003eself\u003c/code\u003eってのがC++でいう\u003ccode\u003ethis\u003c/code\u003eに該当する)。\u003cbr\u003e\nref: \u003ca href=\"http://qnighy.hatenablog.com/entry/2017/03/22/070000\" rel=\"nofollow noopener\" target=\"_blank\"\u003eRustのself引数まとめ - 簡潔なQ\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eluaという言語なら\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"lua\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eLua\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e-- ################# define function\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e-- オブジェクトを作成するnewメソッドを定義（Javascriptで言うコンストラクタのようなもの）\u003c/span\u003e\n\u003cspan class=\"n\"\u003eCoordinate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eCoordinate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e_x\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003e_y\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003elocal\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_x\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_y\u003c/span\u003e\n\n  \u003cspan class=\"c1\"\u003e-- pp というインスタンスメソッドをオブジェクト内に格納\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estring.format\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"(%d,%d)\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e \n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e-- ################## main\u003c/span\u003e\n\u003cspan class=\"n\"\u003epoint1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCoordinate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- 座標(1,3)というオブジェクト\u003c/span\u003e\n\u003cspan class=\"n\"\u003epoint2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCoordinate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- 座標(3,2)というオブジェクト\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epoint1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epoint1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epoint2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epoint2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e呼び出しすら明示的にメソッドの第一引数に指定します(もっとも面倒なのでシンタックスシュガーとして \u003ccode\u003epoint1.pp(point1)\u003c/code\u003eを\u003ccode\u003epoint1:pp()\u003c/code\u003eと書けるようにはなっています)。\u003cbr\u003e\nref: \u003ca href=\"http://hevohevo.hatenablog.com/entry/2014/02/03/214843\" rel=\"nofollow noopener\" target=\"_blank\"\u003eLuaでオブジェクト指向（１）―基本はコロン記法とメタテーブル - Minecraftとタートルと僕\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e話をC++に戻しましょう。\u003ccode\u003ep.x()\u003c/code\u003eのようにしてメンバ関数を呼び出せますが、この時pへのポインタが0番目の引数としてメンバ関数\u003ccode\u003ePoint::x\u003c/code\u003eに渡されます。この0番目の引数が\u003ccode\u003ethis\u003c/code\u003eなんですね。\u003c/p\u003e\n\n\u003cp\u003eちなみに\u003ccode\u003ethis\u003c/code\u003eはNullポインタにならないんだからなんで参照やないや！と思うかもしれませんが、\u003ca href=\"https://cpplover.blogspot.jp/2009/05/rvalue-reference.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003ethisがポインタであるのは、単にthisが参照よりも早く導入されたという、歴史的な理由でしかない\u003c/a\u003eです、あきらめましょう。\u003c/p\u003e\n\n\u003cp\u003eメンバ関数は、\u003cstrong\u003e\u003ccode\u003ethis\u003c/code\u003eポインタがconst修飾か否かでoverloadできます\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"c1\"\u003e// -- (1)\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"c1\"\u003e// -- (2)\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003euse_const_version\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//p.x() = 3;//const修飾されていないメンバ関数は呼び出せない\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(1)の方が呼ばれる\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003euse_non_const_version\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(2)の方が呼ばれる。p.x_へのlvalue referenceが返されされるので書き換えられる\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(2)の方が呼ばれる\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"n\"\u003euse_const_version\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 0\u003c/span\u003e\n  \u003cspan class=\"n\"\u003euse_non_const_version\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 3\u003c/span\u003e\n  \u003cspan class=\"n\"\u003euse_const_version\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 3\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eちなみにメンバ関数の実態はクラスに固有なのでオブジェクト作るごとに関数の実体が増殖したりはしません(じゃないとデータ実行防止（DEP）が使えなくて危ない)。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"コンストラクタをもつ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%82%92%E3%82%82%E3%81%A4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンストラクタをもつ\u003c/h2\u003e\n\n\u003cp\u003eまず、\u003cstrong\u003eCでいう構造体やC++のクラス型の変数をオブジェクトと言うことがあります\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003eで、\u003cstrong\u003eオブジェクトをどのように生成するかを決めるのがコンストラクタ\u003c/strong\u003eです。基本的にはメンバ変数の初期化をするためのものですが、べつにそれ以外のこともできます。呼び出し方とできることが特殊なメンバ関数ですからね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;cstddef\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003einferior_string_view\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003esize_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ebegin_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esize_type\u003c/span\u003e \u003cspan class=\"n\"\u003en_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003einferior_string_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize_type\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ebegin_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003en_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003efront\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eクラス名\u003c/code\u003e(\u003ccode\u003e引数\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e) \u003ccode\u003enoexceptとか\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e : \u003ccode\u003eメンバー初期化子\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e { \u003ccode\u003eコンストラクタの処理\u003c/code\u003e}\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eのように書きます。宣言と定義を分けたいときは\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eクラス名\u003c/code\u003e(\u003ccode\u003e引数\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e) \u003ccode\u003enoexceptとか\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e;\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと宣言して、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eクラス名\u003c/code\u003e::\u003ccode\u003eクラス名\u003c/code\u003e(\u003ccode\u003e引数\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e) \u003ccode\u003enoexceptとか\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e : \u003ccode\u003eメンバー初期化子\u003c/code\u003e\u003csub\u003eopt\u003c/sub\u003e { \u003ccode\u003eコンストラクタの処理\u003c/code\u003e}\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと定義します。\u003c/p\u003e\n\n\u003cp\u003eメンバ初期化子は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eメンバ変数名(値)\u003c/code\u003e: 対象のメンバ変数を明示的初期化する\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eメンバ変数名{値}\u003c/code\u003e: 対象のメンバ変数を明示的初期化する\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eメンバ変数名()\u003c/code\u003e: 対象のメンバ変数を値初期化する\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eメンバ変数名{}\u003c/code\u003e: 対象のメンバ変数を値初期化する\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eクラス名(値）\u003c/code\u003e: 自分のクラスのほかのコンストラクタを呼び出す\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e基底クラス名(値)\u003c/code\u003e: 継承をしているときの基底クラス(派生元, base class, 解説しません)のコンストラクタを呼び出す\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eのように書きます\u003c/p\u003e\n\n\u003cp\u003eメンバ初期化子は\u003cstrong\u003e必ずメンバー変数の宣言順に書きましょう\u003c/strong\u003e。基本的にメンバ変数の初期化はメンバ初期化子でやりますが、初期化順序に依存性がある場合は\u003ccode\u003eコンストラクタの処理\u003c/code\u003eの中に書きましょう。もちろん\u003ccode\u003eコンストラクタの処理\u003c/code\u003eでは\u003ccode\u003ethis\u003c/code\u003eが使えます。\u003c/p\u003e\n\n\u003cp\u003e明示的初期化や値初期化については極めて難解ですが、基本的には\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e組み込み型(\u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003edouble\u003c/code\u003e, etc...): \u003ccode\u003e=\u003c/code\u003e初期化と同じ結果\u003c/li\u003e\n\u003cli\u003eオブジェクト: コンストラクタを呼び出す\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eという挙動だと思ってください。詳細は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://torini.hateblo.jp/entry/2015/03/08/C%2B%2B%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%AF%E5%88%86%E3%81%8B%E3%82%8A%E3%81%AB%E3%81%8F%E3%81%84\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++の初期化は分かりにくい - ぷろみん\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/prettysoft/20101103/1394815453\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++ の初期化 - プログラミングの教科書を置いておくところ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eに譲りますが、頭がこんがらがるだけなので\u003cstrong\u003e理解しないほうが幸せ\u003c/strong\u003eかと思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"非staticなメンバ変数にデフォルト値を設定できる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%9Estatic%E3%81%AA%E3%83%A1%E3%83%B3%E3%83%90%E5%A4%89%E6%95%B0%E3%81%AB%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E5%80%A4%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%A7%E3%81%8D%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e(非staticな)メンバ変数にデフォルト値を設定できる\u003c/h2\u003e\n\n\u003cp\u003eメンバ変数のデフォルト初期化という機能です。コンストラクタで初期化するオブジェクトですが、コンストラクタは何個も書くことが普通なため、メンバ変数の初期化忘れをする可能性があります。そこで登場するのがこの機能で、コンストラクタで初期化忘れしても、設定したデフォルト値で初期化されます。もちろんコンストラクタの初期化が優先されます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 3\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"operator-overloadできる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#operator-overload%E3%81%A7%E3%81%8D%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eoperator overloadできる\u003c/h2\u003e\n\n\u003cp\u003eさて、C++にはoperator overloadという言語機能があります。これは\u003cstrong\u003eオブジェクトに対する演算子の挙動を定義できる機能\u003c/strong\u003eです(ただしallocation functionとdeallocation functionは除く)。後述する例外を除き勝手にオブジェクトに対する演算子を作ってはくれません。\u003c/p\u003e\n\n\u003cp\u003eoperator overloadの種類としては\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e普通のoperator overload\u003c/li\u003e\n\u003cli\u003e型変換演算子\u003c/li\u003e\n\u003cli\u003eallocation function\u003c/li\u003e\n\u003cli\u003edeallocation function\u003c/li\u003e\n\u003cli\u003eUser-defined literal\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eがありますが、2はbool型へのexplict conversion operator(解説しません)以外忘れてください。3,4は忘れてください。5はここでは解説しません。\u003c/p\u003e\n\n\u003cp\u003e普通のoperator overloadとは、\u003ccode\u003e+\u003c/code\u003e \u003ccode\u003e-\u003c/code\u003e \u003ccode\u003e*\u003c/code\u003e \u003ccode\u003e/\u003c/code\u003e \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003eˆ\u003c/code\u003e \u003ccode\u003e\u0026amp;\u003c/code\u003e \u003ccode\u003e|\u003c/code\u003e \u003ccode\u003e~\u003c/code\u003e \u003ccode\u003e!\u003c/code\u003e \u003ccode\u003e=\u003c/code\u003e \u003ccode\u003e\u0026lt;\u003c/code\u003e \u003ccode\u003e\u0026gt;\u003c/code\u003e \u003ccode\u003e+=\u003c/code\u003e \u003ccode\u003e-=\u003c/code\u003e \u003ccode\u003e*=\u003c/code\u003e \u003ccode\u003e/=\u003c/code\u003e \u003ccode\u003e%=\u003c/code\u003e \u003ccode\u003eˆ=\u003c/code\u003e \u003ccode\u003e\u0026amp;=\u003c/code\u003e \u003ccode\u003e|=\u003c/code\u003e \u003ccode\u003e\u0026lt;\u0026lt;\u003c/code\u003e \u003ccode\u003e\u0026gt;\u0026gt;\u003c/code\u003e \u003ccode\u003e\u0026gt;\u0026gt;=\u003c/code\u003e \u003ccode\u003e\u0026lt;\u0026lt;=\u003c/code\u003e \u003ccode\u003e==\u003c/code\u003e \u003ccode\u003e!=\u003c/code\u003e \u003ccode\u003e\u0026lt;=\u003c/code\u003e \u003ccode\u003e\u0026gt;=\u003c/code\u003e \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e \u003ccode\u003e||\u003c/code\u003e \u003ccode\u003e++\u003c/code\u003e \u003ccode\u003e--\u003c/code\u003e \u003ccode\u003e,\u003c/code\u003e \u003ccode\u003e-\u0026gt;*\u003c/code\u003e \u003ccode\u003e-\u0026gt;\u003c/code\u003e \u003ccode\u003e()\u003c/code\u003e \u003ccode\u003e[]\u003c/code\u003e演算子をオブジェクトに対して定義することです。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eクラス内メンバ関数としてのみ定義できるoperator\u003c/li\u003e\n\u003cli\u003eクラス外でも定義できるoperator\u003c/li\u003e\n\u003cli\u003eクラス外でしか定義できないoperator\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eがあります。\u003c/p\u003e\n\n\u003cp\u003eクラス内メンバ関数としてのみ定義できるoperatorは、\u003ccode\u003e=\u003c/code\u003e(assign) \u003ccode\u003e-\u0026gt;\u003c/code\u003e(arrow) \u003ccode\u003e()\u003c/code\u003e(function call) \u003ccode\u003e[]\u003c/code\u003eです。\u003c/p\u003e\n\n\u003cp\u003eと、難しい話はこの辺にしてoperator overloadの実例を見ましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cassert\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003evalue_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eassert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eassert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex_\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e!=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e!=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e!=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\"same point\"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"different point\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; different point\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"not zero\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\"is zero\"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"not zero\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eクラス外でしか定義できないoperatorというのは例えば二項演算子で左右の型が異なるとき、左が自身のオブジェクトでないときが挙げられます。上記の場合\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e!=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"特殊メンバ関数とコンパイラによる暗黙宣言がある\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%89%B9%E6%AE%8A%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%81%A8%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%81%AB%E3%82%88%E3%82%8B%E6%9A%97%E9%BB%99%E5%AE%A3%E8%A8%80%E3%81%8C%E3%81%82%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e特殊メンバ関数とコンパイラによる暗黙宣言がある\u003c/h2\u003e\n\n\u003cp\u003eさて、ここまでの説明でおかしなことがあります。次のようなCのコードを見てみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eC++は基本的にはCと互換があるので(完全ではない)このコードはC++のコードとしても有効なはずです。\u003c/p\u003e\n\n\u003cp\u003eところが先に「オブジェクトをどのように生成するかを決めるのがコンストラクタ」と言いました。しかし上の例ではコンストラクタを定義していないのに\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e  \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようにオブジェクトを生成できています。さらに「後述する例外を除き勝手にオブジェクトに対する演算子を作ってはくれません」といいましたが、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e  \u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eというコードの \u003ccode\u003e=\u003c/code\u003eは明らかにオブジェクトに対する演算子です。どういうことでしょうか？\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"特殊なメンバ関数\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%89%B9%E6%AE%8A%E3%81%AA%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e特殊なメンバ関数\u003c/h3\u003e\n\n\u003cp\u003eずばり6種類です。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eデフォルトコンストラクタ\u003c/li\u003e\n\u003cli\u003eコピーコンストラクタ\u003c/li\u003e\n\u003cli\u003eコピー代入演算子\u003c/li\u003e\n\u003cli\u003eムーブコンストラクタ\u003c/li\u003e\n\u003cli\u003eムーブ代入演算子\u003c/li\u003e\n\u003cli\u003eデストラクタ\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e実例を見てみましょう。\u003ccode\u003estd::string\u003c/code\u003eに似せて作ったクラスです。ちょっと長いですが・・・。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;cstring\u0026gt;\n#include \u0026lt;cstddef\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;limits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003einferior_string\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//デフォルトコンストラクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//任意のコンストラクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//コピーコンストラクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//コピー代入演算子\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//ムーブコンストラクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//disable input object's destructor.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//disable input object's destructor.\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecapacity\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//コンストラクタの呼び出し\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'('\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"), \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'('\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//ムーブコンストラクタの呼び出し\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//inferior_string str3 = static_cast\u0026lt;inferior_string\u0026amp;\u0026amp;\u0026gt;(str);//同じ意味\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'('\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr3\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sekai\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//ムーブ代入演算子の呼び出し\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'('\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//コピー代入演算子の呼び出し\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'('\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"), \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'('\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr2\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e出力例\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003earikitari(0x1476c20), arikitari(0x1476c40)\narikitari(0x1476c20)\nsekai(0x1477c70)\nsekai(0x1477c70), sekai(0x1476c40)\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/dw3hzBNCiwN1JEZW\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/dw3hzBNCiwN1JEZW\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eデストラクターは生成されたオブジェクトの寿命が尽きたときに呼び出されます。上記例ではmain関数の\u003ccode\u003ereturn 0;\u003c/code\u003eのあとに実行されます。\u003c/p\u003e\n\n\u003cp\u003eまとめると、クラス名を\u003ccode\u003eX\u003c/code\u003eとした時、\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e種類\u003c/th\u003e\n\u003cth\u003e宣言\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eデフォルト・コンストラクタ\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eX()\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eデストラクタ\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e~X()\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eコピー・コンストラクタ\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eX(const X\u0026amp;)\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eコピー代入演算子\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eX\u0026amp; operator=(const X\u0026amp;)\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eムーブ・コンストラクタ\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eX(X\u0026amp;\u0026amp;)\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eムーブ代入演算子\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eX\u0026amp; operator=(X\u0026amp;\u0026amp;)\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eのようになります。ただし、厳密にはもうちょっと制約が緩く、例えばコピーコンストラクタとムーブコンストラクタは\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#class.copy\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11: Syntax and Feature#クラスのコピーとムーブ\u003c/a\u003e\u003cbr\u003e\nコピーコンストラクター（copy constructor）とは、あるクラスXにおいて、非テンプレートなコンストラクターで、一つ目の仮引数の型が、X \u0026amp;、const X \u0026amp;、volatile X \u0026amp;、const volatile X \u0026amp;のいずれかであり、二つ目以降の仮引数は存在しないか、すべてデフォルト実引数があるものをいう。\u003c/p\u003e\n\n\u003cp\u003eムーブコンストラクター（move constructor）とは、あるクラスXにおいて、非テンプレートなコンストラクターで、一つ目の仮引数の型が、X \u0026amp;\u0026amp;、const X \u0026amp;\u0026amp;、volatile X \u0026amp;\u0026amp;、const volatile X \u0026amp;\u0026amp;のいずれかであり、二つ目以降の仮引数は存在しないか、すべてデフォルト実引数があるものをいう。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eという定義になっています(がそこまで意識することってない)。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"コンパイラによる暗黙宣言\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%81%AB%E3%82%88%E3%82%8B%E6%9A%97%E9%BB%99%E5%AE%A3%E8%A8%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンパイラによる暗黙宣言\u003c/h3\u003e\n\n\u003cp\u003eでこの6つですが、暗黙に生成されることがあります。その条件は実に複雑で解説は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/rinse_/items/1ac008fe3aea7c0887fc\" id=\"reference-e6d69a08a53b6ad43e54\"\u003eコンストラクタが暗黙に宣言されるとき、されないとき - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20140704/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e特殊メンバ関数とコンパイラによる暗黙宣言 - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpplover.blogspot.jp/2010/11/c0x.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++0xにすごい変更が来た\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#class.copy\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11: Syntax and Feature#クラスのコピーとムーブ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eに譲りますが、いくつかの例を見てみましょう。なお「ユーザー」とはコードを書くあなた自身のことでコンパイラと対比して用いています。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e何もコンストラクタ/代入演算子をユーザー宣言しなかった場合→\u003cstrong\u003eすべて暗黙生成される\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003e上記以外のコンストラクタをユーザー宣言した場合→\u003cstrong\u003eデフォルトコンストラクタ以外は暗黙生成される\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eデストラクタをユーザー宣言した場合→\u003cstrong\u003eデフォルトコンストラクタは生成される。コピーコンストラクタ/代入演算子は生成されるが使用は非推奨。ムーブンストラクタ/代入演算子は生成されない\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eデフォルトコンストラクタをユーザー宣言した場合→\u003cstrong\u003eそれ以外はすべて生成される\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eということで結論は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eデストラクタはユーザー宣言するな、\u003ccode\u003e=default\u003c/code\u003e指定(後述)も使うな、定義するならありったけ全部書け\u003c/li\u003e\n\u003cli\u003eC構造体はC++的には「何もコンストラクタ/代入演算子をユーザー宣言しなかった場合」に該当する\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eとなります。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"defaultdelete指定のすゝめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#defaultdelete%E6%8C%87%E5%AE%9A%E3%81%AE%E3%81%99%E3%82%9D%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003edefault/delete\u003c/code\u003e指定のすゝめ\u003c/h3\u003e\n\n\u003cp\u003eコンパイラによる暗黙生成は規則がわかりにくいです。コードを書く上では後述するように結局覚えないといけませんが、\u003cstrong\u003e読む人を考えると\u003c/strong\u003e\u003ccode\u003edefault/delete\u003c/code\u003e指定をコンストラクタ/代入演算子につけたほうがいいと思われます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eResourceManagerBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eresource_limit_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e99\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprotected:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eresources_\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eresource_limit_num\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eactiveResource_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eactiveResource\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eactiveResource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003ereset\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eselect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんな感じですね。注意点として前節で「ユーザー宣言したとき」と言いましたが、\u003ccode\u003edefault\u003c/code\u003e指定は「ユーザー宣言したとき」に含まれます。なので、\u003cstrong\u003eデストラクタは\u003ccode\u003edefault\u003c/code\u003e指定するべきではありません\u003c/strong\u003e。\u003cbr\u003e\nまた、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20130203/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e代入演算子のdefault指定とconstメンバ - yohhoyの日記\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eコンストラクタ／代入演算子などへdefault指定(=default)は、必ずしも“実装を定義する”ことを意味しない。\u003c/li\u003e\n\u003cli\u003edefault指定は“暗黙的に行われるコンストラクタ／代入演算子の自動生成”をコンパイラに明示する。このルールに従った結果、コンストラクタ／代入演算子が定義されない（＝delete指定相当）こともある。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとあるように、\u003ccode\u003edefault\u003c/code\u003e指定しても必ずしも定義してくれるわけではありません。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"メンバー初期化子とコンパイラ定義のデフォルトコンストラクタの挙動\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A1%E3%83%B3%E3%83%90%E3%83%BC%E5%88%9D%E6%9C%9F%E5%8C%96%E5%AD%90%E3%81%A8%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E5%AE%9A%E7%BE%A9%E3%81%AE%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%AE%E6%8C%99%E5%8B%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eメンバー初期化子とコンパイラ定義のデフォルトコンストラクタの挙動\u003c/h3\u003e\n\n\u003cp\u003eコンストラクタを自分で書かない、もしくは\u003ccode\u003e= default\u003c/code\u003e指定したクラスをメンバーに持ったときに、メンバー初期化子で\u003ccode\u003eメンバー名()\u003c/code\u003eのようにメンバ変数を初期化した場合、そのクラス型のオブジェクトは\u003cstrong\u003e0初期化\u003c/strong\u003eされます。\u003c/p\u003e\n\n\u003cp\u003e一応根拠となる部分を江添さんの重箱本から引っ張っておきましょう。結論は上述の通りなので読み飛ばしていいです。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#dcl.init.default-initialize\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#dcl.init.default-initialize\u003c/a\u003e\u003cbr\u003e\n8.5.3 値初期化（value-initialize）\u003cbr\u003e\n値初期化（value-initialize）とは、T型のオブジェクトに対して、\u003c/p\u003e\n\n\u003cp\u003eTが、unionではないクラス型で、ユーザー提供のコンストラクターを持たない場合、\u003cstrong\u003eオブジェクトはゼロ初期化される\u003c/strong\u003e。もし、暗黙的に定義されたコンストラクターが、トリビアルではない場合、コンストラクターが呼ばれる。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e初期化子が空の括弧、()、であるとき、オブジェクトは値初期化される\u003c/strong\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e後述の「強そうな人からclassに関連する謎な用語を使われたときにみる項」から飛べる記事で解説していますが、\u003ccode\u003e= default\u003c/code\u003e指定はユーザー宣言に含みますが、ユーザー提供ではないので、最初に「もしくは\u003ccode\u003e= default\u003c/code\u003e指定した」と書いたんですね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eVec2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eWeapon\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e  \u003cspan class=\"n\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eVec2\u003c/span\u003e \u003cspan class=\"n\"\u003evelocity\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWeapon\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003evelocity\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e    \n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWeapon\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evelocity\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eいや、当たり前なんですが、しかもC++11どころかC++03でも保証されている動作なんですが、\u003cbr\u003e\n\u003ca href=\"http://qiita.com/hoboaki/items/8384a9d717786a346b60\" id=\"reference-b392c8aef5df7308c081\"\u003eコンパイラによって動作が変わるコード @ゲームプログラマの小話[開発:コンパイラ・ビルド]\u003c/a\u003e\u003cbr\u003e\nによると、そうならないコンパイラがあるそうで。・・・投げ捨てればいいと思うよ、そんなコンパイラ。\u003c/p\u003e\n\n\u003cp\u003eとりあえず少なくとも\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e必要のない努力\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eTPodType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ePodInitData\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e/// テンプレートで指定した型をゼロ初期化したものを作成して返す。\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eTPodType\u003c/span\u003e \u003cspan class=\"n\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eTPodType\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eVec2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eWeapon\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e  \u003cspan class=\"n\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eVec2\u003c/span\u003e \u003cspan class=\"n\"\u003evelocity\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWeapon\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003evelocity\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePodInitData\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eVec2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003eCreate\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e    \n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんな冗長なだけの無意味なコードは書く必要がないのは確かでしょう。いくらRVO効くだろうから実行コスト0でもコード量が無駄です(断じて \u003ca href=\"/hoboaki\" class=\"user-mention js-hovercard\" title=\"hoboaki\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"hoboaki\"\u003e@hoboaki\u003c/a\u003e さんをdisっているわけではないです、念のため)。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"特殊メンバ関数の呼び出しのタイミング\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%89%B9%E6%AE%8A%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%81%AE%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%81%AE%E3%82%BF%E3%82%A4%E3%83%9F%E3%83%B3%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e特殊メンバ関数の呼び出しのタイミング\u003c/h3\u003e\n\n\u003cp\u003eではここまで見てきた特殊メンバ関数はいつ呼び出されるのでしょうか？\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yz2cm/items/7f8bf45838b35d970ce2\" id=\"reference-668501562585ab71e3cc\"\u003e何々の時に〇〇コンストラクタが呼出しされるが覚えられないので特訓\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eが\u003cstrong\u003e極めて秀逸な記事\u003c/strong\u003eなので、そちらに丸投げします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"staticメンバ変数がある\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#static%E3%83%A1%E3%83%B3%E3%83%90%E5%A4%89%E6%95%B0%E3%81%8C%E3%81%82%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estaticメンバ変数がある\u003c/h2\u003e\n\n\u003cp\u003e通常のメンバ変数はオブジェクトごとに固有ですが、共有されるものとしてstaticメンバ変数があります。\u003c/p\u003e\n\n\u003cp\u003eといってもconst指定されたstaticメンバ変数かコンパイル時定数にしかほぼ使いません。\u003cbr\u003e\n先程\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eResourceManagerBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eresource_limit_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e99\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eというコードを貼りましたが、これがstaticメンバ変数です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"staticメンバ関数がある\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#static%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%81%8C%E3%81%82%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estaticメンバ関数がある\u003c/h2\u003e\n\n\u003cp\u003etemplateメタプログラミングでもしない限りお世話になることはありません。だってそれ以外はふつうのフリー関数(メンバ関数と対比してそう呼ぶ)でまにあっているので。\u003c/p\u003e\n\n\u003cp\u003e標準ライブラリ(STL)でこれを使っている例で有名なものとしては、\u003ccode\u003elimits\u003c/code\u003eヘッダにある\u003ca href=\"https://cpprefjp.github.io/reference/limits/numeric_limits.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::numeric_limits\u003c/code\u003e\u003c/a\u003eでしょうか。実装はがっつりtemplateメタプログラミングしています。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"継承できる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B6%99%E6%89%BF%E3%81%A7%E3%81%8D%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e継承できる\u003c/h2\u003e\n\n\u003cp\u003eがっつりやりだすと\u003ccode\u003evirtual\u003c/code\u003e云々という謎文章に襲撃されるのと実行速度が犠牲になるのでC++入門者な読者の皆様は距離を置くくらいでちょうどいいと思いますが(無理に使って悲惨なことになっているコードから目をそらしつつ)、全く知らないというのもどうかと思うので落とし穴が少そうなコードを紹介します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDerived\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e継承は基本となる基底クラス(base class)があり、それを継承する派生クラス(derived class)があります(基底クラスは基本クラスとも言います)。Javaではスーパークラスとサブクラスと言うそうですが、C++では(C#もC++と同じ呼び方をするそうですね)そうは言いません。\u003c/p\u003e\n\n\u003cp\u003e派生クラスを作るには、派生クラス名のあとに \u003ccode\u003e:\u003c/code\u003eを書いてその後に基底クラス名を書きます。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"継承3種類\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B6%99%E6%89%BF3%E7%A8%AE%E9%A1%9E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e継承3種類\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003epublic継承\u003c/li\u003e\n\u003cli\u003eprotected継承\u003c/li\u003e\n\u003cli\u003eprivate継承\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの3つがありますが、public継承以外に使うことはほぼありませんから忘れましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eX\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* デフォルトでは public 継承 */\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eX\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* デフォルトでは private 継承 */\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"派生クラスではコンストラクタとメンバ関数を追加するだけでメンバ変数は増やさないパターン\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B4%BE%E7%94%9F%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%A7%E3%81%AF%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A8%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E3%81%A0%E3%81%91%E3%81%A7%E3%83%A1%E3%83%B3%E3%83%90%E5%A4%89%E6%95%B0%E3%81%AF%E5%A2%97%E3%82%84%E3%81%95%E3%81%AA%E3%81%84%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e派生クラスではコンストラクタとメンバ関数を追加するだけでメンバ変数は増やさないパターン\u003c/h3\u003e\n\n\u003cp\u003eもう面倒になったので実装は書きません、クラス定義だけ。実装は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/S-H-GAMELINKS/Novel.Game.Engine.LINKS/blob/8061dce8f2387ceee434c208486e8857d293be53/resource_manager.hpp\" rel=\"nofollow noopener\" target=\"_blank\"\u003eresource_manager.hpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/S-H-GAMELINKS/Novel.Game.Engine.LINKS/blob/8061dce8f2387ceee434c208486e8857d293be53/resource_manager.cpp\" rel=\"nofollow noopener\" target=\"_blank\"\u003eresource_manager.cpp\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e参照。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eResourceManagerBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eresource_limit_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e99\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprotected:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eresources_\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eresource_limit_num\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eactiveResource_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eactiveResource\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eactiveResource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ehandle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003ereset\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eselect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003ec1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eImageResourceManager\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eResourceManagerBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eImageResourceManager\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eload\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawGraph\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003etransFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawRectGraph\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003edestX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003edestY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esrcX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esrcY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003etransFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eturnFlag\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eDerivationGraph\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esrcX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esrcY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e派生クラスでもメンバ変数を定義するとややこしさが倍増するので基底クラスでのみメンバ変数を定義するのはわかりやすさの観点で大事です(個人的な意見です)。\u003c/p\u003e\n\n\u003cp\u003e基底クラスで\u003ccode\u003eprivate\u003c/code\u003eと指定されているものは派生クラスから見えません。今回の場合はメンバ変数\u003ccode\u003eactiveResource_\u003c/code\u003eが該当します。一方、基底クラスで\u003ccode\u003eprotected\u003c/code\u003eと指定されているものはクラスの外からは見えないものの、派生クラスから見えます。今回はメンバ変数\u003ccode\u003eresources_\u003c/code\u003eですね。\u003c/p\u003e\n\n\u003cp\u003e基底クラスでコピー/ムーブコンストラクタ/代入演算子が\u003ccode\u003edelete\u003c/code\u003e指定されている時点で派生クラスもその影響を受けるのですが(これを利用したものとして`\u003ccode\u003eboost:nocopyable\u003c/code\u003eなんかがある)一応派生クラスでもdelete`指定しています。\u003c/p\u003e\n\n\u003cp\u003e派生クラスでメンバ変数を作らない\u0026amp;\u0026amp;派生クラス基底クラスともにデストラクタがないパターンはお手軽なので覚えておくといいと思います\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"empty-base-optimizationを期待しているパターン\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#empty-base-optimization%E3%82%92%E6%9C%9F%E5%BE%85%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e　Empty Base Optimizationを期待しているパターン\u003c/h3\u003e\n\n\u003cp\u003eC++11でもC++17でもRejectされたConceptという機能をどうにか現行のC++の範囲で実装することで可読性をあげようという試みはまあそこそこ見かけるんですが、その一例を見てみましょう(Conceptについては解説しません、templateが深く関係しているとだけ書いておきます)。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eConceptColorType\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRGB\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eConceptColorType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eYCbCr\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eConceptColorType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eYCbCr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRGB\u003c/span\u003e \u003cspan class=\"n\"\u003ergb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eexplicit\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e \u003cspan class=\"n\"\u003eRGB\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eYPbPr\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eConceptColorType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eYCbCr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRGB\u003c/span\u003e \u003cspan class=\"n\"\u003ergb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eexplicit\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e \u003cspan class=\"n\"\u003eRGB\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eColorTypeFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etypebame\u003c/span\u003e \u003cspan class=\"n\"\u003eColorTypeTo\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_base_of\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eConceptColorType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eColorTypeFrom\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_base_of\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eConceptColorType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eColorTypeTo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eColorTypeTo\u003c/span\u003e \u003cspan class=\"nf\"\u003ecolor_cast\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eColorTypeFrom\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRGB\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e)};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれは色を表すクラスですよーということを示すために中身が空っぽのクラス\u003ccode\u003eConceptColorType\u003c/code\u003eを継承させています。\u003cbr\u003e\nあるクラスを継承しているかを調べるには\u003ca href=\"https://cpprefjp.github.io/reference/type_traits.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003e\u0026lt;type_traits\u0026gt;\u003c/code\u003e\u003c/a\u003eヘッダの\u003ca href=\"https://cpprefjp.github.io/reference/type_traits/is_base_of.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::is_base_of\u003c/code\u003e\u003c/a\u003eで簡単に判定できるので、こんな手法があります。\u003c/p\u003e\n\n\u003cp\u003eもっとも、\u003ca href=\"http://qiita.com/_EnumHack/items/ee2141ad47915c55d9cb#%E9%96%A2%E6%95%B0value%E3%81%A8%E5%A4%89%E6%95%B0value%E3%81%AE%E3%81%A9%E3%81%A1%E3%82%89%E3%81%8B%E3%82%92%E6%8C%81%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E3%82%92%E7%A2%BA%E3%81%8B%E3%82%81%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\" id=\"reference-632ef81c3f66fa076d94\"\u003e\u003ccode\u003edecltype\u003c/code\u003eハック\u003c/a\u003eで置き換えられることも多いように感じますが。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"crtp\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#crtp\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCRTP\u003c/h3\u003e\n\n\u003cp\u003eCuriously Reccursive/Reccuring Template Patternです。上記のEBOを期待するパターンに近いのですがtemplateクラスを使います。もっというと基底クラスのtemplate引数が派生クラスの型を受け取るものです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;utility\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDerived\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNonCopyable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprotected:\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e \n  \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHoge\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eNonCopyable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//Hoge hoge3 = hoge1;//NG\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//hoge2 = hoge4;//NG\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ehoge2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じで継承するだけでコピーできないクラスが作れます。\u003c/p\u003e\n\n\u003cp\u003eこれを発展させると静的ポリモーフィズムなんてものができるっていうんだから怖い。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/Riyaaaa_a/items/a9af401520f238f45b80\" id=\"reference-f233e44656864cfeba7f\"\u003e【C++】CRTPによる静的インターフェースクラスはライブラリ実装において不適切+解決法\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://qiita.com/Riyaaaa_a/items/887f6190e710c6410994\" id=\"reference-ca30b6e4acc431b9d050\"\u003e静的ポリモーフィズムの安全で簡単な実装 -動的から静的にしてパフォーマンス向上-\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"virtual基底クラスを持てる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#virtual%E5%9F%BA%E5%BA%95%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%92%E6%8C%81%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003evirtual基底クラスを持てる\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDerived1\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003evirtual\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDerived2\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003evirtual\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDerived3\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eDerived1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eDerived12\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e解説しません。これが必要になる時点で継承関係が複雑すぎです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"virtual仮想関数を持てる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#virtual%E4%BB%AE%E6%83%B3%E9%96%A2%E6%95%B0%E3%82%92%E6%8C%81%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003evirtual(仮想)関数を持てる\u003c/h2\u003e\n\n\u003cp\u003eはい、普通じゃないメンバ関数です。殆どの場合、動的ポリモフィズムを実現するために継承とセットで用いられます。\u003c/p\u003e\n\n\u003cp\u003e基本的には普通のメンバ関数と同じですが、メンバ関数へのポインタをオブジェクトが持っていると言えばイメージが湧くんじゃないでしょうか。実際もっとも有名な仮想関数の実装方法であるvtableを使うものはまさにその通りになっています。\u003c/p\u003e\n\n\u003cp\u003eただしポインタを介して、というくらいなので、通常の関数ポインタ同様最適化が難しく、inline展開などを阻害します。ですので、\u003cstrong\u003e本当に\u003c/strong\u003e速度が必要な場合は、templateや静的ポリモーフィズムやなにか根本的に別の手法で実現できないか試す必要が出てきます(そしてコードが\u003cdel\u003e魔界\u003c/del\u003etemplateまみれになる)。\u003c/p\u003e\n\n\u003cp\u003e具体的な用例はC++入門者の範疇を超えるので割愛し、参考リンクを貼るにとどめます(というのは建前で私が仮想関数使うコードをあまり書かないので解説したくない)。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/yagiri000/items/fcf08b0fdf5cb5091fc9\" id=\"reference-29593f3f1976698529cb\"\u003eC++Siv3D入門講座 Vol.10 仮想関数・ポリモーフィズム\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp11/override_final.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eoverrideとfinal - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/yumetodo/items/f3ceb1a64a1540f85568\" id=\"reference-840638f48378d565a9cd\"\u003eそのoverride指定は合法ですか？違法ですか？\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://tensor12321.hatenablog.jp/entry/2015/10/01/C%2B%2B11%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Boverride%E6%8C%87%E5%AE%9A%E5%AD%90%E3%81%AE%E5%BF%85%E8%A6%81%E6%80%A7%E3%81%A8%E6%9C%89%E7%94%A8%E6%80%A7\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11におけるoverride、final、default、delete指定子の必要性と有用性 - 熟れたC++使いが社会問題と趣味をつぶやく\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e継承コンストラクタ - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/msmania/items/452d4fb4dec76207df87\" id=\"reference-f2462144b4bd3130e5a3\"\u003eC++ の仮想関数と VTable について\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eC#でおなじみ文脈依存キーワードの\u003ccode\u003eoverride\u003c/code\u003e/\u003ccode\u003efinal\u003c/code\u003eがC++にはあるんですね。\u003ccode\u003eoverride\u003c/code\u003e使おう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"templateの部分特殊化ができる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#template%E3%81%AE%E9%83%A8%E5%88%86%E7%89%B9%E6%AE%8A%E5%8C%96%E3%81%8C%E3%81%A7%E3%81%8D%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etemplateの部分特殊化ができる\u003c/h2\u003e\n\n\u003cp\u003e詳細は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://mimosa-pudica.net/cpp-specialization.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++ template の(部分)?特殊化ができるとき、できないとき\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eに投げます。後述します。\u003c/p\u003e\n\n\u003cp\u003e自作したクラスを\u003ca href=\"https://cpprefjp.github.io/reference/unordered_map/unordered_map.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::unordered_map\u003c/code\u003e\u003c/a\u003eでkeyとして使うために\u003ca href=\"https://cpprefjp.github.io/reference/functional/hash.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::hash\u003c/code\u003e\u003c/a\u003eを特殊化するのが最も一般的な用法でしょうか。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"関数オブジェクトとしてのクラス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%96%A2%E6%95%B0%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e関数オブジェクトとしてのクラス\u003c/h1\u003e\n\n\u003cp\u003e主人公は \u003ccode\u003eoperator()\u003c/code\u003eです。\u003c/p\u003e\n\n\u003cp\u003eそもそも関数は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003e関数名()\u003c/code\u003eで呼び出すのでした。つまり・・・\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eF\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"p\"\u003e()()\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eF\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e// int型\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e','\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eF\u003c/span\u003e\u003cspan class=\"p\"\u003e{}()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e// =\u0026gt; 3,3\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eみたいに、\u003ccode\u003eoperator ()\u003c/code\u003eをoverloadすれば関数もどきが作れるわけです。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eoperator ()\u003c/code\u003eがoverloadされているクラスを、関数オブジェクトないし、function-like classと呼びます。\u003c/p\u003e\n\n\u003cp\u003e関数ポインタよりコンパイラの最適化を阻害せず高速化できるため、よく用いられます。\u003c/p\u003e\n\n\u003cp\u003eC++にもlambda式と言うものがあるのですが、これはこの関数オブジェクトを自動生成するシンタックスシュガーだったりします。lambda式導入によって直に関数オブジェクトを作る機会は減りましたが、仕組みそのものは覚えておくといいかと思います。\u003c/p\u003e\n\n\u003cp\u003e詳細は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/cdfb41781d32d98be1b4\" id=\"reference-dd6b5d048f2a8411c490\"\u003e関数の創世から深淵まで駆け抜ける関数とはなんぞや講座\u003c/a\u003e\u003cbr\u003e\nを見てください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"イテレータのためのクラス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%86%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eイテレータのためのクラス\u003c/h1\u003e\n\n\u003cp\u003eC++には配列のようなものが何種類かありますが、これをまとめて「コンテナ」という概念であつかい、これを操作するために「イテレータ」という概念を導入しています。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;array\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e}};\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//イテレータを直に扱う\u003c/span\u003e\n  \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//イテレータをRange-based forを介して扱う\u003c/span\u003e\n  \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eイテレータは自分で書くこともできます。\u003cbr\u003e\nただし書くのはだいぶダルいです。\u003c/p\u003e\n\n\u003cp\u003eいろんなイテレータを作っている例は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/245e94a0e85db9bf5cbb\" id=\"reference-5d7c8c79dbcc391de417\"\u003eイテレータの解説をするなんて今更佳代\u003c/a\u003e\u003cbr\u003e\nを御覧ください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"タグディスパッチのためのクラス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BF%E3%82%B0%E3%83%87%E3%82%A3%E3%82%B9%E3%83%91%E3%83%83%E3%83%81%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eタグディスパッチのためのクラス\u003c/h1\u003e\n\n\u003cp\u003eC++には例外がありますが、書いていると例外を使う版と使わない版の両方が欲しくなってくることがあります。\u003c/p\u003e\n\n\u003cp\u003eそこでタグディスパッチです。\u003c/p\u003e\n\n\u003cp\u003eC++標準ライブラリ(STL)には\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eSTL\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003enothrow_t\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003enothrow_t\u003c/span\u003e \u003cspan class=\"n\"\u003enothrow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのような物があります。一体この\u003ca href=\"https://cpprefjp.github.io/reference/new/nothrow_t.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::nothrow_t\u003c/code\u003e\u003c/a\u003eをどう使うのかというと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003esound\u003c/span\u003e \u003cspan class=\"k\"\u003efinal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//略\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eplay\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eplaytype\u003c/span\u003e \u003cspan class=\"n\"\u003ePlayType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enothrow_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ePlaySoundMem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eGetHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePlayType\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eplay\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eplaytype\u003c/span\u003e \u003cspan class=\"n\"\u003ePlayType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eTopPositionFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eDXLE_SOUND_ERROR_THROW_WITH_MESSAGE_IF\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eplay\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePlayType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTopPositionFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enothrow\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e \u003cspan class=\"s\"\u003e\"fail DxLib::PlaySoundMem().\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/Nagarei/DxLibEx/blob/dbbd311fbfe153ad7008bf9451478e2b1b9217db/dxlibex/sound.hpp#L223\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/Nagarei/DxLibEx/blob/dbbd311fbfe153ad7008bf9451478e2b1b9217db/dxlibex/sound.hpp#L223\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこんなふうに引数に使って関数のoverloadをします。すると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n  \u003cspan class=\"n\"\u003esound\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//なんか\u003c/span\u003e\n  \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplay\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//例外を投げる版を呼ぶ\u003c/span\u003e\n  \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eplay\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enothrow\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無例外版を呼ぶ\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eという呼び分けができるんですね。\u003c/p\u003e\n\n\u003cp\u003eSTLにある他のタグディスパッチ用クラスとしては、\u003ca href=\"https://cpprefjp.github.io/reference/utility/piecewise_construct.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003estd::piecewise_construct\u003c/code\u003e\u003c/a\u003eなんかがあります。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"拡張メンバ関数を作るためのoperator-overloadするためのクラス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8B%A1%E5%BC%B5%E3%83%A1%E3%83%B3%E3%83%90%E9%96%A2%E6%95%B0%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AEoperator-overload%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e拡張メンバ関数を作るためのoperator overloadするためのクラス\u003c/h1\u003e\n\n\u003cp\u003e散々ネタにされる話として\u003cbr\u003e\n「C++ってstd::stringにsplitメンバ関数ないんでしょ？ｸｽｸｽ」\u003cbr\u003e\nというお話があります。\u003c/p\u003e\n\n\u003cp\u003eよろしい、ならば戦争だ！\u003c/p\u003e\n\n\u003cp\u003e戦争に使う武器はoperator overloadです。operator overloadするにはクラス型を定義する必要がありました。\u003c/p\u003e\n\n\u003cp\u003e残念ながら\u003ccode\u003eoperator .\u003c/code\u003eは上述のとおりoverloadできないので、代わりに\u003ccode\u003eoperator |\u003c/code\u003eをoverloadします。\u003c/p\u003e\n\n\u003cp\u003e目指すは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari na sekai\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e真面目に実装している記事は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/bf2bc5c1d49d5aec3efa\" id=\"reference-a451791e0d8dd144069a\"\u003eC++でPStade.Oven(pipeline)風味なstringのsplitを作ってみた\u003c/a\u003e\u003cbr\u003e\nです。とてもじゃないですがここに書くには余白が足りない。\u003c/p\u003e\n\n\u003cp\u003eともかくこれで\u003cbr\u003e\n??「C++ってstd::stringにsplitメンバ関数ないんでしょ？ｸｽｸｽ」\u003cbr\u003e\nC#「しかも拡張メソッドすらないんですって」\u003cbr\u003e\nC++「operator overloadできるから十分だし」\u003cbr\u003e\nと言い返せますね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"コンパイル時型操作のためのクラス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E6%99%82%E5%9E%8B%E6%93%8D%E4%BD%9C%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンパイル時型操作のためのクラス\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eType1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eType2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_same\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_same\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eis_same\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"err\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eis_same\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"err\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eテンプレートを使って色々書いているとtemplate引数で渡された型についていろいろ調べたくなります。その時先に書いたtemplate部分特殊化を使うためにこんなクラスを書くことがあります。\u003c/p\u003e\n\n\u003cp\u003eへ～そーなんだ～、で構いません。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"強そうな人からclassに関連する謎な用語を使われたときにみる項\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BC%B7%E3%81%9D%E3%81%86%E3%81%AA%E4%BA%BA%E3%81%8B%E3%82%89class%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E8%AC%8E%E3%81%AA%E7%94%A8%E8%AA%9E%E3%82%92%E4%BD%BF%E3%82%8F%E3%82%8C%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AB%E3%81%BF%E3%82%8B%E9%A0%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e強そうな人からclassに関連する謎な用語を使われたときにみる項\u003c/h1\u003e\n\n\u003cp\u003eを書こうとしたら全く入門者向けの話ではなくなったので別の記事にしました。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/yumetodo/items/424cc4d15de4edad436a\" id=\"reference-134c536b36ef9f5af152\"\u003eC++初心者に贈る強そうな人からC++のclassに関連する謎な用語を使われたときにみるもの: trivialとか\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"アクセス指定があると何が嬉しいか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E6%8C%87%E5%AE%9A%E3%81%8C%E3%81%82%E3%82%8B%E3%81%A8%E4%BD%95%E3%81%8C%E5%AC%89%E3%81%97%E3%81%84%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eアクセス指定があると何が嬉しいか\u003c/h1\u003e\n\n\u003cp\u003eぶっちゃけオブジェクト指向するためにある機能だと思います。それ以外の用途が私には浮かばない。\u003c/p\u003e\n\n\u003cp\u003eCにおいてもファイルわけをして、外部公開しない変数に\u003ccode\u003estatic\u003c/code\u003eをつけたと思います。\u003c/p\u003e\n\n\u003cp\u003eつまりアクセス指定があるとこれと同じで外部との結合が減るんですね。例えばメンバ変数を\u003ccode\u003eprivate\u003c/code\u003eにすればそれはクラスの外からはいじられないわけです(断じて全部のprivate変数にgetter/setterを書けという話ではない)\u003c/p\u003e\n\n\u003cp\u003eすると、メンテナンス可能性が向上します。\u003ccode\u003epublic\u003c/code\u003eだととどこからか変数が書き換えられる心配がありますが、\u003ccode\u003eprivate\u003c/code\u003e/\u003ccode\u003eprotected\u003c/code\u003eならそれがないんですね(ポインタとキャストゴリ押しで書き換えられるだろとか言わない)。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"classとstructの違い\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#class%E3%81%A8struct%E3%81%AE%E9%81%95%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eclass\u003c/code\u003eと\u003ccode\u003estruct\u003c/code\u003eの違い\u003c/h1\u003e\n\n\u003cp\u003e上記でも解説しましたし、\u003cbr\u003e\n\u003ca href=\"http://secret-garden.hatenablog.com/entry/2015/12/11/000000\" rel=\"nofollow noopener\" target=\"_blank\"\u003e【初心者 C++er Advent Calendar 2015 11日目】C++ における class と struct の違い - Secret Garden(Instrumental)\u003c/a\u003e(\u003ca href=\"http://qiita.com/pink_bangbi/items/e25302df7f4ba7fa0db4\" id=\"reference-e446f725f8026e3f13b4\"\u003eQiita版\u003c/a\u003e)\u003cbr\u003e\nでも解説されていますが、\u003cbr\u003e\nまとめると、\u003cstrong\u003eアクセス指定がデフォルトでpublicかprivateか\u003c/strong\u003eの差のみです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//A1とA2は全く同じ意味\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eA1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//public\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eA2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eA1\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eA2\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"err\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//B1とB2は全く同じ意味\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eB1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//private\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eB2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//static_assert(B1::n == B2::n, \"err\");//NG\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//error: 'constexpr const int B1::n' is private within this context\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//error: 'constexpr const int B2::n' is private within this context\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//C1とC2は全く同じ意味\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eC1\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA1\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eC2\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eA1\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eC1\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eC2\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"err\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//D1とD2は全く同じ意味\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eD1\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA1\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eD2\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eA1\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//static_assert(D1::n == D2::n, \"err\");//NG\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//error: 'constexpr const int A1::n' is inaccessible within this context\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"classとstructをどう使い分けるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#class%E3%81%A8struct%E3%82%92%E3%81%A9%E3%81%86%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eclass\u003c/code\u003eと\u003ccode\u003estruct\u003c/code\u003eをどう使い分けるか\u003c/h1\u003e\n\n\u003cp\u003eオブジェクト指向プログラミングのツールとしてクラスを使うには\u003ccode\u003eclass\u003c/code\u003eキーワードを使うことが多いように思います。\u003c/p\u003e\n\n\u003cp\u003e一方でコンパイル時計算のためのクラスなど、メンバが全てpublicであることが望ましい場合などは\u003ccode\u003estruct\u003c/code\u003eキーワードを利用することが多いように思います。\u003c/p\u003e\n\n\u003cp\u003eまたCの構造体と同じような使い方をする場合についても\u003ccode\u003estruct\u003c/code\u003eキーワードを使うことが多いように思います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003cp\u003eclassについて様々な機能や用例を見てきました。classはかなりいろいろなことに使われていてすべて取り上げるのは不可能です。少なくともオブジェクト指向プログラミングのためだけの機能ではないことがご理解いただけたかと思います。\u003c/p\u003e\n\n\u003cp\u003eぜひクラスを実際に自分が書くコードで使っていただければな、と思います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# 注意\n\nこの記事にはtemplateを利用したサンプルコードや技法が紹介されている場所があります。入門者は卒業した！という方以外はスルーしてください。また\n[C99からC++14を駆け抜けるC++講座](http://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8)\nも合わせてお読みください。\n\nまた、この記事はC++入門者がこの記事をんだ**だけ**で内容を理解できることを目的と**しておらず**、**調べるきっかけを与える**ことを意図したものです。当然**わからない単語や機能がいきなり出てきます**。\n\n# はじめに\n\nみなさま、[ナマステ](http://www.nicovideo.jp/watch/sm25261912)。\nさて、この記事を読んでいる方ならC言語の構造体についてはすでにご存知だと思います。\n\n```c:C99\ntypedef struct {\n  float x;\n  float y;\n} Point;\n```\n\nこんな感じのやつですね。\n\nところでC++にはなんかClassとかいうのがあるらしい。なんか関数が持てるとかきいたぞ？オブジェクト指向が云々とか誰かが言ってた！\n\n# Classとオブジェクト指向は別物です\n\nまあそもそも[C++のオブジェクト指向はオブジェクト指向じゃないみたいな話もありますが](http://qiita.com/hirokidaichi/items/591ad96ab12938878fe1)それはさておき、Classとオブジェクト指向は別物ですといっておく必要はあるでしょう。\n\nどういうことかというと、\n\n```md\n# C++でオブジェクト指向プログラミングをするためにほしい言語機能\n- Class\n- etc\n.\n.\n.\n```\n\nであって、\n\n```plain\nClass == オブジェクト指向\n```\n\nではないということです。実際このあと紹介しますがClassはオブジェクト指向プログラミング以外にも多様な用途があります。\n\n# Classとは\n\nめったに使われない機能やC++入門者に説明しづらい機能は省略します。\n\nCの構造体宣言でタグ名とか言われていた部分がクラス名になります。なのでいちいちtypedefする必要はありません。\n\n```cpp:C++\nstruct Hoge {};\nclass Fuga {};\n```\n\n## Cの構造体とおなじく(非staticな)メンバ変数を持てる\n\n```cpp:C++\nclass Point {\n  float x_;\n  float y_;\n};\n```\n\nまあそりゃそうですね。\n\n## constメンバ変数を持てる\n\n忘れろ\n\n## アクセス指定がある\n\n`private`, `protected`, `public` の三種類あります。`struct`キーワードでクラスを宣言したときはデフォルトで`public`、`class`キーワードでクラスを宣言したときはデフォルトで`private`になります。\n\nなにが嬉しいかは後述します。\n\n## 型定義をメンバに持てる\n\n```cpp:C++\nclass Point {\n  float x_;\n  float y_;\npublic:\n  using value_type = float;\n};\nint main()\n{\n  Point::value_type a = 3.1f;\n}\n```\n\nクラスの中だけで有効な型aliasです。ぶっちゃけtemplateと組み合わせないとほとんど有り難みがないです。アクセス指定が`public`のときは、クラスの外から`::`演算子で利用できますが、C++11で追加されたauto型推論とかtemlate alias(解説しません)のせいでめったに`::`演算子をクラスの外から型aliasを使うために使うことはなくなりました。\n\nちなみに`using value_type = float;`という記法は`using alias`というC++11で追加されたtypedefに変わる記法です。[typedef は C++11 ではオワコン](http://qiita.com/Linda_pp/items/44a67c64c14cba00eef1)らしいので積極的に使っていきましょう。\n\n# (非staticで非virtualな)メンバ関数を持てる\n\nお待たせしました、「C++のクラスは関数が持てるんだよ～」というあれです。え？ `static` って？　`virtual` ってなんだって？後述しますが、簡単に言うとふつうのメンバ関数です。\n\n```cpp:C++\n#include \u003ciostream\u003e\nclass Point {\npublic:\n  float x_;\n  float y_;\n  float x() const noexcept { return this-\u003ex_; }\n  float\u0026 x() noexcept { return this-\u003ex_; }\n  float y() const noexcept { return this-\u003ey_; }\n  float\u0026 y() noexcept { return this-\u003ey_; }\n};\nint main()\n{\n  Point p = {};\n  std::cout \u003c\u003c p.x() \u003c\u003c std::endl;\n}\n```\n\nメンバ関数からメンバ変数にアクセスするには、`this`という、自分自身のクラスを指す特殊なポインタを利用します。これは暗黙のうちにメンバ関数を呼び出すときに0番目の引数として渡されています。\n\nC++の場合thisを渡すのが関数呼び出し規約レベル(`thiscall`とか)でやっているのでピンとこないかもしれませんが、例えばRustという言語の場合\n\n```rust:Rust\nstruct A;\n\n// parse_self_arg\nimpl A {\n    fn f1(self: A) {}\n    fn f2(self: \u0026mut A) {}\n    fn f3(self: \u0026A) {}\n    fn f4(self: Box\u003cA\u003e) {}\n    // 生存期間を明示すると以下の通り\n    // fn f2\u003c'a\u003e(self: \u0026'a mut A) {}\n    // fn f3\u003c'a\u003e(self: \u0026'a A) {}\n}\n```\n\nはっきりと明示的に`self`を引数に指定して宣言します(`self`ってのがC++でいう`this`に該当する)。\nref: [Rustのself引数まとめ - 簡潔なQ](http://qnighy.hatenablog.com/entry/2017/03/22/070000)\n\nluaという言語なら\n\n```lua:Lua\n-- ################# define function\n-- オブジェクトを作成するnewメソッドを定義（Javascriptで言うコンストラクタのようなもの）\nCoordinate = {}\nCoordinate.new = function(_x,_y)\n  local obj = {}\n  obj.x = _x\n  obj.y = _y\n\n  -- pp というインスタンスメソッドをオブジェクト内に格納\n  obj.pp = function(self) print(string.format(\"(%d,%d)\", self.x, self.y)) end\n\n  return obj \nend\n\n-- ################## main\npoint1 = Coordinate.new(1,3) -- 座標(1,3)というオブジェクト\npoint2 = Coordinate.new(3,2) -- 座標(3,2)というオブジェクト\n\npoint1.pp(point1)\npoint2.pp(point2)\n```\n\n呼び出しすら明示的にメソッドの第一引数に指定します(もっとも面倒なのでシンタックスシュガーとして `point1.pp(point1)`を`point1:pp()`と書けるようにはなっています)。\nref: [Luaでオブジェクト指向（１）―基本はコロン記法とメタテーブル - Minecraftとタートルと僕](http://hevohevo.hatenablog.com/entry/2014/02/03/214843)\n\n話をC++に戻しましょう。`p.x()`のようにしてメンバ関数を呼び出せますが、この時pへのポインタが0番目の引数としてメンバ関数`Point::x`に渡されます。この0番目の引数が`this`なんですね。\n\nちなみに`this`はNullポインタにならないんだからなんで参照やないや！と思うかもしれませんが、[thisがポインタであるのは、単にthisが参照よりも早く導入されたという、歴史的な理由でしかない](https://cpplover.blogspot.jp/2009/05/rvalue-reference.html)です、あきらめましょう。\n\nメンバ関数は、**`this`ポインタがconst修飾か否かでoverloadできます**。\n\n```cpp:C++\n#include \u003ciostream\u003e\nclass Point {\npublic:\n  float x_;\n  float y_;\n  float x() const noexcept { return this-\u003ex_; }// -- (1)\n  float\u0026 x() noexcept { return this-\u003ex_; }// -- (2)\n  float y() const noexcept { return this-\u003ey_; }\n  float\u0026 y() noexcept { return this-\u003ey_; }\n};\nvoid use_const_version(const Point\u0026 p) {\n  //p.x() = 3;//const修飾されていないメンバ関数は呼び出せない\n  std::cout \u003c\u003c p.x() \u003c\u003c std::endl;//(1)の方が呼ばれる\n}\nvoid use_non_const_version(Point\u0026 p) {\n  p.x() = 3;//(2)の方が呼ばれる。p.x_へのlvalue referenceが返されされるので書き換えられる\n  std::cout \u003c\u003c p.x() \u003c\u003c std::endl;//(2)の方が呼ばれる\n}\nint main()\n{\n  Point p = {};\n  use_const_version(p);// =\u003e 0\n  use_non_const_version(p);// =\u003e 3\n  use_const_version(p);// =\u003e 3\n}\n```\n\nちなみにメンバ関数の実態はクラスに固有なのでオブジェクト作るごとに関数の実体が増殖したりはしません(じゃないとデータ実行防止（DEP）が使えなくて危ない)。\n\n## コンストラクタをもつ\n\nまず、**Cでいう構造体やC++のクラス型の変数をオブジェクトと言うことがあります**。\n\nで、**オブジェクトをどのように生成するかを決めるのがコンストラクタ**です。基本的にはメンバ変数の初期化をするためのものですが、べつにそれ以外のこともできます。呼び出し方とできることが特殊なメンバ関数ですからね。\n\n```cpp:C++\n#include \u003ccstddef\u003e\nclass inferior_string_view {\npublic:\n  using size_type = std::size_t;\nprivate:\n  char* begin_;\n  size_type n_;\npublic:\n  inferior_string_view(char* begin, size_type size) noexcept : begin_(begin), n_(size) {}\n  char front() const { return *(this-\u003ebegin_); }\n}\n```\n\n\u003e `クラス名`(`引数`\u003csub\u003eopt\u003c/sub\u003e) `noexceptとか`\u003csub\u003eopt\u003c/sub\u003e : `メンバー初期化子`\u003csub\u003eopt\u003c/sub\u003e { `コンストラクタの処理`}\n\nのように書きます。宣言と定義を分けたいときは\n\n\u003e `クラス名`(`引数`\u003csub\u003eopt\u003c/sub\u003e) `noexceptとか`\u003csub\u003eopt\u003c/sub\u003e;\n\nと宣言して、\n\n\u003e `クラス名`::`クラス名`(`引数`\u003csub\u003eopt\u003c/sub\u003e) `noexceptとか`\u003csub\u003eopt\u003c/sub\u003e : `メンバー初期化子`\u003csub\u003eopt\u003c/sub\u003e { `コンストラクタの処理`}\n\n\nと定義します。\n\nメンバ初期化子は\n\n- `メンバ変数名(値)`: 対象のメンバ変数を明示的初期化する\n- `メンバ変数名{値}`: 対象のメンバ変数を明示的初期化する\n- `メンバ変数名()`: 対象のメンバ変数を値初期化する\n- `メンバ変数名{}`: 対象のメンバ変数を値初期化する\n- `クラス名(値）`: 自分のクラスのほかのコンストラクタを呼び出す\n- `基底クラス名(値)`: 継承をしているときの基底クラス(派生元, base class, 解説しません)のコンストラクタを呼び出す\n\nのように書きます\n\nメンバ初期化子は**必ずメンバー変数の宣言順に書きましょう**。基本的にメンバ変数の初期化はメンバ初期化子でやりますが、初期化順序に依存性がある場合は`コンストラクタの処理`の中に書きましょう。もちろん`コンストラクタの処理`では`this`が使えます。\n\n明示的初期化や値初期化については極めて難解ですが、基本的には\n\n- 組み込み型(`int`, `double`, etc...): `=`初期化と同じ結果\n- オブジェクト: コンストラクタを呼び出す\n\nという挙動だと思ってください。詳細は\n\n- [C++の初期化は分かりにくい - ぷろみん](http://torini.hateblo.jp/entry/2015/03/08/C%2B%2B%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%AF%E5%88%86%E3%81%8B%E3%82%8A%E3%81%AB%E3%81%8F%E3%81%84)\n- [C++ の初期化 - プログラミングの教科書を置いておくところ](http://d.hatena.ne.jp/prettysoft/20101103/1394815453)\n\nに譲りますが、頭がこんがらがるだけなので**理解しないほうが幸せ**かと思います。\n\n## (非staticな)メンバ変数にデフォルト値を設定できる\n\nメンバ変数のデフォルト初期化という機能です。コンストラクタで初期化するオブジェクトですが、コンストラクタは何個も書くことが普通なため、メンバ変数の初期化忘れをする可能性があります。そこで登場するのがこの機能で、コンストラクタで初期化忘れしても、設定したデフォルト値で初期化されます。もちろんコンストラクタの初期化が優先されます。\n\n```cpp:C++\n#include \u003ciostream\u003e\nclass Hoge {\n  int a = 3;\n};\nint main()\n{\n  Hoge hoge;\n  std::cout \u003c\u003c hoge.a \u003c\u003c std::endl;// =\u003e 3\n}\n```\n\n## operator overloadできる\n\nさて、C++にはoperator overloadという言語機能があります。これは**オブジェクトに対する演算子の挙動を定義できる機能**です(ただしallocation functionとdeallocation functionは除く)。後述する例外を除き勝手にオブジェクトに対する演算子を作ってはくれません。\n\noperator overloadの種類としては\n\n1. 普通のoperator overload\n2. 型変換演算子\n3. allocation function\n4. deallocation function\n5. User-defined literal\n\nがありますが、2はbool型へのexplict conversion operator(解説しません)以外忘れてください。3,4は忘れてください。5はここでは解説しません。\n\n普通のoperator overloadとは、`+` `-` `*` `/` `%` `ˆ` `\u0026` `|` `~` `!` `=` `\u003c` `\u003e` `+=` `-=` `*=` `/=` `%=` `ˆ=` `\u0026=` `|=` `\u003c\u003c` `\u003e\u003e` `\u003e\u003e=` `\u003c\u003c=` `==` `!=` `\u003c=` `\u003e=` `\u0026\u0026` `||` `++` `--` `,` `-\u003e*` `-\u003e` `()` `[]`演算子をオブジェクトに対して定義することです。\n\n- クラス内メンバ関数としてのみ定義できるoperator\n- クラス外でも定義できるoperator\n- クラス外でしか定義できないoperator\n\nがあります。\n\nクラス内メンバ関数としてのみ定義できるoperatorは、`=`(assign) `-\u003e`(arrow) `()`(function call) `[]`です。\n\nと、難しい話はこの辺にしてoperator overloadの実例を見ましょう。\n\n```cpp:C++\n#include \u003ciostream\u003e\n#include \u003ccassert\u003e\nclass Point {\n  float x_;\n  float y_;\npublic:\n  using value_type = float;\n  Point(float x, float y) noexcept : x_(x), y_(y) {}\n  float x() const noexcept { return this-\u003ex_; }\n  float\u0026 x() noexcept { return this-\u003ex_; }\n  float y() const noexcept { return this-\u003ey_; }\n  float\u0026 y() noexcept { return this-\u003ey_; }\n  float operator[](std::size_t n) const noexcept\n  {\n    assert(2 \u003c= n);\n    return (0 == n) ? this-\u003ex_ : this-\u003ey_;\n  }\n  float\u0026 operator[](std::size_t n) noexcept\n  {\n    assert(2 \u003c= n);\n    return (0 == n) ? this-\u003ex_ : this-\u003ey_;\n  }\n};\nbool operator==(const Point\u0026 l, const Point\u0026 r) noexcept { return l.x() == r.x() \u0026\u0026 l.y() == r.y(); }\nbool operator==(const Point\u0026 l, std::nullptr_t) noexcept { return l.x() == 0 \u0026\u0026 l.y() == 0; }\nbool operator==(std::nullptr_t, const Point\u0026 r) noexcept { return r.x() == 0 \u0026\u0026 r.y() == 0; }\nbool operator!=(const Point\u0026 l, const Point\u0026 r) noexcept { return !(l == r); }\nbool operator!=(const Point\u0026 l, std::nullptr_t) noexcept { return !(l == 0); }\nbool operator!=(std::nullptr_t, const Point\u0026 r) noexcept { return !(0 == r); }\nint main()\n{\n  Point p1 = {};\n  Point p2 = {};\n  p1.x() = 3;\n  p2[1] = 4;\n  std::cout \u003c\u003c ((p1 == p2) ? \"same point\" : \"different point\") \u003c\u003c std::endl;// =\u003e different point\n  std::cout \u003c\u003c ((0 == p1) ? \"is zero\" : \"not zero\") \u003c\u003c std::endl;\n  std::cout \u003c\u003c ((p1 == 0) ? \"is zero\" : \"not zero\") \u003c\u003c std::endl;\n}\n```\n\nクラス外でしか定義できないoperatorというのは例えば二項演算子で左右の型が異なるとき、左が自身のオブジェクトでないときが挙げられます。上記の場合\n\n```cpp:C++\nbool operator==(std::nullptr_t, const Point\u0026 r) noexcept { return r.x() == 0 \u0026\u0026 r.y() == 0; }\nbool operator!=(std::nullptr_t, const Point\u0026 r) noexcept { return !(0 == r); }\n```\n\nですね。\n\n## 特殊メンバ関数とコンパイラによる暗黙宣言がある\n\nさて、ここまでの説明でおかしなことがあります。次のようなCのコードを見てみましょう。\n\n```c:C99\ntypedef struct {\n  float x;\n  float y;\n} Point;\nint main(void)\n{\n  Point p1 = { 2, 3 };\n  Point p2;\n  p2 = p1;\n  return 0;\n}\n```\n\nC++は基本的にはCと互換があるので(完全ではない)このコードはC++のコードとしても有効なはずです。\n\nところが先に「オブジェクトをどのように生成するかを決めるのがコンストラクタ」と言いました。しかし上の例ではコンストラクタを定義していないのに\n\n```cpp\n  Point p1 = { 2, 3 };\n```\n\nのようにオブジェクトを生成できています。さらに「後述する例外を除き勝手にオブジェクトに対する演算子を作ってはくれません」といいましたが、\n\n```cpp\n  p2 = p1;\n```\n\nというコードの `=`は明らかにオブジェクトに対する演算子です。どういうことでしょうか？\n\n### 特殊なメンバ関数\n\nずばり6種類です。\n\n- デフォルトコンストラクタ\n- コピーコンストラクタ\n- コピー代入演算子\n- ムーブコンストラクタ\n- ムーブ代入演算子\n- デストラクタ\n\n実例を見てみましょう。``std::string``に似せて作ったクラスです。ちょっと長いですが・・・。\n\n```cpp:C++\n#include \u003ccstring\u003e\n#include \u003ccstddef\u003e\n#include \u003ciostream\u003e\n#include \u003climits\u003e\nclass inferior_string\n{\nprivate:\n\tchar* m_s_;\n\tsize_t m_len_;\n\tsize_t m_capacity_;\npublic:\n    //デフォルトコンストラクタ\n\tinferior_string() noexcept : m_s_(nullptr), m_len_(0), m_capacity_(0) {}\n    //任意のコンストラクタ\n\tinferior_string(const char* str)\n\t{\n\t\tthis-\u003em_len_ = (nullptr == str) ? 0 : std::strlen(str);\n\t\tif(0 == this-\u003em_len_){\n\t\t\tthis-\u003em_s_ = nullptr;\n\t\t\tthis-\u003em_capacity_ = 0;\n\t\t}\n\t\telse{\n\t\t\tthis-\u003em_capacity_ = ((std::numeric_limits\u003cstd::size_t\u003e::max() / 2) \u003c this-\u003em_len_) ? std::numeric_limits\u003cstd::size_t\u003e::max() : 2 * this-\u003em_len_;\n\t\t\tthis-\u003em_s_ = new char[this-\u003em_capacity_]();\n\t\t\tstd::memcpy(this-\u003em_s_, str, this-\u003em_len_);//copy\n\t\t}\n\t}\n    //コピーコンストラクタ\n\tinferior_string(const inferior_string\u0026 o) : m_len_(o.m_len_), m_capacity_(o.m_capacity_)\n\t{\n\t\tif(0 == o.m_len_){\n\t\t\tthis-\u003em_s_ = nullptr;\n\t\t\tthis-\u003em_capacity_ = 0;\n\t\t}\n\t\telse{\n\t\t\tthis-\u003em_s_ = new char[this-\u003em_capacity_]();\n\t\t\tstd::memcpy(this-\u003em_s_, o.m_s_, o.m_len_);//copy\n\t\t}\n\t}\n    //コピー代入演算子\n    inferior_string\u0026 operator=(const inferior_string\u0026 o)\n    {\n        this-\u003em_len_ = o.m_len_;\n\t\tif(0 == this-\u003em_len_){\n            delete[] this-\u003em_s_;\n\t\t\tthis-\u003em_s_ = nullptr;\n\t\t\tthis-\u003em_capacity_ = 0;\n\t\t}\n\t\telse if(this-\u003em_capacity_ \u003c this-\u003em_len_) {\n            delete[] this-\u003em_s_;\n            this-\u003em_capacity_ = ((std::numeric_limits\u003cstd::size_t\u003e::max() / 2) \u003c this-\u003em_len_) ? std::numeric_limits\u003cstd::size_t\u003e::max() : 2 * this-\u003em_len_;\n\t\t\tthis-\u003em_s_ = new char[this-\u003em_capacity_]();\n\t\t\tstd::memcpy(this-\u003em_s_, o.m_s_, o.m_len_);//copy\n\t\t} else {\n            std::memcpy(this-\u003em_s_, o.m_s_, o.m_len_);//copy\n            this-\u003em_s_[this-\u003em_len_] = '\\0';\n        }\n        return *this;\n    }\n    //ムーブコンストラクタ\n\tinferior_string(inferior_string\u0026\u0026 o) noexcept\n\t: m_s_(o.m_s_), m_len_(o.m_len_), m_capacity_(o.m_capacity_)\n\t{\n\t\to.m_s_ = nullptr;//disable input object's destructor.\n        o.m_len_ = o.m_capacity_ = 0;\n\t}\n    inferior_string\u0026 operator=(inferior_string\u0026\u0026 o) noexcept\n    {\n        delete[] this-\u003em_s_;\n        this-\u003em_s_ = o.m_s_;\n        this-\u003em_len_ = o.m_len_;\n        this-\u003em_capacity_ = o.m_capacity_;\n\t\to.m_s_ = nullptr;//disable input object's destructor.\n        o.m_len_ = o.m_capacity_ = 0;\n        return *this;\n    }\n\t~inferior_string() noexcept\n\t{\n\t\tdelete[] this-\u003em_s_;\n\t}\n\tconst char* c_str() const noexcept { return this-\u003em_s_; }\n    std::size_t length() const noexcept { return this-\u003em_len_; }\n    std::size_t size() const noexcept { return this-\u003em_len_; }\n    std::size_t capacity() const noexcept { return this-\u003em_capacity_; }\n    bool empty() const noexcept { return 0 == this-\u003em_len_; }\n};\nstd::ostream\u0026 operator\u003c\u003c (std::ostream\u0026 os, const inferior_string\u0026 str){\n\tif(!str.empty()) os \u003c\u003c str.c_str();\n\treturn os;\n}\nint main()\n{\n\tinferior_string str = \"arikitari\";\n\tinferior_string str2 = str;//コンストラクタの呼び出し\n\tstd::cout \u003c\u003c str \u003c\u003c '(' \u003c\u003c static_cast\u003cconst void*\u003e(str.c_str()) \u003c\u003c \"), \" \u003c\u003c str2 \u003c\u003c '(' \u003c\u003c static_cast\u003cconst void*\u003e(str2.c_str()) \u003c\u003c ')' \u003c\u003c std::endl;\n\tinferior_string str3 = std::move(str);//ムーブコンストラクタの呼び出し\n\t//inferior_string str3 = static_cast\u003cinferior_string\u0026\u0026\u003e(str);//同じ意味\n\tstd::cout \u003c\u003c str3 \u003c\u003c '(' \u003c\u003c static_cast\u003cconst void*\u003e(str3.c_str()) \u003c\u003c ')' \u003c\u003c std::endl;\n    str = inferior_string(\"sekai\");//ムーブ代入演算子の呼び出し\n    std::cout \u003c\u003c str \u003c\u003c '(' \u003c\u003c static_cast\u003cconst void*\u003e(str.c_str()) \u003c\u003c ')' \u003c\u003c std::endl;\n    str2 = str;//コピー代入演算子の呼び出し\n    std::cout \u003c\u003c str \u003c\u003c '(' \u003c\u003c static_cast\u003cconst void*\u003e(str.c_str()) \u003c\u003c \"), \" \u003c\u003c str2 \u003c\u003c '(' \u003c\u003c static_cast\u003cconst void*\u003e(str2.c_str()) \u003c\u003c ')' \u003c\u003c std::endl;\n\treturn 0;\n}\n```\n\n```plain:出力例\narikitari(0x1476c20), arikitari(0x1476c40)\narikitari(0x1476c20)\nsekai(0x1477c70)\nsekai(0x1477c70), sekai(0x1476c40)\n```\n\nhttps://wandbox.org/permlink/dw3hzBNCiwN1JEZW\n\nデストラクターは生成されたオブジェクトの寿命が尽きたときに呼び出されます。上記例ではmain関数の`return 0;`のあとに実行されます。\n\nまとめると、クラス名を`X`とした時、\n\n| 種類                       | 宣言                     |\n|----------------------------|--------------------------|\n| デフォルト・コンストラクタ | `X()`                    |\n| デストラクタ               | `~X()`                   |\n| コピー・コンストラクタ     | `X(const X\u0026)`            |\n| コピー代入演算子           | `X\u0026 operator=(const X\u0026)` |\n| ムーブ・コンストラクタ     | `X(X\u0026\u0026)`                 |\n| ムーブ代入演算子           | `X\u0026 operator=(X\u0026\u0026)`      |\n\nのようになります。ただし、厳密にはもうちょっと制約が緩く、例えばコピーコンストラクタとムーブコンストラクタは\n\n\u003e[C++11: Syntax and Feature#クラスのコピーとムーブ](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#class.copy)\n\u003eコピーコンストラクター（copy constructor）とは、あるクラスXにおいて、非テンプレートなコンストラクターで、一つ目の仮引数の型が、X \u0026、const X \u0026、volatile X \u0026、const volatile X \u0026のいずれかであり、二つ目以降の仮引数は存在しないか、すべてデフォルト実引数があるものをいう。\n\u003e\n\u003eムーブコンストラクター（move constructor）とは、あるクラスXにおいて、非テンプレートなコンストラクターで、一つ目の仮引数の型が、X \u0026\u0026、const X \u0026\u0026、volatile X \u0026\u0026、const volatile X \u0026\u0026のいずれかであり、二つ目以降の仮引数は存在しないか、すべてデフォルト実引数があるものをいう。\n\nという定義になっています(がそこまで意識することってない)。\n\n### コンパイラによる暗黙宣言\n\nでこの6つですが、暗黙に生成されることがあります。その条件は実に複雑で解説は\n\n- [コンストラクタが暗黙に宣言されるとき、されないとき - Qiita](http://qiita.com/rinse_/items/1ac008fe3aea7c0887fc)\n- [特殊メンバ関数とコンパイラによる暗黙宣言 - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20140704/p1)\n- [本の虫: C++0xにすごい変更が来た](https://cpplover.blogspot.jp/2010/11/c0x.html)\n- [C++11: Syntax and Feature#クラスのコピーとムーブ](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#class.copy)\n\nに譲りますが、いくつかの例を見てみましょう。なお「ユーザー」とはコードを書くあなた自身のことでコンパイラと対比して用いています。\n\n1. 何もコンストラクタ/代入演算子をユーザー宣言しなかった場合→**すべて暗黙生成される**\n2. 上記以外のコンストラクタをユーザー宣言した場合→**デフォルトコンストラクタ以外は暗黙生成される**\n3. デストラクタをユーザー宣言した場合→**デフォルトコンストラクタは生成される。コピーコンストラクタ/代入演算子は生成されるが使用は非推奨。ムーブンストラクタ/代入演算子は生成されない**\n4. デフォルトコンストラクタをユーザー宣言した場合→**それ以外はすべて生成される**\n\nということで結論は\n\n- デストラクタはユーザー宣言するな、`=default`指定(後述)も使うな、定義するならありったけ全部書け\n- C構造体はC++的には「何もコンストラクタ/代入演算子をユーザー宣言しなかった場合」に該当する\n\nとなります。\n\n### `default/delete`指定のすゝめ\n\nコンパイラによる暗黙生成は規則がわかりにくいです。コードを書く上では後述するように結局覚えないといけませんが、**読む人を考えると**`default/delete`指定をコンストラクタ/代入演算子につけたほうがいいと思われます。\n\n```cpp:C++\nclass ResourceManagerBase {\npublic:\n\tstatic constexpr std::size_t resource_limit_num = 99;\nprotected:\n\tint resources_[resource_limit_num];\nprivate:\n\tint activeResource_;\npublic:\n\tResourceManagerBase() noexcept;\n\tResourceManagerBase(const ResourceManagerBase\u0026) = delete;\n\tResourceManagerBase(ResourceManagerBase\u0026\u0026) = delete;\n\tResourceManagerBase\u0026 operator=(const ResourceManagerBase\u0026) = delete;\n\tResourceManagerBase\u0026 operator=(ResourceManagerBase\u0026\u0026) = delete;\n\tint activeResource() const noexcept;\n\tvoid activeResource(int handle) noexcept;\n\tvoid reset() noexcept;\n\tbool select(char c0, char c1) noexcept;\n};\n```\n\n\nこんな感じですね。注意点として前節で「ユーザー宣言したとき」と言いましたが、`default`指定は「ユーザー宣言したとき」に含まれます。なので、**デストラクタは`default`指定するべきではありません**。\nまた、\n\n\u003e[代入演算子のdefault指定とconstメンバ - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20130203/p1)\n\u003e\n\u003e- コンストラクタ／代入演算子などへdefault指定(=default)は、必ずしも“実装を定義する”ことを意味しない。\n\u003e- default指定は“暗黙的に行われるコンストラクタ／代入演算子の自動生成”をコンパイラに明示する。このルールに従った結果、コンストラクタ／代入演算子が定義されない（＝delete指定相当）こともある。\n\nとあるように、`default`指定しても必ずしも定義してくれるわけではありません。\n\n### メンバー初期化子とコンパイラ定義のデフォルトコンストラクタの挙動\n\nコンストラクタを自分で書かない、もしくは`= default`指定したクラスをメンバーに持ったときに、メンバー初期化子で`メンバー名()`のようにメンバ変数を初期化した場合、そのクラス型のオブジェクトは**0初期化**されます。\n\n一応根拠となる部分を江添さんの重箱本から引っ張っておきましょう。結論は上述の通りなので読み飛ばしていいです。\n\n\u003ehttp://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#dcl.init.default-initialize\n\u003e8.5.3 値初期化（value-initialize）\n\u003e値初期化（value-initialize）とは、T型のオブジェクトに対して、\n\u003e\n\u003eTが、unionではないクラス型で、ユーザー提供のコンストラクターを持たない場合、**オブジェクトはゼロ初期化される**。もし、暗黙的に定義されたコンストラクターが、トリビアルではない場合、コンストラクターが呼ばれる。\n\u003e\n\u003e**初期化子が空の括弧、()、であるとき、オブジェクトは値初期化される**。\n\n後述の「強そうな人からclassに関連する謎な用語を使われたときにみる項」から飛べる記事で解説していますが、`= default`指定はユーザー宣言に含みますが、ユーザー提供ではないので、最初に「もしくは`= default`指定した」と書いたんですね。\n\n```cpp:C++\n#include \u003ciostream\u003e\nstruct Vec2 {\n  float x;\n  float y;\n};\nclass Weapon {\npublic:\n  int  power;\n  Vec2 velocity;\n  Weapon() : power(), velocity() {}    \n};\nint main()\n{\n  Weapon obj;\n  std::cout \u003c\u003c obj.velocity.x \u003c\u003c std::endl;// =\u003e 0\n}\n```\n\nいや、当たり前なんですが、しかもC++11どころかC++03でも保証されている動作なんですが、\n[コンパイラによって動作が変わるコード @ゲームプログラマの小話[開発:コンパイラ・ビルド]](http://qiita.com/hoboaki/items/8384a9d717786a346b60)\nによると、そうならないコンパイラがあるそうで。・・・投げ捨てればいいと思うよ、そんなコンパイラ。\n\nとりあえず少なくとも\n\n```cpp:必要のない努力\ntemplate\u003ctypename TPodType\u003e\nstruct PodInitData\n{\n    /// テンプレートで指定した型をゼロ初期化したものを作成して返す。\n    static TPodType Create()\n    {\n        TPodType tmp = {};\n        return tmp;\n    }\n};\nstruct Vec2 {\n  float x;\n  float y;\n};\nclass Weapon {\npublic:\n  int  power;\n  Vec2 velocity;\n  Weapon() : power(0), velocity(PodInitData\u003cVec2\u003e::Create()) {}    \n};\n```\n\nこんな冗長なだけの無意味なコードは書く必要がないのは確かでしょう。いくらRVO効くだろうから実行コスト0でもコード量が無駄です(断じて @hoboaki さんをdisっているわけではないです、念のため)。\n\n### 特殊メンバ関数の呼び出しのタイミング\n\nではここまで見てきた特殊メンバ関数はいつ呼び出されるのでしょうか？\n\n[何々の時に〇〇コンストラクタが呼出しされるが覚えられないので特訓](http://qiita.com/yz2cm/items/7f8bf45838b35d970ce2)\n\nが**極めて秀逸な記事**なので、そちらに丸投げします。\n\n## staticメンバ変数がある\n\n通常のメンバ変数はオブジェクトごとに固有ですが、共有されるものとしてstaticメンバ変数があります。\n\nといってもconst指定されたstaticメンバ変数かコンパイル時定数にしかほぼ使いません。\n先程\n\n```cpp:C++\nclass ResourceManagerBase {\npublic:\n\tstatic constexpr std::size_t resource_limit_num = 99;\n```\n\nというコードを貼りましたが、これがstaticメンバ変数です。\n\n## staticメンバ関数がある\n\ntemplateメタプログラミングでもしない限りお世話になることはありません。だってそれ以外はふつうのフリー関数(メンバ関数と対比してそう呼ぶ)でまにあっているので。\n\n標準ライブラリ(STL)でこれを使っている例で有名なものとしては、`limits`ヘッダにある[`std::numeric_limits`](https://cpprefjp.github.io/reference/limits/numeric_limits.html)でしょうか。実装はがっつりtemplateメタプログラミングしています。\n\n## 継承できる\n\nがっつりやりだすと`virtual`云々という謎文章に襲撃されるのと実行速度が犠牲になるのでC++入門者な読者の皆様は距離を置くくらいでちょうどいいと思いますが(無理に使って悲惨なことになっているコードから目をそらしつつ)、全く知らないというのもどうかと思うので落とし穴が少そうなコードを紹介します。\n\n```cpp:C++\nclass Base {};\nclass Derived : public Base {};\n```\n\n継承は基本となる基底クラス(base class)があり、それを継承する派生クラス(derived class)があります(基底クラスは基本クラスとも言います)。Javaではスーパークラスとサブクラスと言うそうですが、C++では(C#もC++と同じ呼び方をするそうですね)そうは言いません。\n\n派生クラスを作るには、派生クラス名のあとに `:`を書いてその後に基底クラス名を書きます。\n\n### 継承3種類\n\n- public継承\n- protected継承\n- private継承\n\nの3つがありますが、public継承以外に使うことはほぼありませんから忘れましょう。\n\n```cpp:C++\nstruct X : /* デフォルトでは public 継承 */ Base{\n\n};\n\nclass X : /* デフォルトでは private 継承 */ Base{\n\n};\n```\n\n### 派生クラスではコンストラクタとメンバ関数を追加するだけでメンバ変数は増やさないパターン\n\nもう面倒になったので実装は書きません、クラス定義だけ。実装は\n\n- [resource_manager.hpp](https://github.com/S-H-GAMELINKS/Novel.Game.Engine.LINKS/blob/8061dce8f2387ceee434c208486e8857d293be53/resource_manager.hpp)\n- [resource_manager.cpp](https://github.com/S-H-GAMELINKS/Novel.Game.Engine.LINKS/blob/8061dce8f2387ceee434c208486e8857d293be53/resource_manager.cpp)\n\n参照。\n\n```cpp:C++\nclass ResourceManagerBase {\npublic:\n\tstatic constexpr std::size_t resource_limit_num = 99;\nprotected:\n\tint resources_[resource_limit_num];\nprivate:\n\tint activeResource_;\npublic:\n\tResourceManagerBase() noexcept;\n\tResourceManagerBase(const ResourceManagerBase\u0026) = delete;\n\tResourceManagerBase(ResourceManagerBase\u0026\u0026) = delete;\n\tResourceManagerBase\u0026 operator=(const ResourceManagerBase\u0026) = delete;\n\tResourceManagerBase\u0026 operator=(ResourceManagerBase\u0026\u0026) = delete;\n\tint activeResource() const noexcept;\n\tvoid activeResource(int handle) noexcept;\n\tvoid reset() noexcept;\n\tbool select(char c0, char c1) noexcept;\n};\nclass ImageResourceManager : public ResourceManagerBase {\npublic:\n\tImageResourceManager() noexcept;\n\tImageResourceManager(const ImageResourceManager\u0026) = delete;\n\tImageResourceManager(ImageResourceManager\u0026\u0026) = delete;\n\tImageResourceManager\u0026 operator=(const ImageResourceManager\u0026) = delete;\n\tImageResourceManager\u0026 operator=(ImageResourceManager\u0026\u0026) = delete;\n\tbool load(const TCHAR* format) noexcept;\n\tint DrawGraph(int x, int y, bool transFlag) noexcept;\n\tint DrawRectGraph(int destX, int destY, int srcX, int srcY, int width, int height, bool transFlag, bool turnFlag = false) noexcept;\n\tint DerivationGraph(int srcX, int srcY, int width, int height) noexcept;\n};\n```\n\n派生クラスでもメンバ変数を定義するとややこしさが倍増するので基底クラスでのみメンバ変数を定義するのはわかりやすさの観点で大事です(個人的な意見です)。\n\n基底クラスで`private`と指定されているものは派生クラスから見えません。今回の場合はメンバ変数`activeResource_`が該当します。一方、基底クラスで`protected`と指定されているものはクラスの外からは見えないものの、派生クラスから見えます。今回はメンバ変数`resources_`ですね。\n\n基底クラスでコピー/ムーブコンストラクタ/代入演算子が`delete`指定されている時点で派生クラスもその影響を受けるのですが(これを利用したものとして``boost:nocopyable`なんかがある)一応派生クラスでもdelete`指定しています。\n\n派生クラスでメンバ変数を作らない\u0026\u0026派生クラス基底クラスともにデストラクタがないパターンはお手軽なので覚えておくといいと思います\n\n###　Empty Base Optimizationを期待しているパターン\n\nC++11でもC++17でもRejectされたConceptという機能をどうにか現行のC++の範囲で実装することで可読性をあげようという試みはまあそこそこ見かけるんですが、その一例を見てみましょう(Conceptについては解説しません、templateが深く関係しているとだけ書いておきます)。\n\n```cpp:C++14\n#include \u003ccstdint\u003e\n#include \u003ctype_traits\u003e\nstruct ConceptColorType {};\nclass RGB : public ConceptColorType {\npublic:\n  std::uint8_t r;\n  std::uint8_t g;\n  std::uint8_t b;\n};\nclass YCbCr : public ConceptColorType {\npublic:\n  std::uint8_t y;\n  std::uint8_t cb;\n  std::uint8_t cr;\n  YCbCr(RGB rgb);\n  explicit operator RGB();\n};\nclass YPbPr : public ConceptColorType {\npublic:\n  std::uint8_t y;\n  std::uint8_t cb;\n  std::uint8_t cr;\n  YCbCr(RGB rgb);\n  explicit operator RGB();\n};\ntemplate\u003c\n  typename ColorTypeFrom, typebame ColorTypeTo,\n  std::enable_if_t\u003cstd::is_base_of\u003cConceptColorType, ColorTypeFrom\u003e::value \u0026\u0026 std::is_base_of\u003cConceptColorType, ColorTypeTo\u003e::value, std::nullptr_t\u003e = nullptr\n\u003e\nColorTypeTo color_cast(ColorTypeFrom\u0026\u0026 from){\n  return {static_cast\u003cRGB\u003e(from)};\n}\n```\n\nこれは色を表すクラスですよーということを示すために中身が空っぽのクラス`ConceptColorType`を継承させています。\nあるクラスを継承しているかを調べるには[`\u003ctype_traits\u003e`](https://cpprefjp.github.io/reference/type_traits.html)ヘッダの[`std::is_base_of`](https://cpprefjp.github.io/reference/type_traits/is_base_of.html)で簡単に判定できるので、こんな手法があります。\n\nもっとも、[`decltype`ハック](http://qiita.com/_EnumHack/items/ee2141ad47915c55d9cb#%E9%96%A2%E6%95%B0value%E3%81%A8%E5%A4%89%E6%95%B0value%E3%81%AE%E3%81%A9%E3%81%A1%E3%82%89%E3%81%8B%E3%82%92%E6%8C%81%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E3%82%92%E7%A2%BA%E3%81%8B%E3%82%81%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88)で置き換えられることも多いように感じますが。\n\n### CRTP\n\nCuriously Reccursive/Reccuring Template Patternです。上記のEBOを期待するパターンに近いのですがtemplateクラスを使います。もっというと基底クラスのtemplate引数が派生クラスの型を受け取るものです。\n\n```cpp\n#include \u003cutility\u003e\ntemplate \u003cclass Derived\u003e\nclass NonCopyable {\nprotected:\n  NonCopyable() = default;\n  NonCopyable(NonCopyable\u0026\u0026) = default;\n  NonCopyable\u0026 operator=(NonCopyable\u0026\u0026) = default;\nprivate: \n  NonCopyable(const NonCopyable\u0026) = delete;\n  NonCopyable\u0026 operator=(const NonCopyable \u0026) = delete;\n};\nclass Hoge : private NonCopyable\u003cHoge\u003e {};\nint main()\n{\n  Hoge hoge1;//OK\n  Hoge hoge2;//OK\n  //Hoge hoge3 = hoge1;//NG\n  Hoge hoge4 = std::move(hoge1);//OK\n  //hoge2 = hoge4;//NG\n  hoge2 = std::move(hoge4);//OK\n}\n```\n\nこんな感じで継承するだけでコピーできないクラスが作れます。\n\nこれを発展させると静的ポリモーフィズムなんてものができるっていうんだから怖い。\n[【C++】CRTPによる静的インターフェースクラスはライブラリ実装において不適切+解決法](http://qiita.com/Riyaaaa_a/items/a9af401520f238f45b80)\n[静的ポリモーフィズムの安全で簡単な実装 -動的から静的にしてパフォーマンス向上-](http://qiita.com/Riyaaaa_a/items/887f6190e710c6410994)\n\n## virtual基底クラスを持てる\n\n```cpp:C++\nclass Base {};\nclass Derived1 : virtual public Base {};\nclass Derived2 : virtual public Base {};\nclass Derived3 : public Derived1, public Derived12 {};\n```\n\n解説しません。これが必要になる時点で継承関係が複雑すぎです。\n\n## virtual(仮想)関数を持てる\n\nはい、普通じゃないメンバ関数です。殆どの場合、動的ポリモフィズムを実現するために継承とセットで用いられます。\n\n基本的には普通のメンバ関数と同じですが、メンバ関数へのポインタをオブジェクトが持っていると言えばイメージが湧くんじゃないでしょうか。実際もっとも有名な仮想関数の実装方法であるvtableを使うものはまさにその通りになっています。\n\nただしポインタを介して、というくらいなので、通常の関数ポインタ同様最適化が難しく、inline展開などを阻害します。ですので、**本当に**速度が必要な場合は、templateや静的ポリモーフィズムやなにか根本的に別の手法で実現できないか試す必要が出てきます(そしてコードが~~魔界~~templateまみれになる)。\n\n具体的な用例はC++入門者の範疇を超えるので割愛し、参考リンクを貼るにとどめます(というのは建前で私が仮想関数使うコードをあまり書かないので解説したくない)。\n\n- [C++Siv3D入門講座 Vol.10 仮想関数・ポリモーフィズム](http://qiita.com/yagiri000/items/fcf08b0fdf5cb5091fc9)\n- [overrideとfinal - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp11/override_final.html)\n- [そのoverride指定は合法ですか？違法ですか？](http://qiita.com/yumetodo/items/f3ceb1a64a1540f85568)\n- [C++11におけるoverride、final、default、delete指定子の必要性と有用性 - 熟れたC++使いが社会問題と趣味をつぶやく](http://tensor12321.hatenablog.jp/entry/2015/10/01/C%2B%2B11%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Boverride%E6%8C%87%E5%AE%9A%E5%AD%90%E3%81%AE%E5%BF%85%E8%A6%81%E6%80%A7%E3%81%A8%E6%9C%89%E7%94%A8%E6%80%A7)\n- [継承コンストラクタ - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/lang/cpp11/inheriting_constructors.html)\n- [C++ の仮想関数と VTable について](http://qiita.com/msmania/items/452d4fb4dec76207df87)\n\nC#でおなじみ文脈依存キーワードの`override`/`final`がC++にはあるんですね。`override`使おう。\n\n## templateの部分特殊化ができる\n\n詳細は\n\n- [C++ template の(部分)?特殊化ができるとき、できないとき](http://mimosa-pudica.net/cpp-specialization.html)\n\nに投げます。後述します。\n\n自作したクラスを[`std::unordered_map`](https://cpprefjp.github.io/reference/unordered_map/unordered_map.html)でkeyとして使うために[`std::hash`](https://cpprefjp.github.io/reference/functional/hash.html)を特殊化するのが最も一般的な用法でしょうか。\n\n# 関数オブジェクトとしてのクラス\n\n主人公は `operator()`です。\n\nそもそも関数は\n\n```c:C99\nint hoge(void)\n{\n  return 3;\n}\nint main(void)\n{\n  int a = hoge();\n  return 0;\n}\n```\n\n`関数名()`で呼び出すのでした。つまり・・・\n\n```cpp:C++\n#include \u003ciostream\u003e\nstruct F{\n  int operator()()\n  {\n    return 3;\n  }\n};\nint main()\n{\n  F f;\n  auto r = f();// int型\n  std::cout \u003c\u003c r \u003c\u003c ',' \u003c\u003c F{}() \u003c\u003c std::endl;// =\u003e 3,3\n}\n```\n\nみたいに、`operator ()`をoverloadすれば関数もどきが作れるわけです。\n\n`operator ()`がoverloadされているクラスを、関数オブジェクトないし、function-like classと呼びます。\n\n関数ポインタよりコンパイラの最適化を阻害せず高速化できるため、よく用いられます。\n\nC++にもlambda式と言うものがあるのですが、これはこの関数オブジェクトを自動生成するシンタックスシュガーだったりします。lambda式導入によって直に関数オブジェクトを作る機会は減りましたが、仕組みそのものは覚えておくといいかと思います。\n\n詳細は\n[関数の創世から深淵まで駆け抜ける関数とはなんぞや講座](http://qiita.com/yumetodo/items/cdfb41781d32d98be1b4)\nを見てください。\n\n# イテレータのためのクラス\n\nC++には配列のようなものが何種類かありますが、これをまとめて「コンテナ」という概念であつかい、これを操作するために「イテレータ」という概念を導入しています。\n\n```cpp:c++\n#include \u003carray\u003e\n#include \u003ciostream\u003e\nint main()\n{\n  std::array\u003cint\u003e arr = {{ 2, 3, 5 }};\n  //イテレータを直に扱う\n  for(auto it = std::begin(arr); it != std::end(arr); ++it) {\n    std::cout \u003c\u003c *it \u003c\u003c std::endl;\n  }\n  //イテレータをRange-based forを介して扱う\n  for(auto\u0026\u0026 e : arr) {\n    std::cout \u003c\u003c e \u003c\u003c std::endl;\n  }\n}\n```\n\nイテレータは自分で書くこともできます。\nただし書くのはだいぶダルいです。\n\nいろんなイテレータを作っている例は\n[イテレータの解説をするなんて今更佳代](http://qiita.com/yumetodo/items/245e94a0e85db9bf5cbb)\nを御覧ください。\n\n# タグディスパッチのためのクラス\n\nC++には例外がありますが、書いていると例外を使う版と使わない版の両方が欲しくなってくることがあります。\n\nそこでタグディスパッチです。\n\nC++標準ライブラリ(STL)には\n\n```cpp:STL\nnamespace std {\n  struct nothrow_t {};\n  extern const nothrow_t nothrow;\n}\n```\n\nのような物があります。一体この[`std::nothrow_t`](https://cpprefjp.github.io/reference/new/nothrow_t.html)をどう使うのかというと\n\n```cpp:C++\nclass sound final {\n//略\nint play(playtype PlayType, std::nothrow_t) noexcept {\n\treturn DxLib::PlaySoundMem(GetHandle(), static_cast\u003cint\u003e(PlayType), true);\n}\nvoid play(playtype PlayType, bool TopPositionFlag) {\n\tDXLE_SOUND_ERROR_THROW_WITH_MESSAGE_IF((-1 == this-\u003eplay(PlayType, TopPositionFlag, std::nothrow)), \"fail DxLib::PlaySoundMem().\");\n}\n};\n```\n\nhttps://github.com/Nagarei/DxLibEx/blob/dbbd311fbfe153ad7008bf9451478e2b1b9217db/dxlibex/sound.hpp#L223\n\nこんなふうに引数に使って関数のoverloadをします。すると\n\n```cpp:C++\nint main(){\n  sound s;\n  //なんか\n  s.play();//例外を投げる版を呼ぶ\n  s.play(std::nothrow);//無例外版を呼ぶ\n}\n```\n\nという呼び分けができるんですね。\n\nSTLにある他のタグディスパッチ用クラスとしては、[`std::piecewise_construct`](https://cpprefjp.github.io/reference/utility/piecewise_construct.html)なんかがあります。\n\n# 拡張メンバ関数を作るためのoperator overloadするためのクラス\n\n散々ネタにされる話として\n「C++ってstd::stringにsplitメンバ関数ないんでしょ？ｸｽｸｽ」\nというお話があります。\n\nよろしい、ならば戦争だ！\n\n戦争に使う武器はoperator overloadです。operator overloadするにはクラス型を定義する必要がありました。\n\n残念ながら`operator .`は上述のとおりoverloadできないので、代わりに`operator |`をoverloadします。\n\n目指すは\n\n```cpp:C++\nint main()\n{\n  std::string s = \"arikitari na sekai\";\n  const auto re = s | split(' ');\n}\n```\n\n真面目に実装している記事は\n[C++でPStade.Oven(pipeline)風味なstringのsplitを作ってみた](http://qiita.com/yumetodo/items/bf2bc5c1d49d5aec3efa)\nです。とてもじゃないですがここに書くには余白が足りない。\n\nともかくこれで\n??「C++ってstd::stringにsplitメンバ関数ないんでしょ？ｸｽｸｽ」\nC#「しかも拡張メソッドすらないんですって」\nC++「operator overloadできるから十分だし」\nと言い返せますね。\n\n# コンパイル時型操作のためのクラス\n\n```cpp:C++\ntemplate\u003ctypename Type1, typename Type2\u003e struct is_same {\n  static constexpr bool value = false;\n};\ntemplate\u003ctypename Type\u003e struct is_same\u003cType, Type\u003e {\n  static constexpr bool value = true;\n};\n\nstatic_assert(true == is_same\u003cint, int\u003e::value, \"err\");\nstatic_assert(false == is_same\u003cint, char\u003e::value, \"err\");\n\nint main() {}\n```\n\nテンプレートを使って色々書いているとtemplate引数で渡された型についていろいろ調べたくなります。その時先に書いたtemplate部分特殊化を使うためにこんなクラスを書くことがあります。\n\nへ～そーなんだ～、で構いません。\n\n# 強そうな人からclassに関連する謎な用語を使われたときにみる項\n\nを書こうとしたら全く入門者向けの話ではなくなったので別の記事にしました。\n\n- [C++初心者に贈る強そうな人からC++のclassに関連する謎な用語を使われたときにみるもの: trivialとか](https://qiita.com/yumetodo/items/424cc4d15de4edad436a)\n\n# アクセス指定があると何が嬉しいか\n\nぶっちゃけオブジェクト指向するためにある機能だと思います。それ以外の用途が私には浮かばない。\n\nCにおいてもファイルわけをして、外部公開しない変数に`static`をつけたと思います。\n\nつまりアクセス指定があるとこれと同じで外部との結合が減るんですね。例えばメンバ変数を`private`にすればそれはクラスの外からはいじられないわけです(断じて全部のprivate変数にgetter/setterを書けという話ではない)\n\nすると、メンテナンス可能性が向上します。`public`だととどこからか変数が書き換えられる心配がありますが、`private`/`protected`ならそれがないんですね(ポインタとキャストゴリ押しで書き換えられるだろとか言わない)。\n\n# `class`と`struct`の違い\n\n上記でも解説しましたし、\n[【初心者 C++er Advent Calendar 2015 11日目】C++ における class と struct の違い - Secret Garden(Instrumental)](http://secret-garden.hatenablog.com/entry/2015/12/11/000000)([Qiita版](http://qiita.com/pink_bangbi/items/e25302df7f4ba7fa0db4))\nでも解説されていますが、\nまとめると、**アクセス指定がデフォルトでpublicかprivateか**の差のみです。\n\n```cpp:C++\n//A1とA2は全く同じ意味\nstruct A1 {\n  int a;//public\n  static constexpr int n = 10;\n};\nstruct A2 {\npublic:\n  int a;\n  static constexpr int n = 10;\n};\n\nstatic_assert(A1::n == A2::n, \"err\");//OK\n\n//B1とB2は全く同じ意味\nclass B1 {\n  int a;//private\n  static constexpr int n = 10;\n};\nclass B2 {\nprivate:\n  int a;\n  static constexpr int n = 10;\n};\n\n//static_assert(B1::n == B2::n, \"err\");//NG\n//error: 'constexpr const int B1::n' is private within this context\n//error: 'constexpr const int B2::n' is private within this context\n\n//C1とC2は全く同じ意味\nstruct C1 : A1 {};\nstruct C2 : public A1 {};\n\nstatic_assert(C1::n == C2::n, \"err\");//OK\n\n//D1とD2は全く同じ意味\nclass D1 : A1 {};\nclass D2 : private A1 {};\n\n//static_assert(D1::n == D2::n, \"err\");//NG\n//error: 'constexpr const int A1::n' is inaccessible within this context\n\nint main(){}\n```\n\n# `class`と`struct`をどう使い分けるか\n\nオブジェクト指向プログラミングのツールとしてクラスを使うには`class`キーワードを使うことが多いように思います。\n\n一方でコンパイル時計算のためのクラスなど、メンバが全てpublicであることが望ましい場合などは`struct`キーワードを利用することが多いように思います。\n\nまたCの構造体と同じような使い方をする場合についても`struct`キーワードを使うことが多いように思います。\n\n# まとめ\n\nclassについて様々な機能や用例を見てきました。classはかなりいろいろなことに使われていてすべて取り上げるのは不可能です。少なくともオブジェクト指向プログラミングのためだけの機能ではないことがご理解いただけたかと思います。\n\nぜひクラスを実際に自分が書くコードで使っていただければな、と思います。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":1,"created_at":"2017-06-10T12:35:44+09:00","group":null,"id":"b0ff58617f2733d4ffa1","likes_count":66,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]}],"title":"C++入門者に贈るclass入門とclass/structキーワードの使い分け","updated_at":"2019-04-03T13:50:20+09:00","url":"https://qiita.com/yumetodo/items/b0ff58617f2733d4ffa1","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e例えばこれがHTML5+CSS3ならば、中寄せで文字列を描画するなんてことは極めてかんたんにできる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;p\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"center\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eありきたりな世界\u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nf\"\u003e#center\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003etext-align\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003ecenter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じだろうか。しかしDxLibの場合どうやるんだ？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"一般的にdxlibで文字列を描画するまでの流れ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%80%E8%88%AC%E7%9A%84%E3%81%ABdxlib%E3%81%A7%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%8F%8F%E7%94%BB%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7%E3%81%AE%E6%B5%81%E3%82%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e一般的にDxLibで文字列を描画するまでの流れ\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eCreateFontToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDX_FONTTYPE_ANTIALIASING\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eyellow\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eGetColor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawStringToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_T\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ありきたりな世界\"\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eyellow\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eDxLib::CreateFontToHandle\u003c/code\u003eでフォントハンドルを作成し、\u003ccode\u003eDxLib::GetColor\u003c/code\u003eで色を指定して\u003ccode\u003eDxLib::DrawStringToHandle\u003c/code\u003eで文字列を描画する。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"じゃあ中寄せで描画してくれるdrawstringtohandleを探せばいいんだね\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%98%E3%82%83%E3%81%82%E4%B8%AD%E5%AF%84%E3%81%9B%E3%81%A7%E6%8F%8F%E7%94%BB%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8Bdrawstringtohandle%E3%82%92%E6%8E%A2%E3%81%9B%E3%81%B0%E3%81%84%E3%81%84%E3%82%93%E3%81%A0%E3%81%AD\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eじゃあ中寄せで描画してくれる\u003ccode\u003eDrawStringToHandle\u003c/code\u003eを探せばいいんだね！\u003c/h1\u003e\n\n\u003cp\u003eしかしそんなものはない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"自作しよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%87%AA%E4%BD%9C%E3%81%97%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e自作しよう\u003c/h1\u003e\n\n\u003cp\u003e止む得ない。自作だ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"要件定義\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A6%81%E4%BB%B6%E5%AE%9A%E7%BE%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e要件定義\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e描画可能領域(四角形)をうけとり、それに収まるように描画する\u003c/li\u003e\n\u003cli\u003e文字列は横書きで描画する\u003c/li\u003e\n\u003cli\u003e横方向のはみ出しは、折り返してはみ出さないようにする\u003c/li\u003e\n\u003cli\u003e折り返したものも含め、すべでの行は描画可能領域の横方向に対し中寄せされているように描画する\u003c/li\u003e\n\u003cli\u003e制御文字(改行文字含む)は考慮しない\u003c/li\u003e\n\u003cli\u003e実際に描画した範囲の底辺のy座標を返す\u003c/li\u003e\n\u003cli\u003e座標はすべて\u003ccode\u003eflaot\u003c/code\u003e型で扱う\u003c/li\u003e\n\u003cli\u003eフォントハンドルを受け取って利用する\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e制御文字(改行文字含む)は考慮しないとしたのはなんでかというと、\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026amp;no=3778\" rel=\"nofollow noopener\" target=\"_blank\"\u003e改行対応DrawFormatString | ＤＸライブラリ質問掲示板\u003c/a\u003e\u003cbr\u003e\nを見ればわかるように議論が発散してしまうから。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"使うべきdxlibの関数を調べる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%86%E3%81%B9%E3%81%8Ddxlib%E3%81%AE%E9%96%A2%E6%95%B0%E3%82%92%E8%AA%BF%E3%81%B9%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使うべきDxLibの関数を調べる\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"文字列描画\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%96%87%E5%AD%97%E5%88%97%E6%8F%8F%E7%94%BB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e文字列描画\u003c/h3\u003e\n\n\u003cp\u003eまず肝心の文字列描画だが、座標を\u003ccode\u003efloat\u003c/code\u003eであつかうことと、フォントハンドルを使うことから、\u003ccode\u003eDxLib::DrawStringFToHandle\u003c/code\u003eを利用する。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"描画時の文字列の幅\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8F%8F%E7%94%BB%E6%99%82%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%81%AE%E5%B9%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e描画時の文字列の幅\u003c/h3\u003e\n\n\u003cp\u003e次に、文字列の折り返しを考えるので、文字列を描画したときの文字幅を調べたい。候補としては\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetDrawStringWidthToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eStrLen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eFontHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eVerticalFlag\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFALSE\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetDrawStringCharInfoToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDRAWCHARINFO\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eInfoBuffer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eInfoBufferSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eStrLen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eFontHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eVerticalFlag\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFALSE\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eの2つがある。\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"getdrawstringwidthtohandle\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#getdrawstringwidthtohandle\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eGetDrawStringWidthToHandle\u003c/code\u003e\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"http://dxlib.o.oo7.jp/function/dxfunc_graph2.html#R17N13\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://dxlib.o.oo7.jp/function/dxfunc_graph2.html#R17N13\u003c/a\u003e\u003cbr\u003e\nに解説がある。\u003ccode\u003eStrLen\u003c/code\u003eに指定するのはbyte数である。\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"getdrawstringcharinfotohandle\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#getdrawstringcharinfotohandle\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eGetDrawStringCharInfoToHandle\u003c/code\u003e\n\u003c/h4\u003e\n\n\u003cdl\u003e\n  \u003cdt\u003e宣言\u003c/dt\u003e\n  \u003cdd\u003e\u003ccode\u003eint GetDrawStringCharInfoToHandle(DRAWCHARINFO *InfoBuffer, size_t InfoBufferSize, const TCHAR *String, int StrLen, int FontHandle, int VerticalFlag = FALSE);\u003c/code\u003e\u003c/dd\u003e\n  \u003cdt\u003e概略\u003c/dt\u003e\n  \u003cdd\u003eフォントハンドルを使用した文字列の１文字毎の情報を取得する\u003c/dd\u003e\n  \u003cdt\u003e引数\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e\u003ccode\u003eDRAWCHARINFO *InfoBuffer\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e文字の情報を格納する\u003ccode\u003eDRAWCHARINFO\u003c/code\u003e構造体の配列への先頭アドレス、\u003ccode\u003eNULL\u003c/code\u003eでもOK\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003esize_t InfoBufferSize\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e文字の情報を格納する\u003ccode\u003eDRAWCHARINFO\u003c/code\u003e構造体の配列の要素数\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003econst TCHAR *String\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e描画時の幅を調べたい文字列\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003eint StrLen\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e調べたい文字列の長さ(byte)\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003eint FontHandle\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e描画幅を取得する際に使用するフォントデータの識別番号\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003eint VerticalFlag = FALSE\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e縦書きかどうかのフラグ、\u003ccode\u003eFALSE\u003c/code\u003eを指定すると横書きになります\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n  \u003cdt\u003e戻り値\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e-1以外\u003c/dt\u003e\n      \u003cdd\u003e描画上の文字数、\u003ccode\u003eInfoBuffer\u003c/code\u003eの要素数はこれより大きい必要がある\u003c/dd\u003e\n      \u003cdt\u003e-1\u003c/dt\u003e\n      \u003cdd\u003eエラー発生\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etagDRAWCHARINFO\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e                   \u003cspan class=\"n\"\u003eChar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"mi\"\u003e13\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e// 文字\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBYTE\u003c/span\u003e                    \u003cspan class=\"n\"\u003eBytes\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e// 文字のバイト数\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e                   \u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDrawY\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e// 描画位置\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e                   \u003cspan class=\"n\"\u003eSizeX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSizeY\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e// 描画サイズ\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eDRAWCHARINFO\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eLPDRAWCHARINFO\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eChar\u003c/code\u003eの要素数は13ありますが、これは将来的にDxLibがUnicodeの結合文字列を正しく扱えるようになったときのための予約で実際には13も使いません。格納されいているbyte数(要素数ではない)は\u003ccode\u003eBytes\u003c/code\u003eが該当します。要素数がほしいなら\u003ccode\u003eBytes/sizeof(TCHAR)\u003c/code\u003eとかしましょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eDrawX\u003c/code\u003eは指定した文字列を\u003ccode\u003e(0, 0)\u003c/code\u003eに描画したときの対象文字の左上のx座標です。\u003ccode\u003eDrawY\u003c/code\u003eはいらない子です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eDrawX + SizeX\u003c/code\u003eは次の文字の\u003ccode\u003eDrawX\u003c/code\u003eと等しくなります。\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"どれを使うか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A9%E3%82%8C%E3%82%92%E4%BD%BF%E3%81%86%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eどれを使うか\u003c/h4\u003e\n\n\u003cp\u003e折り返しを考慮すると、\u003ccode\u003eGetDrawStringCharInfoToHandle\u003c/code\u003eを呼ばないとどの文字までが一行に収まるかわかりません。で、この2つの関数ですが、内部ではフォントハンドルに紐付いたフォントグリフの情報を取りに行っているので、あんまり何度も呼び出したくないです。そこで\u003ccode\u003eGetDrawStringCharInfoToHandle\u003c/code\u003eのみを使うことにしましょう\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"改行したときのy座標を決定する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%94%B9%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AEy%E5%BA%A7%E6%A8%99%E3%82%92%E6%B1%BA%E5%AE%9A%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e改行したときのy座標を決定する\u003c/h3\u003e\n\n\u003cp\u003e改行したときのy座標はどうすればいいのかと思ってDxLibの実装を見ていると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eDxFont.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eFontCacheStringDrawToHandleST\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eDrawFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003exi\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eyi\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e           \u003cspan class=\"n\"\u003exf\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e           \u003cspan class=\"n\"\u003eyf\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003ePosIntFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eExRateValidFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e          \u003cspan class=\"n\"\u003eExRateX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e          \u003cspan class=\"n\"\u003eExRateY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eRotateValidFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e           \u003cspan class=\"n\"\u003eRotCenterX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e           \u003cspan class=\"n\"\u003eRotCenterY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e          \u003cspan class=\"n\"\u003eRotAngle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eStrData\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e    \u003cspan class=\"n\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMEMIMG\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e        \u003cspan class=\"n\"\u003eDestMemImg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eRECT\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e    \u003cspan class=\"n\"\u003eClipRect\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eTransFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eFONTMANAGE\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e    \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e    \u003cspan class=\"n\"\u003eEdgeColor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eStrLen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eVerticalFlag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSIZE\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e          \u003cspan class=\"n\"\u003eDrawSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e           \u003cspan class=\"n\"\u003eLineCount\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eDRAWCHARINFO\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e  \u003cspan class=\"n\"\u003eCharInfos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e          \u003cspan class=\"n\"\u003eCharInfoBufferSize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e           \u003cspan class=\"n\"\u003eCharInfoNum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e             \u003cspan class=\"n\"\u003eOnlyType\u003c/span\u003e \u003cspan class=\"cm\"\u003e/* 0:通常描画 1:本体のみ 2:縁のみ */\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//中略\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// 改行時にＹ座標に加算する値を算出\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eVerticalFlag\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eTRUE\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eDrawPosSubAdd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eLineSpaceValidFlag\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eLineSpace\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eBaseInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFontHeight\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eExRateX\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eDrawPosSubAdd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eLineSpaceValidFlag\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eLineSpace\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eManageData\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eBaseInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFontHeight\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eExRateY\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eというのを見つけました。\u003ccode\u003eManageData-\u0026gt;LineSpaceValidFlag ? ManageData-\u0026gt;LineSpace : ManageData-\u0026gt;BaseInfo.FontHeight\u003c/code\u003eが大事そうです。探してみると\u003ccode\u003eDxLib::GetFontLineSpaceToHandle\u003c/code\u003e関数がヒットしました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetFontLineSpaceToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eFontHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdl\u003e\n  \u003cdt\u003e宣言\u003c/dt\u003e\n  \u003cdd\u003e\u003ccode\u003eint GetFontLineSpaceToHandle(int FontHandle);\u003c/code\u003e\u003c/dd\u003e\n  \u003cdt\u003e概略\u003c/dt\u003e\n  \u003cdd\u003eフォントハンドルの行間を取得する\u003c/dd\u003e\n  \u003cdt\u003e引数\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e\u003ccode\u003eint FontHandle\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e描画幅を取得する際に使用するフォントデータの識別番号\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n  \u003cdt\u003e戻り値\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e-1以外\u003c/dt\u003e\n      \u003cdd\u003e行間(ドット単位)\u003c/dd\u003e\n      \u003cdt\u003e-1\u003c/dt\u003e\n      \u003cdd\u003eエラー発生\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"getdrawstringcharinfotohandle関数をstlで使いやすくする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#getdrawstringcharinfotohandle%E9%96%A2%E6%95%B0%E3%82%92stl%E3%81%A7%E4%BD%BF%E3%81%84%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eGetDrawStringCharInfoToHandle\u003c/code\u003e関数をSTLで使いやすくする。\u003c/h2\u003e\n\n\u003cp\u003e要は配列を返すんですから、\u003ccode\u003estd::vector\u003c/code\u003eの出番ですね！\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_string_center_impl\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDRAWCHARINFO\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eget_draw_string_char_info\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebasic_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDRAWCHARINFO\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eGetDrawStringCharInfoToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"fail in function DxLib::GetDrawStringCharInfoToHandle\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//再取得\u003c/span\u003e\n            \u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eGetDrawStringCharInfoToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"fail to detect draw info.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echar_info_num\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じでラップできます。とりあえず文字列の要素数だけ確保してやることでなるべく\u003ccode\u003eGetDrawStringCharInfoToHandle\u003c/code\u003eを一度だけ呼ぶようにする作戦です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実装する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実装する\u003c/h2\u003e\n\n\u003cp\u003eあとはひたすら書くだけです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"nf\"\u003edraw_string_center\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_x_left\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_x_right\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_top\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_bottom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebasic_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eedge_color\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e  \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid_argument\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"empty string not allowed.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edraw_area_x_right\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_x_left\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_bottom\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_top\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003einvalid_argument\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//一文字ずつの描画幅情報を取得する\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_string_center_impl\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eget_draw_string_char_info\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//ManageData-\u0026gt;LineSpaceValidFlag ? ManageData-\u0026gt;LineSpace : ManageData-\u0026gt;BaseInfo.FontHeight\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eline_space\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eGetFontLineSpaceToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003earea_width\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_x_right\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_x_left\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003etotal_draw_width\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eback\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eback\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eSizeX\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efront\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etotal_draw_width\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003earea_width\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//一行ですむ場合\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003epadding\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earea_width\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003etotal_draw_width\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawStringFToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edraw_area_x_left\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_top\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eedge_color\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eline_space\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//複数行になる場合\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003earea_height\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_bottom\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_top\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//描画開始\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eline_front_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eline_front_it\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eBytes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eline_width_contain_current_it_point_char\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSizeX\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eline_front_it\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earea_width\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eline_width_contain_current_it_point_char\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring_literals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//次の行に行く前に描画、itが指す文字は含まない\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003estr_len_byte\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eline_front_string_byte_pos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//it-\u0026gt;DrawXは前の文字の右端に等しい\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003eline_width\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eline_front_it\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003epadding\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earea_width\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eline_width\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eline_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eline_front_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_len_byte\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawStringFToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edraw_area_x_left\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_top\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eline_string\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eedge_color\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//itが指す文字が先頭になる\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eline_front_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_string_byte_pos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003eline_space\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eline_front_it\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earea_height\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//描画可能領域(y)を超えたら終了\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//最終行の描画\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003elast_line_width\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eback\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eback\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eSizeX\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eline_front_it\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawX\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003epadding\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earea_width\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elast_line_width\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eline_string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eline_front_string_byte_pos\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eDxLib\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eDrawStringFToHandle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edraw_area_x_left\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edraw_area_y_top\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eline_string\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont_handle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eedge_color\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ecurrent_y_relative\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eline_space\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eもうちょっとスッキリ書きたかったなと言う思い。横が溢れたらその一文字前までを描画というルーチンを書くのがわりとだるい。\u003ccode\u003eit-\u0026gt;DrawX - line_front_it-\u0026gt;DrawX;\u003c/code\u003eとか後で見てわかる気がしない。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"動作例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8B%95%E4%BD%9C%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e動作例\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F989786eb-6f1f-65f7-349c-fdadbdbdc10b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a7cd887c03691e9eb24510fe80c65662\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F989786eb-6f1f-65f7-349c-fdadbdbdc10b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a7cd887c03691e9eb24510fe80c65662\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/989786eb-6f1f-65f7-349c-fdadbdbdc10b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F989786eb-6f1f-65f7-349c-fdadbdbdc10b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=fc2f085374b9a4c766db86c806d865aa 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e折り返しがある例\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa9ddbaf6-d843-7176-a0cd-74a639ecd694.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=456191b0d51a3e6e824c30d1c5da5cca\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa9ddbaf6-d843-7176-a0cd-74a639ecd694.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=456191b0d51a3e6e824c30d1c5da5cca\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/a9ddbaf6-d843-7176-a0cd-74a639ecd694.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa9ddbaf6-d843-7176-a0cd-74a639ecd694.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=826a498307c90eb712b458cad912aaad 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eうん、いい感じですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参照\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E7%85%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参照\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://bitbucket.org/yumetodo/dxlib_n4092\" rel=\"nofollow noopener\" target=\"_blank\"\u003eyumetodo / dxlib_n4092 — Bitbucket\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026amp;no=4092\" rel=\"nofollow noopener\" target=\"_blank\"\u003e中よせ文字 | ＤＸライブラリ質問掲示板\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026amp;no=3778\" rel=\"nofollow noopener\" target=\"_blank\"\u003e改行対応DrawFormatString | ＤＸライブラリ質問掲示板\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dxlib.o.oo7.jp/function/dxfunc_graph2.html#R17N13\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGetDrawStringWidthToHandle | ＤＸライブラリ置き場　リファレンスページ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.pakutaso.com/20150142021post-5083.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e月の見える丘｜ぱくたそフリー写真素材\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://web.archive.org/web/20040921134611/http://hosidukiyo.hp.infoseek.co.jp/novels/main08/m08_04.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e真っ直ぐすぎる | 1st ―― in the rain | 長い長いお話。 | 星月夜の窓\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# はじめに\n\n例えばこれがHTML5+CSS3ならば、中寄せで文字列を描画するなんてことは極めてかんたんにできる。\n\n```html\n\u003cdiv\u003e\n  \u003cp id=\"center\"\u003eありきたりな世界\u003cp\u003e\n\u003c/div\u003e\n```\n\n```css\n#center {\n  text-align: center;\n}\n```\n\nこんな感じだろうか。しかしDxLibの場合どうやるんだ？\n\n# 一般的にDxLibで文字列を描画するまでの流れ\n\n```cpp\nconst auto font = DxLib::CreateFontToHandle(nullptr, 22, 3, DX_FONTTYPE_ANTIALIASING);\nconst auto yellow = DxLib::GetColor(255, 255, 0);\nDxLib::DrawStringToHandle(0, 0, _T(\"ありきたりな世界\"), yellow, font);\n```\n\n``DxLib::CreateFontToHandle``でフォントハンドルを作成し、``DxLib::GetColor``で色を指定して``DxLib::DrawStringToHandle``で文字列を描画する。\n\n# じゃあ中寄せで描画してくれる``DrawStringToHandle``を探せばいいんだね！\n\nしかしそんなものはない。\n\n# 自作しよう\n\n止む得ない。自作だ。\n\n## 要件定義\n\n- 描画可能領域(四角形)をうけとり、それに収まるように描画する\n- 文字列は横書きで描画する\n- 横方向のはみ出しは、折り返してはみ出さないようにする\n- 折り返したものも含め、すべでの行は描画可能領域の横方向に対し中寄せされているように描画する\n- 制御文字(改行文字含む)は考慮しない\n- 実際に描画した範囲の底辺のy座標を返す\n- 座標はすべて``flaot``型で扱う\n- フォントハンドルを受け取って利用する\n\n制御文字(改行文字含む)は考慮しないとしたのはなんでかというと、\n\n[改行対応DrawFormatString | ＤＸライブラリ質問掲示板](http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026no=3778)\nを見ればわかるように議論が発散してしまうから。\n\n## 使うべきDxLibの関数を調べる\n\n### 文字列描画\n\nまず肝心の文字列描画だが、座標を``float``であつかうことと、フォントハンドルを使うことから、``DxLib::DrawStringFToHandle``を利用する。\n\n### 描画時の文字列の幅\n\n次に、文字列の折り返しを考えるので、文字列を描画したときの文字幅を調べたい。候補としては\n\n```cpp\nextern int GetDrawStringWidthToHandle(const TCHAR *String, int StrLen, int FontHandle, int VerticalFlag = FALSE);\nextern int GetDrawStringCharInfoToHandle(DRAWCHARINFO *InfoBuffer, size_t InfoBufferSize, const TCHAR *String, int StrLen, int FontHandle, int VerticalFlag = FALSE);\n```\n\nの2つがある。\n\n\n#### ``GetDrawStringWidthToHandle``\n\nhttp://dxlib.o.oo7.jp/function/dxfunc_graph2.html#R17N13\nに解説がある。``StrLen``に指定するのはbyte数である。\n\n#### ``GetDrawStringCharInfoToHandle``\n\n\u003cdl\u003e\n  \u003cdt\u003e宣言\u003c/dt\u003e\n  \u003cdd\u003e\u003ccode\u003eint GetDrawStringCharInfoToHandle(DRAWCHARINFO *InfoBuffer, size_t InfoBufferSize, const TCHAR *String, int StrLen, int FontHandle, int VerticalFlag = FALSE);\u003c/code\u003e\u003c/dd\u003e\n  \u003cdt\u003e概略\u003c/dt\u003e\n  \u003cdd\u003eフォントハンドルを使用した文字列の１文字毎の情報を取得する\u003c/dd\u003e\n  \u003cdt\u003e引数\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e\u003ccode\u003eDRAWCHARINFO *InfoBuffer\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e文字の情報を格納する\u003ccode\u003eDRAWCHARINFO\u003c/code\u003e構造体の配列への先頭アドレス、\u003ccode\u003eNULL\u003c/code\u003eでもOK\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003esize_t InfoBufferSize\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e文字の情報を格納する\u003ccode\u003eDRAWCHARINFO\u003c/code\u003e構造体の配列の要素数\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003econst TCHAR *String\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e描画時の幅を調べたい文字列\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003eint StrLen\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e調べたい文字列の長さ(byte)\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003eint FontHandle\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e描画幅を取得する際に使用するフォントデータの識別番号\u003c/dd\u003e\n      \u003cdt\u003e\u003ccode\u003eint VerticalFlag = FALSE\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e縦書きかどうかのフラグ、\u003ccode\u003eFALSE\u003c/code\u003eを指定すると横書きになります\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n  \u003cdt\u003e戻り値\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e-1以外\u003c/dt\u003e\n      \u003cdd\u003e描画上の文字数、\u003ccode\u003eInfoBuffer\u003c/code\u003eの要素数はこれより大きい必要がある\u003c/dd\u003e\n      \u003cdt\u003e-1\u003c/dt\u003e\n      \u003cdd\u003eエラー発生\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n\u003c/dl\u003e\n\n```cpp\ntypedef struct tagDRAWCHARINFO\n{\n\tTCHAR\t\t\t\t\tChar[ 13 ] ;\t\t\t\t// 文字\n\tBYTE\t\t\t\t\tBytes ;\t\t\t\t\t\t// 文字のバイト数\n\tfloat\t\t\t\t\tDrawX, DrawY ;\t\t\t\t// 描画位置\n\tfloat\t\t\t\t\tSizeX, SizeY ;\t\t\t\t// 描画サイズ\n} DRAWCHARINFO, *LPDRAWCHARINFO ;\n```\n\n``Char``の要素数は13ありますが、これは将来的にDxLibがUnicodeの結合文字列を正しく扱えるようになったときのための予約で実際には13も使いません。格納されいているbyte数(要素数ではない)は``Bytes``が該当します。要素数がほしいなら``Bytes/sizeof(TCHAR)``とかしましょう。\n\n``DrawX``は指定した文字列を``(0, 0)``に描画したときの対象文字の左上のx座標です。``DrawY``はいらない子です。\n\n``DrawX + SizeX``は次の文字の``DrawX``と等しくなります。\n\n#### どれを使うか\n\n折り返しを考慮すると、``GetDrawStringCharInfoToHandle``を呼ばないとどの文字までが一行に収まるかわかりません。で、この2つの関数ですが、内部ではフォントハンドルに紐付いたフォントグリフの情報を取りに行っているので、あんまり何度も呼び出したくないです。そこで``GetDrawStringCharInfoToHandle``のみを使うことにしましょう\n\n### 改行したときのy座標を決定する\n\n改行したときのy座標はどうすればいいのかと思ってDxLibの実装を見ていると\n\n```cpp:DxFont.cpp\nextern int FontCacheStringDrawToHandleST(\n\tint\t\t\t\tDrawFlag,\n\tint\t\t\t\txi,\n\tint\t\t\t\tyi,\n\tfloat\t\t\txf,\n\tfloat\t\t\tyf,\n\tint\t\t\t\tPosIntFlag,\n\tint\t\t\t\tExRateValidFlag,\n\tdouble\t\t\tExRateX,\n\tdouble\t\t\tExRateY,\n\tint\t\t\t\tRotateValidFlag,\n\tfloat\t\t\tRotCenterX,\n\tfloat\t\t\tRotCenterY,\n\tdouble\t\t\tRotAngle, \n\tconst wchar_t *\tStrData,\n\tunsigned int\tColor,\n\tMEMIMG *\t\tDestMemImg,\n\tconst RECT *\tClipRect,\n\tint\t\t\t\tTransFlag,\n\tFONTMANAGE *\tManageData,\n\tunsigned int\tEdgeColor,\n\tint\t\t\t\tStrLen,\n\tint\t\t\t\tVerticalFlag,\n\tSIZE *\t\t\tDrawSize,\n\tint *\t\t\tLineCount,\n\tDRAWCHARINFO *\tCharInfos,\n\tsize_t\t\t\tCharInfoBufferSize,\n\tint *\t\t\tCharInfoNum,\n\tint\t\t\t\tOnlyType /* 0:通常描画 1:本体のみ 2:縁のみ */\n)\n{\n\t//中略\n\n\t// 改行時にＹ座標に加算する値を算出\n\tif( VerticalFlag == TRUE )\n\t{\n\t\tDrawPosSubAdd = ( ManageData-\u003eLineSpaceValidFlag ? ManageData-\u003eLineSpace : ManageData-\u003eBaseInfo.FontHeight ) * ExRateX ;\n\t}\n\telse\n\t{\n\t\tDrawPosSubAdd = ( ManageData-\u003eLineSpaceValidFlag ? ManageData-\u003eLineSpace : ManageData-\u003eBaseInfo.FontHeight ) * ExRateY ;\n\t}\n}\n```\n\nというのを見つけました。``ManageData-\u003eLineSpaceValidFlag ? ManageData-\u003eLineSpace : ManageData-\u003eBaseInfo.FontHeight``が大事そうです。探してみると``DxLib::GetFontLineSpaceToHandle``関数がヒットしました。\n\n```cpp\nextern int GetFontLineSpaceToHandle(int FontHandle);\n```\n\n\u003cdl\u003e\n  \u003cdt\u003e宣言\u003c/dt\u003e\n  \u003cdd\u003e\u003ccode\u003eint GetFontLineSpaceToHandle(int FontHandle);\u003c/code\u003e\u003c/dd\u003e\n  \u003cdt\u003e概略\u003c/dt\u003e\n  \u003cdd\u003eフォントハンドルの行間を取得する\u003c/dd\u003e\n  \u003cdt\u003e引数\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e\u003ccode\u003eint FontHandle\u003c/code\u003e\u003c/dt\u003e\n      \u003cdd\u003e描画幅を取得する際に使用するフォントデータの識別番号\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n  \u003cdt\u003e戻り値\u003c/dt\u003e\n  \u003cdd\u003e\n    \u003cdl\u003e\n      \u003cdt\u003e-1以外\u003c/dt\u003e\n      \u003cdd\u003e行間(ドット単位)\u003c/dd\u003e\n      \u003cdt\u003e-1\u003c/dt\u003e\n      \u003cdd\u003eエラー発生\u003c/dd\u003e\n    \u003c/dl\u003e\n  \u003c/dd\u003e\n\u003c/dl\u003e\n\n## ``GetDrawStringCharInfoToHandle``関数をSTLで使いやすくする。\n\n要は配列を返すんですから、``std::vector``の出番ですね！\n\n```cpp\nnamespace draw_string_center_impl {\n\tstd::vector\u003cDRAWCHARINFO\u003e get_draw_string_char_info(const std::basic_string\u003cTCHAR\u003e\u0026 string, int font_handle) {\n\t\tstd::vector\u003cDRAWCHARINFO\u003e info;\n\t\tinfo.resize(string.size());\n\t\tauto char_info_num = GetDrawStringCharInfoToHandle(info.data(), info.size(), string.c_str(), string.length() * sizeof(TCHAR), font_handle, false);\n\t\tif (char_info_num \u003c 0) throw std::runtime_error(\"fail in function DxLib::GetDrawStringCharInfoToHandle\");\n\t\tif (info.size() \u003c static_cast\u003cstd::size_t\u003e(char_info_num)) {\n\t\t\tinfo.resize(char_info_num + 1);\n\t\t\t//再取得\n\t\t\tchar_info_num = GetDrawStringCharInfoToHandle(info.data(), info.size(), string.c_str(), string.length() * sizeof(TCHAR), font_handle, false);\n\t\t\tif (char_info_num \u003c 0 || info.size() \u003c static_cast\u003cstd::size_t\u003e(char_info_num)) throw std::runtime_error(\"fail to detect draw info.\");\n\t\t}\n\t\tinfo.resize(char_info_num);\n\t\treturn info;\n\t}\n}\n```\n\nこんな感じでラップできます。とりあえず文字列の要素数だけ確保してやることでなるべく``GetDrawStringCharInfoToHandle``を一度だけ呼ぶようにする作戦です。\n\n## 実装する\n\nあとはひたすら書くだけです。\n\n```cpp\nfloat draw_string_center(\n\tfloat draw_area_x_left, float draw_area_x_right, float draw_area_y_top, float draw_area_y_bottom,\n\tconst std::basic_string\u003cTCHAR\u003e\u0026 string,\n\tunsigned int color, int font_handle,\n\tunsigned int edge_color = 0\n)\n{\n\tif (0 == string.length())  throw std::invalid_argument(\"empty string not allowed.\");\n\tif (draw_area_x_right \u003c draw_area_x_left || draw_area_y_bottom \u003c draw_area_y_top) throw std::invalid_argument(\"\");\n\n\t//一文字ずつの描画幅情報を取得する\n\tconst auto info = draw_string_center_impl::get_draw_string_char_info(string, font_handle);\n\n\t//ManageData-\u003eLineSpaceValidFlag ? ManageData-\u003eLineSpace : ManageData-\u003eBaseInfo.FontHeight\n\tconst auto line_space = DxLib::GetFontLineSpaceToHandle(font_handle);\n\tconst float area_width = draw_area_x_right - draw_area_x_left;\n\tconst auto total_draw_width = info.back().DrawX + info.back().SizeX - info.front().DrawX;\n\tif (total_draw_width \u003c= area_width) {\n\t\t//一行ですむ場合\n\t\tconst float padding = (area_width - total_draw_width) / 2.0f;\n\t\tDxLib::DrawStringFToHandle(draw_area_x_left + padding, draw_area_y_top, string.c_str(), color, font_handle, edge_color, false);\n\t\treturn static_cast\u003cfloat\u003e(line_space);\n\t}\n\n\t//複数行になる場合\n\n\tconst float area_height = draw_area_y_bottom - draw_area_y_top;\n\n\t//描画開始\n\tstd::size_t current_string_byte_pos = 0;\n\tstd::size_t line_front_string_byte_pos = 0;\n\tfloat current_y_relative = 0.0f;\n\tauto line_front_it = info.begin();\n\tfor (auto it = info.begin(); it \u003c info.end(); current_string_byte_pos += it-\u003eBytes, ++it) {\n\t\tconst auto line_width_contain_current_it_point_char = it-\u003eDrawX + it-\u003eSizeX - line_front_it-\u003eDrawX;\n\t\tif (area_width \u003c line_width_contain_current_it_point_char) {\n\t\t\tusing namespace std::string_literals;\n\t\t\t//次の行に行く前に描画、itが指す文字は含まない\n\t\t\tconst std::size_t str_len_byte = current_string_byte_pos - line_front_string_byte_pos;\n\t\t\t//it-\u003eDrawXは前の文字の右端に等しい\n\t\t\tconst float line_width = it-\u003eDrawX - line_front_it-\u003eDrawX;\n\t\t\tconst float padding = (area_width - line_width) / 2.0f;\n\t\t\tconst auto line_string = string.substr(line_front_string_byte_pos / sizeof(TCHAR), (str_len_byte / sizeof(TCHAR)));\n\t\t\tDxLib::DrawStringFToHandle(draw_area_x_left + padding, draw_area_y_top + current_y_relative, line_string.c_str(), color, font_handle, edge_color, false);\n\t\t\t//itが指す文字が先頭になる\n\t\t\tline_front_string_byte_pos = current_string_byte_pos;\n\t\t\tcurrent_y_relative += line_space;\n\t\t\tline_front_it = it;\n\t\t\tif (area_height \u003c current_y_relative) return current_y_relative;//描画可能領域(y)を超えたら終了\n\t\t}\n\t}\n\t//最終行の描画\n\tconst auto last_line_width = info.back().DrawX + info.back().SizeX - line_front_it-\u003eDrawX;\n\tconst float padding = (area_width - last_line_width) / 2.0f;\n\tconst auto line_string = string.substr(line_front_string_byte_pos / sizeof(TCHAR));\n\tDxLib::DrawStringFToHandle(draw_area_x_left + padding, draw_area_y_top + current_y_relative, line_string.c_str(), color, font_handle, edge_color, false);\n\treturn current_y_relative + line_space;\n}\n```\n\nもうちょっとスッキリ書きたかったなと言う思い。横が溢れたらその一文字前までを描画というルーチンを書くのがわりとだるい。``it-\u003eDrawX - line_front_it-\u003eDrawX;``とか後で見てわかる気がしない。\n\n## 動作例\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/989786eb-6f1f-65f7-349c-fdadbdbdc10b.png)\n\n\n折り返しがある例\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/94177/a9ddbaf6-d843-7176-a0cd-74a639ecd694.png)\n\nうん、いい感じですね。\n\n# 参照\n\n- [yumetodo / dxlib_n4092 — Bitbucket](https://bitbucket.org/yumetodo/dxlib_n4092)\n- [中よせ文字 | ＤＸライブラリ質問掲示板](http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026no=4092)\n- [改行対応DrawFormatString | ＤＸライブラリ質問掲示板](http://dxlib.o.oo7.jp/cgi/patiobbs/patio.cgi?mode=view\u0026no=3778)\n- [GetDrawStringWidthToHandle | ＤＸライブラリ置き場　リファレンスページ](http://dxlib.o.oo7.jp/function/dxfunc_graph2.html#R17N13)\n- [月の見える丘｜ぱくたそフリー写真素材](https://www.pakutaso.com/20150142021post-5083.html)\n- [真っ直ぐすぎる | 1st ―― in the rain | 長い長いお話。 | 星月夜の窓](http://web.archive.org/web/20040921134611/http://hosidukiyo.hp.infoseek.co.jp/novels/main08/m08_04.html)\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":0,"created_at":"2017-04-27T21:18:39+09:00","group":null,"id":"8180d48b6fca18d78a90","likes_count":8,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"DxLib","versions":[]}],"title":"DxLibで中寄せで文字列を描画するのはどのくらい大変なんだろうか？","updated_at":"2019-04-03T13:59:15+09:00","url":"https://qiita.com/yumetodo/items/8180d48b6fca18d78a90","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"wandboxとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#wandbox%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWandboxとは\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eオンラインコード実行環境です。同種の他サービスと比べ、圧倒的な対応言語とコンパイラバージョン数を誇ることで、特にコンパイラのバージョンが命取りになるC++界隈では重宝されています\u003csup\u003e[\u003ca href=\"https://ja.wikipedia.org/wiki/%E8%A6%81%E5%87%BA%E5%85%B8\" rel=\"nofollow noopener\" target=\"_blank\"\u003e要出典\u003c/a\u003e]\u003c/sup\u003e。また、\u003ca href=\"http://ideone.com\" rel=\"nofollow noopener\" target=\"_blank\"\u003eideone.com\u003c/a\u003eや\u003ca href=\"https://paiza.io\" rel=\"nofollow noopener\" target=\"_blank\"\u003epaiza.io\u003c/a\u003eと違い、コードを書いている最中にタブを閉じてしまってもキャッシュが生きている限り作業データを取り戻せるというため、\u003ca href=\"http://ja.uncyclopedia.info/wiki/%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82!\" rel=\"nofollow noopener\" target=\"_blank\"\u003eああああああ\u003c/a\u003eとならずにすむという、細やかな気配りが見られます(意図した挙動なのかな？)。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/melpon\" class=\"user-mention js-hovercard\" title=\"melpon\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"melpon\"\u003e@melpon\u003c/a\u003e 氏、\u003ca href=\"/kikairoya\" class=\"user-mention js-hovercard\" title=\"kikairoya\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"kikairoya\"\u003e@kikairoya\u003c/a\u003e 氏はじめ、\u003ca href=\"https://github.com/melpon/wandbox/graphs/contributors\" rel=\"nofollow noopener\" target=\"_blank\"\u003e数人が\u003c/a\u003e開発に携わっています。\u003c/p\u003e\n\n\u003cp\u003e最新のGCCやClangが使えるため、\u003ca href=\"https://cpplover.blogspot.jp/2013/12/wandbox-vimc14.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e煩雑極まりないコンパイラのHEAD(開発中の最新版)のビルドを自分でやらずに利用できるという喜びの声もあります\u003c/a\u003e。\u003c/p\u003e\n\n\u003cp\u003eあくまで個人でやっているサービスのため、先日資金難に陥ったための\u003ca href=\"https://twitter.com/melponn/status/841299042478899200\" rel=\"nofollow noopener\" target=\"_blank\"\u003eスポンサー募集\u003c/a\u003e\u003ca href=\"https://twitter.com/melponn/status/841299235785981952\" rel=\"nofollow noopener\" target=\"_blank\"\u003eをかけていました\u003c/a\u003e。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://gist.github.com/melpon/8f5d7a8e991ed466d09cf887bd8d92ce\" rel=\"nofollow noopener\" target=\"_blank\"\u003eWandboxのスポンサー募集\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTwitterのTLを追っていなかった人には突如としてWandboxの左側にCorporate Sponsors:とPersonal Sponsors:が現れて驚いたのではないでしょうか。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://twitter.com/melponn/status/841436806600056832\" rel=\"nofollow noopener\" target=\"_blank\"\u003e当座\u003c/a\u003e十分な資金が集まったらしく、サービスは継続するらしいです。ついでにSSL接続になりました。継続するのだからどんどんどん活用するべきでしょう(typoにあらず)。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"注意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意\u003c/h1\u003e\n\n\u003cp\u003e以降スクリーンショットは2017/4/15現在のUIです。UIは変更になる可能性は・・・きっとあるんじゃないかなぁ、しらないけど。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まずはどんなサーバーなのか見てみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AA%E3%81%AE%E3%81%8B%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずはどんなサーバーなのか見てみよう\u003c/h1\u003e\n\n\u003cp\u003eせっかくbash scriptを動かせるのですからまずやることは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecat\u003c/span\u003e /proc/cpuinfo\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eでしょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F5e1eceb0-2b19-9346-3ceb-42354de48928.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=801a2b61cfba0f5f9aaa5cb42aa19b98\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F5e1eceb0-2b19-9346-3ceb-42354de48928.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=801a2b61cfba0f5f9aaa5cb42aa19b98\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/5e1eceb0-2b19-9346-3ceb-42354de48928.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F5e1eceb0-2b19-9346-3ceb-42354de48928.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=e67522d4b239f7ab5f6af3e2ce09641b 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1dbb1b2c-6d7c-77a0-42de-1c4bfaa059d7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=bb1b4ae5bdde89d88a2487e00361b606\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1dbb1b2c-6d7c-77a0-42de-1c4bfaa059d7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=bb1b4ae5bdde89d88a2487e00361b606\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/1dbb1b2c-6d7c-77a0-42de-1c4bfaa059d7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1dbb1b2c-6d7c-77a0-42de-1c4bfaa059d7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=95e7dfc9cdab26f706b46464bdf25415 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eLanguagesは　Bash script、バージョンは一つしかないのでbash 4.3.46(1)-releas を選びました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F44a7cb9d-2eef-74db-2a59-dd2a17711dc8.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ca4b4506f351e2f2c24c0643e613b133\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F44a7cb9d-2eef-74db-2a59-dd2a17711dc8.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ca4b4506f351e2f2c24c0643e613b133\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/44a7cb9d-2eef-74db-2a59-dd2a17711dc8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F44a7cb9d-2eef-74db-2a59-dd2a17711dc8.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=25e02f8ab272a2c6c523c162cfd6fb83 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eコードを書いて、「Run」をクリックするか\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eEnter\u003c/kbd\u003eで実行されます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F23f3f6f2-66b5-03f3-3da8-9ba848446739.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=817d52cb2038f9028efea5f39364136c\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F23f3f6f2-66b5-03f3-3da8-9ba848446739.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=817d52cb2038f9028efea5f39364136c\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/23f3f6f2-66b5-03f3-3da8-9ba848446739.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F23f3f6f2-66b5-03f3-3da8-9ba848446739.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=0ba9d5b01f8ba68c19769dfe90b1c144 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eShere This Codeを押すとURLが割り振られて、公開されます。公開する気もないのに押すのはいいことではない気がします。\u003c/p\u003e\n\n\u003cp\u003e結果: \u003ca href=\"https://wandbox.org/permlink/2WNGw7YDL28xnt56\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/2WNGw7YDL28xnt56\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eこの記事でyumetodoさんが「SIMDが使えるオンライン環境としては」云々とありましたので、\u003cbr\u003eてっきりwandboxではSIMDできないのかと思ってテストコードを投げたら普通に使えました……ｗ\u003ca href=\"https://t.co/WwrfuhIlmL\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/WwrfuhIlmL\u003c/a\u003e\u003c/p\u003e— YSR@冴えカノ2期視聴勢 (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/850598444364308480\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月8日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eで、wandbox相手に「cat /proc/cpuinfo」してみたところ、\u003cbr\u003e「Intel Xeon E312xx (Sandy Bridge)を1コア×3ソケット分提供するゾ」と返されたのでびっくり。\u003cbr\u003eAVX2は使えないもののAVXは使用可能だと分かりました\u003c/p\u003e— YSR@冴えカノ2期視聴勢 (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/850599448229036032\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月8日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eこれは \u003ca href=\"https://twitter.com/melponn\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@melponn\u003c/a\u003e 氏に焼肉をみんながおごったからか？(前からAVX使えてたならごめんなさい、知りませんでした) \u003ca href=\"https://t.co/B93j499T7K\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/B93j499T7K\u003c/a\u003e\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/850608816429293569\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月8日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/YSRKEN\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@YSRKEN\u003c/a\u003e \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e コードを実行してるさくらVPSのサーバは結構最近借りたものなので、それのおかげの可能性はあるかも\u003c/p\u003e— めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/850646457019359232\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月8日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eはい、どうやらIntelのCPUで、SIMDもAVXまで使えるようです。強い。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"普通にcのコードをコンパイルしよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%99%AE%E9%80%9A%E3%81%ABc%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%97%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e普通にC++のコードをコンパイルしよう\u003c/h1\u003e\n\n\u003cp\u003eさっきも見たように膨大な数のLanguagesとVersionが選べますが、そろそろタイトル詐欺にならないようにC++のコードをコンパイルしていきましょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ffeb9a32e-2167-0315-c83a-9f37f0120a51.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a9fa299c391465467df326d586f78c43\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ffeb9a32e-2167-0315-c83a-9f37f0120a51.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a9fa299c391465467df326d586f78c43\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/feb9a32e-2167-0315-c83a-9f37f0120a51.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ffeb9a32e-2167-0315-c83a-9f37f0120a51.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=dcdfdb20f81312d167ee7c9c2f68592b 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eC++の場合の設定項目はこんな感じです。詳細は後述します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari_na_world!\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/uC4q49JL9Qps6opo\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/uC4q49JL9Qps6opo\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"file-ioもやってみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#file-io%E3%82%82%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eFile I/Oもやってみよう\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ea.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003earikitari\nna\nworld!\n\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようなファイルが有ったとしてそれを全部読み出して標準出力に書き出すコードは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;fstream\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eifstream\u003c/span\u003e \u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"a.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erdbuf\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書けます。ちゃんとファイルを開けるので結果はもちろん\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e実行結果\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003earikitari\nna\nworld!\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eになります。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/q1XLmeuKvvOMJneb\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/q1XLmeuKvvOMJneb\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"boostを使ってみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#boost%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBoostを使ってみよう\u003c/h1\u003e\n\n\u003cp\u003eBoostでまあもっとも手軽なのといえば\u003ccode\u003eboost::optinal\u003c/code\u003eだと思うので、使ってみましょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F518791ca-3993-4a15-6ead-8663113af764.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a504db1893ca231fb862c0eaf7eefea8\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F518791ca-3993-4a15-6ead-8663113af764.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a504db1893ca231fb862c0eaf7eefea8\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/518791ca-3993-4a15-6ead-8663113af764.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F518791ca-3993-4a15-6ead-8663113af764.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=68857254d1718b87bfca35e1eca0a0b3 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e図のようにBoostのバージョンが選べます。基本的には一番新しいのを使っとけばいいでしょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;boost/optional.hpp\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003eboost\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eoptional\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/y1xbcwppoZgo6de2\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/y1xbcwppoZgo6de2\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e無事にコンパイルして実行できました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"sproutを使ってみみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#sprout%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSproutを使ってみみよう\u003c/h1\u003e\n\n\u003cp\u003eSproutとはC++11で追加されC++14で強化されたconstexprを始めとする機能を使ってコンパイル時に様々な処理を行えるようにすることを目的としたライブラリです。\u003cbr\u003e\n\u003ca href=\"https://github.com/bolero-MURAKAMI/Sprout\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/bolero-MURAKAMI/Sprout\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://twitter.com/bolero_MURAKAMI\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@bolero_MURAKAMI\u003c/a\u003e氏が開発しています。\u003c/p\u003e\n\n\u003cp\u003e使うためには\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F88f8692a-8613-3e09-da2d-281e12832448.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1e4affd899301077ba2aca4dc619eb45\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F88f8692a-8613-3e09-da2d-281e12832448.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1e4affd899301077ba2aca4dc619eb45\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/88f8692a-8613-3e09-da2d-281e12832448.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F88f8692a-8613-3e09-da2d-281e12832448.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=34b38f609047d071a0e367b382f761fb 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nSproutにチェックを入れるだけで良いです、ほぼ最新のSproutが常に使えます。\u003c/p\u003e\n\n\u003cp\u003eさて、Sproutにもoptionalがあります。このoptionalはboostのとは違って、範囲を持っているのでRange-based forでつかえる便利なやつなので使ってみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;sprout/optional.hpp\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eoptional\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/ghgQZDni5RRrR80i\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/ghgQZDni5RRrR80i\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"simdなコードも書いてみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#simd%E3%81%AA%E3%82%B3%E3%83%BC%E3%83%89%E3%82%82%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSIMDなコードも書いてみよう\u003c/h1\u003e\n\n\u003cp\u003e白状しよう。私はまともに高速なSIMDを使ったコードもかけない情弱だと。\u003cbr\u003e\nところが適当な題材がつい先日出てきました。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/YSRKEN/items/17097b26ddf0754c5d34\" id=\"reference-bbec651d813d702d656d\"\u003eSIMD intrinsicでチェックディジットを計算してみる その2\u003c/a\u003e\u003cbr\u003e\nこれだ。マイナンバーの最後の桁はチェックデジットなのですが、これを高速に導出するコードをサンプルに使います。\u003cbr\u003e\n\u003ca href=\"https://twitter.com/MaverickTse\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@MaverickTse\u003c/a\u003e, \u003ca href=\"https://twitter.com/mtfmk\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@mtfmk\u003c/a\u003e, \u003ca href=\"/YSRKEN\" class=\"user-mention js-hovercard\" title=\"YSRKEN\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"YSRKEN\"\u003e@YSRKEN\u003c/a\u003e 氏の格闘の結果生まれたコードです。\u003c/p\u003e\n\n\u003cp\u003eベンチマーク部分のコードもあるからちと長い。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;sstream\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;numeric\u0026gt;\n#include \u0026lt;array\u0026gt;\n#include \u0026lt;random\u0026gt;\n#include \u0026lt;chrono\u0026gt;\n#include \u0026lt;random\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;string\u0026gt;\n#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;unordered_set\u0026gt;\n#include \u0026lt;functional\u0026gt;\n#include \u0026lt;limits\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n#include \u0026lt;cctype\u0026gt;\n#include \u0026lt;emmintrin.h\u0026gt;\n#include \u0026lt;immintrin.h\u0026gt;\n#define SPROUT_CONFIG_DISABLE_VARIABLE_TEMPLATES 1\n#if defined(_MSC_VER) \u0026amp;\u0026amp; !defined(__c2__)\n#   pragma warning(disable: 5030)//警告   C5030   属性 'gnu::unused' は認識されません\n#   if 191025017 \u0026lt;= _MSC_FULL_VER\n#       define SPROUT_CONFIG_FORCE_CXX14_CONSTEXPR 1\n#   endif\n#endif\n#include \u0026lt;sprout/array.hpp\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_device\u003c/span\u003e \u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint_least32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 初期化用ベクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ベクタの初期化\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eseed_seq\u003c/span\u003e \u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 乱数エンジン\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerate_input\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint16_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0u\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9u\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"p\"\u003e[]()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003edist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emt\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003ecalc_check_digit_f\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003etest_result\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003etest_case\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003eexpected\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003eactual\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003etest_result\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"testcase:\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etest_case\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\": expected(\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint16_t\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eexpected\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\") actual(\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint16_t\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eactual\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"nf\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecalc_check_digit_f\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etestcase\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"12345678901\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"56661137362\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"61671451309\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"66383747390\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"08065140466\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"15473503678\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"40113376378\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"12226480680\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"82046894873\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"48880517043\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\"97816786786\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etest_result\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efail\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etestcase\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etestcase\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etestcase\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003efail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e \u003cspan class=\"p\"\u003e(...)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efail\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mh\"\u003e0xff\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efail\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enanoseconds\u003c/span\u003e \u003cspan class=\"nf\"\u003ebench\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003efunc_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalc_check_digit_f\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003ech\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003ehc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh_resolution_clock\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003etest_re\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ev2s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etest_result\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estringstream\u003c/span\u003e \u003cspan class=\"n\"\u003ess\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ess\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ess\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003et0\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehc\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"n\"\u003egnu\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunused\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003et1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehc\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003et1\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003et0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003efunc_name\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" : test::\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etest_re\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\"pass:\"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"fail:\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eduration_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emilliseconds\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"[ms] (\"\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eduration_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enanoseconds\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"[ns])\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003etest_re\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev2s\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etest_re\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eduration_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ech\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enanoseconds\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSPROUT_CXX14_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_mod_table_ysr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emod\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003emod\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_sub_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_min_epu8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_set1_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_test_all_zeros\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_setr_epi32\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x00FFFFFF\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit_mtfmk_ysrken\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CXX14_CONSTEXPR\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emod_table\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_mod_table_ysr\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFE\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e \u003cspan class=\"n\"\u003ep_n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_loadu_si128\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ereinterpret_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e()));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ep_n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_sub_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep_n\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_set1_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep_n\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_maddubs_epi16\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep_n\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_setr_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_sad_epu8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_setzero_si128\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_add_epi32\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_srli_si128\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emod_table\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e_mm_cvtsi128_si32\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e)];\u003c/span\u003e\n\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSPROUT_CONSTEXPR\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003etest_times\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10000000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"generating inputs...\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eflush\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etest_times\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"p\"\u003e[]()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003egenerate_input\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"done.\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"start benchmark mark:\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ebench\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"calc_check_digit_mtfmk_ysrken\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecalc_check_digit_mtfmk_ysrken\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"benchmark finish!\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eexception\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecerr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhat\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/aORacqpNCuGHDj4Q\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/aORacqpNCuGHDj4Q\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e冒頭も書いたように、SIMDなコードがWandboxで使えるようになったのは割と最近なので感慨深いですね。当たり前ですがAVX2なコードを書こうとするとヘッダーファイルがなくて詰みますん。\u003c/p\u003e\n\n\u003cp\u003eコンパイル時に剰余計算とかをやってしまって配列に保存しておく処理がありますが(\u003ccode\u003emake_mod_table_ysr\u003c/code\u003e)、これは\u003ccode\u003estd::array\u003c/code\u003eだと\u003ccode\u003eoperator[]\u003c/code\u003eがconstexprではないのでやむなくsproutを使っています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ヘッダーファイルを追加してみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eヘッダーファイルを追加してみよう\u003c/h1\u003e\n\n\u003cp\u003eその昔Wandboxは一つのファイルしか扱えなかったですが、だいぶ前から複数のファイルを扱うことができるようになっています。\u003c/p\u003e\n\n\u003cp\u003e何に役立つかというと、ヘッダーオンリーライブラリを利用できるようになります。\u003cbr\u003e\nここでは\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/bf2bc5c1d49d5aec3efa\" id=\"reference-0c6c57c48fd842d5ba0d\"\u003eC++でPStade.Oven(pipeline)風味なstringのsplitを作ってみた\u003c/a\u003e\u003cbr\u003e\nで紹介した文字列分割ライブラリを使ってみましょう(ステマ)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F80b43baf-e5c4-07bd-b02a-05b7a18e7394.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=58cfc887217c8336b4c29cc1c5c164e3\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F80b43baf-e5c4-07bd-b02a-05b7a18e7394.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=58cfc887217c8336b4c29cc1c5c164e3\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/80b43baf-e5c4-07bd-b02a-05b7a18e7394.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F80b43baf-e5c4-07bd-b02a-05b7a18e7394.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=04357475e098f7391842a905e4785f1a 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nまずは普通にコードを書きます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fced80ef2-f2f7-d4f1-d7cf-e24e6370ea68.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e7b869221fe0152e5907e816c3ed38f0\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fced80ef2-f2f7-d4f1-d7cf-e24e6370ea68.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e7b869221fe0152e5907e816c3ed38f0\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/ced80ef2-f2f7-d4f1-d7cf-e24e6370ea68.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fced80ef2-f2f7-d4f1-d7cf-e24e6370ea68.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=31125396f22df40cc1264ecc8cb53614 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nそうしたらヘッダーファイルを追加したいので、この＋ボタンを押します。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fcb1c1428-6674-6be2-c194-421df65333ec.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=89c7a18313d1bab29c6eee5ea16df52d\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fcb1c1428-6674-6be2-c194-421df65333ec.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=89c7a18313d1bab29c6eee5ea16df52d\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/cb1c1428-6674-6be2-c194-421df65333ec.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fcb1c1428-6674-6be2-c194-421df65333ec.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=2dd71d85bf80f4510ff19aedef8e9542 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nファイルが作られたのでクリックします\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ff5139cd8-8999-3a89-9e27-207707250e0d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d90ba99e078f1647256102e56b097990\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ff5139cd8-8999-3a89-9e27-207707250e0d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d90ba99e078f1647256102e56b097990\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/f5139cd8-8999-3a89-9e27-207707250e0d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Ff5139cd8-8999-3a89-9e27-207707250e0d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=00c176ffc5a44ab282ae2eefeec871b9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n追加したいヘッダーファイルの中身を書きます\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F78788896-2d83-aa23-42c0-6d47bee22058.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cfb0264afadd4b93a96b5f26a47aaa3e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F78788896-2d83-aa23-42c0-6d47bee22058.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cfb0264afadd4b93a96b5f26a47aaa3e\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/78788896-2d83-aa23-42c0-6d47bee22058.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F78788896-2d83-aa23-42c0-6d47bee22058.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=ce649d3d4b664bd377142097ce1a8c1c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nタブをダブルクリックするとファイル名を編集できるので、書き換えましょう。\u003c/p\u003e\n\n\u003cp\u003eあとは普通にオプションいじって実行するだけです。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/gnDQnaJJOcH44hod\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/gnDQnaJJOcH44hod\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ファイル名編集部分でディレクトリも作れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E7%B7%A8%E9%9B%86%E9%83%A8%E5%88%86%E3%81%A7%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%82%E4%BD%9C%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eファイル名編集部分でディレクトリも作れる\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@kariya_mitsuru\u003c/a\u003e \u003ca href=\"https://twitter.com/srz_zumix\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@srz_zumix\u003c/a\u003e あれ、一応タブのファイル名は a/b/c.hpp とかできるようにしてますけどそういうのではなく？\u003c/p\u003e— めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/851458915581607936\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月10日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/melponn\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@melponn\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@kariya_mitsuru\u003c/a\u003e \u003ca href=\"https://twitter.com/srz_zumix\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@srz_zumix\u003c/a\u003e ディレクトリ作れるのでは\u003ca href=\"https://t.co/qwHsrlLsfj\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/qwHsrlLsfj\u003c/a\u003e\u003c/p\u003e— 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/851458968668876802\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月10日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/melponn\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@melponn\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@kariya_mitsuru\u003c/a\u003e \u003ca href=\"https://twitter.com/srz_zumix\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@srz_zumix\u003c/a\u003e URL間違えた \u003ca href=\"https://t.co/fLbXxCCfft\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/fLbXxCCfft\u003c/a\u003e\u003c/p\u003e— 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/851459270742687744\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月10日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/GH47JTHmSoyyIlGo\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/GH47JTHmSoyyIlGo\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eのように、ファイル名編集のところで\u003ccode\u003e/\u003c/code\u003eを書くとディレクトリが作れるようです。ただし\u003ccode\u003e../a.txt\u003c/code\u003eとかはかけないです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"複数の翻訳単位をコンパイルしてみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A4%87%E6%95%B0%E3%81%AE%E7%BF%BB%E8%A8%B3%E5%8D%98%E4%BD%8D%E3%82%92%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e複数の翻訳単位をコンパイルしてみよう\u003c/h1\u003e\n\n\u003cp\u003eC/C++では普通ヘッダーファイルとソースファイルがあり、ソースファイルをそれぞれコンパイルしてリンクし、実行ファイルを作ります。つまりソースファイルごとに翻訳が行われるのでそれぞれを翻訳単位と言います(常識)。\u003cbr\u003e\nここまですべてソースファイルが一つ、つまり翻訳単位が一つのプログラムばかり取り上げてきました。\u003c/p\u003e\n\n\u003cp\u003eではどうすれば複数の翻訳単位をコンパイルすればいいのでしょうか？\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e 多分、匿名名前空間の方が、staticでは対応しきれないパターンのために用意された感じではないでしょうか。\u003cbr\u003e名前空間内のstatic関数は、匿名名前空間で定義した場合とほぼ同じ動作をします。\u003ca href=\"https://t.co/KV035mCVne\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/KV035mCVne\u003c/a\u003e\u003c/p\u003e— 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/787529961141710848\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年10月16日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/kazatsuyu\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@kazatsuyu\u003c/a\u003e ほう、ますますstatic/extern/inlineまわりわかんねぇ・・・。\u003cbr\u003e\u003cbr\u003eところでwandboxで複数の翻訳単位作る方法あったのか・・・\u003ca href=\"https://twitter.com/srz_zumix\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@srz_zumix\u003c/a\u003e 氏のiuwandboxつかっててヘッダーオンリーなものしか使えないイメージだった\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/787531223589543936\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年10月16日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"/kazatsuyu\" class=\"user-mention js-hovercard\" title=\"kazatsuyu\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"kazatsuyu\"\u003e@kazatsuyu\u003c/a\u003e 氏の情報提供によりその方法が明らかになりました。\u003c/p\u003e\n\n\u003cp\u003eここで出番になるのが\u003ccode\u003eCompiler options:\u003c/code\u003eです。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003emain関数があるソースファイルを一番最初のタブに貼り付ける(\u003ca href=\"https://github.com/srz-zumix/iutest/issues/13#issuecomment-287239197\" rel=\"nofollow noopener\" target=\"_blank\"\u003e一番最初(prog.cc)にないとリンカエラーになります\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003eそれ以外のヘッダーファイル、ソースファイルを他のタブに貼り付ける(ファイル名をつけるのをお忘れなく)\u003c/li\u003e\n\u003cli\u003eソースファイルを\u003ccode\u003eCompiler options:\u003c/code\u003eにすべて\u003cstrong\u003e改行区切りで\u003c/strong\u003e指定する\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e例えば\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eprog.cc\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \"a.hpp\"\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ea.hpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(){}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"nf\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e)();\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ea.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \"a.hpp\"\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e)()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようにあったときは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCompiler_options\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ea.cpp\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように指定すると\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/GSuuSwIOk4HdGJPg\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/GSuuSwIOk4HdGJPg\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eのように実行できます。\u003c/p\u003e\n\n\u003cp\u003e注意点としては\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eCompiler options:\u003c/code\u003eに複数のことを書くときは常に改行区切り\u003c/li\u003e\n\u003cli\u003eクオートされて渡されるので余計なスペースは入れない\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eでしょうか。\u003c/p\u003e\n\n\u003cp\u003eなお、中の人こと \u003ca href=\"/melpon\" class=\"user-mention js-hovercard\" title=\"melpon\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"melpon\"\u003e@melpon\u003c/a\u003e 氏の反応がこちら。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@kariya_mitsuru\u003c/a\u003e というかコンパイルオプションにファイル名入れたら使えるの盲点でした。確かにこれでいける…\u003c/p\u003e— めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/851457823103868928\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月10日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"opensslを使ってみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#openssl%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eOpenSSLを使ってみよう\u003c/h1\u003e\n\n\u003cp\u003eWandboxにはOpenSSLもあるので使ってみましょう。と言ってもネットワーク通信は死んでいるようなので実行はできませんが、コンパイルはできます。\u003c/p\u003e\n\n\u003cp\u003e使えるバージョンは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e /opt/wandbox/ | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003eopenssl\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eすればわかりますが、\u003ccode\u003e1.1.0e\u003c/code\u003eはどうもヘッダーがぶっ壊れているので(Wandboxのせいではなく)\u003ccode\u003e1.0.2k\u003c/code\u003eを今回は使います。\u003cbr\u003e\n\u003ca href=\"https://wandbox.org/permlink/aZi1sLFmojdd0vbX\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/aZi1sLFmojdd0vbX\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eで、OpenSSLを直叩きとかできる気がしないので、Boost.asio.sslを使うコードをコンパイルしてみましょう。\u003cbr\u003e\n\u003ca href=\"https://github.com/yumetodo/boost_asio_ssl_file_dl_test\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/boost_asio_ssl_file_dl_test\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eCompiler options:\u003c/code\u003eに大量にいろいろ指定することになります。pkgconf?今回の場合あってもさして簡単にならないよ(使えるのか知らない)\u003c/p\u003e\n\n\u003cp\u003eまず、OpenSSLがある場所をコンパイラに伝えるために\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e-I/opt/wandbox/openssl-1.0.2k/include\n-L/opt/wandbox/openssl-1.0.2k/lib\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eが必要です。それから先に複数の翻訳単位をコンパイルする方法で述べたように、今回も複数の翻訳単位があるので\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003edownloader.cpp\ndownloader_impl.cpp\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eを指定します。あとはリンクするものですね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e-lssl\n-lcrypto\n-ldl\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003e-lssl\u003c/code\u003eと\u003ccode\u003e-lcrypto\u003c/code\u003eは\u003ca href=\"https://ubuntuforums.org/archive/index.php/t-985136.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e順番を間違えるとリンクエラーになります\u003c/a\u003eね\u003c/p\u003e\n\n\u003cp\u003eすべて合わせると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCompiler_options\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e-I/opt/wandbox/openssl-1.0.2k/include\n-L/opt/wandbox/openssl-1.0.2k/lib\ndownloader.cpp\ndownloader_impl.cpp\n-lssl\n-lcrypto\n-ldl\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこうなりますね。実行結果は\u003cbr\u003e\n\u003ca href=\"https://wandbox.org/permlink/uK0Z9eWfFlX3WGUN\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/uK0Z9eWfFlX3WGUN\u003c/a\u003e\u003cbr\u003e\nです。予想通り実行時に例外はいて死にます。\u003c/p\u003e\n\n\u003cp\u003eなんでかというと、セキュリティのために、そもそもソケットが作れないからです。\u003c/p\u003e\n\n\u003cp\u003e試しにsocktでpingを作っている適当なプログラムを走らせてみると\u003cbr\u003e\n\u003ca href=\"http://www.geekpage.jp/programming/linux-network/simple-ping.php\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.geekpage.jp/programming/linux-network/simple-ping.php\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/whHEfqASfbAb76BU\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/whHEfqASfbAb76BU\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esocket: Operation not permitted\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと言われます。ソケットすら開けねぇから何もできんですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"sqlite3を使ってみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#sqlite3%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003esqlite3を使ってみよう\u003c/h1\u003e\n\n\u003cp\u003esqliteも使えるみたいですね。\u003ca href=\"https://www.tutorialspoint.com/sqlite/sqlite_c_cpp.htm\" rel=\"nofollow noopener\" target=\"_blank\"\u003e公式サンプル\u003c/a\u003eのCreate a Tableの項を動かしてみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCompiler_options\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e-I/opt/wandbox/sqlite-3.17.0/include\n-L/opt/wandbox/sqlite-3.17.0/lib\n-lsqlite3\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eまあCompiler　optionsに書くことはさっきとそう変わらないですね。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/pBHLJvGHqTMzSVao\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/pBHLJvGHqTMzSVao\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e無事実行できました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"range-v3を使ってみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#range-v3%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRange-v3を使ってみよう\u003c/h1\u003e\n\n\u003cp\u003eRange-v3が何かについては\u003cbr\u003e\n\u003ca href=\"http://qiita.com/kktk-KO/items/41e85427864365dd88fd\" id=\"reference-4fc63a3eaace457c5438\"\u003e[c++,boost] Eric Niebler's range 3.0の基本設計思想\u003c/a\u003e\u003cbr\u003e\nに丸投げして、公式サンプルを動かしてみましょう。カレンダーのやつはコンパイル中にメモリーが足りなくなったのでフィボナッチ数列で。\u003cbr\u003e\n\u003ca href=\"https://github.com/ericniebler/range-v3/blob/963ac2617d7593b120df34e38d1916b31a878757/example/fibonacci.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/ericniebler/range-v3/blob/963ac2617d7593b120df34e38d1916b31a878757/example/fibonacci.cpp\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/beO0B0Z22G46syxg\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/beO0B0Z22G46syxg\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"bash-scriptから任意バージョンのコンパイラでcのコードをコンパイルしよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#bash-script%E3%81%8B%E3%82%89%E4%BB%BB%E6%84%8F%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%81%A7c%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%97%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBash scriptから任意バージョンのコンパイラでC++のコードをコンパイルしよう\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eWandbox、複数の翻訳単位っていうかbash動くから色々やれる \u003ca href=\"https://t.co/mKwxmBLe7m\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/mKwxmBLe7m\u003c/a\u003e\u003c/p\u003e— いぐにすさん (@ignis_fatuus) \u003ca href=\"https://twitter.com/ignis_fatuus/status/851679644680019969\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月11日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/ignis_fatuus\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@ignis_fatuus\u003c/a\u003e なおGCCのバージョン\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/851686267821608960\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月11日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e 色々やれるといったはずだ \u003ca href=\"https://t.co/yYMannoRE9\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/yYMannoRE9\u003c/a\u003e\u003c/p\u003e— いぐにすさん (@ignis_fatuus) \u003ca href=\"https://twitter.com/ignis_fatuus/status/851688055077429248\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月11日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/ignis_fatuus\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@ignis_fatuus\u003c/a\u003e /opt/wandbox/\u003cbr\u003eそこにあるのか、ずっとどこかわからず探し回ってた\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/851690052539228160\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月11日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"/ignis_fatuus\" class=\"user-mention js-hovercard\" title=\"ignis_fatuus\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"ignis_fatuus\"\u003e@ignis_fatuus\u003c/a\u003e 氏から情報提供頂いたので検証してきましょう。\u003c/p\u003e\n\n\u003cp\u003eまず\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e /opt/wandbox | \u003cspan class=\"nb\"\u003egrep \u003c/span\u003egcc\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eの結果を見てみると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egcc-4.4.7\ngcc-4.5.4\ngcc-4.6.4\ngcc-4.7.3\ngcc-4.7.4\ngcc-4.8.1\ngcc-4.8.2\ngcc-4.8.3\ngcc-4.8.4\ngcc-4.8.5\ngcc-4.9.0\ngcc-4.9.1\ngcc-4.9.2\ngcc-4.9.3\ngcc-5.1.0\ngcc-5.2.0\ngcc-5.3.0\ngcc-5.4.0\ngcc-6.1.0\ngcc-6.2.0\ngcc-6.3.0\ngcc-head\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようになります。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/l55cQpsy0SqqUD3r\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/l55cQpsy0SqqUD3r\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e次に\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e /opt/wandbox/gcc-6.3.0/bin\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eしてみると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003etotal 42416\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 c++\n-rwxr-xr-x 1 root root 4537480 Jan 27 23:26 cpp\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 g++\n-rwxr-xr-x 1 root root 4533168 Jan 27 23:26 gcc\n-rwxr-xr-x 1 root root  146248 Jan 27 23:26 gcc-ar\n-rwxr-xr-x 1 root root  146168 Jan 27 23:26 gcc-nm\n-rwxr-xr-x 1 root root  146184 Jan 27 23:26 gcc-ranlib\n-rwxr-xr-x 1 root root 3133744 Jan 27 23:26 gcov\n-rwxr-xr-x 1 root root 3080944 Jan 27 23:26 gcov-tool\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 x86_64-pc-linux-gnu-c++\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 x86_64-pc-linux-gnu-g++\n-rwxr-xr-x 1 root root 4533168 Jan 27 23:26 x86_64-pc-linux-gnu-gcc\n-rwxr-xr-x 1 root root 4533168 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-6.3.0\n-rwxr-xr-x 1 root root  146248 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-ar\n-rwxr-xr-x 1 root root  146168 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-nm\n-rwxr-xr-x 1 root root  146184 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-ranlib\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eおお？\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/p8PypUhINVks1IVk\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/p8PypUhINVks1IVk\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eならば、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e/opt/wandbox/gcc-6.3.0/bin/gcc \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eの結果は・・・？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egcc (GCC) 6.3.0\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eおお！！\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/cgD9MvAdrggqSBsf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/cgD9MvAdrggqSBsf\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eつまり\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eprog.sh\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e/opt/wandbox/gcc-6.3.0/bin/g++ \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e\n/opt/wandbox/gcc-6.3.0/bin/g++ a.cpp b.cpp\n./a.out\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ea.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include\u0026lt;iostream\u0026gt;\n#include\"b.h\"\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"Hello\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eb.h\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eb.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include\u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003e__FILE__\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとかするとコンパイルして実行できてしまう！\u003c/p\u003e\n\n\u003cp\u003eGNUmakeとかninjaとかCMakeとかはないですが、bash scriptはあるので文字通りなんでもできちゃいますね！\u003c/p\u003e\n\n\u003cp\u003e唯一の難点はSyntax highlightが仕事しないことでしょうか。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"wandbox-apiを利用する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#wandbox-api%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWandbox APIを利用する\u003c/h1\u003e\n\n\u003cp\u003eWandbox APIに特定フォーマットJSONを投げつけることでビルドして実行結果を返してくれます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"各種エディタからwandboxを使う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%90%84%E7%A8%AE%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%81%8B%E3%82%89wandbox%E3%82%92%E4%BD%BF%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e各種エディタからWandboxを使う\u003c/h2\u003e\n\n\u003cp\u003evim\u003cbr\u003e\n\u003ca href=\"https://github.com/rhysd/wandbox-vim\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/rhysd/wandbox-vim\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eemacs\u003cbr\u003e\n\u003ca href=\"https://github.com/kosh04/emacs-wandbox\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/kosh04/emacs-wandbox\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eVisual Studio Code\u003cbr\u003e\n\u003ca href=\"https://github.com/wraith13/wandbox-vscode\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/wraith13/wandbox-vscode\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eなんかいろいろあります。詳細は割愛\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"iuwandboxpy\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#iuwandboxpy\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eiuwandbox.py\u003c/h2\u003e\n\n\u003cp\u003eまあまずiutestという \u003ca href=\"https://twitter.com/srz_zumix\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@srz-zumix\u003c/a\u003e氏が開発しているC++のテストフレームワークがあるわけですが、\u003cbr\u003e\n\u003ca href=\"https://github.com/srz-zumix/iutest\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/srz-zumix/iutest\u003c/a\u003e\u003cbr\u003e\nそのツールとして、iuwandbox.pyがあります。\u003c/p\u003e\n\n\u003cp\u003e導入はかんたんです\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003epython3かpython2とGNUMakeが動く環境を用意します。Windowsだったらmsys2とか？\u003c/li\u003e\n\u003cli\u003egitとかでiutestを落としてくる\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecd \u0026lt;iutestのあるパス\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emake -C tools/fused\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e使ってみましょう。使い方は\u003cbr\u003e\n\u003ca href=\"http://srz-zumix.github.io/iutest/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://srz-zumix.github.io/iutest/\u003c/a\u003e\u003cbr\u003e\nに記述があります。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e複数ヘッダーファイル対応(相対パス自動解決)\u003c/li\u003e\n\u003cli\u003e複数翻訳単位対応(暫定)\u003c/li\u003e\n\u003cli\u003eboost, sprout対応\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eとなかなかポテンシャル高いです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cranberries-build-tool\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cranberries-build-tool\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCranberries Build Tool\u003c/h2\u003e\n\n\u003cp\u003eC, C++, Go、Rubyのみ対応したWandboxをコマンドラインから叩くツール。こっちはgolangで作られている。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita.com/_EnumHack/items/d1d0fb7e6782c06f84ff\" id=\"reference-8074beaeeb9511903def\"\u003eGoでWandboxにコードを送って実行結果を見る - Qiita\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e導入は難しくない。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"マニュアルインストール\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%9E%E3%83%8B%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eマニュアルインストール\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/LoliGothick/cbt/releases\" rel=\"nofollow noopener\" target=\"_blank\"\u003eリリースページ\u003c/a\u003eからダウンロードして自分でインストールする。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"go-getを使って導入\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#go-get%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%B0%8E%E5%85%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ego getを使って導入\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e\u003ca href=\"https://chocolatey.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eChocolatey\u003c/a\u003eなどでgolangを導入する(go-1.9以上が必要)\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ego get github.com/LoliGothick/cbt\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edep ensure\u003c/code\u003e（推奨）\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ego install github.com/LoliGothick/cbt\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$GOPATH/bin\u003c/code\u003eにパスを通す。Windowsだとデフォルトなら\u003ccode\u003e$env:HOME/go/bin\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e使い方は例えば\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecbt wandbox cpp --std c++14 -w .\\vector_growth_test.cpp\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとかする。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"余談share-this-codeを取り消せるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%99%E8%AB%87share-this-code%E3%82%92%E5%8F%96%E3%82%8A%E6%B6%88%E3%81%9B%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e余談:Share This Codeを取り消せるか\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003e取り消せません\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eサーバーのDBにどんどんゴミが溜まっていくんじゃないかという気がしますが\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/TheorideTech\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@TheorideTech\u003c/a\u003e データは残りますが、こっちとしては大したサイズでも無いので全く気にならないですね。ユーザ認証は、そんなに便利でも無いよなーとか思ったりして手を出しにくかったり\u003c/p\u003e— めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/853076255012343809\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年4月15日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとのことなので常識的な範疇で使っていれば問題はないんでしょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"感想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%84%9F%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e感想\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eWandboxのポテンシャル高い\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e/opt/wandbox\u003c/code\u003eにだいたいなんでもあるのでBash Scriptでゴリ押せる\u003c/li\u003e\n\u003cli\u003eiuwandboxのポテンシャルも高い\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003eユーザー認証機能が追加された。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/76277399df7057f6d4d5\" id=\"reference-af265b5baa19be1cd2df\"\u003eWandboxにGithubを利用したユーザー認証が来た\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# Wandboxとは\n\nhttps://wandbox.org\n\nオンラインコード実行環境です。同種の他サービスと比べ、圧倒的な対応言語とコンパイラバージョン数を誇ることで、特にコンパイラのバージョンが命取りになるC++界隈では重宝されています\u003csup\u003e[[要出典](https://ja.wikipedia.org/wiki/%E8%A6%81%E5%87%BA%E5%85%B8)]\u003c/sup\u003e。また、[ideone.com](http://ideone.com)や[paiza.io](https://paiza.io)と違い、コードを書いている最中にタブを閉じてしまってもキャッシュが生きている限り作業データを取り戻せるというため、[ああああああ](http://ja.uncyclopedia.info/wiki/%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82%E3%81%82!)とならずにすむという、細やかな気配りが見られます(意図した挙動なのかな？)。\n\n@melpon 氏、@kikairoya 氏はじめ、[数人が](https://github.com/melpon/wandbox/graphs/contributors)開発に携わっています。\n\n最新のGCCやClangが使えるため、[煩雑極まりないコンパイラのHEAD(開発中の最新版)のビルドを自分でやらずに利用できるという喜びの声もあります](https://cpplover.blogspot.jp/2013/12/wandbox-vimc14.html)。\n\nあくまで個人でやっているサービスのため、先日資金難に陥ったための[スポンサー募集](https://twitter.com/melponn/status/841299042478899200)[をかけていました](https://twitter.com/melponn/status/841299235785981952)。\n\n[Wandboxのスポンサー募集](https://gist.github.com/melpon/8f5d7a8e991ed466d09cf887bd8d92ce)\n\nTwitterのTLを追っていなかった人には突如としてWandboxの左側にCorporate Sponsors:とPersonal Sponsors:が現れて驚いたのではないでしょうか。\n\n[当座](https://twitter.com/melponn/status/841436806600056832)十分な資金が集まったらしく、サービスは継続するらしいです。ついでにSSL接続になりました。継続するのだからどんどんどん活用するべきでしょう(typoにあらず)。\n\n# 注意\n\n以降スクリーンショットは2017/4/15現在のUIです。UIは変更になる可能性は・・・きっとあるんじゃないかなぁ、しらないけど。\n\n# まずはどんなサーバーなのか見てみよう\n\nせっかくbash scriptを動かせるのですからまずやることは\n\n```bash\ncat /proc/cpuinfo\n```\n\nでしょう。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/5e1eceb0-2b19-9346-3ceb-42354de48928.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/1dbb1b2c-6d7c-77a0-42de-1c4bfaa059d7.png)\n\nLanguagesは　Bash script、バージョンは一つしかないのでbash 4.3.46(1)-releas を選びました。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/44a7cb9d-2eef-74db-2a59-dd2a17711dc8.png)\n\nコードを書いて、「Run」をクリックするか\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eEnter\u003c/kbd\u003eで実行されます。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/23f3f6f2-66b5-03f3-3da8-9ba848446739.png)\n\nShere This Codeを押すとURLが割り振られて、公開されます。公開する気もないのに押すのはいいことではない気がします。\n\n結果: https://wandbox.org/permlink/2WNGw7YDL28xnt56\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eこの記事でyumetodoさんが「SIMDが使えるオンライン環境としては」云々とありましたので、\u003cbr\u003eてっきりwandboxではSIMDできないのかと思ってテストコードを投げたら普通に使えました……ｗ\u003ca href=\"https://t.co/WwrfuhIlmL\"\u003ehttps://t.co/WwrfuhIlmL\u003c/a\u003e\u003c/p\u003e\u0026mdash; YSR@冴えカノ2期視聴勢 (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/850598444364308480\"\u003e2017年4月8日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eで、wandbox相手に「cat /proc/cpuinfo」してみたところ、\u003cbr\u003e「Intel Xeon E312xx (Sandy Bridge)を1コア×3ソケット分提供するゾ」と返されたのでびっくり。\u003cbr\u003eAVX2は使えないもののAVXは使用可能だと分かりました\u003c/p\u003e\u0026mdash; YSR@冴えカノ2期視聴勢 (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/850599448229036032\"\u003e2017年4月8日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eこれは \u003ca href=\"https://twitter.com/melponn\"\u003e@melponn\u003c/a\u003e 氏に焼肉をみんながおごったからか？(前からAVX使えてたならごめんなさい、知りませんでした) \u003ca href=\"https://t.co/B93j499T7K\"\u003ehttps://t.co/B93j499T7K\u003c/a\u003e\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/850608816429293569\"\u003e2017年4月8日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/YSRKEN\"\u003e@YSRKEN\u003c/a\u003e \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e コードを実行してるさくらVPSのサーバは結構最近借りたものなので、それのおかげの可能性はあるかも\u003c/p\u003e\u0026mdash; めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/850646457019359232\"\u003e2017年4月8日\u003c/a\u003e\u003c/blockquote\u003e\n\nはい、どうやらIntelのCPUで、SIMDもAVXまで使えるようです。強い。\n\n# 普通にC++のコードをコンパイルしよう\n\nさっきも見たように膨大な数のLanguagesとVersionが選べますが、そろそろタイトル詐欺にならないようにC++のコードをコンパイルしていきましょう。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/feb9a32e-2167-0315-c83a-9f37f0120a51.png)\n\nC++の場合の設定項目はこんな感じです。詳細は後述します。\n\n```cpp\n#include \u003ciostream\u003e\nint main()\n{\n    std::cout \u003c\u003c \"arikitari_na_world!\" \u003c\u003c std::endl;\n}\n```\n\nhttps://wandbox.org/permlink/uC4q49JL9Qps6opo\n\n# File I/Oもやってみよう\n\n```plain:a.txt\narikitari\nna\nworld!\n\n```\n\nのようなファイルが有ったとしてそれを全部読み出して標準出力に書き出すコードは\n\n```cpp\n#include \u003cfstream\u003e\n#include \u003ciostream\u003e\nint main()\n{\n    std::ifstream in(\"a.txt\");\n    std::cout \u003c\u003c in.rdbuf();\n}\n```\n\nのように書けます。ちゃんとファイルを開けるので結果はもちろん\n\n```plain:実行結果\narikitari\nna\nworld!\n```\n\nになります。\n\nhttps://wandbox.org/permlink/q1XLmeuKvvOMJneb\n\n# Boostを使ってみよう\n\nBoostでまあもっとも手軽なのといえば``boost::optinal``だと思うので、使ってみましょう。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/518791ca-3993-4a15-6ead-8663113af764.png)\n\n図のようにBoostのバージョンが選べます。基本的には一番新しいのを使っとけばいいでしょう。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003cboost/optional.hpp\u003e\nboost::optional\u003cint\u003e f(int n)\n{\n    return { n };\n}\n\nint main()\n{\n    const auto n = f(23);\n    if(n) std::cout \u003c\u003c *n \u003c\u003c std::endl;\n}\n```\n\nhttps://wandbox.org/permlink/y1xbcwppoZgo6de2\n\n無事にコンパイルして実行できました。\n\n# Sproutを使ってみみよう\n\nSproutとはC++11で追加されC++14で強化されたconstexprを始めとする機能を使ってコンパイル時に様々な処理を行えるようにすることを目的としたライブラリです。\nhttps://github.com/bolero-MURAKAMI/Sprout\n[@bolero_MURAKAMI](https://twitter.com/bolero_MURAKAMI)氏が開発しています。\n\n使うためには\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/88f8692a-8613-3e09-da2d-281e12832448.png)\nSproutにチェックを入れるだけで良いです、ほぼ最新のSproutが常に使えます。\n\nさて、Sproutにもoptionalがあります。このoptionalはboostのとは違って、範囲を持っているのでRange-based forでつかえる便利なやつなので使ってみましょう。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003csprout/optional.hpp\u003e\nsprout::optional\u003cint\u003e f(int n)\n{\n    return { n };\n}\n\nint main()\n{\n    const auto n = f(23);\n    for(int i : n) std::cout \u003c\u003c i \u003c\u003c std::endl;\n}\n```\n\nhttps://wandbox.org/permlink/ghgQZDni5RRrR80i\n\n# SIMDなコードも書いてみよう\n\n白状しよう。私はまともに高速なSIMDを使ったコードもかけない情弱だと。\nところが適当な題材がつい先日出てきました。\n[SIMD intrinsicでチェックディジットを計算してみる その2](http://qiita.com/YSRKEN/items/17097b26ddf0754c5d34)\nこれだ。マイナンバーの最後の桁はチェックデジットなのですが、これを高速に導出するコードをサンプルに使います。\n[@MaverickTse](https://twitter.com/MaverickTse), [@mtfmk](https://twitter.com/mtfmk), @YSRKEN 氏の格闘の結果生まれたコードです。\n\nベンチマーク部分のコードもあるからちと長い。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003csstream\u003e\n#include \u003calgorithm\u003e\n#include \u003cnumeric\u003e\n#include \u003carray\u003e\n#include \u003crandom\u003e\n#include \u003cchrono\u003e\n#include \u003crandom\u003e\n#include \u003cvector\u003e\n#include \u003cstring\u003e\n#include \u003ccstdint\u003e\n#include \u003calgorithm\u003e\n#include \u003cstdexcept\u003e\n#include \u003cunordered_set\u003e\n#include \u003cfunctional\u003e\n#include \u003climits\u003e\n#include \u003ccstring\u003e\n#include \u003ccctype\u003e\n#include \u003cemmintrin.h\u003e\n#include \u003cimmintrin.h\u003e\n#define SPROUT_CONFIG_DISABLE_VARIABLE_TEMPLATES 1\n#if defined(_MSC_VER) \u0026\u0026 !defined(__c2__)\n#\tpragma warning(disable: 5030)//警告\tC5030\t属性 'gnu::unused' は認識されません\n#\tif 191025017 \u003c= _MSC_FULL_VER\n#\t\tdefine SPROUT_CONFIG_FORCE_CXX14_CONSTEXPR 1\n#\tendif\n#endif\n#include \u003csprout/array.hpp\u003e\nstd::mt19937 create_rand_engine() {\n\tstd::random_device rnd;\n\tstd::vector\u003cstd::uint_least32_t\u003e v(10);// 初期化用ベクタ\n\tstd::generate(v.begin(), v.end(), std::ref(rnd));// ベクタの初期化\n\tstd::seed_seq seed(v.begin(), v.end());\n\treturn std::mt19937(seed);// 乱数エンジン\n}\nstd::string generate_input() {\n\tstatic auto mt = create_rand_engine();\n\tstatic std::uniform_int_distribution\u003cstd::uint16_t\u003e dist(0u, 9u);\n\tstd::string re;\n\tre.resize(11);\n\tstd::generate(re.begin(), re.end(), []() -\u003e char {\n\t\treturn char('0' + dist(mt));\n\t});\n\treturn re;\n}\nusing calc_check_digit_f = std::uint8_t(*)(const std::string\u0026);\nstruct test_result {\n\tstd::string test_case;\n\tstd::uint8_t expected;\n\tstd::uint8_t actual;\n};\nstd::ostream\u0026 operator\u003c\u003c(std::ostream\u0026 os, const test_result\u0026 t) {\n\tos \u003c\u003c \"testcase:\" \u003c\u003c t.test_case \u003c\u003c \": expected(\" \u003c\u003c std::uint16_t(t.expected) \u003c\u003c \") actual(\" \u003c\u003c std::uint16_t(t.actual) \u003c\u003c ')';\n\treturn os;\n}\nauto test(calc_check_digit_f f) {\n\tstatic const std::pair\u003cstd::string, std::uint8_t\u003e testcase[] = {\n\t\t{ \"12345678901\", 8 },\n\t\t{ \"56661137362\", 0 },\n\t\t{ \"61671451309\", 6 },\n\t\t{ \"66383747390\", 9 },\n\t\t{ \"08065140466\", 9 },\n\t\t{ \"15473503678\", 2 },\n\t\t{ \"40113376378\", 8 },\n\t\t{ \"12226480680\", 0 },\n\t\t{ \"82046894873\", 4 },\n\t\t{ \"48880517043\", 6 },\n\t\t{ \"97816786786\", 3 }\n\t};\n\tstd::vector\u003ctest_result\u003e fail;\n\tfail.reserve(sizeof(testcase) / sizeof(*testcase));\n\tfor (auto\u0026\u0026 t : testcase) {\n\t\ttry {\n\t\t\tconst auto re = f(t.first);\n\t\t\tif (re != t.second) fail.push_back({ t.first, t.second, re });\n\t\t}\n\t\tcatch (...) {\n\t\t\tfail.push_back({ t.first, t.second, std::uint8_t(0xff) });\n\t\t}\n\t}\n\treturn fail;\n}\nstd::chrono::nanoseconds bench(const char* func_name, calc_check_digit_f f, const std::vector\u003cstd::string\u003e\u0026 inputs) {\n\tnamespace ch = std::chrono;\n\tusing hc = ch::high_resolution_clock;\n\tconst auto test_re = test(f);\n\tauto v2s = [](const std::vector\u003ctest_result\u003e\u0026 a) {\n\t\tstd::stringstream ss;\n\t\tfor (auto\u0026\u0026 t : a) ss \u003c\u003c t \u003c\u003c std::endl;\n\t\treturn ss.str();\n\t};\n\tconst auto t0 = hc::now();\n\t[[gnu::unused]] std::uint8_t dst;\n\tfor (auto\u0026\u0026 i : inputs) dst = f(i);\n\tconst auto t1 = hc::now();\n\tconst auto t = t1 - t0;\n\tstd::cout\n\t\t\u003c\u003c func_name \u003c\u003c \" : test::\" \u003c\u003c (test_re.empty() ? \"pass:\" : \"fail:\")\n\t\t\u003c\u003c ch::duration_cast\u003cch::milliseconds\u003e(t).count() \u003c\u003c \"[ms] (\"\n\t\t\u003c\u003c ch::duration_cast\u003cch::nanoseconds\u003e(t).count() \u003c\u003c \"[ns])\" \u003c\u003c std::endl;\n\tif(!test_re.empty()) std::cout \u003c\u003c v2s(test_re) \u003c\u003c std::endl;\n\treturn ch::duration_cast\u003cch::nanoseconds\u003e(t);\n}\nSPROUT_CXX14_CONSTEXPR sprout::array\u003cstd::uint8_t, 1000\u003e make_mod_table_ysr() {\n\tsprout::array\u003cstd::uint8_t, 1000\u003e re{};\n\tfor (size_t i = 0; i \u003c 1000; ++i) {\n\t\tsize_t mod = i % 11;\n\t\tre[i] = static_cast\u003cstd::uint8_t\u003e(mod \u003c= 1 ? 0 : 11 - mod);\n\t}\n\treturn re;\n}\n\nstatic inline bool validate(const __m128i\u0026 x)\n{\n\t__m128i t = _mm_sub_epi8(x, _mm_min_epu8(x, _mm_set1_epi8(9)));\n\treturn _mm_test_all_zeros(t, _mm_setr_epi32(-1, -1, 0x00FFFFFF, 0)) == 1;\n}\nuint8_t calc_check_digit_mtfmk_ysrken(const std::string\u0026 str) noexcept\n{\n\tstatic SPROUT_CXX14_CONSTEXPR auto mod_table = make_mod_table_ysr();\n\tif (str.size() != 11) {\n\t\treturn 0xFE;\n\t}\n\n\t__m128i p_n = _mm_loadu_si128(reinterpret_cast\u003cconst __m128i*\u003e(str.c_str()));\n\tp_n = _mm_sub_epi8(p_n, _mm_set1_epi8('0'));\n\tif (!validate(p_n)) {\n\t\treturn 0xFF;\n\t}\n\n\t__m128i sum = _mm_maddubs_epi16(p_n, _mm_setr_epi8(6, 5, 4, 3, 2, 7, 6, 5, 4, 3, 2, 0, 0, 0, 0, 0));\n\tsum = _mm_sad_epu8(sum, _mm_setzero_si128());\n\tsum = _mm_add_epi32(sum, _mm_srli_si128(sum, 8));\n\treturn mod_table[_mm_cvtsi128_si32(sum)];\n}\n\nint main() {\n\tSPROUT_CONSTEXPR int test_times = 10000000;\n\ttry {\n\t\tstd::cout \u003c\u003c \"generating inputs...\" \u003c\u003c std::flush;\n\t\tstd::vector\u003cstd::string\u003e inputs(test_times);\n\t\tstd::generate(inputs.begin(), inputs.end(), []() { return generate_input(); });\n\t\tstd::cout\n\t\t\t\u003c\u003c \"done.\" \u003c\u003c std::endl\n\t\t\t\u003c\u003c \"start benchmark mark:\" \u003c\u003c std::endl;\n\n\t\tbench(\"calc_check_digit_mtfmk_ysrken\", calc_check_digit_mtfmk_ysrken, inputs);\n\t\tstd::cout \u003c\u003c std::endl \u003c\u003c \"benchmark finish!\" \u003c\u003c std::endl;\n\t}\n\tcatch (const std::exception\u0026 er) {\n\t\tstd::cerr \u003c\u003c er.what() \u003c\u003c std::endl;\n\t}\n}\n```\n\nhttps://wandbox.org/permlink/aORacqpNCuGHDj4Q\n\n冒頭も書いたように、SIMDなコードがWandboxで使えるようになったのは割と最近なので感慨深いですね。当たり前ですがAVX2なコードを書こうとするとヘッダーファイルがなくて詰みますん。\n\nコンパイル時に剰余計算とかをやってしまって配列に保存しておく処理がありますが(``make_mod_table_ysr``)、これは``std::array``だと``operator[]``がconstexprではないのでやむなくsproutを使っています。\n\n# ヘッダーファイルを追加してみよう\n\nその昔Wandboxは一つのファイルしか扱えなかったですが、だいぶ前から複数のファイルを扱うことができるようになっています。\n\n何に役立つかというと、ヘッダーオンリーライブラリを利用できるようになります。\nここでは\n[C++でPStade.Oven(pipeline)風味なstringのsplitを作ってみた](http://qiita.com/yumetodo/items/bf2bc5c1d49d5aec3efa)\nで紹介した文字列分割ライブラリを使ってみましょう(ステマ)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/80b43baf-e5c4-07bd-b02a-05b7a18e7394.png)\nまずは普通にコードを書きます。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/ced80ef2-f2f7-d4f1-d7cf-e24e6370ea68.png)\nそうしたらヘッダーファイルを追加したいので、この＋ボタンを押します。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/cb1c1428-6674-6be2-c194-421df65333ec.png)\nファイルが作られたのでクリックします\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/f5139cd8-8999-3a89-9e27-207707250e0d.png)\n追加したいヘッダーファイルの中身を書きます\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/78788896-2d83-aa23-42c0-6d47bee22058.png)\nタブをダブルクリックするとファイル名を編集できるので、書き換えましょう。\n\nあとは普通にオプションいじって実行するだけです。\n\nhttps://wandbox.org/permlink/gnDQnaJJOcH44hod\n\n# ファイル名編集部分でディレクトリも作れる\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\"\u003e@kariya_mitsuru\u003c/a\u003e \u003ca href=\"https://twitter.com/srz_zumix\"\u003e@srz_zumix\u003c/a\u003e あれ、一応タブのファイル名は a/b/c.hpp とかできるようにしてますけどそういうのではなく？\u003c/p\u003e\u0026mdash; めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/851458915581607936\"\u003e2017年4月10日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/melponn\"\u003e@melponn\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\"\u003e@kariya_mitsuru\u003c/a\u003e \u003ca href=\"https://twitter.com/srz_zumix\"\u003e@srz_zumix\u003c/a\u003e ディレクトリ作れるのでは\u003ca href=\"https://t.co/qwHsrlLsfj\"\u003ehttps://t.co/qwHsrlLsfj\u003c/a\u003e\u003c/p\u003e\u0026mdash; 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/851458968668876802\"\u003e2017年4月10日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/melponn\"\u003e@melponn\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\"\u003e@kariya_mitsuru\u003c/a\u003e \u003ca href=\"https://twitter.com/srz_zumix\"\u003e@srz_zumix\u003c/a\u003e URL間違えた \u003ca href=\"https://t.co/fLbXxCCfft\"\u003ehttps://t.co/fLbXxCCfft\u003c/a\u003e\u003c/p\u003e\u0026mdash; 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/851459270742687744\"\u003e2017年4月10日\u003c/a\u003e\u003c/blockquote\u003e\n\nhttps://wandbox.org/permlink/GH47JTHmSoyyIlGo\n\nのように、ファイル名編集のところで``/``を書くとディレクトリが作れるようです。ただし``../a.txt``とかはかけないです。\n\n# 複数の翻訳単位をコンパイルしてみよう\n\nC/C++では普通ヘッダーファイルとソースファイルがあり、ソースファイルをそれぞれコンパイルしてリンクし、実行ファイルを作ります。つまりソースファイルごとに翻訳が行われるのでそれぞれを翻訳単位と言います(常識)。\nここまですべてソースファイルが一つ、つまり翻訳単位が一つのプログラムばかり取り上げてきました。\n\nではどうすれば複数の翻訳単位をコンパイルすればいいのでしょうか？\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e 多分、匿名名前空間の方が、staticでは対応しきれないパターンのために用意された感じではないでしょうか。\u003cbr\u003e名前空間内のstatic関数は、匿名名前空間で定義した場合とほぼ同じ動作をします。\u003ca href=\"https://t.co/KV035mCVne\"\u003ehttps://t.co/KV035mCVne\u003c/a\u003e\u003c/p\u003e\u0026mdash; 白山風露 (@kazatsuyu) \u003ca href=\"https://twitter.com/kazatsuyu/status/787529961141710848\"\u003e2016年10月16日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/kazatsuyu\"\u003e@kazatsuyu\u003c/a\u003e ほう、ますますstatic/extern/inlineまわりわかんねぇ・・・。\u003cbr\u003e\u003cbr\u003eところでwandboxで複数の翻訳単位作る方法あったのか・・・\u003ca href=\"https://twitter.com/srz_zumix\"\u003e@srz_zumix\u003c/a\u003e 氏のiuwandboxつかっててヘッダーオンリーなものしか使えないイメージだった\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/787531223589543936\"\u003e2016年10月16日\u003c/a\u003e\u003c/blockquote\u003e\n\n@kazatsuyu 氏の情報提供によりその方法が明らかになりました。\n\nここで出番になるのが``Compiler options:``です。\n\n1. main関数があるソースファイルを一番最初のタブに貼り付ける([一番最初(prog.cc)にないとリンカエラーになります](https://github.com/srz-zumix/iutest/issues/13#issuecomment-287239197))\n2. それ以外のヘッダーファイル、ソースファイルを他のタブに貼り付ける(ファイル名をつけるのをお忘れなく)\n3. ソースファイルを``Compiler options:``にすべて**改行区切りで**指定する\n\n例えば\n\n```cpp:prog.cc\n#include \u003ciostream\u003e\n#include \"a.hpp\"\n\nint main() {\n    std::cout \u003c\u003c (f == g);\n}\n```\n\n```cpp:a.hpp\nstatic inline void f(){}\n\nextern void(*g)();\n```\n\n```cpp:a.cpp\n#include \"a.hpp\"\n\nvoid (*g)() =f;\n```\n\nのようにあったときは\n\n```plain:Compiler_options\na.cpp\n```\n\nのように指定すると\n\nhttps://wandbox.org/permlink/GSuuSwIOk4HdGJPg\n\nのように実行できます。\n\n注意点としては\n\n- ``Compiler options:``に複数のことを書くときは常に改行区切り\n- クオートされて渡されるので余計なスペースは入れない\n\nでしょうか。\n\nなお、中の人こと @melpon 氏の反応がこちら。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/kariya_mitsuru\"\u003e@kariya_mitsuru\u003c/a\u003e というかコンパイルオプションにファイル名入れたら使えるの盲点でした。確かにこれでいける…\u003c/p\u003e\u0026mdash; めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/851457823103868928\"\u003e2017年4月10日\u003c/a\u003e\u003c/blockquote\u003e\n\n# OpenSSLを使ってみよう\n\nWandboxにはOpenSSLもあるので使ってみましょう。と言ってもネットワーク通信は死んでいるようなので実行はできませんが、コンパイルはできます。\n\n使えるバージョンは\n\n```bash\nls /opt/wandbox/ | grep openssl\n```\n\nすればわかりますが、``1.1.0e``はどうもヘッダーがぶっ壊れているので(Wandboxのせいではなく)``1.0.2k``を今回は使います。\nhttps://wandbox.org/permlink/aZi1sLFmojdd0vbX\n\nで、OpenSSLを直叩きとかできる気がしないので、Boost.asio.sslを使うコードをコンパイルしてみましょう。\nhttps://github.com/yumetodo/boost_asio_ssl_file_dl_test\n\n``Compiler options:``に大量にいろいろ指定することになります。pkgconf?今回の場合あってもさして簡単にならないよ(使えるのか知らない)\n\nまず、OpenSSLがある場所をコンパイラに伝えるために\n\n```\n-I/opt/wandbox/openssl-1.0.2k/include\n-L/opt/wandbox/openssl-1.0.2k/lib\n```\n\nが必要です。それから先に複数の翻訳単位をコンパイルする方法で述べたように、今回も複数の翻訳単位があるので\n\n```\ndownloader.cpp\ndownloader_impl.cpp\n```\n\nを指定します。あとはリンクするものですね。\n\n```\n-lssl\n-lcrypto\n-ldl\n```\n\n``-lssl``と``-lcrypto``は[順番を間違えるとリンクエラーになります](https://ubuntuforums.org/archive/index.php/t-985136.html)ね\n\nすべて合わせると\n\n```plain:Compiler_options\n-I/opt/wandbox/openssl-1.0.2k/include\n-L/opt/wandbox/openssl-1.0.2k/lib\ndownloader.cpp\ndownloader_impl.cpp\n-lssl\n-lcrypto\n-ldl\n```\n\nこうなりますね。実行結果は\nhttps://wandbox.org/permlink/uK0Z9eWfFlX3WGUN\nです。予想通り実行時に例外はいて死にます。\n\nなんでかというと、セキュリティのために、そもそもソケットが作れないからです。\n\n試しにsocktでpingを作っている適当なプログラムを走らせてみると\nhttp://www.geekpage.jp/programming/linux-network/simple-ping.php\n\nhttps://wandbox.org/permlink/whHEfqASfbAb76BU\n\n```\nsocket: Operation not permitted\n```\n\nと言われます。ソケットすら開けねぇから何もできんですね。\n\n# sqlite3を使ってみよう\n\nsqliteも使えるみたいですね。[公式サンプル](https://www.tutorialspoint.com/sqlite/sqlite_c_cpp.htm)のCreate a Tableの項を動かしてみましょう。\n\n```plain:Compiler_options\n-I/opt/wandbox/sqlite-3.17.0/include\n-L/opt/wandbox/sqlite-3.17.0/lib\n-lsqlite3\n```\n\nまあCompiler　optionsに書くことはさっきとそう変わらないですね。\n\nhttps://wandbox.org/permlink/pBHLJvGHqTMzSVao\n\n無事実行できました。\n\n# Range-v3を使ってみよう\n\nRange-v3が何かについては\n[[c++,boost] Eric Niebler's range 3.0の基本設計思想](http://qiita.com/kktk-KO/items/41e85427864365dd88fd)\nに丸投げして、公式サンプルを動かしてみましょう。カレンダーのやつはコンパイル中にメモリーが足りなくなったのでフィボナッチ数列で。\nhttps://github.com/ericniebler/range-v3/blob/963ac2617d7593b120df34e38d1916b31a878757/example/fibonacci.cpp\n\nhttps://wandbox.org/permlink/beO0B0Z22G46syxg\n\n# Bash scriptから任意バージョンのコンパイラでC++のコードをコンパイルしよう\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eWandbox、複数の翻訳単位っていうかbash動くから色々やれる \u003ca href=\"https://t.co/mKwxmBLe7m\"\u003ehttps://t.co/mKwxmBLe7m\u003c/a\u003e\u003c/p\u003e\u0026mdash; いぐにすさん (@ignis_fatuus) \u003ca href=\"https://twitter.com/ignis_fatuus/status/851679644680019969\"\u003e2017年4月11日\u003c/a\u003e\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/ignis_fatuus\"\u003e@ignis_fatuus\u003c/a\u003e なおGCCのバージョン\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/851686267821608960\"\u003e2017年4月11日\u003c/a\u003e\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e 色々やれるといったはずだ \u003ca href=\"https://t.co/yYMannoRE9\"\u003ehttps://t.co/yYMannoRE9\u003c/a\u003e\u003c/p\u003e\u0026mdash; いぐにすさん (@ignis_fatuus) \u003ca href=\"https://twitter.com/ignis_fatuus/status/851688055077429248\"\u003e2017年4月11日\u003c/a\u003e\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/ignis_fatuus\"\u003e@ignis_fatuus\u003c/a\u003e /opt/wandbox/\u003cbr\u003eそこにあるのか、ずっとどこかわからず探し回ってた\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/851690052539228160\"\u003e2017年4月11日\u003c/a\u003e\u003c/blockquote\u003e\n\n@ignis_fatuus 氏から情報提供頂いたので検証してきましょう。\n\nまず\n\n```bash\nls /opt/wandbox | grep gcc\n```\n\nの結果を見てみると\n\n```\ngcc-4.4.7\ngcc-4.5.4\ngcc-4.6.4\ngcc-4.7.3\ngcc-4.7.4\ngcc-4.8.1\ngcc-4.8.2\ngcc-4.8.3\ngcc-4.8.4\ngcc-4.8.5\ngcc-4.9.0\ngcc-4.9.1\ngcc-4.9.2\ngcc-4.9.3\ngcc-5.1.0\ngcc-5.2.0\ngcc-5.3.0\ngcc-5.4.0\ngcc-6.1.0\ngcc-6.2.0\ngcc-6.3.0\ngcc-head\n```\n\nのようになります。\n\nhttps://wandbox.org/permlink/l55cQpsy0SqqUD3r\n\n次に\n\n```bash\nls -l /opt/wandbox/gcc-6.3.0/bin\n```\n\nしてみると\n\n```\ntotal 42416\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 c++\n-rwxr-xr-x 1 root root 4537480 Jan 27 23:26 cpp\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 g++\n-rwxr-xr-x 1 root root 4533168 Jan 27 23:26 gcc\n-rwxr-xr-x 1 root root  146248 Jan 27 23:26 gcc-ar\n-rwxr-xr-x 1 root root  146168 Jan 27 23:26 gcc-nm\n-rwxr-xr-x 1 root root  146184 Jan 27 23:26 gcc-ranlib\n-rwxr-xr-x 1 root root 3133744 Jan 27 23:26 gcov\n-rwxr-xr-x 1 root root 3080944 Jan 27 23:26 gcov-tool\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 x86_64-pc-linux-gnu-c++\n-rwxr-xr-x 1 root root 4544016 Jan 27 23:26 x86_64-pc-linux-gnu-g++\n-rwxr-xr-x 1 root root 4533168 Jan 27 23:26 x86_64-pc-linux-gnu-gcc\n-rwxr-xr-x 1 root root 4533168 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-6.3.0\n-rwxr-xr-x 1 root root  146248 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-ar\n-rwxr-xr-x 1 root root  146168 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-nm\n-rwxr-xr-x 1 root root  146184 Jan 27 23:26 x86_64-pc-linux-gnu-gcc-ranlib\n```\n\nおお？\n\nhttps://wandbox.org/permlink/p8PypUhINVks1IVk\n\nならば、\n\n```bash\n/opt/wandbox/gcc-6.3.0/bin/gcc --version\n```\n\nの結果は・・・？\n\n```\ngcc (GCC) 6.3.0\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n```\n\nおお！！\n\nhttps://wandbox.org/permlink/cgD9MvAdrggqSBsf\n\nつまり\n\n```bash:prog.sh\n/opt/wandbox/gcc-6.3.0/bin/g++ --version\n/opt/wandbox/gcc-6.3.0/bin/g++ a.cpp b.cpp\n./a.out\n```\n\n```cpp:a.cpp\n#include\u003ciostream\u003e\n#include\"b.h\"\nint main() {\n    std::cout \u003c\u003c \"Hello\" \u003c\u003c std::endl;\n    b();\n}\n```\n\n```cpp:b.h\nvoid b(void);\n```\n\n```cpp:b.cpp\n#include\u003ciostream\u003e\nvoid b(void) {\n    std::cout \u003c\u003c __FILE__ \u003c\u003c std::endl;\n}\n```\n\nとかするとコンパイルして実行できてしまう！\n\nGNUmakeとかninjaとかCMakeとかはないですが、bash scriptはあるので文字通りなんでもできちゃいますね！\n\n唯一の難点はSyntax highlightが仕事しないことでしょうか。\n\n# Wandbox APIを利用する\n\nWandbox APIに特定フォーマットJSONを投げつけることでビルドして実行結果を返してくれます。\n\n## 各種エディタからWandboxを使う\n\nvim\nhttps://github.com/rhysd/wandbox-vim\n\nemacs\nhttps://github.com/kosh04/emacs-wandbox\n\nVisual Studio Code\nhttps://github.com/wraith13/wandbox-vscode\n\nなんかいろいろあります。詳細は割愛\n\n## iuwandbox.py\n\nまあまずiutestという [@srz-zumix](https://twitter.com/srz_zumix)氏が開発しているC++のテストフレームワークがあるわけですが、\nhttps://github.com/srz-zumix/iutest\nそのツールとして、iuwandbox.pyがあります。\n\n導入はかんたんです\n\n1. python3かpython2とGNUMakeが動く環境を用意します。Windowsだったらmsys2とか？\n2. gitとかでiutestを落としてくる\n3. ``cd \u003ciutestのあるパス\u003e``\n4. ``make -C tools/fused``\n\n使ってみましょう。使い方は\nhttp://srz-zumix.github.io/iutest/\nに記述があります。\n\n- 複数ヘッダーファイル対応(相対パス自動解決)\n- 複数翻訳単位対応(暫定)\n- boost, sprout対応\n\nとなかなかポテンシャル高いです。\n\n## Cranberries Build Tool\n\nC, C++, Go、Rubyのみ対応したWandboxをコマンドラインから叩くツール。こっちはgolangで作られている。\n\n[GoでWandboxにコードを送って実行結果を見る - Qiita](https://qiita.com/_EnumHack/items/d1d0fb7e6782c06f84ff)\n\n導入は難しくない。\n\n### マニュアルインストール\n\n[リリースページ](https://github.com/LoliGothick/cbt/releases)からダウンロードして自分でインストールする。\n\n### go getを使って導入\n\n1. [Chocolatey](https://chocolatey.org/)などでgolangを導入する(go-1.9以上が必要)\n\n2. ```go get github.com/LoliGothick/cbt```\n\n3. ```dep ensure```（推奨）\n\n4. ```go install github.com/LoliGothick/cbt```\n\n5. `$GOPATH/bin`にパスを通す。Windowsだとデフォルトなら`$env:HOME/go/bin`\n\n\n\n使い方は例えば\n\n```\ncbt wandbox cpp --std c++14 -w .\\vector_growth_test.cpp\n```\n\nとかする。\n\n# 余談:Share This Codeを取り消せるか\n\n**取り消せません**\n\nサーバーのDBにどんどんゴミが溜まっていくんじゃないかという気がしますが\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/TheorideTech\"\u003e@TheorideTech\u003c/a\u003e データは残りますが、こっちとしては大したサイズでも無いので全く気にならないですね。ユーザ認証は、そんなに便利でも無いよなーとか思ったりして手を出しにくかったり\u003c/p\u003e\u0026mdash; めるぽん(Wandboxの中の人) (@melponn) \u003ca href=\"https://twitter.com/melponn/status/853076255012343809\"\u003e2017年4月15日\u003c/a\u003e\u003c/blockquote\u003e\n\nとのことなので常識的な範疇で使っていれば問題はないんでしょう。\n\n# 感想\n\n- Wandboxのポテンシャル高い\n- ``/opt/wandbox``にだいたいなんでもあるのでBash Scriptでゴリ押せる\n- iuwandboxのポテンシャルも高い\n\n# 追記\n\nユーザー認証機能が追加された。\n[WandboxにGithubを利用したユーザー認証が来た](http://qiita.com/yumetodo/items/76277399df7057f6d4d5)\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":6,"created_at":"2017-04-15T14:41:27+09:00","group":null,"id":"ef24708900b0535aa28c","likes_count":66,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"Wandbox","versions":[]}],"title":"君はまだWandboxの真の実力を知らない～C++er目線で～","updated_at":"2019-04-03T14:00:08+09:00","url":"https://qiita.com/yumetodo/items/ef24708900b0535aa28c","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003eUbuntu16.04を使っているが、マウスのホイールの回転が小さくて困っていた。imwheelを使えばいいという情報を得たまでは良かったが、自動起動でつまずいたので、備忘録として書き記す。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"imwheelの導入\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#imwheel%E3%81%AE%E5%B0%8E%E5%85%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eimwheelの導入\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ sudo apt install imwheel\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれだけで良い。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"imwheelの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#imwheel%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eimwheelの設定\u003c/h1\u003e\n\n\u003cp\u003ehome directory( \u003ccode\u003e~\u003c/code\u003e )に\u003ccode\u003e.imwheelrc\u003c/code\u003eを作成する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e.imwheelrc\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\".*\"\nNone,      Up,   Button4, 3\nNone,      Down, Button5, 2\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://pagent.github.io/2015/05/13/mouse-wheel-scroll-speed/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://pagent.github.io/2015/05/13/mouse-wheel-scroll-speed/\u003c/a\u003e\u003cbr\u003e\n「Up, Button4」、「Down, Button5」の後ろの値で変更出来る。Up「3」、Down「2」で設定してみた。（デフォルトの値は「1」のよう。）\u003cbr\u003e\n上に戻る時に早い方が良いし、この設定なら上下を繰り返すことで微調整も出来る。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとのことなので、そっくりそのまま使っている。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"imwheelの起動\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#imwheel%E3%81%AE%E8%B5%B7%E5%8B%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eimwheelの起動\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ imwheel\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれだけだ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"imwheelの自動起動にetcrclocalを使ってはいけない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#imwheel%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95%E3%81%ABetcrclocal%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%AF%E3%81%84%E3%81%91%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eimwheelの自動起動に\u003ccode\u003e/etc/rc.local\u003c/code\u003eを使ってはいけない\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://qiita.com/lastcat_/items/0344315894db41e1836a\" class=\"autolink\" id=\"reference-eae97cadbeadca5ecd8a\"\u003ehttp://qiita.com/lastcat_/items/0344315894db41e1836a\u003c/a\u003e\u003cbr\u003e\nまず、従来のLinuxではカーネルが立ち上がったあとにinitプロセスというのが最初に立ち上がるりこれがすべてのプロセスの親プロセスになっていろんなデーモンやらを起動させていく、というプロセス（これは単に「過程」の意）を踏んでいたらしい。そして\u003cbr\u003e\nUbuntu 15.04以降ではこのinitプロセスにsystemdが採用されたということだ。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://eng-entrance.com/linux_startup\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://eng-entrance.com/linux_startup\u003c/a\u003e\u003cbr\u003e\n現在、Linuxのシステム起動には２種の方法が混在している。\u003c/p\u003e\n\n\u003cp\u003eSysVinit系とsystemdの2種類だ。古くて安定的に動いているものはSysVinit系が多く、現場ではこちらに出会う確率が高い。\u003c/p\u003e\n\n\u003cp\u003eしかし、最近出た新しいディストリビューションでは新しいsystemdが採用されている。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eというわけで、systemdが採用されている。世の中大体systemdみたいな流れらしいので、おとなしくsystemdの流儀に従う。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"imwheelserviceの作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#imwheelservice%E3%81%AE%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eimwheel.service\u003c/code\u003eの作成\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ mkdir -p ~/.config/systemd/user\n$ cd ~/.config/systemd/user\n$ nano imwheel.service\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eimwheel.service\u003c/code\u003eの中身は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ini\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eimwheel.service\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nn\"\u003e[Unit]\u003c/span\u003e\n\u003cspan class=\"py\"\u003eDescription\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eimwheel\u003c/span\u003e\n\u003cspan class=\"py\"\u003eWants\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003edisplay-manager.service\u003c/span\u003e\n\u003cspan class=\"py\"\u003eAfter\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003edisplay-manager.service\u003c/span\u003e\n\n\u003cspan class=\"nn\"\u003e[Service]\u003c/span\u003e\n\u003cspan class=\"py\"\u003eType\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003esimple\u003c/span\u003e\n\u003cspan class=\"py\"\u003eEnvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eDISPLAY=:0.0\u003c/span\u003e\n\u003cspan class=\"py\"\u003eExecStart\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e/usr/bin/imwheel\u003c/span\u003e\n\u003cspan class=\"py\"\u003eExecStop\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e/usr/bin/pkill imwheel\u003c/span\u003e\n\u003cspan class=\"py\"\u003eRemainAfterExit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eyes\u003c/span\u003e\n\n\u003cspan class=\"nn\"\u003e[Install]\u003c/span\u003e\n\u003cspan class=\"py\"\u003eWantedBy\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003egraphical.target\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eでよい。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"systemdサービスの有効化\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#systemd%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E6%9C%89%E5%8A%B9%E5%8C%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003esystemdサービスの有効化\u003c/h1\u003e\n\n\u003cp\u003eここまででsystemdのサービスは作ったが、有効化していないので\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ systemctl --user list-unit-files | grep imwheel\nimwheel.service                            disabled\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとなっているはずである。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ systemctl --user enable imwheel.service\n$ sudo loginctl enable-linger\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとすることで、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ systemctl --user list-unit-files | grep imwheel\nimwheel.service                            enabled\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとなるはずである。試しに手動でサービスを立ち上げてみよう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ systemctl --user start imwheel\n$ systemctl --user status imwheel\n● imwheel.service - imwheel\n   Loaded: loaded (/home/yumetodo/.config/systemd/user/imwheel.service; enabled; vendor preset: enabled)\n   Active: active (exited) since 金 2017-03-10 22:07:31 JST; 13s ago\n  Process: 4036 ExecStart=/usr/bin/imwheel (code=exited, status=0/SUCCESS)\n Main PID: 4036 (code=exited, status=0/SUCCESS)\n   CGroup: /user.slice/user-1000.slice/user@1000.service/imwheel.service\n           └─4037 /usr/bin/imwheel\n\n 3月 10 22:07:31 yumetodo-desktop systemd[1200]: Started imwheel.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"でうまく行くと思ったんだが私はsystemdを理解していないようだ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%81%86%E3%81%BE%E3%81%8F%E8%A1%8C%E3%81%8F%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%82%93%E3%81%A0%E3%81%8C%E7%A7%81%E3%81%AFsystemd%E3%82%92%E7%90%86%E8%A7%A3%E3%81%97%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84%E3%82%88%E3%81%86%E3%81%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eでうまく行くと思ったんだが、私はsystemdを理解していないようだ\u003c/h1\u003e\n\n\u003cp\u003e\u003cdel\u003eあれ、うごかない\u003c/del\u003e\u003cbr\u003e\n\u003cdel\u003eログ→\u003ca href=\"http://pastebin.com/gUa2N8Af\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://pastebin.com/gUa2N8Af\u003c/a\u003e\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e手動起動は、コメント欄にて \u003ca href=\"/akinomyoga\" class=\"user-mention js-hovercard\" title=\"akinomyoga\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"akinomyoga\"\u003e@akinomyoga\u003c/a\u003e 氏および \u003ca href=\"http://yumetodo.hateblo.jp/entry/2017/02/16/005806\" rel=\"nofollow noopener\" target=\"_blank\"\u003e某Discord\u003c/a\u003eにてAruneko氏の情報提供のおかげでうまく行くようになったが、自動起動しない。なんで・・・？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003eUbuntu 18.04に上げたのでリベンジ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ini\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eimwheel.service\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nn\"\u003e[Unit]\u003c/span\u003e\n\u003cspan class=\"py\"\u003eDescription\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eimwheel\u003c/span\u003e\n\n\u003cspan class=\"nn\"\u003e[Service]\u003c/span\u003e\n\u003cspan class=\"py\"\u003eType\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003esimple\u003c/span\u003e\n\u003cspan class=\"c\"\u003e#Environment=DISPLAY=:0\n\u003c/span\u003e\u003cspan class=\"py\"\u003eExecStart\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e/usr/bin/imwheel\u003c/span\u003e\n\u003cspan class=\"py\"\u003eExecStop\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e/usr/bin/pkill imwheel\u003c/span\u003e\n\u003cspan class=\"py\"\u003eRemainAfterExit\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eyes\u003c/span\u003e\n\u003cspan class=\"py\"\u003eRestart\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003ealways\u003c/span\u003e\n\n\u003cspan class=\"nn\"\u003e[Install]\u003c/span\u003e\n\u003cspan class=\"py\"\u003eWantedBy\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003edefault.target\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれでいけている・・・？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記2\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%982\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記2\u003c/h1\u003e\n\n\u003cp\u003eやっぱりどうにもsystemdのuser serviceと\u003ccode\u003eDISPLAY\u003c/code\u003e環境変数が必要な作業は相性が良くないよなぁ・・・。今見たら\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$systemctl --user status imwheel.service \n● imwheel.service - imwheel\n   Loaded: loaded (/home/yumetodo/.config/systemd/user/imwheel.service; enabled; vendor preset: enabled)\n   Active: active (exited) since Thu 2019-05-09 11:31:15 JST; 8min ago\n  Process: 2554 ExecStart=/usr/bin/imwheel (code=exited, status=0/SUCCESS)\n Main PID: 2554 (code=exited, status=0/SUCCESS)\n   CGroup: /user.slice/user-1000.slice/user@1000.service/imwheel.service\n\n 5月 09 11:31:15 yumetodo-desktop systemd[2537]: Started imwheel.\n 5月 09 11:31:15 yumetodo-desktop imwheel[2554]: INFO: imwheel started (pid=2557)\n 5月 09 11:31:15 yumetodo-desktop imwheel[2554]: Could not open display, check shell DISPLAY variable, and export or setenv it!\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとか言われているし・・・。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/ys22_/items/f87c05a1141092c1d548\" id=\"reference-7f97ccc588eb3a2f3858\"\u003eUbuntu 18.04でマウスホイールのスクロール量を調節する\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/NOBIE41/items/fc1c516b5f91c45b0024\" id=\"reference-2e1e5750150189922dc7\"\u003eubuntuでマウスホイールのスクロール量を設定する[imwheel]\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eでやってるみたいにgnomeの自動起動機構を使うほうが良さそう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# はじめに\nUbuntu16.04を使っているが、マウスのホイールの回転が小さくて困っていた。imwheelを使えばいいという情報を得たまでは良かったが、自動起動でつまずいたので、備忘録として書き記す。\n\n# imwheelの導入\n\n```\n$ sudo apt install imwheel\n```\n\nこれだけで良い。\n\n# imwheelの設定\n\nhome directory( ``~`` )に``.imwheelrc``を作成する。\n\n```plain:.imwheelrc\n\".*\"\nNone,      Up,   Button4, 3\nNone,      Down, Button5, 2\n```\n\n\u003ehttp://pagent.github.io/2015/05/13/mouse-wheel-scroll-speed/\n\u003e「Up, Button4」、「Down, Button5」の後ろの値で変更出来る。Up「3」、Down「2」で設定してみた。（デフォルトの値は「1」のよう。）\n上に戻る時に早い方が良いし、この設定なら上下を繰り返すことで微調整も出来る。\n\nとのことなので、そっくりそのまま使っている。\n\n# imwheelの起動\n\n```\n$ imwheel\n```\n\nこれだけだ。\n\n# imwheelの自動起動に``/etc/rc.local``を使ってはいけない\n\n\u003ehttp://qiita.com/lastcat_/items/0344315894db41e1836a\n\u003eまず、従来のLinuxではカーネルが立ち上がったあとにinitプロセスというのが最初に立ち上がるりこれがすべてのプロセスの親プロセスになっていろんなデーモンやらを起動させていく、というプロセス（これは単に「過程」の意）を踏んでいたらしい。そして\nUbuntu 15.04以降ではこのinitプロセスにsystemdが採用されたということだ。\n\n\u003ehttp://eng-entrance.com/linux_startup\n\u003e現在、Linuxのシステム起動には２種の方法が混在している。\n\n\u003eSysVinit系とsystemdの2種類だ。古くて安定的に動いているものはSysVinit系が多く、現場ではこちらに出会う確率が高い。\n\n\u003eしかし、最近出た新しいディストリビューションでは新しいsystemdが採用されている。\n\nというわけで、systemdが採用されている。世の中大体systemdみたいな流れらしいので、おとなしくsystemdの流儀に従う。\n\n# ``imwheel.service``の作成\n\n```\n$ mkdir -p ~/.config/systemd/user\n$ cd ~/.config/systemd/user\n$ nano imwheel.service\n```\n\n``imwheel.service``の中身は\n\n```ini:imwheel.service\n[Unit]\nDescription=imwheel\nWants=display-manager.service\nAfter=display-manager.service\n\n[Service]\nType=simple\nEnvironment=DISPLAY=:0.0\nExecStart=/usr/bin/imwheel\nExecStop=/usr/bin/pkill imwheel\nRemainAfterExit=yes\n\n[Install]\nWantedBy=graphical.target\n```\n\nでよい。\n\n# systemdサービスの有効化\n\nここまででsystemdのサービスは作ったが、有効化していないので\n\n```\n$ systemctl --user list-unit-files | grep imwheel\nimwheel.service                            disabled\n```\n\nとなっているはずである。\n\n\n```\n$ systemctl --user enable imwheel.service\n$ sudo loginctl enable-linger\n```\n\nとすることで、\n\n```\n$ systemctl --user list-unit-files | grep imwheel\nimwheel.service                            enabled\n```\n\nとなるはずである。試しに手動でサービスを立ち上げてみよう。\n\n```\n$ systemctl --user start imwheel\n$ systemctl --user status imwheel\n● imwheel.service - imwheel\n   Loaded: loaded (/home/yumetodo/.config/systemd/user/imwheel.service; enabled; vendor preset: enabled)\n   Active: active (exited) since 金 2017-03-10 22:07:31 JST; 13s ago\n  Process: 4036 ExecStart=/usr/bin/imwheel (code=exited, status=0/SUCCESS)\n Main PID: 4036 (code=exited, status=0/SUCCESS)\n   CGroup: /user.slice/user-1000.slice/user@1000.service/imwheel.service\n           └─4037 /usr/bin/imwheel\n\n 3月 10 22:07:31 yumetodo-desktop systemd[1200]: Started imwheel.\n```\n\n# でうまく行くと思ったんだが、私はsystemdを理解していないようだ\n\n~~あれ、うごかない~~\n~~ログ→http://pastebin.com/gUa2N8Af~~\n\n手動起動は、コメント欄にて @akinomyoga 氏および [某Discord](http://yumetodo.hateblo.jp/entry/2017/02/16/005806)にてAruneko氏の情報提供のおかげでうまく行くようになったが、自動起動しない。なんで・・・？\n\n# 追記\n\nUbuntu 18.04に上げたのでリベンジ。\n\n```ini:imwheel.service\n[Unit]\nDescription=imwheel\n\n[Service]\nType=simple\n#Environment=DISPLAY=:0\nExecStart=/usr/bin/imwheel\nExecStop=/usr/bin/pkill imwheel\nRemainAfterExit=yes\nRestart=always\n\n[Install]\nWantedBy=default.target\n```\n\nこれでいけている・・・？\n\n# 追記2\n\nやっぱりどうにもsystemdのuser serviceと`DISPLAY`環境変数が必要な作業は相性が良くないよなぁ・・・。今見たら\n\n```\n$systemctl --user status imwheel.service \n● imwheel.service - imwheel\n   Loaded: loaded (/home/yumetodo/.config/systemd/user/imwheel.service; enabled; vendor preset: enabled)\n   Active: active (exited) since Thu 2019-05-09 11:31:15 JST; 8min ago\n  Process: 2554 ExecStart=/usr/bin/imwheel (code=exited, status=0/SUCCESS)\n Main PID: 2554 (code=exited, status=0/SUCCESS)\n   CGroup: /user.slice/user-1000.slice/user@1000.service/imwheel.service\n\n 5月 09 11:31:15 yumetodo-desktop systemd[2537]: Started imwheel.\n 5月 09 11:31:15 yumetodo-desktop imwheel[2554]: INFO: imwheel started (pid=2557)\n 5月 09 11:31:15 yumetodo-desktop imwheel[2554]: Could not open display, check shell DISPLAY variable, and export or setenv it!\n```\n\nとか言われているし・・・。\n\n- [Ubuntu 18.04でマウスホイールのスクロール量を調節する](https://qiita.com/ys22_/items/f87c05a1141092c1d548)\n- [ubuntuでマウスホイールのスクロール量を設定する[imwheel]](https://qiita.com/NOBIE41/items/fc1c516b5f91c45b0024)\n\nでやってるみたいにgnomeの自動起動機構を使うほうが良さそう。\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":8,"created_at":"2017-03-06T18:15:30+09:00","group":null,"id":"de3ae4155ff83544879b","likes_count":22,"private":false,"reactions_count":0,"tags":[{"name":"Ubuntu","versions":[]},{"name":"systemd","versions":[]},{"name":"imwheel","versions":[]}],"title":"Ubuntu16.04/18.04でマウスのホイールの回転量を調整する","updated_at":"2019-05-09T11:43:09+09:00","url":"https://qiita.com/yumetodo/items/de3ae4155ff83544879b","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null}]