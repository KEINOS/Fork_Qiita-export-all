[{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://app.shippable.com/projects/577cc6213be4f4faa56be97c\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fapi.shippable.com%2Fprojects%2F577cc6213be4f4faa56be97c%2Fbadge%3Fbranch%3Dmaster?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9109b90d74f5ba653bfc07ee8af90efc\" alt=\"Run Status\" data-canonical-src=\"https://api.shippable.com/projects/577cc6213be4f4faa56be97c/badge?branch=master\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fapi.shippable.com%2Fprojects%2F577cc6213be4f4faa56be97c%2Fbadge%3Fbranch%3Dmaster?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=a47f092e73ad18f68ca05904c6570b59 1x\" loading=\"lazy\"\u003e\u003c/a\u003e \u003ca href=\"https://travis-ci.org/yumetodo/string_split\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Ftravis-ci.org%2Fyumetodo%2Fstring_split.svg%3Fbranch%3Dmaster?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3e6084dc0844e3be8a558199e3dab6d8\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/yumetodo/string_split.svg?branch=master\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Ftravis-ci.org%2Fyumetodo%2Fstring_split.svg%3Fbranch%3Dmaster?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d80b5de11060f377134a07335a7110a4 1x\" loading=\"lazy\"\u003e\u003c/a\u003e \u003ca href=\"https://coveralls.io/github/yumetodo/string_split?branch=master\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcoveralls.io%2Frepos%2Fgithub%2Fyumetodo%2Fstring_split%2Fbadge.svg%3Fbranch%3Dmaster?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e403d4ea70c48dfe71912f4d45fbb465\" alt=\"Coverage Status\" data-canonical-src=\"https://coveralls.io/repos/github/yumetodo/string_split/badge.svg?branch=master\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fcoveralls.io%2Frepos%2Fgithub%2Fyumetodo%2Fstring_split%2Fbadge.svg%3Fbranch%3Dmaster?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=a272c206a04ba119dd6bfccb52845bb9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e \u003ca href=\"http://www.boost.org/LICENSE_1_0.txt\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimg.shields.io%2Fbadge%2Flicense-boost-blue.svg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=12244ed315393293c848f63b364d0ac0\" alt=\"Boost Software License\" data-canonical-src=\"https://img.shields.io/badge/license-boost-blue.svg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fimg.shields.io%2Fbadge%2Flicense-boost-blue.svg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=32ff330f0b1d7d6439c469f1e18e50f7 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \"../include/string_split.hpp\"\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari na world!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003es_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\u003cspan class=\"c1\"\u003e//\"na\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"123,421,113\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003es_2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"c1\"\u003e//[123,421,113]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"cm\"\u003e/*stdout:\n    123\n    421\n    113\n    */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれ使ってみてください！single header only libraryです！\u003cbr\u003e\nPStade.Ovenというかboost.range風味のpipeline記法が使える上に遅延評価のおかげで高速です！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"初めに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初めに\u003c/h1\u003e\n\n\u003cp\u003ePythonとかにはstringの分割があるのに、C++では見つからなかったので、作ってみた！！\u003c/p\u003e\n\n\u003cp\u003e・・・という記事は割とよく見かける\u003c/p\u003e\n\n\u003cp\u003eex.)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/sh-o/items/7618599056210d13126e\"\u003ec++でstringのsplitを作ってみた - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/iseki-masaya/items/70b4ee6e0877d12dafa8\" id=\"reference-588a37e39b44cf1e82f7\"\u003eC++におけるstringのsplit - Qiita\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://wayback.archive.org/web/20110614004133/http://shnya.jp/blog/?p=195\" rel=\"nofollow noopener\" target=\"_blank\"\u003eStory of Your Life  » Blog Archive   » C++で文字列のsplit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eしかし、どれも見た目がダサく、かつ、速度を追求できていない。C++なんだから、速度を追求するべきだ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"みんなsplitした後どうしてる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BF%E3%82%93%E3%81%AAsplit%E3%81%97%E3%81%9F%E5%BE%8C%E3%81%A9%E3%81%86%E3%81%97%E3%81%A6%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eみんな、splitした後どうしてる？\u003c/h1\u003e\n\n\u003cp\u003eみんな、文字列をsplitした後、どうします？\u003c/p\u003e\n\n\u003cp\u003e何が言いたいかといいますと、どれもこれも\u003ccode\u003estd::vector\u0026lt;std::basic_string\u0026lt;CharType\u0026gt;\u0026gt;\u003c/code\u003eに格納して結果を返しているけれど、本当にいつもそれが最適か？ということです。\u003c/p\u003e\n\n\u003cp\u003eC++において、プログラムを高速化する際、\u003cstrong\u003eアルゴリズムの次に大事なのはメモリー確保数の削減です。\u003c/strong\u003eこれを意識してないプログラムは、意識したプログラムに対して\u003cstrong\u003e当社比5倍\u003c/strong\u003e遅いです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"例1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例1\u003c/h2\u003e\n\n\u003cp\u003e例えばこんなコード。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eliterals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"123,456,789\"\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esplitted\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esplitted\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es_n\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esplitted\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es_n\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003esplittedという無駄なvectorが生成されています。たかが一回じゃないかだって？\u003cstrong\u003eそれ、減らせるでしょ！\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"例2\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例2\u003c/h2\u003e\n\n\u003cp\u003e例えばこんなコード。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eliterals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"123,456,789\"\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//456\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこの場合vector一つとstring2つの計3回は最低でも無駄なallocateが起こります。std::vectorのメモリー確保戦略が倍々ゲームじゃない場合、push_backするたびにメモリー再確保とstringのmoveが発生するので更に重いです(Visual Studioとかな！)。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"じゃあどうするかoperator-overloadで遅延評価でしょ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%98%E3%82%83%E3%81%82%E3%81%A9%E3%81%86%E3%81%99%E3%82%8B%E3%81%8Boperator-overload%E3%81%A7%E9%81%85%E5%BB%B6%E8%A9%95%E4%BE%A1%E3%81%A7%E3%81%97%E3%82%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eじゃあどうするか？operator overloadで遅延評価でしょ！\u003c/h1\u003e\n\n\u003cp\u003eさてみなさん、突然ですが、クイズです。\u003c/p\u003e\n\n\u003cp\u003e添字演算子(operator \u003ccode\u003e[]\u003c/code\u003e)、右シフト演算子(operator \u003ccode\u003e\u0026gt;\u0026gt;\u003c/code\u003e)、ビットOR演算子(operator \u003ccode\u003e|\u003c/code\u003e)は優先順位が高い順に並べるとどうなるでしょうか？\u003c/p\u003e\n\n\u003cp\u003eまあC言語の初心者教本にも載っていますが、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eoperator[]\u003c/code\u003e \u0026gt; \u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003e \u0026gt; \u003ccode\u003eoperator|\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eですね。これを有効活用します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"operatorはpipelineというかchain-method-likeというかに持って来い\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#operator%E3%81%AFpipeline%E3%81%A8%E3%81%84%E3%81%86%E3%81%8Bchain-method-like%E3%81%A8%E3%81%84%E3%81%86%E3%81%8B%E3%81%AB%E6%8C%81%E3%81%A3%E3%81%A6%E6%9D%A5%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eoperator|はpipelineというかchain-method-likeというかに持って来い\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/piyo7/items/94e022dd9a0b57bd704b\" id=\"reference-a2606709ee5b992f4d73\"\u003eBoost.Rangeをパイプライン記法のままコンテナに変換\u003c/a\u003e\u003cbr\u003e\nでも紹介がありますが、簡単に触れておきます。\u003c/p\u003e\n\n\u003cp\u003eC++は強力なoperator overloadのある言語として知られていますが、残念ながら、\u003ccode\u003eoperator.\u003c/code\u003eはオーバーロードできません。\u003c/p\u003e\n\n\u003cp\u003eいや、まあC++標準化委員会に提案はされているんですが\u003cbr\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0252r1.pdf\" rel=\"nofollow noopener\" target=\"_blank\"\u003e[PDF] P0252R1: Operator Dot Wording\u003c/a\u003e(解説:\u003ca href=\"https://cpplover.blogspot.jp/2016/06/c-p0250r0-p0259r0.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++標準化委員会の文書: P0250R0-P0259R0 | 本の虫\u003c/a\u003e)\u003cbr\u003e\nどうもrejectされたっぽいので・・・。\u003c/p\u003e\n\n\u003cp\u003eそこで\u003ccode\u003eoperator|\u003c/code\u003eの出番です。これをうまく活用すると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"scala\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eScala\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eval\u003c/span\u003e \u003cspan class=\"nv\"\u003evec\u003c/span\u003e \u003cspan class=\"k\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"n\"\u003eto\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\n  \u003cspan class=\"nf\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\n  \u003cspan class=\"nf\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\n  \u003cspan class=\"n\"\u003etoVector\u003c/span\u003e\n\n\u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003evec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"py\"\u003emkString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\",\"\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 1,9,25,49,81\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eboost\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eirange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eboost\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eadaptors\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efiltered\u003c/span\u003e\u003cspan class=\"p\"\u003e([](\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003eboost\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eadaptors\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etransformed\u003c/span\u003e\u003cspan class=\"p\"\u003e([](\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\",\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e//  1,9,25,49,81,\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように書けます。かっこいいですね、丸パクしましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実装していく\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%A6%E3%81%84%E3%81%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実装していく\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"目指すもの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%AE%E6%8C%87%E3%81%99%E3%82%82%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e目指すもの\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \"../include/string_split.hpp\"\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari na world!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003es_1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\u003cspan class=\"c1\"\u003e//\"na\"\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"123,421,113\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003es_2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estoi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"c1\"\u003e//[123,421,113]\u003c/span\u003e\n    \u003cspan class=\"n\"\u003es2\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"cm\"\u003e/*stdout:\n    123\n    421\n    113\n    */\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこうかけるようにしてみましょう。さっきのoperatorの優先順位の話を思い出せば自明ですが、\u003ccode\u003eoperator|\u003c/code\u003eが実際のsplit処理を担います。\u003c/p\u003e\n\n\u003cp\u003e実装方法はboost.rangeとそんなに変わんないので\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/rinse_/items/f00bb2a78d14c3c2f9fa\" id=\"reference-543966f4817867f882b7\"\u003eBoost.Rangeってなに\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこの辺も参考に。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"仕様を固めよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%95%E6%A7%98%E3%82%92%E5%9B%BA%E3%82%81%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e仕様を固めよう\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003echar\u003c/code\u003e/\u003ccode\u003ewchar_t\u003c/code\u003e/\u003ccode\u003echar16_t\u003c/code\u003e/\u003ccode\u003echar32_t\u003c/code\u003e型をまとめて\u003ccode\u003eCharType\u003c/code\u003eをします。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e区切り文字(列)(delimiter)に使えるのは\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCharType\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econst CharType*\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eとする。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e\u003ccode\u003eoperator[]\u003c/code\u003eに渡す数字の型は\u003ccode\u003estd::size_t\u003c/code\u003eとし、この場合\u003ccode\u003eoperator|\u003c/code\u003eの戻り値の型は\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;\u0026gt;\u003c/code\u003eとする。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eに渡せる変換関数は、任意の型(\u003ccode\u003evoid\u003c/code\u003e型含む)を\u003ccode\u003eSomeType\u003c/code\u003eとすると\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eSomeType (*)(/*std::basic_string\u0026lt;CharType\u0026gt;(lvalue/rvalue両方の可能性あり)を受け取れる型*/)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003elambda式で上記条件に合致するもの\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator()\u003c/code\u003eを持つclass(関数オブジェクト)で上記条件に合致するもの\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eとし、\u003ccode\u003eSomeType\u003c/code\u003eがvoidの場合はstd::vectorに格納しない、それ以外の場合は\u003ccode\u003eoperator|\u003c/code\u003eの戻り値の型は\u003ccode\u003estd::vector\u0026lt;SomeType\u0026gt;\u003c/code\u003eとする。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e上記に当てはまらないかぎり、\u003ccode\u003eoperator|\u003c/code\u003eの戻り値の型は\u003ccode\u003estd::vector\u0026lt;std::basic_string\u0026lt;CharType\u0026gt;\u0026gt;\u0026gt;\u003c/code\u003eとする。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"splitに必要な情報を格納するclassを作る\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#split%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E6%83%85%E5%A0%B1%E3%82%92%E6%A0%BC%E7%B4%8D%E3%81%99%E3%82%8Bclass%E3%82%92%E4%BD%9C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003esplitに必要な情報を格納するclassを作る\u003c/h2\u003e\n\n\u003cp\u003e長いので\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L67-L132\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L67-L132\u003c/a\u003e\u003cbr\u003e\n67行目から132行目を見てください。\u003c/p\u003e\n\n\u003cp\u003edelimiterが3パターンある関係で3種類の特殊化を行なっています。また、\u003ccode\u003eoperator[]\u003c/code\u003eを呼んでいる時、\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eを呼んでいる時、いずれでもない時の3つがあるので3種類のclass(順に\u003ccode\u003esplit_helper_index\u003c/code\u003e,\u003ccode\u003esplit_helper_conv_func\u003c/code\u003e, \u003ccode\u003esplit_helper\u003c/code\u003e)があります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"splitに必要な情報を格納するclassを構築するfactory関数を作る\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#split%E3%81%AB%E5%BF%85%E8%A6%81%E3%81%AA%E6%83%85%E5%A0%B1%E3%82%92%E6%A0%BC%E7%B4%8D%E3%81%99%E3%82%8Bclass%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8Bfactory%E9%96%A2%E6%95%B0%E3%82%92%E4%BD%9C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003esplitに必要な情報を格納するclassを構築するfactory関数を作る\u003c/h2\u003e\n\n\u003cp\u003eいわゆるmake系関数ですね。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L437-L442\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L437-L442\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etype_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esplit_helper\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eCStr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etype_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_c_str\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCStr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esplit_helper\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCStr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCStr\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eStlString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etype_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_stl_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStlString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esplit_helper\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStlString\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eStlString\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edelim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462\" id=\"reference-76ad10d1f50b3c81a4fb\"\u003estd::enable_ifを使ってオーバーロードする時、enablerを使う？\u003c/a\u003eでお馴染みSFINAEでdelimiter3パターンを分けて先ほどのclassを構築します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"operatorを作る\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#operator%E3%82%92%E4%BD%9C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eoperator\u0026gt;\u0026gt;を作る\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E5%9E%8B%E6%8E%A8%E8%AB%96%E3%81%9D%E3%81%AE%EF%BC%92%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%82%BF%E3%82%A4%E3%83%97%E3%81%8C%E3%83%A6%E3%83%8B%E3%83%B4%E3%82%A1%E3%83%BC%E3%82%B5%E3%83%AB%E5%8F%82%E7%85%A7\" id=\"reference-be833940cb6aa8723c4a\"\u003eC++のつまずきポイント解説#テンプレート型推論その２（パラメータタイプがユニヴァーサル参照）\u003c/a\u003e\u003cbr\u003e\nに解説のある通り、ユニヴァーサル参照の性質を利用して完全転送すればいいだけです。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L114-L115\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L114-L115\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e抜粋\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esplit_helper\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//略\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eFuncType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003esplit_helper_conv_func\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eFuncType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFuncType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eforward\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eFuncType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"operatorを作る-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#operator%E3%82%92%E4%BD%9C%E3%82%8B-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eoperator[]を作る\u003c/h2\u003e\n\n\u003cp\u003e何も悩むことはないですね\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L113\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L113\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003esplit_helper\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//略\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"n\"\u003esplit_helper_index\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eCharType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003edelim\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"operatorを作る-2\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#operator%E3%82%92%E4%BD%9C%E3%82%8B-2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eoperator|を作る\u003c/h2\u003e\n\n\u003cp\u003eいよいよ本番です。\u003c/p\u003e\n\n\u003cp\u003edelimiterは3パターンありますが、\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;::find_xxx\u003c/code\u003e系関数に指定するだけなので、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eCharType\u003c/code\u003eの時\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003econst CharType*\u003c/code\u003eまたは\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;\u003c/code\u003eのとき\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの2パターンです。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eoperator|\u003c/code\u003eの左辺の型によっても場合分けします。これは、\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;::sub_str\u003c/code\u003eよりも\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;::erase\u003c/code\u003eのほうが高速な可能性が高いからです(新規メモリー確保をしない)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003elvalue\u003c/li\u003e\n\u003cli\u003ervalue\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003esplitのモードによっても場合分けが必要です。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator[]\u003c/code\u003eでindexを指定している場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eで変換関数を指定していて、その戻り値がvoidの場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eで変換関数を指定していて、その戻り値がvoidではない場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator[]\u003c/code\u003e,\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003e共に呼んでいない場合\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eつまり、2*2*4=16通りの\u003ccode\u003eoperator|\u003c/code\u003eを書くわけですね。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L133-L436\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L133-L436\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e内部的には\u003ccode\u003estd::string::find_first_of\u003c/code\u003eと\u003ccode\u003estd::string::find_first_not_of\u003c/code\u003eをforで回しているだけです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"もうすこしざっと説明してくれ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%82%E3%81%86%E3%81%99%E3%81%93%E3%81%97%E3%81%96%E3%81%A3%E3%81%A8%E8%AA%AC%E6%98%8E%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eもうすこしざっと説明してくれ\u003c/h1\u003e\n\n\u003cp\u003eまあ高速化のための場合分けをすっ飛ばすと、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator[]\u003c/code\u003eでindexを指定している場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eで変換関数を指定していて、その戻り値がvoidの場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eで変換関数を指定していて、その戻り値がvoidではない場合\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperator[]\u003c/code\u003e,\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003e共に呼んでいない場合\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eの4パターンがあります。いずれも実際のsplit処理は\u003ccode\u003eoperator|\u003c/code\u003eが担います。\u003c/p\u003e\n\n\u003cp\u003eで、\u003ccode\u003eoperator|\u003c/code\u003eの右辺(第二引数)にsplitのための情報を渡さなければなりません。その情報とは\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e4パターンのどれなのか\u003cbr\u003e\n=\u0026gt; クラス名\u003c/li\u003e\n\u003cli\u003e区切り文字(列)とその型\u003cbr\u003e\n=\u0026gt; メンバー変数\u003ccode\u003edelim\u003c/code\u003eとtenplate引数\u003ccode\u003eDelimType\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eほしいのは何番目か(\u003ccode\u003eoperator[]\u003c/code\u003eを呼んでいる時のみ)\u003cbr\u003e\n=\u0026gt; メンバー変数\u003ccode\u003eindex\u003c/code\u003e(\u003ccode\u003esplit_helper_index\u003c/code\u003eクラスのみ)\u003c/li\u003e\n\u003cli\u003e変換関数(\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eを呼んでいる時のみ)とその型\u003cbr\u003e\n=\u0026gt; メンバー変数fとtemplate引数\u003ccode\u003eFuncType\u003c/code\u003e,メンバー型定義\u003ccode\u003eresult_type\u003c/code\u003e(\u003ccode\u003esplit_helper_conv_func\u003c/code\u003eクラスのみ)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eです。そのために3種類の情報格納クラスを作ったわけです(変換関数の戻り値の型は一つのクラスでやりくりしてます)。\u003c/p\u003e\n\n\u003cp\u003eあとは適当に\u003ccode\u003estd::basic_string\u0026lt;CharType\u0026gt;::find_first_of\u003c/code\u003eとかそのへんで分割してそのまま返すなり、vectorにぶち込むなり、変換関数に渡すなり、変換関数に渡してからvectorにぶち込んで終わりです。簡単でしょ？(どこが)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ベンチマーク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%99%E3%83%B3%E3%83%81%E3%83%9E%E3%83%BC%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eベンチマーク\u003c/h1\u003e\n\n\u003cp\u003eで、上の方で速度とかなんかほざいていましたが、作ってる時はそこまで意識していたわけではありません。というわけで計測してみましょう。上でリンクはって紹介したところからベンチマークのためにプログラムをパクっています。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/string_split/blob/master/benchmark/benchmark.cpp\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/blob/master/benchmark/benchmark.cpp\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e環境\u003cbr\u003e\nWindwos7 x64 Intel Core i5-6600 RAM:8GB DDR4 Visual Studio 2015 Update 3\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e結果_vs2015_x64_Debug\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esplit_sstream: 19633[ms] (19633506811[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_foreach: 20273[ms] (20273212873[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find: 8219[ms] (8219093174[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 6169[ms] (6169374878[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 3831[ms] (3831719290[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 29398[ms] (29398418203[ns]) : string.length:20 extract result:73roop count:400000\nsplit_foreach: 28892[ms] (28892307531[ns]) : string.length:20 extract result:73roop count:400000\nsplit_find: 37655[ms] (37655197851[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 28587[ms] (28587630313[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 1568[ms] (1568165636[ns]) : string.length:20 extract result:73 roop count:400000\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e結果_vs2015_x64_Release\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esplit_sstream: 221[ms] (221553891[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_foreach: 105[ms] (105126015[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find: 108[ms] (108013702[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 60[ms] (60907927[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 53[ms] (53194032[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 365[ms] (365028322[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_foreach: 213[ms] (213769813[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find: 234[ms] (234030923[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 164[ms] (164239805[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 18[ms] (18209121[ns]) : string.length:20 extract result:73 roop count:400000\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e結果_vs2015_clang_with_microsoft_codegem-O0\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esplit_sstream: 3321[ms] (3321390863[ns]) : string.length:1000 split count:20 roop count:20000\nsplit_foreach: 2373[ms] (2373877504[ns]) : string.length:1000 split count:20 roop count:20000\nsplit_find: 923[ms] (923088600[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 642[ms] (642154103[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 420[ms] (420755417[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 3665[ms] (3665194379[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_foreach: 3054[ms] (3054931591[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find: 3991[ms] (3991762364[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 2951[ms] (2951393803[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 211[ms] (211476359[ns]) : string.length:20 extract result:73 roop count:400000\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e結果_vs2015_clang_with_microsoft_codegem-O3\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esplit_sstream: 214[ms] (214364355[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_foreach: 100[ms] (100348038[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find: 105[ms] (105813618[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 53[ms] (53963566[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 46[ms] (46783306[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 438[ms] (438771305[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_foreach: 250[ms] (250181562[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find: 375[ms] (375356284[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 266[ms] (266208841[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 21[ms] (21786575[ns]) : string.length:20 extract result:73 roop count:400000\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e遅延評価と、memory allocation削減はやはり効果が高いようです。\u003ccode\u003eoperator[]\u003c/code\u003eを呼ぶケースでは勝負になっていませんし、同じ土俵のはずの純粋なsplitもmemory allocation削減のおかげで高速になっていますね。\u003c/p\u003e\n\n\u003cp\u003eこれでもう\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e そう言えば、あなたのsplit library、実際の速度が測ったことないでしょう…\u003c/p\u003e— 心愛@ときめきポポ論 (@MaverickTse) \u003ca href=\"https://twitter.com/MaverickTse/status/755613672446136320\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年7月20日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとか言われずにすみますね！\u003c/p\u003e\n\n\u003cp\u003eついでなのでCIでもベンチマークするようにしました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://app.shippable.com/projects/577cc6213be4f4faa56be97c/status/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://app.shippable.com/projects/577cc6213be4f4faa56be97c/status/\u003c/a\u003e\u003cbr\u003e\nBuild番号41からです。\u003c/p\u003e\n\n\u003cp\u003e追記\u003c/p\u003e\n\n\u003cp\u003eどうもCIでベンチは途中で\u003cdel\u003eタイムアウト\u003c/del\u003e謎の\u003ccode\u003e504 Server Error: Gateway Time-out\u003c/code\u003eになっている・・・？失敗するなぁ・・・。\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003eLinuxのGCCだと下手にreserveでむりやり倍々ゲームのメモリー確保戦略にしないほうが速くなっていますね。\u003c/del\u003e(追記：デュアルブート環境作ってUbuntu入れて試したらとんとんだったぞい！)手元のmingw-gccでは僅差で勝っていたんですが。いずれにせよVSのメモリー確保戦略はガバのプーさんと改めて証明された。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"反省感想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%8D%E7%9C%81%E6%84%9F%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e反省\u0026amp;感想\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eoperator overloadを悪用しすぎた\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eテストフレームワークに\u003ca href=\"https://github.com/srz-zumix/iutest/tree/master\" rel=\"nofollow noopener\" target=\"_blank\"\u003eiutest\u003c/a\u003eを使ったんだけど、ものすごい便利、wandboxでテストできるなんて！\u003c/li\u003e\n\u003cli\u003e速度を追求するのはいいけど、思ったより長くなって、テストケース書くのが大変だった\u003c/li\u003e\n\u003cli\u003etravis-ciのymlわかんねぇな！\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eなんでtravis-ciのlcov失敗するん？\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eMakefileワガンネ\u003c/li\u003e\n\u003cli\u003eさいきん、\u003ca href=\"http://llvm.org\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://llvm.org\u003c/a\u003e が落ち過ぎな気がする\u003c/li\u003e\n\u003cli\u003eoperator overloadしまくるとdoxygenコメントが書きにくい(今回は書くの諦めた)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記msys2-mingw32-clang380でだけコンパイラがバグる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98msys2-mingw32-clang380%E3%81%A7%E3%81%A0%E3%81%91%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%81%8C%E3%83%90%E3%82%B0%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記:msys2 mingw32 clang3.8.0でだけコンパイラがバグる\u003c/h1\u003e\n\n\u003cp\u003e詳しいことは\u003cbr\u003e\n\u003ca href=\"http://togetter.com/li/1025504\" rel=\"nofollow noopener\" target=\"_blank\"\u003eClangのバグと戦うために173210氏に助けを求めた話 - Togetterまとめ\u003c/a\u003e\u003cbr\u003e\nを見てほしいが、コンパイラがバグる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e#0 0x05e6779d\n#1 0x0028dfd0\n#2 0x00e054a1 (D:\\msys64\\mingw32\\bin\\clang++.exe+0xa054a1)\n#3 0x779fe40c RtlInitUnicodeString (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e40c)\n#4 0x779fe172 RtlAllocateHeap (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e172)\n#5 0x779fe40c RtlInitUnicodeString (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e40c)\n#6 0x779fe172 RtlAllocateHeap (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e172)\n#7 0x761d9d45 malloc (C:\\Windows\\syswow64\\msvcrt.dll+0x9d45)\n#8 0x6fef6c7a (D:\\msys64\\mingw32\\bin\\libstdc++-6.dll+0xb6c7a)\n#9 0x021d0c1d (D:\\msys64\\mingw32\\bin\\clang++.exe+0x1dd0c1d)\n#10 0x6fef6c7a (D:\\msys64\\mingw32\\bin\\libstdc++-6.dll+0xb6c7a)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e現在議論は\u003cbr\u003e\n\u003ca href=\"https://github.com/Alexpux/MINGW-packages/issues/1669\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/Alexpux/MINGW-packages/issues/1669\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/yumetodo/string_split/issues/1\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/string_split/issues/1\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/Alexpux/MINGW-packages/issues/1195\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/Alexpux/MINGW-packages/issues/1195\u003c/a\u003e\u003cbr\u003e\nおよびTwitterに分散しているが、興味のある人は見てくれ。\u003c/p\u003e\n","body":"# 結論\n\nhttps://github.com/yumetodo/string_split\n\n[![Run Status](https://api.shippable.com/projects/577cc6213be4f4faa56be97c/badge?branch=master)](https://app.shippable.com/projects/577cc6213be4f4faa56be97c) [![Build Status](https://travis-ci.org/yumetodo/string_split.svg?branch=master)](https://travis-ci.org/yumetodo/string_split) [![Coverage Status](https://coveralls.io/repos/github/yumetodo/string_split/badge.svg?branch=master)](https://coveralls.io/github/yumetodo/string_split?branch=master) [![Boost Software License](https://img.shields.io/badge/license-boost-blue.svg)](http://www.boost.org/LICENSE_1_0.txt)\n\n```cpp\n#include \"../include/string_split.hpp\"\n#include \u003ciostream\u003e\nint main()\n{\n    std::string s = \"arikitari na world!\";\n    const auto s_1 = s | split(' ')[1];//\"na\"\n    std::string s2 = \"123,421,113\";\n    const auto s_2 = s2 | split(',') \u003e\u003e [](const std::string\u0026 s) {\n        return std::stoi(s);\n    };//[123,421,113]\n    s2 | split(',') \u003e\u003e [](std::string\u0026\u0026 s) {\n        std::cout \u003c\u003c s \u003c\u003c std::endl;\n    };\n    /*stdout:\n    123\n    421\n    113\n    */\n    return 0;\n}\n```\n\nこれ使ってみてください！single header only libraryです！\nPStade.Ovenというかboost.range風味のpipeline記法が使える上に遅延評価のおかげで高速です！\n\n# 初めに\n\nPythonとかにはstringの分割があるのに、C++では見つからなかったので、作ってみた！！\n\n・・・という記事は割とよく見かける\n\nex.)\n\n- [c++でstringのsplitを作ってみた - Qiita](http://qiita.com/sh-o/items/7618599056210d13126e)\n- [C++におけるstringのsplit - Qiita](http://qiita.com/iseki-masaya/items/70b4ee6e0877d12dafa8)\n- [Story of Your Life  » Blog Archive   » C++で文字列のsplit](http://wayback.archive.org/web/20110614004133/http://shnya.jp/blog/?p=195)\n\nしかし、どれも見た目がダサく、かつ、速度を追求できていない。C++なんだから、速度を追求するべきだ。\n\n# みんな、splitした後どうしてる？\n\nみんな、文字列をsplitした後、どうします？\n\n何が言いたいかといいますと、どれもこれも``std::vector\u003cstd::basic_string\u003cCharType\u003e\u003e``に格納して結果を返しているけれど、本当にいつもそれが最適か？ということです。\n\nC++において、プログラムを高速化する際、**アルゴリズムの次に大事なのはメモリー確保数の削減です。**これを意識してないプログラムは、意識したプログラムに対して**当社比5倍**遅いです。\n\n## 例1\n\n例えばこんなコード。\n\n```cpp\nusing namespace std::literals;\nconst auto s = \"123,456,789\"s;\nconst std::vector\u003cstd::string\u003e splitted = split(s, ',');\nstd::vector\u003cint\u003e re;\nre.reserve(splitted.size());\nfor(const auto\u0026 s_n : splitted) re.push_back(std::stoi(s_n));\n```\n\nsplittedという無駄なvectorが生成されています。たかが一回じゃないかだって？**それ、減らせるでしょ！**\n\n## 例2\n\n例えばこんなコード。\n\n```cpp\nusing namespace std::literals;\nconst auto s = \"123,456,789\"s;\nconst auto n = std::stoi(split(s, ',')[1]);//456\n```\n\nこの場合vector一つとstring2つの計3回は最低でも無駄なallocateが起こります。std::vectorのメモリー確保戦略が倍々ゲームじゃない場合、push_backするたびにメモリー再確保とstringのmoveが発生するので更に重いです(Visual Studioとかな！)。\n\n# じゃあどうするか？operator overloadで遅延評価でしょ！\n\nさてみなさん、突然ですが、クイズです。\n\n添字演算子(operator ``[]``)、右シフト演算子(operator ``\u003e\u003e``)、ビットOR演算子(operator ``|``)は優先順位が高い順に並べるとどうなるでしょうか？\n\nまあC言語の初心者教本にも載っていますが、\n\n\n\u003e ``operator[]`` \u003e ``operator\u003e\u003e`` \u003e ``operator|``\n\nですね。これを有効活用します。\n\n# operator|はpipelineというかchain-method-likeというかに持って来い\n\n[Boost.Rangeをパイプライン記法のままコンテナに変換](http://qiita.com/piyo7/items/94e022dd9a0b57bd704b)\nでも紹介がありますが、簡単に触れておきます。\n\nC++は強力なoperator overloadのある言語として知られていますが、残念ながら、``operator.``はオーバーロードできません。\n\nいや、まあC++標準化委員会に提案はされているんですが\n[[PDF] P0252R1: Operator Dot Wording](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0252r1.pdf)(解説:[C++標準化委員会の文書: P0250R0-P0259R0 | 本の虫](https://cpplover.blogspot.jp/2016/06/c-p0250r0-p0259r0.html))\nどうもrejectされたっぽいので・・・。\n\nそこで``operator|``の出番です。これをうまく活用すると\n\n```scala:Scala\nval vec = (1 to 10).\n  filter(i =\u003e i % 2 != 0).\n  map(i =\u003e i * i).\n  toVector\n\nprint(vec.mkString(\",\")) // 1,9,25,49,81\n```\n\nが\n\n```cpp:C++\nauto range = boost::irange(1, 10)\n  | boost::adaptors::filtered([](int i){ return i % 2 != 0; })\n  | boost::adaptors::transformed([](int i){ return i * i; })\n\nfor (int i : range) std::cout \u003c\u003c i \u003c\u003c \",\"; //  1,9,25,49,81,\n```\n\nのように書けます。かっこいいですね、丸パクしましょう。\n\n# 実装していく\n\n## 目指すもの\n\n```cpp\n#include \"../include/string_split.hpp\"\n#include \u003ciostream\u003e\nint main()\n{\n    std::string s = \"arikitari na world!\";\n    const auto s_1 = s | split(' ')[1];//\"na\"\n    std::string s2 = \"123,421,113\";\n    const auto s_2 = s2 | split(',') \u003e\u003e [](const std::string\u0026 s) {\n        return std::stoi(s);\n    };//[123,421,113]\n    s2 | split(',') \u003e\u003e [](std::string\u0026\u0026 s) {\n        std::cout \u003c\u003c s \u003c\u003c std::endl;\n    };\n    /*stdout:\n    123\n    421\n    113\n    */\n    return 0;\n}\n```\n\n\nこうかけるようにしてみましょう。さっきのoperatorの優先順位の話を思い出せば自明ですが、``operator|``が実際のsplit処理を担います。\n\n実装方法はboost.rangeとそんなに変わんないので\n\n[Boost.Rangeってなに](http://qiita.com/rinse_/items/f00bb2a78d14c3c2f9fa)\n\nこの辺も参考に。\n\n## 仕様を固めよう\n\n``char``/``wchar_t``/``char16_t``/``char32_t``型をまとめて``CharType``をします。\n\n---\n\n区切り文字(列)(delimiter)に使えるのは\n\n- ``CharType``\n- ``const CharType*``\n- ``std::basic_string\u003cCharType\u003e``\n\nとする。\n\n---\n\n``operator[]``に渡す数字の型は``std::size_t``とし、この場合``operator|``の戻り値の型は``std::basic_string\u003cCharType\u003e\u003e``とする。\n\n---\n\n``operator\u003e\u003e``に渡せる変換関数は、任意の型(``void``型含む)を``SomeType``とすると\n\n- ``SomeType (*)(/*std::basic_string\u003cCharType\u003e(lvalue/rvalue両方の可能性あり)を受け取れる型*/)``\n- lambda式で上記条件に合致するもの\n- ``operator()``を持つclass(関数オブジェクト)で上記条件に合致するもの\n\nとし、``SomeType``がvoidの場合はstd::vectorに格納しない、それ以外の場合は``operator|``の戻り値の型は``std::vector\u003cSomeType\u003e``とする。\n\n---\n\n上記に当てはまらないかぎり、``operator|``の戻り値の型は``std::vector\u003cstd::basic_string\u003cCharType\u003e\u003e\u003e``とする。\n\n## splitに必要な情報を格納するclassを作る\n\n\n長いので\n\nhttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L67-L132\n67行目から132行目を見てください。\n\ndelimiterが3パターンある関係で3種類の特殊化を行なっています。また、``operator[]``を呼んでいる時、``operator\u003e\u003e``を呼んでいる時、いずれでもない時の3つがあるので3種類のclass(順に``split_helper_index``,``split_helper_conv_func``, ``split_helper``)があります。\n\n## splitに必要な情報を格納するclassを構築するfactory関数を作る\n\nいわゆるmake系関数ですね。\n\nhttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L437-L442\n\n```cpp\ntemplate\u003ctypename CharType, typename std::enable_if\u003cdetail::type_traits::is_char_type\u003cCharType\u003e::value, std::nullptr_t\u003e::type = nullptr\u003e\nconstexpr detail::split_helper\u003cCharType, true, false, false\u003e split(CharType delim) noexcept { return{ delim }; }\ntemplate\u003ctypename CStr, typename std::enable_if\u003cdetail::type_traits::is_c_str\u003cCStr\u003e::value, std::nullptr_t\u003e::type = nullptr\u003e\nconstexpr detail::split_helper\u003cCStr, false, true, false\u003e split(CStr delim) noexcept { return{ delim }; }\ntemplate\u003ctypename StlString, typename std::enable_if\u003cdetail::type_traits::is_stl_string\u003cStlString\u003e::value, std::nullptr_t\u003e::type = nullptr\u003e\ndetail::split_helper\u003cStlString, false, false, true\u003e split(StlString delim) noexcept { return{ std::move(delim) }; }\n```\n\n[std::enable_ifを使ってオーバーロードする時、enablerを使う？](http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462)でお馴染みSFINAEでdelimiter3パターンを分けて先ほどのclassを構築します。\n\n## operator\u003e\u003eを作る\n\n[C++のつまずきポイント解説#テンプレート型推論その２（パラメータタイプがユニヴァーサル参照）](http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E5%9E%8B%E6%8E%A8%E8%AB%96%E3%81%9D%E3%81%AE%EF%BC%92%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%82%BF%E3%82%A4%E3%83%97%E3%81%8C%E3%83%A6%E3%83%8B%E3%83%B4%E3%82%A1%E3%83%BC%E3%82%B5%E3%83%AB%E5%8F%82%E7%85%A7)\nに解説のある通り、ユニヴァーサル参照の性質を利用して完全転送すればいいだけです。\n\nhttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L114-L115\n\n```cpp:抜粋\ntemplate\u003ctypename CharType\u003e\n    struct split_helper\u003cCharType, true, false, false\u003e {\n    //略\n    template\u003ctypename FuncType\u003e\n    constexpr split_helper_conv_func\u003cCharType, FuncType, true, false, false\u003e\n    operator \u003e\u003e (FuncType\u0026\u0026 f) const { \n        return{ delim, std::forward\u003cFuncType\u003e(f) }; \n    }\n};\n```\n\n## operator[]を作る\n\n何も悩むことはないですね\n\nhttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L113\n\n```cpp\ntemplate\u003ctypename CharType\u003e\nstruct split_helper\u003cCharType, true, false, false\u003e {\n    //略\n    constexpr split_helper_index\u003cCharType, true, false, false\u003e\n    operator[](size_t n) const noexcept { return{ delim, n }; }\n};\n```\n\n## operator|を作る\n\nいよいよ本番です。\n\ndelimiterは3パターンありますが、``std::basic_string\u003cCharType\u003e::find_xxx``系関数に指定するだけなので、\n\n- ``CharType``の時\n- ``const CharType*``または``std::basic_string\u003cCharType\u003e``のとき\n\nの2パターンです。\n\n``operator|``の左辺の型によっても場合分けします。これは、``std::basic_string\u003cCharType\u003e::sub_str``よりも``std::basic_string\u003cCharType\u003e::erase``のほうが高速な可能性が高いからです(新規メモリー確保をしない)\n\n- lvalue\n- rvalue\n\n\nsplitのモードによっても場合分けが必要です。\n\n- ``operator[]``でindexを指定している場合\n- ``operator\u003e\u003e``で変換関数を指定していて、その戻り値がvoidの場合\n- ``operator\u003e\u003e``で変換関数を指定していて、その戻り値がvoidではない場合\n- ``operator[]``,``operator\u003e\u003e``共に呼んでいない場合\n\n\nつまり、2*2*4=16通りの``operator|``を書くわけですね。\n\nhttps://github.com/yumetodo/string_split/blob/58518f0d4d07ab799e84077a953419e2f28af0b0/include/string_split.hpp#L133-L436\n\n内部的には``std::string::find_first_of``と``std::string::find_first_not_of``をforで回しているだけです。\n\n# もうすこしざっと説明してくれ\n\nまあ高速化のための場合分けをすっ飛ばすと、\n\n- ``operator[]``でindexを指定している場合\n- ``operator\u003e\u003e``で変換関数を指定していて、その戻り値がvoidの場合\n- ``operator\u003e\u003e``で変換関数を指定していて、その戻り値がvoidではない場合\n- ``operator[]``,``operator\u003e\u003e``共に呼んでいない場合\n\nの4パターンがあります。いずれも実際のsplit処理は``operator|``が担います。\n\nで、``operator|``の右辺(第二引数)にsplitのための情報を渡さなければなりません。その情報とは\n\n- 4パターンのどれなのか  \n =\u003e クラス名\n- 区切り文字(列)とその型  \n =\u003e メンバー変数``delim``とtenplate引数``DelimType``\n- ほしいのは何番目か(``operator[]``を呼んでいる時のみ)  \n =\u003e メンバー変数``index``(``split_helper_index``クラスのみ)\n- 変換関数(``operator\u003e\u003e``を呼んでいる時のみ)とその型  \n =\u003e メンバー変数fとtemplate引数``FuncType``,メンバー型定義``result_type``(``split_helper_conv_func``クラスのみ)\n\nです。そのために3種類の情報格納クラスを作ったわけです(変換関数の戻り値の型は一つのクラスでやりくりしてます)。\n\nあとは適当に``std::basic_string\u003cCharType\u003e::find_first_of``とかそのへんで分割してそのまま返すなり、vectorにぶち込むなり、変換関数に渡すなり、変換関数に渡してからvectorにぶち込んで終わりです。簡単でしょ？(どこが)\n# ベンチマーク\n\nで、上の方で速度とかなんかほざいていましたが、作ってる時はそこまで意識していたわけではありません。というわけで計測してみましょう。上でリンクはって紹介したところからベンチマークのためにプログラムをパクっています。\n\nhttps://github.com/yumetodo/string_split/blob/master/benchmark/benchmark.cpp\n\n環境\nWindwos7 x64 Intel Core i5-6600 RAM:8GB DDR4 Visual Studio 2015 Update 3\n\n```plain:結果_vs2015_x64_Debug\nsplit_sstream: 19633[ms] (19633506811[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_foreach: 20273[ms] (20273212873[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find: 8219[ms] (8219093174[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 6169[ms] (6169374878[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 3831[ms] (3831719290[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 29398[ms] (29398418203[ns]) : string.length:20 extract result:73roop count:400000\nsplit_foreach: 28892[ms] (28892307531[ns]) : string.length:20 extract result:73roop count:400000\nsplit_find: 37655[ms] (37655197851[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 28587[ms] (28587630313[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 1568[ms] (1568165636[ns]) : string.length:20 extract result:73 roop count:400000\n```\n\n\n```plain:結果_vs2015_x64_Release\nsplit_sstream: 221[ms] (221553891[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_foreach: 105[ms] (105126015[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find: 108[ms] (108013702[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 60[ms] (60907927[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 53[ms] (53194032[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 365[ms] (365028322[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_foreach: 213[ms] (213769813[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find: 234[ms] (234030923[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 164[ms] (164239805[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 18[ms] (18209121[ns]) : string.length:20 extract result:73 roop count:400000\n```\n\n```plain:結果_vs2015_clang_with_microsoft_codegem-O0\nsplit_sstream: 3321[ms] (3321390863[ns]) : string.length:1000 split count:20 roop count:20000\nsplit_foreach: 2373[ms] (2373877504[ns]) : string.length:1000 split count:20 roop count:20000\nsplit_find: 923[ms] (923088600[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 642[ms] (642154103[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 420[ms] (420755417[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 3665[ms] (3665194379[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_foreach: 3054[ms] (3054931591[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find: 3991[ms] (3991762364[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 2951[ms] (2951393803[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 211[ms] (211476359[ns]) : string.length:20 extract result:73 roop count:400000\n```\n\n```plain:結果_vs2015_clang_with_microsoft_codegem-O3\nsplit_sstream: 214[ms] (214364355[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_foreach: 100[ms] (100348038[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find: 105[ms] (105813618[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_find_first_of: 53[ms] (53963566[ns]) : string.length:1000 split count:21 roop count:20000\nsplit_our_library: 46[ms] (46783306[ns]) : string.length:1000 split count:21 roop count:20000\n\nsplit_sstream: 438[ms] (438771305[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_foreach: 250[ms] (250181562[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find: 375[ms] (375356284[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_find_first_of: 266[ms] (266208841[ns]) : string.length:20 extract result:73 roop count:400000\nsplit_our_library: 21[ms] (21786575[ns]) : string.length:20 extract result:73 roop count:400000\n```\n\n遅延評価と、memory allocation削減はやはり効果が高いようです。``operator[]``を呼ぶケースでは勝負になっていませんし、同じ土俵のはずの純粋なsplitもmemory allocation削減のおかげで高速になっていますね。\n\nこれでもう\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e そう言えば、あなたのsplit library、実際の速度が測ったことないでしょう…\u003c/p\u003e\u0026mdash; 心愛@ときめきポポ論 (@MaverickTse) \u003ca href=\"https://twitter.com/MaverickTse/status/755613672446136320\"\u003e2016年7月20日\u003c/a\u003e\u003c/blockquote\u003e\n\nとか言われずにすみますね！\n\nついでなのでCIでもベンチマークするようにしました。\n\nhttps://app.shippable.com/projects/577cc6213be4f4faa56be97c/status/\nBuild番号41からです。\n\n追記\n\nどうもCIでベンチは途中で~~タイムアウト~~謎の``504 Server Error: Gateway Time-out``になっている・・・？失敗するなぁ・・・。\n\n~~LinuxのGCCだと下手にreserveでむりやり倍々ゲームのメモリー確保戦略にしないほうが速くなっていますね。~~(追記：デュアルブート環境作ってUbuntu入れて試したらとんとんだったぞい！)手元のmingw-gccでは僅差で勝っていたんですが。いずれにせよVSのメモリー確保戦略はガバのプーさんと改めて証明された。\n\n# 反省\u0026感想\n\n- **operator overloadを悪用しすぎた**\n- テストフレームワークに[iutest](https://github.com/srz-zumix/iutest/tree/master)を使ったんだけど、ものすごい便利、wandboxでテストできるなんて！\n- 速度を追求するのはいいけど、思ったより長くなって、テストケース書くのが大変だった\n- travis-ciのymlわかんねぇな！\n- **なんでtravis-ciのlcov失敗するん？**\n- Makefileワガンネ\n- さいきん、http://llvm.org が落ち過ぎな気がする\n- operator overloadしまくるとdoxygenコメントが書きにくい(今回は書くの諦めた)\n\n# 追記:msys2 mingw32 clang3.8.0でだけコンパイラがバグる\n\n詳しいことは\n[Clangのバグと戦うために173210氏に助けを求めた話 - Togetterまとめ](http://togetter.com/li/1025504)\nを見てほしいが、コンパイラがバグる。\n\n```\n#0 0x05e6779d\n#1 0x0028dfd0\n#2 0x00e054a1 (D:\\msys64\\mingw32\\bin\\clang++.exe+0xa054a1)\n#3 0x779fe40c RtlInitUnicodeString (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e40c)\n#4 0x779fe172 RtlAllocateHeap (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e172)\n#5 0x779fe40c RtlInitUnicodeString (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e40c)\n#6 0x779fe172 RtlAllocateHeap (C:\\Windows\\SysWOW64\\ntdll.dll+0x2e172)\n#7 0x761d9d45 malloc (C:\\Windows\\syswow64\\msvcrt.dll+0x9d45)\n#8 0x6fef6c7a (D:\\msys64\\mingw32\\bin\\libstdc++-6.dll+0xb6c7a)\n#9 0x021d0c1d (D:\\msys64\\mingw32\\bin\\clang++.exe+0x1dd0c1d)\n#10 0x6fef6c7a (D:\\msys64\\mingw32\\bin\\libstdc++-6.dll+0xb6c7a)\n```\n\n現在議論は\nhttps://github.com/Alexpux/MINGW-packages/issues/1669\nhttps://github.com/yumetodo/string_split/issues/1\nhttps://github.com/Alexpux/MINGW-packages/issues/1195\nおよびTwitterに分散しているが、興味のある人は見てくれ。\n","coediting":false,"comments_count":5,"created_at":"2016-07-20T12:07:05+09:00","group":null,"id":"bf2bc5c1d49d5aec3efa","likes_count":18,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"string","versions":[]},{"name":"C++11","versions":[]}],"title":"C++でPStade.Oven(pipeline)風味なstringのsplitを作ってみた","updated_at":"2016-09-20T12:08:49+09:00","url":"https://qiita.com/yumetodo/items/bf2bc5c1d49d5aec3efa","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003eものすごい簡単です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"前提\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%89%8D%E6%8F%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e前提\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003epacman -S base-devel mingw-w64-i686-clang mingw-w64-x86_64-clang mingw-w64-i686-perl mingw-w64-x86_64-perl git\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eまあこのくらいはよく使うので入れておきましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"install\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#install\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003einstall\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eがあるところをコマンドプロンプトで開いて\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bat\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eコマンドプロンプト\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003ecall\u003c/span\u003e \u003cspan class=\"kd\"\u003emsys2_shell\u003c/span\u003e.cmd \u003cspan class=\"na\"\u003e-mingw\u003c/span\u003e\u003cspan class=\"m\"\u003e32\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003emsys2_mingw32\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003emkdir \u003c/span\u003epatches\n\u003cspan class=\"nb\"\u003ecd \u003c/span\u003epatches\ngit clone \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"nt\"\u003e--progress\u003c/span\u003e \u003cspan class=\"nt\"\u003e--config\u003c/span\u003e core.autocrlf\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse \u003c/span\u003ehttps://github.com/Alexpux/MINGW-packages.git ./\n\u003cspan class=\"nb\"\u003ecd \u003c/span\u003emingw-w64-lcov\nmakepkg \u003cspan class=\"nt\"\u003e-csi\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e同様にして\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bat\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eコマンドプロンプト\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003ecall\u003c/span\u003e \u003cspan class=\"kd\"\u003emsys2_shell\u003c/span\u003e.cmd \u003cspan class=\"na\"\u003e-mingw\u003c/span\u003e\u003cspan class=\"m\"\u003e64\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003emsys2_mingw64\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003epatches/mingw-w64-lcov\nmakepkg \u003cspan class=\"nt\"\u003e-csi\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e以上です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"注意msys2-mingw-clangではlink-errorになる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8Fmsys2-mingw-clang%E3%81%A7%E3%81%AFlink-error%E3%81%AB%E3%81%AA%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意:msys2 mingw clangではlink errorになる\u003c/h1\u003e\n\n\u003cp\u003ecoverageを取るときは、gccでもclangでも\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eclang++ test.cpp -o test.out -coverage -g -O0 -Wall -Wextra -std=c++14 -lWs2_32\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように\u003ccode\u003e-coverage\u003c/code\u003eをつけてコンパイルするんですが、msys2 mingw clangでは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f2b): `llvm_gcda_emit_function' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f3e): `llvm_gcda_emit_arcs' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f43): `llvm_gcda_summary_info' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f48): `llvm_gcda_end_file' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xf8923): `llvm_gcov_init' に対する定義されていない参照です\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じのlink errorがどっさり出てきます。\u003ccode\u003elibprofile_rt.a\u003c/code\u003eがないせいだと思います。ので、gccを使いましょう。pacmanからじゃなくて自力でllvmをビルドしてパッケージングすればワンちゃん(めんｄ)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://txt.arboreus.com/2015/05/29/howto-get-lcov-test-coverage-on-windows.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://txt.arboreus.com/2015/05/29/howto-get-lcov-test-coverage-on-windows.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/MaverickTse/lsw-build2/blob/master/get_patch.sh\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/MaverickTse/lsw-build2/blob/master/get_patch.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://wiki.archlinuxjp.org/index.php/Makepkg#.E4.BD.BF.E7.94.A8.E6.96.B9.E6.B3.95\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wiki.archlinuxjp.org/index.php/Makepkg#.E4.BD.BF.E7.94.A8.E6.96.B9.E6.B3.95\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://clang-developers.42468.n3.nabble.com/Code-coverage-on-clang-td4033066.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://clang-developers.42468.n3.nabble.com/Code-coverage-on-clang-td4033066.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","body":"ものすごい簡単です。\n\n# 前提\n\n```\npacman -S base-devel mingw-w64-i686-clang mingw-w64-x86_64-clang mingw-w64-i686-perl mingw-w64-x86_64-perl git\n```\n\nまあこのくらいはよく使うので入れておきましょう。\n\n# install\n\n``msys2_shell.cmd``があるところをコマンドプロンプトで開いて\n\n```bat:コマンドプロンプト\ncall msys2_shell.cmd -mingw32\n```\n\n```bash:msys2_mingw32\nmkdir patches\ncd patches\ngit clone -v --progress --config core.autocrlf=false https://github.com/Alexpux/MINGW-packages.git ./\ncd mingw-w64-lcov\nmakepkg -csi\n```\n\n同様にして\n\n\n```bat:コマンドプロンプト\ncall msys2_shell.cmd -mingw64\n```\n\n```bash:msys2_mingw64\ncd patches/mingw-w64-lcov\nmakepkg -csi\n```\n\n以上です。\n\n# 注意:msys2 mingw clangではlink errorになる\n\ncoverageを取るときは、gccでもclangでも\n\n```\nclang++ test.cpp -o test.out -coverage -g -O0 -Wall -Wextra -std=c++14 -lWs2_32\n```\n\nのように``-coverage``をつけてコンパイルするんですが、msys2 mingw clangでは\n\n```\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f2b): `llvm_gcda_emit_function' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f3e): `llvm_gcda_emit_arcs' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f43): `llvm_gcda_summary_info' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xb5f48): `llvm_gcda_end_file' に対する定義されていない参照です\nC:\\msys64\\tmp\\test-9d9013.o:(.text+0xf8923): `llvm_gcov_init' に対する定義されていない参照です\n```\n\nこんな感じのlink errorがどっさり出てきます。``libprofile_rt.a``がないせいだと思います。ので、gccを使いましょう。pacmanからじゃなくて自力でllvmをビルドしてパッケージングすればワンちゃん(めんｄ)\n\n# 参考\n\n- http://txt.arboreus.com/2015/05/29/howto-get-lcov-test-coverage-on-windows.html\n- https://github.com/MaverickTse/lsw-build2/blob/master/get_patch.sh\n- https://wiki.archlinuxjp.org/index.php/Makepkg#.E4.BD.BF.E7.94.A8.E6.96.B9.E6.B3.95\n- http://clang-developers.42468.n3.nabble.com/Code-coverage-on-clang-td4033066.html\n\n\n\n","coediting":false,"comments_count":2,"created_at":"2016-07-18T16:24:26+09:00","group":null,"id":"7ef9de58434426aa7ef8","likes_count":2,"private":false,"reactions_count":0,"tags":[{"name":"MinGW","versions":[]},{"name":"LLVM","versions":[]},{"name":"msys2","versions":[]},{"name":"MinGW／msys","versions":[]},{"name":"lcov","versions":[]}],"title":"msys2でlcovをinstallする方法","updated_at":"2016-07-21T19:04:57+09:00","url":"https://qiita.com/yumetodo/items/7ef9de58434426aa7ef8","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"re主要なプログラミング言語n種を解説\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#re%E4%B8%BB%E8%A6%81%E3%81%AA%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9En%E7%A8%AE%E3%82%92%E8%A7%A3%E8%AA%AC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRe:主要なプログラミング言語n種を解説\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\n\u003cp\u003eこの記事は、「主要なプログラミング言語n種を解説」といった類の記事を斬るためのものです。対象とする記事はこちら。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" rel=\"nofollow noopener\" target=\"_blank\"\u003e主要なプログラミング言語 5種類を徹底解説! - Programming share\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" rel=\"nofollow noopener\" target=\"_blank\"\u003e主要なプログラミング言語8種をざっくり解説 - shi3zの長文日記\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://toiroha.jp/article/detail/32380\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2015年の人気プログラム言語６つを徹底比較！気になる年収や求人、学習難易度まで｜トイロハ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e執筆に協力していただいた \u003ca href=\"/YSRKEN\" class=\"user-mention js-hovercard\" title=\"YSRKEN\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"YSRKEN\"\u003e@YSRKEN\u003c/a\u003e 氏に感謝。なお執筆は\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/re_describe_popular_programming_language/blob/master/article.md\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/re_describe_popular_programming_language/blob/master/article.md\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eで行なっています\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c言語\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E8%A8%80%E8%AA%9E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC言語\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nC言語はおそらくプログラミングの歴史上一番古く、プログラミングの基盤と言ってもいい言語です。\u003cbr\u003e\u003cbr\u003e\n\u003cstrong\u003e(編者注：現在は削除された文面です)\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eこれについては、次のコメントを貼るだけに留めます。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://b.hatena.ne.jp/entry/292646265/comment/ockeghem\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://b.hatena.ne.jp/entry/292646265/comment/ockeghem\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nわかる。COBOL、FORTRAN、PL/I、LISP、ALGOL等は有史以前の言語ということですね\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nなぜC言語でOSを作る必要性があるかというと、C言語は数あるプログラミング言語の中でも最速の処理速度を誇るからです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eOSをプログラミングする際には、ハードウェアに直接関わる処理を記述する必要があります。\u003cbr\u003e\u003cbr\u003e\n(参考→\u003ca href=\"http://www.slideshare.net/uchan_nos/cppos\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++でできる！OS自作入門\u003c/a\u003e)\u003cbr\u003e\u003cbr\u003e\nそのため、当初は機械語命令と一対一対応する\u003ca href=\"https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%AA%E8%A8%80%E8%AA%9E\" rel=\"nofollow noopener\" target=\"_blank\"\u003eアセンブリ言語\u003c/a\u003eによってOSが記述されていました。\u003cbr\u003e\u003cbr\u003e\nしかし、機械語はそれを動かすCPUによって仕様が異なるため、他のハードに移植する際に酷く苦労することになりました。\u003cbr\u003e\u003cbr\u003e\nそこで、ハードウェアに関わるような処理を記述できる上、より移植性が高いコードを書くことができる\u003ca href=\"https://ja.wikipedia.org/wiki/C%E8%A8%80%E8%AA%9E\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC言語\u003c/a\u003eが誕生しました。\u003cbr\u003e\u003cbr\u003e\nしたがって、正しい順番としては\u003cstrong\u003e「C言語→OS」ではなく「OS→C言語」\u003c/strong\u003eということになります。\u003c/p\u003e\n\n\u003cp\u003eちなみに、速度面で言えば理論上は機械語＝アセンブラが最速……ですが、\u003cbr\u003e\u003cbr\u003e\n実際にはコンパイラや使用するフレームワークの性能などにより\u003cstrong\u003e幾らでも変化します\u003c/strong\u003e。\u003cbr\u003e\u003cbr\u003e\n(参考→\u003ca href=\"http://d.hatena.ne.jp/kwatch/20100430/1272585083\" rel=\"nofollow noopener\" target=\"_blank\"\u003eプログラミング言語の速度とアプリケーションの速度がいかに関係ないかがわかるグラフ\u003c/a\u003e)\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n学習する際は、歴史が古い分、図書館にC言語の学習書が豊富に並んでますので、学習素材には困りません。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC言語は、開発人口の多さと規格内の未定義・処理系依存部分が多いことなどから、\u003cstrong\u003e学習書に間違いが書かれている\u003c/strong\u003eことが珍しくありません。\u003cbr\u003e\u003cbr\u003e\nそのため、冗談抜きで\u003cstrong\u003e「迷ったら規格書を読め」\u003c/strong\u003eと勧められることがままあります。  \u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nまあボンクラがアセンブリ言語を書くよりはCで書くほうがよほどマシでしょうが、エキスパートがアセンブリ言語で書く場合はCより速くなることはママあります。コンパイラよりも最適なコードが書けないというのは、単にプログラマの能力が足りないんです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e近年のコンパイラは優秀ですので、手動でガリガリとアセンブリを書くよりずっと高速になることが多いです。\u003cbr\u003e\u003cbr\u003e\nそもそも、プログラミングの原則として\u003cstrong\u003e「\u003ca href=\"http://d.hatena.ne.jp/foursue/20060629/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e最適化するな\u003c/a\u003e」\u003c/strong\u003eといのがあるぐらいですしね……。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e現在のアセンブリの利用例 | 本の虫\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://cpplover.blogspot.jp/2013/04/blog-post.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://cpplover.blogspot.jp/2013/04/blog-post.html\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n結論として、ほとんどのパッケージで、ARMのための移植作業は必要ない。Ubuntuのレポジトリで言えば、アセンブリを利用しているパッケージは、全体のたったの6%だからだ。アセンブリを利用している多くのパッケージも、そのまま動く。移植性の高い高級なコードでの実装とパフォーマンス目的のアセンブリ実装を切り替えるようになっていたりするからだ。また、ほとんどのアセンブリ利用は、それほど価値がない。本来アセンブリで書かなくてもいいような処理までアセンブリで書いていたりするからだ。\u003c/p\u003e\n\n\u003cp\u003eC++標準化委員会の文書 2015-04-pre-Lenexaのレビュー: N4450-N4459 | 本の虫\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://cpplover.blogspot.jp/2015/06/c-2015-04-pre-lenexa-n4450-n4459.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://cpplover.blogspot.jp/2015/06/c-2015-04-pre-lenexa-n4450-n4459.html\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n開発者へ：アセンブリを捨てろ。そんなに最適化できないし、そもそもコードを書いている時点で存在するアーキテクチャにしか対応できない。コンパイラーのパフォーマンスが期待通りでないのならばバグ報告を投げろ。標準化委員会に同期と並列実行を実現できる方法を提案しろ。ThreadSanitizerのようなツールをｔ受かってコード中の競合を発見しろ。\u003c/p\u003e\n\n\u003cp\u003eコンパイラーを負かす | 本の虫\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://cpplover.blogspot.jp/2015/03/blog-post_30.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://cpplover.blogspot.jp/2015/03/blog-post_30.html\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nPythonや、その他の動的型付け言語は、十分に速いかもしれないが、速いことは常にいいことだ。Cのような低級言語で速度を稼げるかもしれないし、アセンブリを手書きすることでもう少し上を行けるかもしれないが、コンパイラーを信頼したほうがいい。しかし、もし大量の12bitの数値を限りなく高速に足し合わせたいのであれば、まあ、これが答えだ\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://toiroha.jp/article/detail/32380\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://toiroha.jp/article/detail/32380\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nオブジェクト指向言語ではないので、最近の主流の言語から比べると少し時代遅れの感があります。（C++はC言語にオブジェクト指向を拡張したものです）\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC++はC言語にオブジェクト指向を拡張したもの\u003cstrong\u003eではありません\u003c/strong\u003eし、C言語でもオブジェクト指向はできます。\u003cbr\u003e\u003cbr\u003e\nC++について言えば、もちろんオブジェクト指向もできますが、それ以外にも\u003ca href=\"http://qiita.com/narumi_/items/f656678c78d50c40bc1c\"\u003etemplate\u003c/a\u003eなど様々な機能が拡張されています。\u003cbr\u003e\u003cbr\u003e\nまた、C言語もC言語で\u003cstrong\u003e独自の発展\u003c/strong\u003eを遂げ、またコーディングスタイルは全く異なるものになりましたので、\u003cstrong\u003eC++の下位互換というのは誤った認識\u003c/strong\u003eかと思われます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nCとほとんどの部分で共通しており、C++はC言語の上位互換です。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e前述したように、C++は\u003cstrong\u003e断じて\u003c/strong\u003eC言語の上位互換ではありません。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n例えばC言語ではコメントは/\u003cem\u003e～\u003c/em\u003e/しか使えませんが、C++では//が使えます。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eC言語でも、C99から\u003ccode\u003e//\u003c/code\u003eコメントが使えるようになりました。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n§6.4.9 Comments\u003cbr\u003e\u003cbr\u003e\n2 Except within a character constant, a string literal, or a comment, the characters \u003ccode\u003e//\u003c/code\u003e\u003cbr\u003e\nintroduce a comment that includes all multibyte characters up to, but not including, the next new-line character. The contents of such a comment are examined only to identify multibyte characters and to find the terminating new-line character.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"java\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#java\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eJava\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nJavaはAndroidアプリを開発する際に必要な言語です。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"http://qiita.com/alingogo/items/203477c9da373ab7eacb\" id=\"reference-d6996a62ec66dacecaf4\"\u003eAndroid NDK\u003c/a\u003eがアップを始めました。\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\n(※NDK＝Native Development Kitとは、C++などでネイティブコードを書くためのキットのこと)\u003cbr\u003e\u003cbr\u003e\nまた、AndroidのJavaは\u003cstrong\u003e正式なJavaではない\u003c/strong\u003e、といった話が以前飛び交いましたね……。\u003cbr\u003e\u003cbr\u003e\n(参考→\u003ca href=\"http://quesera2.hatenablog.jp/entry/2016/05/28/180834\" rel=\"nofollow noopener\" target=\"_blank\"\u003eJavaと偽Javaの話。\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e昨今では、\u003ca href=\"http://www.xlsoft.com/jp/products/xamarin/platform.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eXamarin.Android\u003c/a\u003eによって\u003ca href=\"https://ja.wikipedia.org/wiki/C_Sharp\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC#\u003c/a\u003eでもAndroidアプリを開発できるようになりました。  \u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nC言語に匹敵する処理速度を誇り\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://ja.wikipedia.org/wiki/Java\" rel=\"nofollow noopener\" target=\"_blank\"\u003eJava\u003c/a\u003eは元々、プラットフォームに依存せず扱いやすい言語を目指して開発されました。\u003ca href=\"https://ja.wikipedia.org/wiki/Java%E3%82%A2%E3%83%97%E3%83%AC%E3%83%83%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\"\u003eJavaアプレット\u003c/a\u003eから始まったその発展は、クライアントやサーバー、パソコンや組込み機器など多岐に渡ります。\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://ja.wikipedia.org/wiki/Android\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAndroid OS\u003c/a\u003e用のソフト開発に使われるのは主にC/C++かJavaですが、前者のアプリはネイティブで実行され、後者は\u003ca href=\"https://ja.wikipedia.org/wiki/Dalvik%E4%BB%AE%E6%83%B3%E3%83%9E%E3%82%B7%E3%83%B3\" rel=\"nofollow noopener\" target=\"_blank\"\u003eDalvik仮想マシン\u003c/a\u003e(Android 4.4以前)か\u003ca href=\"https://ja.wikipedia.org/wiki/Android_Runtime\" rel=\"nofollow noopener\" target=\"_blank\"\u003eART仮想マシン\u003c/a\u003e(Android 4.4以降)で実行されます。\u003cbr\u003e\u003cbr\u003e\nなお、「ソースコードから生成したバイトコードを仮想マシン(VM)上で動かす」性質上、速度は\u003cstrong\u003e比較的遅い方\u003c/strong\u003eです。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://toiroha.jp/article/detail/32380\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://toiroha.jp/article/detail/32380\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nJavaは成熟した傾向があり、最近の主流の言語から置いていかれた傾向があります。そのため、あまり新しい機能が追加されることが少ないです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"http://aoking.hatenablog.jp/entry/20110808/1312769605\" rel=\"nofollow noopener\" target=\"_blank\"\u003eJava 7\u003c/a\u003e・\u003ca href=\"http://qiita.com/oohira/items/9c13f92815266cc5112c\" id=\"reference-174660cbc8ec7670b8b9\"\u003eJava 8\u003c/a\u003eが登場しましたので、まだ\u003cstrong\u003e進化の余地を残している\u003c/strong\u003eかと。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"javascript\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#javascript\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eJavaScript\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nJavaScriptはWebページを作成する際に必要な言語です。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e確かによく使われていますが、必須というほどでもありません。どちらかと言えば\u003ca href=\"https://ja.wikipedia.org/wiki/HyperText_Markup_Language\" rel=\"nofollow noopener\" target=\"_blank\"\u003eHTML\u003c/a\u003eに当てはまる言葉でしょう。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n例えば、jQueryはJavaScriptのプラグイン。つまりJavaScriptによって書かれた便利な機能をjQueryの簡単な文法を使うことで気軽に利用出来るものです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e「jQueryの文法」とは一体何なのでしょうか。\u003cbr\u003e\u003cbr\u003e\n確かに独特な記法をよく使用しますが、それらは全て\u003ca href=\"https://ja.wikipedia.org/wiki/JavaScript\" rel=\"nofollow noopener\" target=\"_blank\"\u003eJavaScript\u003c/a\u003eによって作られたものであり、原理上は全てJavaScriptで記述することができます。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n視覚的に組み込まれているのがJavaScriptの特徴\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e「視覚的」とは、一体どういった意味なのでしょう？\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nJavaScriptは、C言語よりも歴史が古いLISP言語の影響を強く受けた関数型言語で\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e確かに\u003ca href=\"http://qiita.com/takeharu/items/4975031faf6f7baf077a\" id=\"reference-511692bcf0a5de5db674\"\u003eクロージャ\u003c/a\u003eの機能は存在しますが、実際には\u003ca href=\"http://qiita.com/takeharu/items/809114f943208aaf55b3\" id=\"reference-a7998ec8a227b2241485\"\u003eプロトタイプベースのオブジェクト指向言語\u003c/a\u003eとして使用されることが多いのではないでしょうか。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nV8やnodeJSを使えばサーバーサイドのプログラミングも可能です。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eV8では出来ないと思われます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ruby\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ruby\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRuby\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nRubyの特徴として、自由な点があります。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eもう少し詳しく書いてくれないとツッコむ部分がないではありませんか(暗黒微笑)\u003c/strong\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n最近のはJITが入ってVM化して速くなったそうですが\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eRubyのJIT化はRuby 3.xに向けた実験段階だったかと。\u003cbr\u003e\u003cbr\u003e\n(参考→\u003ca href=\"http://hrnabi.com/2015/05/12/7035/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eRuby 3.0の未来へ―、言語設計者のまつもと氏が示す3つの方向性とRuby哲学\u003c/a\u003e)\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nDHHというオランダ人を\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eDHH(\u003ca href=\"https://ja.wikipedia.org/wiki/%E3%83%87%E3%82%A4%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%83%8F%E3%82%A4%E3%83%8D%E3%83%9E%E3%82%A4%E3%83%A4%E3%83%BC%E3%83%BB%E3%83%8F%E3%83%B3%E3%82%BD%E3%83%B3\" rel=\"nofollow noopener\" target=\"_blank\"\u003eデイヴィッド・ハイネマイヤー・ハンソン\u003c/a\u003e)さんはデンマーク人ではないかと。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"php\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#php\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePHP\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://d.hatena.ne.jp/shi3z/20160701/1467330446\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nPHPはApacheと一体化してるので\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eこれについても、次のコメントを貼るだけに留めます。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://b.hatena.ne.jp/entry/292721861/comment/living\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://b.hatena.ne.jp/entry/292721861/comment/living\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n「PHPはApacheと一体化してる」mod_phpも使ってるけど、パフォーマンスを求める場合はPHP-FPM（要はFastCGI）の方が多いと思う\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"python\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#python\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePython\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nAI(人工知能)にプログラミング言語を組み込むことで\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eプログラミング言語で機械学習を実装するのでは……？\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nその際に必要な言語がPythonです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e機械学習に使用されるライブラリを記述する言語としては、\u003cstrong\u003e主にC++が使われます\u003c/strong\u003e。\u003cbr\u003e\u003cbr\u003e\nその理由としては、\u003cstrong\u003e莫大な計算量を\u003c/strong\u003e(特に学習に)\u003cstrong\u003e要するので速いほうがいい\u003c/strong\u003eといったことがあります。\u003cbr\u003e\u003cbr\u003e\nまた、機械学習を利用するコードについては様々な言語が利用可能です。\u003cbr\u003e\u003cbr\u003e\n例えば、ディープラーニングによる画像処理で有名な\u003ca href=\"http://kourindrug.sakura.ne.jp/waifu2x.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003ewaifu2x\u003c/a\u003eは、PythonだけでなくC++・HSP・JavaScript・Rustなど様々な言語で実装されています。  \u003c/p\u003e\n\n\u003cp\u003eもっとも、Pythonには豊富なライブラリがあることから、(機械学習を含めた)数値計算や画像処理などを簡単に記述することができます。\u003cbr\u003e\u003cbr\u003e\nしたがって、機械学習に触れる際にPythonも学ぶのは良い選択肢かと。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"swift\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#swift\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSwift\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpg.hatenablog.com/entry/2016/06/30/193755\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nSwiftは、Appleが開発したiPhoneアプリを開発する際に必要な言語です。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"http://www.xlsoft.com/jp/products/xamarin/platform.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eXamarin.iOS\u003c/a\u003eがアップを始めました。\u003c/strong\u003e\u003c/p\u003e\n","body":"# Re:主要なプログラミング言語n種を解説\n## はじめに\n\nこの記事は、「主要なプログラミング言語n種を解説」といった類の記事を斬るためのものです。対象とする記事はこちら。\n\n- [主要なプログラミング言語 5種類を徹底解説! - Programming share](http://cpg.hatenablog.com/entry/2016/06/30/193755)\n- [主要なプログラミング言語8種をざっくり解説 - shi3zの長文日記](http://d.hatena.ne.jp/shi3z/20160701/1467330446)\n- [2015年の人気プログラム言語６つを徹底比較！気になる年収や求人、学習難易度まで｜トイロハ](https://toiroha.jp/article/detail/32380)\n\n執筆に協力していただいた @YSRKEN 氏に感謝。なお執筆は\n\nhttps://github.com/yumetodo/re_describe_popular_programming_language/blob/master/article.md\n\nで行なっています\n\n## C言語\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003eC言語はおそらくプログラミングの歴史上一番古く、プログラミングの基盤と言ってもいい言語です。  \n\u003e**(編者注：現在は削除された文面です)**\n\nこれについては、次のコメントを貼るだけに留めます。\n\n\u003ehttp://b.hatena.ne.jp/entry/292646265/comment/ockeghem  \n\u003eわかる。COBOL、FORTRAN、PL/I、LISP、ALGOL等は有史以前の言語ということですね\n\n---\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003eなぜC言語でOSを作る必要性があるかというと、C言語は数あるプログラミング言語の中でも最速の処理速度を誇るからです。\n\nOSをプログラミングする際には、ハードウェアに直接関わる処理を記述する必要があります。  \n(参考→[C++でできる！OS自作入門](http://www.slideshare.net/uchan_nos/cppos))  \nそのため、当初は機械語命令と一対一対応する[アセンブリ言語](https://ja.wikipedia.org/wiki/%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%AA%E8%A8%80%E8%AA%9E)によってOSが記述されていました。  \nしかし、機械語はそれを動かすCPUによって仕様が異なるため、他のハードに移植する際に酷く苦労することになりました。  \nそこで、ハードウェアに関わるような処理を記述できる上、より移植性が高いコードを書くことができる[C言語](https://ja.wikipedia.org/wiki/C%E8%A8%80%E8%AA%9E)が誕生しました。  \nしたがって、正しい順番としては**「C言語→OS」ではなく「OS→C言語」**ということになります。\n\nちなみに、速度面で言えば理論上は機械語＝アセンブラが最速……ですが、  \n実際にはコンパイラや使用するフレームワークの性能などにより**幾らでも変化します**。  \n(参考→[プログラミング言語の速度とアプリケーションの速度がいかに関係ないかがわかるグラフ](http://d.hatena.ne.jp/kwatch/20100430/1272585083))\n\n---\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003e学習する際は、歴史が古い分、図書館にC言語の学習書が豊富に並んでますので、学習素材には困りません。\n\nC言語は、開発人口の多さと規格内の未定義・処理系依存部分が多いことなどから、**学習書に間違いが書かれている**ことが珍しくありません。  \nそのため、冗談抜きで**「迷ったら規格書を読め」**と勧められることがままあります。  \n\n---\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003eまあボンクラがアセンブリ言語を書くよりはCで書くほうがよほどマシでしょうが、エキスパートがアセンブリ言語で書く場合はCより速くなることはママあります。コンパイラよりも最適なコードが書けないというのは、単にプログラマの能力が足りないんです。\n\n近年のコンパイラは優秀ですので、手動でガリガリとアセンブリを書くよりずっと高速になることが多いです。  \nそもそも、プログラミングの原則として**「[最適化するな](http://d.hatena.ne.jp/foursue/20060629/p1)」**といのがあるぐらいですしね……。\n\n\u003e現在のアセンブリの利用例 | 本の虫  \n\u003ehttps://cpplover.blogspot.jp/2013/04/blog-post.html  \n\u003e結論として、ほとんどのパッケージで、ARMのための移植作業は必要ない。Ubuntuのレポジトリで言えば、アセンブリを利用しているパッケージは、全体のたったの6%だからだ。アセンブリを利用している多くのパッケージも、そのまま動く。移植性の高い高級なコードでの実装とパフォーマンス目的のアセンブリ実装を切り替えるようになっていたりするからだ。また、ほとんどのアセンブリ利用は、それほど価値がない。本来アセンブリで書かなくてもいいような処理までアセンブリで書いていたりするからだ。\n\n\u003eC++標準化委員会の文書 2015-04-pre-Lenexaのレビュー: N4450-N4459 | 本の虫  \n\u003ehttps://cpplover.blogspot.jp/2015/06/c-2015-04-pre-lenexa-n4450-n4459.html  \n\u003e開発者へ：アセンブリを捨てろ。そんなに最適化できないし、そもそもコードを書いている時点で存在するアーキテクチャにしか対応できない。コンパイラーのパフォーマンスが期待通りでないのならばバグ報告を投げろ。標準化委員会に同期と並列実行を実現できる方法を提案しろ。ThreadSanitizerのようなツールをｔ受かってコード中の競合を発見しろ。\n\n\u003eコンパイラーを負かす | 本の虫  \n\u003ehttps://cpplover.blogspot.jp/2015/03/blog-post_30.html  \n\u003ePythonや、その他の動的型付け言語は、十分に速いかもしれないが、速いことは常にいいことだ。Cのような低級言語で速度を稼げるかもしれないし、アセンブリを手書きすることでもう少し上を行けるかもしれないが、コンパイラーを信頼したほうがいい。しかし、もし大量の12bitの数値を限りなく高速に足し合わせたいのであれば、まあ、これが答えだ\n\n---\n\n\u003ehttps://toiroha.jp/article/detail/32380  \n\u003eオブジェクト指向言語ではないので、最近の主流の言語から比べると少し時代遅れの感があります。（C++はC言語にオブジェクト指向を拡張したものです）\n\nC++はC言語にオブジェクト指向を拡張したもの**ではありません**し、C言語でもオブジェクト指向はできます。  \nC++について言えば、もちろんオブジェクト指向もできますが、それ以外にも[template](http://qiita.com/narumi_/items/f656678c78d50c40bc1c)など様々な機能が拡張されています。  \nまた、C言語もC言語で**独自の発展**を遂げ、またコーディングスタイルは全く異なるものになりましたので、**C++の下位互換というのは誤った認識**かと思われます。\n\n## C++\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003eCとほとんどの部分で共通しており、C++はC言語の上位互換です。\n\n前述したように、C++は**断じて**C言語の上位互換ではありません。\n\n---\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003e例えばC言語ではコメントは/*～*/しか使えませんが、C++では//が使えます。\n\nC言語でも、C99から``//``コメントが使えるようになりました。\n\n\u003ehttp://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf  \n\u003e§6.4.9 Comments  \n\u003e2 Except within a character constant, a string literal, or a comment, the characters ``//``\nintroduce a comment that includes all multibyte characters up to, but not including, the next new-line character. The contents of such a comment are examined only to identify multibyte characters and to find the terminating new-line character.\n\n## Java\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003eJavaはAndroidアプリを開発する際に必要な言語です。\n\n**[Android NDK](http://qiita.com/alingogo/items/203477c9da373ab7eacb)がアップを始めました。**  \n(※NDK＝Native Development Kitとは、C++などでネイティブコードを書くためのキットのこと)  \nまた、AndroidのJavaは**正式なJavaではない**、といった話が以前飛び交いましたね……。  \n(参考→[Javaと偽Javaの話。](http://quesera2.hatenablog.jp/entry/2016/05/28/180834))\n\n昨今では、[Xamarin.Android](http://www.xlsoft.com/jp/products/xamarin/platform.html)によって[C#](https://ja.wikipedia.org/wiki/C_Sharp)でもAndroidアプリを開発できるようになりました。  \n\n---\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003eC言語に匹敵する処理速度を誇り\n\n[Java](https://ja.wikipedia.org/wiki/Java)は元々、プラットフォームに依存せず扱いやすい言語を目指して開発されました。[Javaアプレット](https://ja.wikipedia.org/wiki/Java%E3%82%A2%E3%83%97%E3%83%AC%E3%83%83%E3%83%88)から始まったその発展は、クライアントやサーバー、パソコンや組込み機器など多岐に渡ります。  \n[Android OS](https://ja.wikipedia.org/wiki/Android)用のソフト開発に使われるのは主にC/C++かJavaですが、前者のアプリはネイティブで実行され、後者は[Dalvik仮想マシン](https://ja.wikipedia.org/wiki/Dalvik%E4%BB%AE%E6%83%B3%E3%83%9E%E3%82%B7%E3%83%B3)(Android 4.4以前)か[ART仮想マシン](https://ja.wikipedia.org/wiki/Android_Runtime)(Android 4.4以降)で実行されます。  \nなお、「ソースコードから生成したバイトコードを仮想マシン(VM)上で動かす」性質上、速度は**比較的遅い方**です。\n\n---\n\n\u003ehttps://toiroha.jp/article/detail/32380  \n\u003eJavaは成熟した傾向があり、最近の主流の言語から置いていかれた傾向があります。そのため、あまり新しい機能が追加されることが少ないです。\n\n[Java 7](http://aoking.hatenablog.jp/entry/20110808/1312769605)・[Java 8](http://qiita.com/oohira/items/9c13f92815266cc5112c)が登場しましたので、まだ**進化の余地を残している**かと。\n\n## JavaScript\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003eJavaScriptはWebページを作成する際に必要な言語です。\n\n確かによく使われていますが、必須というほどでもありません。どちらかと言えば[HTML](https://ja.wikipedia.org/wiki/HyperText_Markup_Language)に当てはまる言葉でしょう。\n\n---\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003e例えば、jQueryはJavaScriptのプラグイン。つまりJavaScriptによって書かれた便利な機能をjQueryの簡単な文法を使うことで気軽に利用出来るものです。\n\n「jQueryの文法」とは一体何なのでしょうか。  \n確かに独特な記法をよく使用しますが、それらは全て[JavaScript](https://ja.wikipedia.org/wiki/JavaScript)によって作られたものであり、原理上は全てJavaScriptで記述することができます。\n\n---\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003e視覚的に組み込まれているのがJavaScriptの特徴\n\n「視覚的」とは、一体どういった意味なのでしょう？\n\n---\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003eJavaScriptは、C言語よりも歴史が古いLISP言語の影響を強く受けた関数型言語で\n\n確かに[クロージャ](http://qiita.com/takeharu/items/4975031faf6f7baf077a)の機能は存在しますが、実際には[プロトタイプベースのオブジェクト指向言語](http://qiita.com/takeharu/items/809114f943208aaf55b3)として使用されることが多いのではないでしょうか。\n\n---\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003eV8やnodeJSを使えばサーバーサイドのプログラミングも可能です。\n\nV8では出来ないと思われます。\n\n## Ruby\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003e Rubyの特徴として、自由な点があります。\n\n**もう少し詳しく書いてくれないとツッコむ部分がないではありませんか(暗黒微笑)**\n\n---\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003e最近のはJITが入ってVM化して速くなったそうですが\n\nRubyのJIT化はRuby 3.xに向けた実験段階だったかと。  \n(参考→[Ruby 3.0の未来へ―、言語設計者のまつもと氏が示す3つの方向性とRuby哲学](http://hrnabi.com/2015/05/12/7035/))\n\n---\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003eDHHというオランダ人を\n\nDHH([デイヴィッド・ハイネマイヤー・ハンソン](https://ja.wikipedia.org/wiki/%E3%83%87%E3%82%A4%E3%83%B4%E3%82%A3%E3%83%83%E3%83%89%E3%83%BB%E3%83%8F%E3%82%A4%E3%83%8D%E3%83%9E%E3%82%A4%E3%83%A4%E3%83%BC%E3%83%BB%E3%83%8F%E3%83%B3%E3%82%BD%E3%83%B3))さんはデンマーク人ではないかと。\n\n## PHP\n\n\u003ehttp://d.hatena.ne.jp/shi3z/20160701/1467330446  \n\u003ePHPはApacheと一体化してるので\n\nこれについても、次のコメントを貼るだけに留めます。\n\n\u003ehttp://b.hatena.ne.jp/entry/292721861/comment/living  \n\u003e「PHPはApacheと一体化してる」mod_phpも使ってるけど、パフォーマンスを求める場合はPHP-FPM（要はFastCGI）の方が多いと思う\n\n## Python\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003e AI(人工知能)にプログラミング言語を組み込むことで\n\nプログラミング言語で機械学習を実装するのでは……？\n\n---\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003eその際に必要な言語がPythonです。\n\n機械学習に使用されるライブラリを記述する言語としては、**主にC++が使われます**。  \nその理由としては、**莫大な計算量を**(特に学習に)**要するので速いほうがいい**といったことがあります。  \nまた、機械学習を利用するコードについては様々な言語が利用可能です。  \n例えば、ディープラーニングによる画像処理で有名な[waifu2x](http://kourindrug.sakura.ne.jp/waifu2x.html)は、PythonだけでなくC++・HSP・JavaScript・Rustなど様々な言語で実装されています。  \n\nもっとも、Pythonには豊富なライブラリがあることから、(機械学習を含めた)数値計算や画像処理などを簡単に記述することができます。  \nしたがって、機械学習に触れる際にPythonも学ぶのは良い選択肢かと。\n\n## Swift\n\n\u003ehttp://cpg.hatenablog.com/entry/2016/06/30/193755  \n\u003e Swiftは、Appleが開発したiPhoneアプリを開発する際に必要な言語です。\n\n**[Xamarin.iOS](http://www.xlsoft.com/jp/products/xamarin/platform.html)がアップを始めました。**\n","coediting":false,"comments_count":1,"created_at":"2016-07-02T02:15:54+09:00","group":null,"id":"a242e13c1a4ccf63296f","likes_count":17,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"Ruby","versions":[]},{"name":"Python","versions":[]},{"name":"C","versions":[]},{"name":"新人プログラマ応援","versions":[]}],"title":"Re:主要なプログラミング言語n種を解説","updated_at":"2016-07-02T02:27:49+09:00","url":"https://qiita.com/yumetodo/items/a242e13c1a4ccf63296f","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003eGoogle の写真管理システムとして、これまでPicasa Web Albamsがありましたが、Google Photosに統合されることになりました。\u003cbr\u003e\n\u003ca href=\"http://googlephotos.blogspot.jp/?hl=ja\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://googlephotos.blogspot.jp/?hl=ja\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eというわけで使っていこうと思います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まず-google-photosって何よ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A-google-photos%E3%81%A3%E3%81%A6%E4%BD%95%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまず Google Photosって何よ？\u003c/h1\u003e\n\n\u003cp\u003eWeb上で写真を管理、整理、共有しようというGoogleのサービスです。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://photos.google.com/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://photos.google.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"google-photosの思想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#google-photos%E3%81%AE%E6%80%9D%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGoogle Photosの思想\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003eGoogle Photosはフォルダー管理型ではありません\u003c/strong\u003e。Gmailでお馴染みのラベル管理型です。\u003c/p\u003e\n\n\u003cp\u003eGmailでいうラベルは、Google Photosでは\u003cstrong\u003eアルバム\u003c/strong\u003eに相当します。\u003c/p\u003e\n\n\u003cp\u003eつまりどういうことかというと、\u003cstrong\u003e一つの写真が複数のアルバムに存在しえます。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eアルバムが一見フォルダーみたいに見えるので混乱しないように。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"1つの写真をアップロードするには\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1%E3%81%A4%E3%81%AE%E5%86%99%E7%9C%9F%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1つの写真をアップロードするには\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F124e7fde-2f32-86a1-bc86-4a2d8019cf62.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=90baee13107369fc8e619af2e1ec6d1d\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F124e7fde-2f32-86a1-bc86-4a2d8019cf62.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=90baee13107369fc8e619af2e1ec6d1d\" alt=\"1.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/124e7fde-2f32-86a1-bc86-4a2d8019cf62.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F124e7fde-2f32-86a1-bc86-4a2d8019cf62.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=271ed8265625ef0d235f791f93efb620 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F08795fe2-1b80-ec01-9ad8-5bfe6e0a18d3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=4ca2d09dfb80a4e0f9c82824b88c1a1d\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F08795fe2-1b80-ec01-9ad8-5bfe6e0a18d3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=4ca2d09dfb80a4e0f9c82824b88c1a1d\" alt=\"18.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/08795fe2-1b80-ec01-9ad8-5bfe6e0a18d3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F08795fe2-1b80-ec01-9ad8-5bfe6e0a18d3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f3935e0fca0390b5b3bc15d16fac9de4 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e図のように写真をアップロードを押す\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8af395be-5c15-7982-e8e1-b98f5f921617.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=4568b4f1593e6ab02ccad9b9ed3133ec\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8af395be-5c15-7982-e8e1-b98f5f921617.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=4568b4f1593e6ab02ccad9b9ed3133ec\" alt=\"19.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/8af395be-5c15-7982-e8e1-b98f5f921617.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8af395be-5c15-7982-e8e1-b98f5f921617.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=67a21afa8559fafa05cb7156d2102692 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e写真を\u003cstrong\u003e一つ\u003c/strong\u003e選択し、「開く」を押す\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fb868fb99-fc13-3b88-012f-6266dece676d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=21ea0ba8f594d34f29448bd7d650e972\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fb868fb99-fc13-3b88-012f-6266dece676d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=21ea0ba8f594d34f29448bd7d650e972\" alt=\"21.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/b868fb99-fc13-3b88-012f-6266dece676d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fb868fb99-fc13-3b88-012f-6266dece676d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=8c34e67086a67a91963c2bff424ad13c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eアップロードが始まり\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4b45345a-de8b-fefb-4f47-7065325f66b0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7b7d8c48efc5d70cc6bfc80fba13088c\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4b45345a-de8b-fefb-4f47-7065325f66b0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7b7d8c48efc5d70cc6bfc80fba13088c\" alt=\"22.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/4b45345a-de8b-fefb-4f47-7065325f66b0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4b45345a-de8b-fefb-4f47-7065325f66b0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=57e963aedefe71c1c94d5ce2a0c6338c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e完了するので、「アルバムに追加」をクリックする\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe029719c-074c-5430-a84a-9e32e832f8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=02128dc2e51dd5e5989e3b916633f243\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe029719c-074c-5430-a84a-9e32e832f8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=02128dc2e51dd5e5989e3b916633f243\" alt=\"16.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/e029719c-074c-5430-a84a-9e32e832f8fc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe029719c-074c-5430-a84a-9e32e832f8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=13d98668f900500c083d91558c0c8175 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eアルバムを選択する\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"複数の写真をアップロードするには\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A4%87%E6%95%B0%E3%81%AE%E5%86%99%E7%9C%9F%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e複数の写真をアップロードするには\u003c/h1\u003e\n\n\u003cp\u003e先のやり方では複数の写真を一度に上げられません。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F04b7cc9c-9eeb-c5b2-c16a-bac2547d77fb.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cd996aa8704fe85a12988c1452f39b95\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F04b7cc9c-9eeb-c5b2-c16a-bac2547d77fb.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cd996aa8704fe85a12988c1452f39b95\" alt=\"20.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/04b7cc9c-9eeb-c5b2-c16a-bac2547d77fb.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F04b7cc9c-9eeb-c5b2-c16a-bac2547d77fb.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=481e31959dc14d404cbca8c5345fa2d8 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nD\u0026amp;Dできるみたいな表示が出ますが、私の環境(Windwows7 Firefox)ではできませんでした。そこで\u003cstrong\u003egoogle photo backup\u003c/strong\u003eを利用します。\u003c/p\u003e\n\n\u003cp\u003eまず事前に、アップロードする写真・動画だけのフォルダを作ります。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2f1431c7-41a2-f44f-4320-36bcb896307e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=fb2af7ccf37012168e9a635dbddf5b7a\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2f1431c7-41a2-f44f-4320-36bcb896307e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=fb2af7ccf37012168e9a635dbddf5b7a\" alt=\"8.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/2f1431c7-41a2-f44f-4320-36bcb896307e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2f1431c7-41a2-f44f-4320-36bcb896307e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=92a53f905c8a4b985c2a1f037f56026f 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eさて、google photo backupをインストールしていきましょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F217f17e7-520e-a410-b988-f04727a30c1a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3ffb7a5e1a331a6fb8a3dbf0d483c493\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F217f17e7-520e-a410-b988-f04727a30c1a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3ffb7a5e1a331a6fb8a3dbf0d483c493\" alt=\"3.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/217f17e7-520e-a410-b988-f04727a30c1a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F217f17e7-520e-a410-b988-f04727a30c1a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=cbeaf5e611db769badcbac227e9859e9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7b98b184-7e18-04ea-ae1a-4dbd351944e7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7fd53eae54320adf74bdf6496736e60c\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7b98b184-7e18-04ea-ae1a-4dbd351944e7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7fd53eae54320adf74bdf6496736e60c\" alt=\"4.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/7b98b184-7e18-04ea-ae1a-4dbd351944e7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7b98b184-7e18-04ea-ae1a-4dbd351944e7.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=550f341e3eddc62786ba281c024f9874 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nDLしたら実行します。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F90183407-2351-87ba-f4e3-6640716b2b4f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=56348990e60a6977fa8827ca9869beb0\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F90183407-2351-87ba-f4e3-6640716b2b4f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=56348990e60a6977fa8827ca9869beb0\" alt=\"9.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/90183407-2351-87ba-f4e3-6640716b2b4f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F90183407-2351-87ba-f4e3-6640716b2b4f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=cd87c9529d52fb530c8a6eb131e5f55f 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F319f2a4f-9a5d-15a9-1279-fe91ef9dff36.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=02cbbebcc4d2b03c61575eccc1cc90ea\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F319f2a4f-9a5d-15a9-1279-fe91ef9dff36.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=02cbbebcc4d2b03c61575eccc1cc90ea\" alt=\"10.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/319f2a4f-9a5d-15a9-1279-fe91ef9dff36.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F319f2a4f-9a5d-15a9-1279-fe91ef9dff36.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=7660d5c4a0255cdc3b609c753e6b8322 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe985ecbe-6bdc-f162-2903-2fa0e782a037.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=16b05ac0243396b3ed5b8db1c6707f9e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe985ecbe-6bdc-f162-2903-2fa0e782a037.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=16b05ac0243396b3ed5b8db1c6707f9e\" alt=\"5.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/e985ecbe-6bdc-f162-2903-2fa0e782a037.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe985ecbe-6bdc-f162-2903-2fa0e782a037.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=4b61a6da83786b1d598b918a9566c63d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F917af534-77ab-df62-bcaa-99001db090d1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=8b600528f874c1db3fac45c6edd03ac7\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F917af534-77ab-df62-bcaa-99001db090d1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=8b600528f874c1db3fac45c6edd03ac7\" alt=\"6.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/917af534-77ab-df62-bcaa-99001db090d1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F917af534-77ab-df62-bcaa-99001db090d1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=851d501deccc1237aeca63556e854654 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nログインして\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F500b86cb-ab24-5e23-ebb6-a8f73b9c73d3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=da5e8ee82f22e481df92504bf182381e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F500b86cb-ab24-5e23-ebb6-a8f73b9c73d3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=da5e8ee82f22e481df92504bf182381e\" alt=\"12.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/500b86cb-ab24-5e23-ebb6-a8f73b9c73d3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F500b86cb-ab24-5e23-ebb6-a8f73b9c73d3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3121215d3e8760ea84b035ce939e641f 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n写真サイズは元のサイズになっていることを確認してください。\u003cbr\u003e\nフォルダを追加から先に作ったフォルダを選択します\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7519b680-1c23-8df4-d032-cf1792485506.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9426a326914a340c86e004c439fb1e2c\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7519b680-1c23-8df4-d032-cf1792485506.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9426a326914a340c86e004c439fb1e2c\" alt=\"11.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/7519b680-1c23-8df4-d032-cf1792485506.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7519b680-1c23-8df4-d032-cf1792485506.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f684bb3c9a88b3e0622f382058824501 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nそうしたらバックアップの開始をクリックします。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fcc3dfd6a-2467-fbfd-c15e-99bc2b58c53b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=df3ef6b5796c97609de4a05997bd32c6\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fcc3dfd6a-2467-fbfd-c15e-99bc2b58c53b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=df3ef6b5796c97609de4a05997bd32c6\" alt=\"13.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/cc3dfd6a-2467-fbfd-c15e-99bc2b58c53b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fcc3dfd6a-2467-fbfd-c15e-99bc2b58c53b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=0a4e664585797fa428edfe356303f49e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nしばらくするとアップロードが終わるので、写真を選択し\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F124fa7e7-1c66-e076-a2a8-c3a1e019448d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=dc0954804f8284bed6fda12b4b1dd4df\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F124fa7e7-1c66-e076-a2a8-c3a1e019448d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=dc0954804f8284bed6fda12b4b1dd4df\" alt=\"14.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/124fa7e7-1c66-e076-a2a8-c3a1e019448d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F124fa7e7-1c66-e076-a2a8-c3a1e019448d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=6fc1e5b6b5c596297f1d38869ecfd1dd 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F291e175b-322a-00cc-1f39-22b2c56bcd31.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ea816b26eb75d8576629170a056cf4f5\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F291e175b-322a-00cc-1f39-22b2c56bcd31.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ea816b26eb75d8576629170a056cf4f5\" alt=\"15.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/291e175b-322a-00cc-1f39-22b2c56bcd31.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F291e175b-322a-00cc-1f39-22b2c56bcd31.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=64b1629552ce207d4d8b71aea97b4e79 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nアルバムに追加します。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe029719c-074c-5430-a84a-9e32e832f8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=02128dc2e51dd5e5989e3b916633f243\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe029719c-074c-5430-a84a-9e32e832f8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=02128dc2e51dd5e5989e3b916633f243\" alt=\"16.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/e029719c-074c-5430-a84a-9e32e832f8fc.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fe029719c-074c-5430-a84a-9e32e832f8fc.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=13d98668f900500c083d91558c0c8175 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"Google の写真管理システムとして、これまでPicasa Web Albamsがありましたが、Google Photosに統合されることになりました。\nhttp://googlephotos.blogspot.jp/?hl=ja\n\nというわけで使っていこうと思います。\n\n# まず Google Photosって何よ？\n\nWeb上で写真を管理、整理、共有しようというGoogleのサービスです。\n\nhttps://photos.google.com/\n\n\n# Google Photosの思想\n\n**Google Photosはフォルダー管理型ではありません**。Gmailでお馴染みのラベル管理型です。\n\nGmailでいうラベルは、Google Photosでは**アルバム**に相当します。\n\nつまりどういうことかというと、**一つの写真が複数のアルバムに存在しえます。**\n\nアルバムが一見フォルダーみたいに見えるので混乱しないように。\n\n# 1つの写真をアップロードするには\n\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/94177/124e7fde-2f32-86a1-bc86-4a2d8019cf62.png)\n\n![18.png](https://qiita-image-store.s3.amazonaws.com/0/94177/08795fe2-1b80-ec01-9ad8-5bfe6e0a18d3.png)\n\n図のように写真をアップロードを押す\n\n![19.png](https://qiita-image-store.s3.amazonaws.com/0/94177/8af395be-5c15-7982-e8e1-b98f5f921617.png)\n\n写真を**一つ**選択し、「開く」を押す\n\n![21.png](https://qiita-image-store.s3.amazonaws.com/0/94177/b868fb99-fc13-3b88-012f-6266dece676d.png)\n\nアップロードが始まり\n\n![22.png](https://qiita-image-store.s3.amazonaws.com/0/94177/4b45345a-de8b-fefb-4f47-7065325f66b0.png)\n\n完了するので、「アルバムに追加」をクリックする\n![16.png](https://qiita-image-store.s3.amazonaws.com/0/94177/e029719c-074c-5430-a84a-9e32e832f8fc.png)\n\nアルバムを選択する\n\n# 複数の写真をアップロードするには\n\n先のやり方では複数の写真を一度に上げられません。\n![20.png](https://qiita-image-store.s3.amazonaws.com/0/94177/04b7cc9c-9eeb-c5b2-c16a-bac2547d77fb.png)\nD\u0026Dできるみたいな表示が出ますが、私の環境(Windwows7 Firefox)ではできませんでした。そこで**google photo backup**を利用します。\n\nまず事前に、アップロードする写真・動画だけのフォルダを作ります。\n![8.png](https://qiita-image-store.s3.amazonaws.com/0/94177/2f1431c7-41a2-f44f-4320-36bcb896307e.png)\n\nさて、google photo backupをインストールしていきましょう。\n\n![3.png](https://qiita-image-store.s3.amazonaws.com/0/94177/217f17e7-520e-a410-b988-f04727a30c1a.png)\n![4.png](https://qiita-image-store.s3.amazonaws.com/0/94177/7b98b184-7e18-04ea-ae1a-4dbd351944e7.png)\nDLしたら実行します。\n![9.png](https://qiita-image-store.s3.amazonaws.com/0/94177/90183407-2351-87ba-f4e3-6640716b2b4f.png)\n![10.png](https://qiita-image-store.s3.amazonaws.com/0/94177/319f2a4f-9a5d-15a9-1279-fe91ef9dff36.png)\n![5.png](https://qiita-image-store.s3.amazonaws.com/0/94177/e985ecbe-6bdc-f162-2903-2fa0e782a037.png)\n![6.png](https://qiita-image-store.s3.amazonaws.com/0/94177/917af534-77ab-df62-bcaa-99001db090d1.png)\nログインして\n![12.png](https://qiita-image-store.s3.amazonaws.com/0/94177/500b86cb-ab24-5e23-ebb6-a8f73b9c73d3.png)\n写真サイズは元のサイズになっていることを確認してください。\nフォルダを追加から先に作ったフォルダを選択します\n![11.png](https://qiita-image-store.s3.amazonaws.com/0/94177/7519b680-1c23-8df4-d032-cf1792485506.png)\nそうしたらバックアップの開始をクリックします。\n![13.png](https://qiita-image-store.s3.amazonaws.com/0/94177/cc3dfd6a-2467-fbfd-c15e-99bc2b58c53b.png)\nしばらくするとアップロードが終わるので、写真を選択し\n![14.png](https://qiita-image-store.s3.amazonaws.com/0/94177/124fa7e7-1c66-e076-a2a8-c3a1e019448d.png)\n![15.png](https://qiita-image-store.s3.amazonaws.com/0/94177/291e175b-322a-00cc-1f39-22b2c56bcd31.png)\nアルバムに追加します。\n![16.png](https://qiita-image-store.s3.amazonaws.com/0/94177/e029719c-074c-5430-a84a-9e32e832f8fc.png)\n","coediting":false,"comments_count":0,"created_at":"2016-06-14T04:02:55+09:00","group":null,"id":"eb3b1030347a3af49ddb","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"非エンジニア","versions":[]},{"name":"GooglePhotos","versions":[]}],"title":"非プログラマーのためのGoogle Photos入門","updated_at":"2016-11-28T02:25:10+09:00","url":"https://qiita.com/yumetodo/items/eb3b1030347a3af49ddb","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/takeokunn\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@takeokunn\u003c/a\u003e そういや私の昨日のツイートたどってみ、C++初心者(boost.asioが使えないとは言っていない)の人とQiitaでやりとりしてたから\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/727309368052436992\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月3日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e だからC++erの初心者は初心者じゃないんだよ！！！！！！！！！！！！！\u003cbr\u003e\u003cbr\u003eだからC++er嫌いなんだよ！！！！！！！！\u003c/p\u003e— たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/727309999102263296\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月3日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/takeokunn\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@takeokunn\u003c/a\u003e 当人も「そろそろ中級者かな」\u003cbr\u003eと言ってた\u003cbr\u003e\u003cbr\u003e因みに\u003cbr\u003e\u003cbr\u003eC初心者 \u0026lt; C++初学者 \u0026lt; C++入門者 \u0026lt; C++初心者 \u0026lt; C++規格書リーディング初心者 \u0026lt; C++中級者 \u0026lt; C++規格書リーディング中級者 \u0026lt; C++上級者 \u0026lt; C++規格書クラッカー\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/727311051117629442\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月3日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eこんなTwitterでのやり取りから生まれた。C++erで「初心者です」って言う人多いけど全然初心者じゃない人かなりいるよね、ということで作った。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"レベル関係\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AC%E3%83%99%E3%83%AB%E9%96%A2%E4%BF%82\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eレベル関係\u003c/h1\u003e\n\n\u003cp\u003eC初心者 \u0026lt; C++初学者 \u0026lt; C++入門者 \u0026lt; C++初心者 \u0026lt; C++規格書リーディング初心者 \u0026lt; C++中級者 \u0026lt; C++規格書リーディング中級者 \u0026lt; C++上級者 \u0026lt; C++規格書クラッカー\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"それぞれ見ていく\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%82%8C%E3%81%9E%E3%82%8C%E8%A6%8B%E3%81%A6%E3%81%84%E3%81%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eそれぞれ見ていく\u003c/h1\u003e\n\n\u003cp\u003eあくまで上限ラインを書いているだけだからstdioがなんの略か知らなくてもC初心者よりしたというわけではない。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c初心者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%BF%83%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC初心者\u003c/h2\u003e\n\n\u003cp\u003e「なんか変数とかいうのがあって型とかいうのがあるらしいな。puts関数やprintf関数で標準出力に出力、fgetsで標準入力から入力を受けられるらしい」 という程度の状態、およびそれ以下である。stdioがStandard Input/Outputの略だと知っていることもある。ポインターとか配列は「なにそれ美味しいの」という状態\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari na world!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c初学者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%AD%A6%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++初学者\u003c/h2\u003e\n\n\u003cp\u003eC++初学者とは、iostreamヘッダーに標準入出力のクラス、関数群があることを知っていて、関数のオーバーロードを使ったことがある程度の状態である。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"void foo(int) called( n = \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\").\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"void foo(double) called( n = \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\").\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari na world!\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e3.14\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c入門者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%85%A5%E9%96%80%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++入門者\u003c/h2\u003e\n\n\u003cp\u003eC++入門者とはclassの存在を知っていて書いたことがあり、また\u003ccode\u003estd::string\u003c/code\u003eや\u003ccode\u003estd::vector\u003c/code\u003eや\u003ccode\u003estd::array\u003c/code\u003eを操れ、algorithmヘッダーを使ったことがあり、range-based forを使える程度の状態である。なんとなくtemplateを使ってみたことがある状態を含む\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;array\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;numeric\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003evec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e','\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eiota\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e{{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e}};\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c初心者-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%BF%83%E8%80%85-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++初心者\u003c/h2\u003e\n\n\u003cp\u003eC++初心者とは作りたいものを不格好でも作れ(なんでもいいんです、少しでも自分で動かしてみたいと思うものが作れれば)、また\u003ca href=\"https://cpprefjp.github.io/\" rel=\"nofollow noopener\" target=\"_blank\"\u003ecpprefjp\u003c/a\u003eなどを使い分からないことを調べることができ、コンパイル時定数の存在を知っていて、rvalue reference、template特殊化、簡単なSFINAEを使ったConceptのようなコードが理解でき書ける程度の状態である\u003c/p\u003e\n\n\u003cp\u003e分類したけどC++初心者の幅はやっぱり大きい。\u003c/p\u003e\n\n\u003cp\u003eなおNew Game!のねねっちはここ。NeneEngineというエンジンを自作しているたぁ驚きだね。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eねねっち、プログラマ志望か。\u003ca href=\"https://twitter.com/hashtag/newgame?src=hash\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#newgame\u003c/a\u003e \u003ca href=\"https://twitter.com/hashtag/AbemaTV?src=hash\" rel=\"nofollow noopener\" target=\"_blank\"\u003e#AbemaTV\u003c/a\u003e \u003ca href=\"https://t.co/gGQfriWhtl\" rel=\"nofollow noopener\" target=\"_blank\"\u003epic.twitter.com/gGQfriWhtl\u003c/a\u003e\u003c/p\u003e— hiww (@hiww) \u003ca href=\"https://twitter.com/hiww/status/880398895787892736\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年6月29日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eねねっちのコード\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eDestructibleActor\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eInit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNeneActor\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eInit\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003em_currentHealth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003em_maxHealth\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 攻撃を食らった時のダメージ計算\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eDestructibleActor\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eRecieveDamage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003efloat\u003c/span\u003e \u003cspan class=\"n\"\u003esourceDamage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//デバフを適用\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eresolvedDamage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esourceDamage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003edebuf\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_debufs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eresolvedDamage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edebuf\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eApplyToDamage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresolvedDamage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003em_currentHealth\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"n\"\u003eresolvedDamage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em_currentHealth\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003em_currentHealth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eDestroyMe\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//破壊せよ！\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eDestructibleActor\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eDestroyMe\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//死亡モーションがあれば再生\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//TODO: 死亡モーションを作る！\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em_pDeathMotion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//筆者注:この下は画像が見切れていて読めない\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003edebuf\u003c/code\u003eの型は\u003ccode\u003estd::shard_ptr\u0026lt;C\u0026gt;\u003c/code\u003eかな？\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c規格書リーディング初心者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E8%A6%8F%E6%A0%BC%E6%9B%B8%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E5%88%9D%E5%BF%83%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++規格書リーディング初心者\u003c/h2\u003e\n\n\u003cp\u003eC++規格書リーディング初心者とは、分からないことは規格書も参照しようと思えば本の虫などを見つつなんとかでき、またオーバーロード(ADL含む)や型推論の詳細な仕組みをそこそこ理解できている程度の状態である\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c中級者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E4%B8%AD%E7%B4%9A%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++中級者\u003c/h2\u003e\n\n\u003cp\u003eC++中級者とは Boost Range LibraryのOven拡張のようなoperator overloadテクニック(\u003ccode\u003eoperator|\u003c/code\u003eを使ったメソッドチェインもどき)を自作でき、boost.asioを使え、C++11constexprの大変さを語れる状態である。また、継承を使いこなせており、なぜC++において継承だらけのプログラムをあまり見なくなったのかを自らの原体験を元に語れる状態である。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c規格書リーディング中級者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E8%A6%8F%E6%A0%BC%E6%9B%B8%E3%83%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E4%B8%AD%E7%B4%9A%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++規格書リーディング中級者\u003c/h2\u003e\n\n\u003cp\u003eC++規格書リーディング中級者とは 最新規格書をすべて一度は通読し、他人のコードの誤りを規格書を参照して論理的に指摘でき、コンパイラのバグを発見できる状態である。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c上級者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E4%B8%8A%E7%B4%9A%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++上級者\u003c/h2\u003e\n\n\u003cp\u003eC++上級者とはCとC++の規格書、公開されている標準化委員会の文書ほぼすべてに目を通していること、最新規格に対応しつつコンパイラのバグを回避しつつ何かしらのライブラリを作れる状態である。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"c規格書クラッカー\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E8%A6%8F%E6%A0%BC%E6%9B%B8%E3%82%AF%E3%83%A9%E3%83%83%E3%82%AB%E3%83%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++規格書クラッカー\u003c/h2\u003e\n\n\u003cp\u003eC++規格書クラッカーとは、C++標準化委員会に提案が出来る程度の知識と経験を持ち、また規格書のバクを発見できる程度の状態である。つまり江添さん。岡山の陶芸家な中３女子もきっとここ\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"反響\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%8D%E9%9F%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e反響\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"twitterより\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#twitter%E3%82%88%E3%82%8A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eTwitterより\u003c/h2\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e中級でこれとかレベル高すぎ笑う \u003ca href=\"https://t.co/tF9L6ndJ0M\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/tF9L6ndJ0M\u003c/a\u003e\u003c/p\u003e— Wreulicke (@wreulicke) \u003ca href=\"https://twitter.com/wreulicke/status/727322392398172161\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月3日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++初心者＝C++コンパイラをフルスクラッチで作れる程度の能力\u003c/p\u003e— 狂える中３女子ボレロ村上／陶芸C++er (@bolero_MURAKAMI) \u003ca href=\"https://twitter.com/bolero_MURAKAMI/status/727326127434297348\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月3日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e僕はC++初心者～中級者ですなw これでも C++ 20年以上やってるつもりなんですけど...：C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/q64N4vjttZ\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/q64N4vjttZ\u003c/a\u003e\u003c/p\u003e— Takashi Kawasaki (@espresso3389) \u003ca href=\"https://twitter.com/espresso3389/status/730736755150721024\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/M0l7tCqITB\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/M0l7tCqITB\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eなぜSTL以外のLib関連されるの？　これだけ納得できん\u003c/p\u003e— GetCocoa()=nothrow (@MaverickTse) \u003ca href=\"https://twitter.com/MaverickTse/status/730734162357837824\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eつまり江添さんで笑った。確かに C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/8l4GCKEizF\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/8l4GCKEizF\u003c/a\u003e\u003c/p\u003e— sachin21(さっちん) (@sachin21__) \u003ca href=\"https://twitter.com/sachin21__/status/730727324451135488\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/TCNaOkKlcL\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/TCNaOkKlcL\u003c/a\u003e\u003cbr\u003eSFINAE \u0026lt; オーバーロードの仕組みやテンプレートの特殊化なんとなく \u0026lt; asioの使用\u003cbr\u003eの序列が理解できない\u003c/p\u003e— アズなんとかさん (@as_capabl) \u003ca href=\"https://twitter.com/as_capabl/status/730727189813960705\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/rHEk1KSEm9\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/rHEk1KSEm9\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eC言語版もほしいな\u003c/p\u003e— 笑わない数弱者 (@hirakich3141592) \u003ca href=\"https://twitter.com/hirakich3141592/status/730737360355254272\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC# だとどうなりますか！？ / “C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み - Qiita” \u003ca href=\"https://t.co/Q4wmmSyjiQ\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/Q4wmmSyjiQ\u003c/a\u003e\u003c/p\u003e— 田淵 義人＠エクセルソフト (@ytabuchi) \u003ca href=\"https://twitter.com/ytabuchi/status/730734379761180672\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++初心者を名乗るためのハードル、むちゃくちゃ高いんだなあ、と思っている。C++で作りたいものがとりあえず作れないとC++初心者は名乗れないらしい。\u003c/p\u003e— chokudai(高橋 直大) (@chokudai) \u003ca href=\"https://twitter.com/chokudai/status/730726676913520642\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/Vl9QUTkXv0\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/Vl9QUTkXv0\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eC初心者です\u003c/p\u003e— たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/783332186615197701\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年10月4日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/Qiita\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@Qiita\u003c/a\u003e そもそもプログラマーの初心者詐欺とはなんやねん。\u003c/p\u003e— なぞのひと(N氏)＠雑談 (@nz_hito_pc__93) \u003ca href=\"https://twitter.com/nz_hito_pc__93/status/783332329993363461\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年10月4日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e初心者詐欺はするものだと思う \u003ca href=\"https://t.co/WiEESTtv1e\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/WiEESTtv1e\u003c/a\u003e\u003c/p\u003e— かぐちょ「神御田」@アイマス「神御田Ｐ」 (@kagucho_kamioda) \u003ca href=\"https://twitter.com/kagucho_kamioda/status/783347184125120513\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年10月4日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"はてなブックマークより\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%88%E3%82%8A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはてなブックマークより\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"http://b.hatena.ne.jp/entry/qiita.com/yumetodo/items/a843bd542106215bbc84\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://b.hatena.ne.jp/entry/qiita.com/yumetodo/items/a843bd542106215bbc84\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e抜き出すとまさかりが飛んできそうなので各自見てください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003cp\u003e異論はたくさんあると思うけど、C++初心者怖い状態がなくなればいいなと思います。\u003cbr\u003e\n\u003c/p\u003e\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e だからC++erの初心者は初心者じゃないんだよ！！！！！！！！！！！！！\u003cbr\u003e\u003cbr\u003eだからC++er嫌いなんだよ！！！！！！！！\u003c/p\u003e— たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/727309999102263296\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月3日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eえ？私？多分C++規格書リーディング初心者だと思う。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003eどうも\u003ccode\u003eC++規格書リーディング初心者\u003c/code\u003eは長過ぎるようで「初心者ってことでいいよね？」という声が聴こえる。・・・いやダメだろ。\u003c/p\u003e\n\n\u003cp\u003eなんでboost.asioだけ出てきているかというと、あれを使えるということはcallback地獄への対処のためにいろいろ知っていないといけないので、という意味で上げました。\u003cdel\u003e断じて\u003ca href=\"http://www.slideshare.net/chihayatakatuki/boost-asio\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++初心者(boost.asioが使えないとは言っていない)の人\u003c/a\u003eを弾くためではない\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e対抗記事とか他言語版記事とか出ないかな(ﾁﾗｯ\u003c/p\u003e\n\n\u003cp\u003eこのレベル分けで「20年プログラマ」やってるけど(ryが発生しているのは、あくまで\u003cstrong\u003eC++の言語仕様\u003c/strong\u003eに着目してレベル分けしているからで、「計算機科学」「ツール・文化」「ドメイン知識」とかとかの分野別に分けていないから。だから\u003cstrong\u003e簡易的\u003c/strong\u003eという言葉で逃げてたんですね。\u003c/p\u003e\n\n\u003cp\u003eあ、MFCとかC++/CLIはお帰りください。\u003c/p\u003e\n\n\u003cp\u003eなんか誤解を与えているようなので追記しますが、C初心者\u0026lt;C++初学者となっているのは、C++の下位言語としてCがあると言っているわけではなく、C++をやるのにCの知識は多少必要だと言いたいだけです。Cを使いこなせることとC++を使いこなせることは全く別方向の話ですので誤解のないように。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eすごいエンジニアの謙遜発言に「魔界では」をつけるとしっくりくる\u003cbr\u003e\u003cbr\u003e「こんなの魔界ではふつうだよ」\u003cbr\u003e「俺なんて魔界では大したことないよ」\u003cbr\u003e「魔界では素人の質問なんですがいいですか」\u003c/p\u003e— sat (@satoru_takeuchi) \u003ca href=\"https://twitter.com/satoru_takeuchi/status/808089090285416448\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年12月11日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e魔界では初心者の皆さん\u003c/p\u003e— たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/808686321803767808\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年12月13日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eなるほど・・・？\u003c/p\u003e\n\n\u003cp\u003e冒頭で触れた、C++初心者(boost.asioが使えないとは言っていない)の人が\u003cbr\u003e\n\u003ca href=\"http://qiita.com/YukiMiyatake/items/bb16475278ccd93de312\" id=\"reference-52da26dfc35907944517\"\u003eC++ステップアップにむけて 段階を作ってみた - Qiita\u003c/a\u003e\u003cbr\u003e\nなんていう記事を書いたようだ。。なるほど、面白い。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eC中級者「やったぞ！長年の修行の末、遂にポインタを理解したぞ！」\u003cbr\u003estrict aliasing rules「フハハハ！引っかかったな！そいつは影武者だ！」\u003c/p\u003e— takl (@takl) \u003ca href=\"https://twitter.com/takl/status/958342684850102272?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003eJanuary 30, 2018\u003c/a\u003e\n\u003c/blockquote\u003e \n\n\u003cp\u003eC言語・・・\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"この記事を書いた意図について\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%82%92%E6%9B%B8%E3%81%84%E3%81%9F%E6%84%8F%E5%9B%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこの記事を書いた意図について\u003c/h1\u003e\n\n\u003cp\u003eようやくこの記事のviewの伸びも収まってきたのと、\u003ca href=\"https://teratail.com/questions/69597\" rel=\"nofollow noopener\" target=\"_blank\"\u003e某所\u003c/a\u003eで誤解を受けていたのでこっちにも意図を書いておきますか。\u003c/p\u003e\n\n\u003cp\u003eこの記事は、現代のC++があまりにも難解になっているのでおおよそ仕様をすべて把握し、C++の言語としての特性を、コーディングを実際にするユーザーがうまく利用して「楽をする」ことができなくなっているな、と思ったので、記事冒頭のツイートをきっかけに書いたものです。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://b.hatena.ne.jp/entry/287284443/comment/q7z\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://b.hatena.ne.jp/entry/287284443/comment/q7z\u003c/a\u003e\u003cbr\u003e\nq7zのコメント 2016/05/13 23:11\u003cbr\u003e\nこういう言動がホントに初心者に迷惑かけてることに気づいてないんだろうな。敬遠されるような事をして悦に入ってるだけ。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eというコメントがはてなブックマークについていますが、ある意味狙い通りです。\u003cbr\u003e\nよっぽど記事中に引用しようかと思いましたが、無駄にview数が伸びてたので炎上しそうで、「抜き出すとまさかりが飛んできそうなので各自見てください。」と書くにとどめましたが、\u003cbr\u003e\nこのコメントを見てくれた人はどのくらいいたんだろうか。\u003c/p\u003e\n\n\u003cp\u003eだって、現代見かけるC++のコードを書くために覚えることがあまりにも多すぎるじゃないですか。\u003cbr\u003e\n実際のところ私は継承もオーバーロードも理解しきれていませんし。\u003c/p\u003e\n\n\u003cp\u003eで、本来、プログラミング言語そのものを相当知らないと水準のコードが書けないというのはおかしいはずです。たかが道具なのに。\u003cbr\u003e\nところがC++の場合、言語仕様を半ば悪用したトリッキーなコードがデファクトスタンダードになっているがために、言語そのものを相当勉強しないといけない。\u003cbr\u003e\nせめてRustみたいにコンパイルエラーがわかりやすければまだ良かったかもしれないがそれすらないからユーザーはライブラリの実装を読んで理解しないといけない(Conceptはよ)。\u003c/p\u003e\n\n\u003cp\u003e少なくとも私は、みなさんと違ってC++11から入門した人間ですが、当時江添さんの本の虫の記事を必死に読み漁り(もちろんググりながらなのでfaithandbraveさんはじめ多くの人の記事もよみました)、\u003cbr\u003e\nやっとこのわけわかんないコートはどうしてこれ以上わかりやすくかけないのか、おぼろげに理解できるようになるまで約半年、本当に大変でした。なんせC++にはまともな入門本すらないですからね。\u003c/p\u003e\n\n\u003cp\u003e現状のC++の存続意義は過去の資産の活用と速度追求の2点に絞られると思っています。速度を追求しないのであればほかにいくらでも適当な、かんたんな言語はあるはずです(C#とかRustとかGo？)。\u003cbr\u003e\n逆に言えば速度追求のためならなんでも許される、そういう空気を私は感じています。これがますますC++を難解にさせている原因かもしれません。\u003c/p\u003e\n\n\u003cp\u003e[C++11]lambda、[C++11]ravlue reference、[C++14]constexpr、[C++17]template classの実引数推定や[はよこい]Conceptなど改善がないわけではないですが、\u003cbr\u003e\n少なくとも私は今後輩にC++を勉強してみたら？とは言えません。実際JavaScriptとRustを勧めてます。\u003cbr\u003e\n今のC++界隈の状況で、C++入門したら、無駄に時間が消し飛んで振り回されるだけです。まじで今のC++おかしいんじゃねーの？私はC++が好きだから使い続けるけど。\u003c/p\u003e\n\n\u003cp\u003eまあしかし、この記事View数伸びすぎてませんかね？\u003cbr\u003e\nなんでああいうランク分けがC++において\u003cstrong\u003eのみ\u003c/strong\u003e成立して、またこれだけview数があって(さっき確認したら23739views!?)\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e対抗記事とか他言語版記事とか出ないかな(ﾁﾗｯ\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと煽ってなお他の言語版の記事が出ない理由は何なのかまでちゃんと伝わっているとは思えないし。\u003c/p\u003e\n\n\u003cp\u003eまあせめてあの記事を見てC++から離れた初心者がいれば、すこしは意味があったのかな、上述の内容が伝わらなくても。この記事書いたときはそこまで思ってなかったけど。\u003c/p\u003e\n\n\u003cp\u003eせめてC++17に対応したまともな入門書が出てくれないですかね？一時期本気で書こうかと思ったけど、私の大学の単位が消し飛ぶので自重しています。\u003cbr\u003e\n江添さんが\u003cbr\u003e\n\u003ca href=\"https://github.com/EzoeRyou/cpp17book\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/EzoeRyou/cpp17book\u003c/a\u003e\u003cbr\u003e\nを書き始めているけど、これは入門書ではないし。\u003c/p\u003e\n\n\u003cp\u003e追記: 江添さんが入門書を書いていますね\u003cbr\u003e\n\u003ca href=\"https://github.com/EzoeRyou/cpp-intro\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/EzoeRyou/cpp-intro\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"# はじめに\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/takeokunn\"\u003e@takeokunn\u003c/a\u003e そういや私の昨日のツイートたどってみ、C++初心者(boost.asioが使えないとは言っていない)の人とQiitaでやりとりしてたから\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/727309368052436992\"\u003e2016年5月3日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e だからC++erの初心者は初心者じゃないんだよ！！！！！！！！！！！！！\u003cbr\u003e\u003cbr\u003eだからC++er嫌いなんだよ！！！！！！！！\u003c/p\u003e\u0026mdash; たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/727309999102263296\"\u003e2016年5月3日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/takeokunn\"\u003e@takeokunn\u003c/a\u003e 当人も「そろそろ中級者かな」\u003cbr\u003eと言ってた\u003cbr\u003e\u003cbr\u003e因みに\u003cbr\u003e\u003cbr\u003eC初心者 \u0026lt; C++初学者 \u0026lt; C++入門者 \u0026lt; C++初心者 \u0026lt; C++規格書リーディング初心者 \u0026lt; C++中級者 \u0026lt; C++規格書リーディング中級者 \u0026lt; C++上級者 \u0026lt; C++規格書クラッカー\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/727311051117629442\"\u003e2016年5月3日\u003c/a\u003e\u003c/blockquote\u003e\n\n\nこんなTwitterでのやり取りから生まれた。C++erで「初心者です」って言う人多いけど全然初心者じゃない人かなりいるよね、ということで作った。\n\n# レベル関係\n\nC初心者 \u003c C++初学者 \u003c C++入門者 \u003c C++初心者 \u003c C++規格書リーディング初心者 \u003c C++中級者 \u003c C++規格書リーディング中級者 \u003c C++上級者 \u003c C++規格書クラッカー\n\n# それぞれ見ていく\n\nあくまで上限ラインを書いているだけだからstdioがなんの略か知らなくてもC初心者よりしたというわけではない。\n\n## C初心者\n\n「なんか変数とかいうのがあって型とかいうのがあるらしいな。puts関数やprintf関数で標準出力に出力、fgetsで標準入力から入力を受けられるらしい」 という程度の状態、およびそれ以下である。stdioがStandard Input/Outputの略だと知っていることもある。ポインターとか配列は「なにそれ美味しいの」という状態\n\n```c\n#include \u003cstdio.h\u003e\nint main(void)\n{\n    puts(\"arikitari na world!\");\n    return 0;\n}\n```\n\n## C++初学者\n\nC++初学者とは、iostreamヘッダーに標準入出力のクラス、関数群があることを知っていて、関数のオーバーロードを使ったことがある程度の状態である。\n\n```cpp\n#include \u003ciostream\u003e\nvoid foo(int n){\n    std::cout \u003c\u003c \"void foo(int) called( n = \" \u003c\u003c n \u003c\u003c \").\" \u003c\u003c std::endl;\n}\nvoid foo(double n){\n    std::cout \u003c\u003c \"void foo(double) called( n = \" \u003c\u003c n \u003c\u003c \").\" \u003c\u003c std::endl;\n}\nint main()\n{\n    std::cout \u003c\u003c \"arikitari na world!\" \u003c\u003c std::endl;\n    foo(3);\n    foo(3.14);\n}\n```\n\n## C++入門者\n\nC++入門者とはclassの存在を知っていて書いたことがあり、また``std::string``や``std::vector``や``std::array``を操れ、algorithmヘッダーを使ったことがあり、range-based forを使える程度の状態である。なんとなくtemplateを使ってみたことがある状態を含む\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003carray\u003e\n#include \u003cvector\u003e\n#include \u003cnumeric\u003e\nvoid print(const std::vector\u003cint\u003e\u0026 vec)\n{\n\tfor(auto\u0026\u0026 v : vec) std::cout \u003c\u003c v \u003c\u003c ',';\n\tstd::cout \u003c\u003c std::endl;\n}\ntemplate\u003cstd::size_t N\u003e void print(const std::array\u003cint, N\u003e\u0026 arr)\n{\n\tfor(auto\u0026\u0026 a : arr) std::cout \u003c\u003c a \u003c\u003c ',';\n\tstd::cout \u003c\u003c std::endl;\n}\nint main()\n{\n\tstd::vector\u003cint\u003e v;\n\tv.resize(4);\n\tstd::iota(v.begin(), v.end(), 0);\n\tstd::array\u003cint, 3\u003e arr{{ 3, 1, 4 }};\n\tprint(v);\n\tprint(arr);\n}\n```\n\n## C++初心者\nC++初心者とは作りたいものを不格好でも作れ(なんでもいいんです、少しでも自分で動かしてみたいと思うものが作れれば)、また[cpprefjp](https://cpprefjp.github.io/)などを使い分からないことを調べることができ、コンパイル時定数の存在を知っていて、rvalue reference、template特殊化、簡単なSFINAEを使ったConceptのようなコードが理解でき書ける程度の状態である\n\n分類したけどC++初心者の幅はやっぱり大きい。\n\nなおNew Game!のねねっちはここ。NeneEngineというエンジンを自作しているたぁ驚きだね。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eねねっち、プログラマ志望か。\u003ca href=\"https://twitter.com/hashtag/newgame?src=hash\"\u003e#newgame\u003c/a\u003e \u003ca href=\"https://twitter.com/hashtag/AbemaTV?src=hash\"\u003e#AbemaTV\u003c/a\u003e \u003ca href=\"https://t.co/gGQfriWhtl\"\u003epic.twitter.com/gGQfriWhtl\u003c/a\u003e\u003c/p\u003e\u0026mdash; hiww (@hiww) \u003ca href=\"https://twitter.com/hiww/status/880398895787892736\"\u003e2017年6月29日\u003c/a\u003e\u003c/blockquote\u003e\n\n```cpp:ねねっちのコード\nvoid DestructibleActor::Init()\n{\n    NeneActor::Init();\n    m_currentHealth = m_maxHealth;\n}\n\n// 攻撃を食らった時のダメージ計算\nvoid DestructibleActor::RecieveDamage(float sourceDamage)\n{\n    //デバフを適用\n    auto resolvedDamage = sourceDamage;\n    for(const auto\u0026 debuf : m_debufs)\n    {\n        resolvedDamage = debuf-\u003eApplyToDamage(resolvedDamage);\n    }\n    m_currentHealth -= resolvedDamage;\n    if(m_currentHealth \u003c= 0.f)\n    {\n        m_currentHealth = 0.f;\n        DestroyMe();\n    }\n}\n\n//破壊せよ！\nvoid DestructibleActor::DestroyMe()\n{\n    //死亡モーションがあれば再生\n    //TODO: 死亡モーションを作る！\n    if(m_pDeathMotion)\n\n    //筆者注:この下は画像が見切れていて読めない\n}\n```\n\n`debuf`の型は`std::shard_ptr\u003cC\u003e`かな？\n\n## C++規格書リーディング初心者\nC++規格書リーディング初心者とは、分からないことは規格書も参照しようと思えば本の虫などを見つつなんとかでき、またオーバーロード(ADL含む)や型推論の詳細な仕組みをそこそこ理解できている程度の状態である\n\n## C++中級者\nC++中級者とは Boost Range LibraryのOven拡張のようなoperator overloadテクニック(``operator|``を使ったメソッドチェインもどき)を自作でき、boost.asioを使え、C++11constexprの大変さを語れる状態である。また、継承を使いこなせており、なぜC++において継承だらけのプログラムをあまり見なくなったのかを自らの原体験を元に語れる状態である。\n\n## C++規格書リーディング中級者\nC++規格書リーディング中級者とは 最新規格書をすべて一度は通読し、他人のコードの誤りを規格書を参照して論理的に指摘でき、コンパイラのバグを発見できる状態である。\n\n## C++上級者\nC++上級者とはCとC++の規格書、公開されている標準化委員会の文書ほぼすべてに目を通していること、最新規格に対応しつつコンパイラのバグを回避しつつ何かしらのライブラリを作れる状態である。\n\n## C++規格書クラッカー\nC++規格書クラッカーとは、C++標準化委員会に提案が出来る程度の知識と経験を持ち、また規格書のバクを発見できる程度の状態である。つまり江添さん。岡山の陶芸家な中３女子もきっとここ\n\n# 反響\n## Twitterより\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e中級でこれとかレベル高すぎ笑う \u003ca href=\"https://t.co/tF9L6ndJ0M\"\u003ehttps://t.co/tF9L6ndJ0M\u003c/a\u003e\u003c/p\u003e\u0026mdash; Wreulicke (@wreulicke) \u003ca href=\"https://twitter.com/wreulicke/status/727322392398172161\"\u003e2016年5月3日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++初心者＝C++コンパイラをフルスクラッチで作れる程度の能力\u003c/p\u003e\u0026mdash; 狂える中３女子ボレロ村上／陶芸C++er (@bolero_MURAKAMI) \u003ca href=\"https://twitter.com/bolero_MURAKAMI/status/727326127434297348\"\u003e2016年5月3日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e僕はC++初心者～中級者ですなw これでも C++ 20年以上やってるつもりなんですけど...：C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/q64N4vjttZ\"\u003ehttps://t.co/q64N4vjttZ\u003c/a\u003e\u003c/p\u003e\u0026mdash; Takashi Kawasaki (@espresso3389) \u003ca href=\"https://twitter.com/espresso3389/status/730736755150721024\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/M0l7tCqITB\"\u003ehttps://t.co/M0l7tCqITB\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eなぜSTL以外のLib関連されるの？　これだけ納得できん\u003c/p\u003e\u0026mdash; GetCocoa()=nothrow (@MaverickTse) \u003ca href=\"https://twitter.com/MaverickTse/status/730734162357837824\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eつまり江添さんで笑った。確かに C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/8l4GCKEizF\"\u003ehttps://t.co/8l4GCKEizF\u003c/a\u003e\u003c/p\u003e\u0026mdash; sachin21(さっちん) (@sachin21__) \u003ca href=\"https://twitter.com/sachin21__/status/730727324451135488\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/TCNaOkKlcL\"\u003ehttps://t.co/TCNaOkKlcL\u003c/a\u003e\u003cbr\u003eSFINAE \u0026lt; オーバーロードの仕組みやテンプレートの特殊化なんとなく \u0026lt; asioの使用\u003cbr\u003eの序列が理解できない\u003c/p\u003e\u0026mdash; アズなんとかさん (@as_capabl) \u003ca href=\"https://twitter.com/as_capabl/status/730727189813960705\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/rHEk1KSEm9\"\u003ehttps://t.co/rHEk1KSEm9\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eC言語版もほしいな\u003c/p\u003e\u0026mdash; 笑わない数弱者 (@hirakich3141592) \u003ca href=\"https://twitter.com/hirakich3141592/status/730737360355254272\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC# だとどうなりますか！？ / “C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み - Qiita” \u003ca href=\"https://t.co/Q4wmmSyjiQ\"\u003ehttps://t.co/Q4wmmSyjiQ\u003c/a\u003e\u003c/p\u003e\u0026mdash; 田淵 義人＠エクセルソフト (@ytabuchi) \u003ca href=\"https://twitter.com/ytabuchi/status/730734379761180672\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++初心者を名乗るためのハードル、むちゃくちゃ高いんだなあ、と思っている。C++で作りたいものがとりあえず作れないとC++初心者は名乗れないらしい。\u003c/p\u003e\u0026mdash; chokudai(高橋 直大) (@chokudai) \u003ca href=\"https://twitter.com/chokudai/status/730726676913520642\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み by \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e on \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e \u003ca href=\"https://t.co/Vl9QUTkXv0\"\u003ehttps://t.co/Vl9QUTkXv0\u003c/a\u003e\u003cbr\u003e\u003cbr\u003eC初心者です\u003c/p\u003e\u0026mdash; たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/783332186615197701\"\u003e2016年10月4日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/Qiita\"\u003e@Qiita\u003c/a\u003e そもそもプログラマーの初心者詐欺とはなんやねん。\u003c/p\u003e\u0026mdash; なぞのひと(N氏)＠雑談 (@nz_hito_pc__93) \u003ca href=\"https://twitter.com/nz_hito_pc__93/status/783332329993363461\"\u003e2016年10月4日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e初心者詐欺はするものだと思う \u003ca href=\"https://t.co/WiEESTtv1e\"\u003ehttps://t.co/WiEESTtv1e\u003c/a\u003e\u003c/p\u003e\u0026mdash; かぐちょ「神御田」@アイマス「神御田Ｐ」 (@kagucho_kamioda) \u003ca href=\"https://twitter.com/kagucho_kamioda/status/783347184125120513\"\u003e2016年10月4日\u003c/a\u003e\u003c/blockquote\u003e\n\n## はてなブックマークより\nhttp://b.hatena.ne.jp/entry/qiita.com/yumetodo/items/a843bd542106215bbc84\n\n抜き出すとまさかりが飛んできそうなので各自見てください。\n\n# まとめ\n\n異論はたくさんあると思うけど、C++初心者怖い状態がなくなればいいなと思います。\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e だからC++erの初心者は初心者じゃないんだよ！！！！！！！！！！！！！\u003cbr\u003e\u003cbr\u003eだからC++er嫌いなんだよ！！！！！！！！\u003c/p\u003e\u0026mdash; たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/727309999102263296\"\u003e2016年5月3日\u003c/a\u003e\u003c/blockquote\u003e\n\n\nえ？私？多分C++規格書リーディング初心者だと思う。\n\n# 追記\n\nどうも``C++規格書リーディング初心者``は長過ぎるようで「初心者ってことでいいよね？」という声が聴こえる。・・・いやダメだろ。\n\nなんでboost.asioだけ出てきているかというと、あれを使えるということはcallback地獄への対処のためにいろいろ知っていないといけないので、という意味で上げました。~~断じて[C++初心者(boost.asioが使えないとは言っていない)の人](http://www.slideshare.net/chihayatakatuki/boost-asio)を弾くためではない~~\n\n対抗記事とか他言語版記事とか出ないかな(ﾁﾗｯ\n\nこのレベル分けで「20年プログラマ」やってるけど(ryが発生しているのは、あくまで**C++の言語仕様**に着目してレベル分けしているからで、「計算機科学」「ツール・文化」「ドメイン知識」とかとかの分野別に分けていないから。だから**簡易的**という言葉で逃げてたんですね。\n\nあ、MFCとかC++/CLIはお帰りください。\n\nなんか誤解を与えているようなので追記しますが、C初心者\u003cC++初学者となっているのは、C++の下位言語としてCがあると言っているわけではなく、C++をやるのにCの知識は多少必要だと言いたいだけです。Cを使いこなせることとC++を使いこなせることは全く別方向の話ですので誤解のないように。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eすごいエンジニアの謙遜発言に「魔界では」をつけるとしっくりくる\u003cbr\u003e\u003cbr\u003e「こんなの魔界ではふつうだよ」\u003cbr\u003e「俺なんて魔界では大したことないよ」\u003cbr\u003e「魔界では素人の質問なんですがいいですか」\u003c/p\u003e\u0026mdash; sat (@satoru_takeuchi) \u003ca href=\"https://twitter.com/satoru_takeuchi/status/808089090285416448\"\u003e2016年12月11日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e魔界では初心者の皆さん\u003c/p\u003e\u0026mdash; たけてぃ (@takeokunn) \u003ca href=\"https://twitter.com/takeokunn/status/808686321803767808\"\u003e2016年12月13日\u003c/a\u003e\u003c/blockquote\u003e\n\nなるほど・・・？\n\n冒頭で触れた、C++初心者(boost.asioが使えないとは言っていない)の人が\n[C++ステップアップにむけて 段階を作ってみた - Qiita](http://qiita.com/YukiMiyatake/items/bb16475278ccd93de312)\nなんていう記事を書いたようだ。。なるほど、面白い。\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eC中級者「やったぞ！長年の修行の末、遂にポインタを理解したぞ！」\u003cbr\u003estrict aliasing rules「フハハハ！引っかかったな！そいつは影武者だ！」\u003c/p\u003e\u0026mdash; takl (@takl) \u003ca href=\"https://twitter.com/takl/status/958342684850102272?ref_src=twsrc%5Etfw\"\u003eJanuary 30, 2018\u003c/a\u003e\u003c/blockquote\u003e \n\nC言語・・・\n\n# この記事を書いた意図について\n\nようやくこの記事のviewの伸びも収まってきたのと、[某所](https://teratail.com/questions/69597)で誤解を受けていたのでこっちにも意図を書いておきますか。\n\nこの記事は、現代のC++があまりにも難解になっているのでおおよそ仕様をすべて把握し、C++の言語としての特性を、コーディングを実際にするユーザーがうまく利用して「楽をする」ことができなくなっているな、と思ったので、記事冒頭のツイートをきっかけに書いたものです。\n\n\u003e http://b.hatena.ne.jp/entry/287284443/comment/q7z\n\u003e q7zのコメント 2016/05/13 23:11\n\u003e こういう言動がホントに初心者に迷惑かけてることに気づいてないんだろうな。敬遠されるような事をして悦に入ってるだけ。\n\nというコメントがはてなブックマークについていますが、ある意味狙い通りです。\nよっぽど記事中に引用しようかと思いましたが、無駄にview数が伸びてたので炎上しそうで、「抜き出すとまさかりが飛んできそうなので各自見てください。」と書くにとどめましたが、\nこのコメントを見てくれた人はどのくらいいたんだろうか。\n\nだって、現代見かけるC++のコードを書くために覚えることがあまりにも多すぎるじゃないですか。\n実際のところ私は継承もオーバーロードも理解しきれていませんし。\n\nで、本来、プログラミング言語そのものを相当知らないと水準のコードが書けないというのはおかしいはずです。たかが道具なのに。\nところがC++の場合、言語仕様を半ば悪用したトリッキーなコードがデファクトスタンダードになっているがために、言語そのものを相当勉強しないといけない。\nせめてRustみたいにコンパイルエラーがわかりやすければまだ良かったかもしれないがそれすらないからユーザーはライブラリの実装を読んで理解しないといけない(Conceptはよ)。\n\n少なくとも私は、みなさんと違ってC++11から入門した人間ですが、当時江添さんの本の虫の記事を必死に読み漁り(もちろんググりながらなのでfaithandbraveさんはじめ多くの人の記事もよみました)、\nやっとこのわけわかんないコートはどうしてこれ以上わかりやすくかけないのか、おぼろげに理解できるようになるまで約半年、本当に大変でした。なんせC++にはまともな入門本すらないですからね。\n\n現状のC++の存続意義は過去の資産の活用と速度追求の2点に絞られると思っています。速度を追求しないのであればほかにいくらでも適当な、かんたんな言語はあるはずです(C#とかRustとかGo？)。\n逆に言えば速度追求のためならなんでも許される、そういう空気を私は感じています。これがますますC++を難解にさせている原因かもしれません。\n\n[C++11]lambda、[C++11]ravlue reference、[C++14]constexpr、[C++17]template classの実引数推定や[はよこい]Conceptなど改善がないわけではないですが、\n少なくとも私は今後輩にC++を勉強してみたら？とは言えません。実際JavaScriptとRustを勧めてます。\n今のC++界隈の状況で、C++入門したら、無駄に時間が消し飛んで振り回されるだけです。まじで今のC++おかしいんじゃねーの？私はC++が好きだから使い続けるけど。\n\nまあしかし、この記事View数伸びすぎてませんかね？\nなんでああいうランク分けがC++において**のみ**成立して、またこれだけview数があって(さっき確認したら23739views!?)\n\n\u003e対抗記事とか他言語版記事とか出ないかな(ﾁﾗｯ\n\nと煽ってなお他の言語版の記事が出ない理由は何なのかまでちゃんと伝わっているとは思えないし。\n\nまあせめてあの記事を見てC++から離れた初心者がいれば、すこしは意味があったのかな、上述の内容が伝わらなくても。この記事書いたときはそこまで思ってなかったけど。\n\nせめてC++17に対応したまともな入門書が出てくれないですかね？一時期本気で書こうかと思ったけど、私の大学の単位が消し飛ぶので自重しています。\n江添さんが\nhttps://github.com/EzoeRyou/cpp17book\nを書き始めているけど、これは入門書ではないし。\n\n追記: 江添さんが入門書を書いていますね\nhttps://github.com/EzoeRyou/cpp-intro\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":2,"created_at":"2016-05-12T01:34:08+09:00","group":null,"id":"a843bd542106215bbc84","likes_count":340,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C++14","versions":[]},{"name":"言語習得度レベル分け","versions":[]},{"name":"C++規格書リーディング","versions":[]}],"title":"C++erを簡易的にレベル分けすることで初心者詐欺を減らそうという試み","updated_at":"2019-04-02T11:21:43+09:00","url":"https://qiita.com/yumetodo/items/a843bd542106215bbc84","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003eまあタイトルで大体話が終わっているんですが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \n\u003cspan class=\"p\"\u003e{\u003c/span\u003e \n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ereinterpret_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんなコードが通りません。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esource.cpp(3): error C2440: 'reinterpret_cast' : cannot convert from 'int' to 'int'\n\nConversion is a valid standard conversion, which can be performed implicitly or by use of static_cast, C-style cast or function-style cast\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんなふうに言われます。\u003c/p\u003e\n\n\u003cp\u003eところで本当にバグか不安なのでTwitterで聞いたところ\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e §5.2.10 p2により整数型を自分自身の型にキャストすることは合法。\u003c/p\u003e— Ryou Ezoe (@EzoeRyou) \u003ca href=\"https://twitter.com/EzoeRyou/status/730256108812541952\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月11日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eん？§5.2.10 p2ってなんだ\u003c/p\u003e\n\n\u003cp\u003e§5.2.10 p2\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe reinterpret_cast operator shall not cast away constness (5.2.11). \u003cstrong\u003eAn expression of integral\u003c/strong\u003e, enumeration, pointer, or pointer-to-member \u003cstrong\u003etype can be explicitly converted to its own type\u003c/strong\u003e; such a cast yields the value of its operand.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eこれか。\u003c/p\u003e\n\n\u003cp\u003eそんなわけでバグレポ投げました\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://connect.microsoft.com/VisualStudio/feedback/details/2692140/cannot-convert-integral-type-to-own-type-by-reinterpret-cast\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://connect.microsoft.com/VisualStudio/feedback/details/2692140/cannot-convert-integral-type-to-own-type-by-reinterpret-cast\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/EzoeRyou\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@EzoeRyou\u003c/a\u003e \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e C++03 の規定に従えばエラーにする必要があったところで、それはおかしいということで C++11 で同じ型への変換を許すように改良されてました。\u003ca href=\"https://t.co/fxHwMopTmO\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/fxHwMopTmO\u003c/a\u003e\u003cbr\u003eMSVC がこれに対応できていないようです。\u003c/p\u003e— Kazutoshi SATODA (@k_satoda) \u003ca href=\"https://twitter.com/k_satoda/status/730801212212187140\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年5月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eなんだって！？\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3086.html#UK55\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3086.html#UK55\u003c/a\u003e\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eID\u003c/th\u003e\n\u003cth\u003eRef\u003c/th\u003e\n\u003cth\u003eComment\u003c/th\u003e\n\u003cth\u003eProposed Resolution\u003c/th\u003e\n\u003cth\u003eOwner\u003c/th\u003e\n\u003cth\u003eIssue\u003c/th\u003e\n\u003cth\u003eDisposition\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eUK 55,[236]\u003c/td\u003e\n\u003ctd\u003e5.2.10,¶,2\u003c/td\u003e\n\u003ctd\u003edynamic_cast and reinterpret_cast,crossreference 5.2.11 without creating an extra note. The,second half of the note is unrelated to the crossrefernce,,and would serve as well in normative text.\u003c/td\u003e\n\u003ctd\u003eStrike the note,about definition of casting away constness, preserve the,cross-reference. The second sentance on reintrepret_cast to,its own type should move out of the note into the normative,text.\u003c/td\u003e\n\u003ctd\u003eCWG\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_toc.html#799\" rel=\"nofollow noopener\" target=\"_blank\"\u003e799\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eACCEPTED,The repetition of the reference to 5.2.11 was handled as a quasi-editorialchange in paper N2841.,Issue 799 was opened for the question about castingto the same type as the operand.,See paper,\u003ca href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2841.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN2841\u003c/a\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eたしかにイギリスからNational Body commentsとして出ていて、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#799\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#799\u003c/a\u003e\u003cbr\u003e\n799. Can reinterpret_cast be used to cast an operand to its own type?\u003cbr\u003e\nSection: 5.2.10  [expr.reinterpret.cast]     Status: CD2     Submitter: UK     Date: 3 March, 2009\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3086.html#UK55\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN2800 comment UK 55\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e[Voted into WP at March, 2010 meeting.]\u003c/p\u003e\n\n\u003cp\u003eThe note in 5.2.10 [expr.reinterpret.cast] paragraph 2 says,\u003c/p\u003e\n\n\u003cp\u003eSubject to the restrictions in this section, an expression may be cast to its own type using a \u003ccode\u003ereinterpret_cast\u003c/code\u003e operator. \u003c/p\u003e\n\n\u003cp\u003eHowever, there is nothing in the normative text that permits this conversion, and paragraph 1 forbids any conversion not explicitly permitted.\u003c/p\u003e\n\n\u003cp\u003e(See also \u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#944\" rel=\"nofollow noopener\" target=\"_blank\"\u003eissue 944\u003c/a\u003e.)\u003c/p\u003e\n\n\u003cp\u003eProposed resolution (October, 2009):\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eChange 5.2.10 [expr.reinterpret.cast] paragraph 2 as follows:  \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003ereinterpret_cast\u003c/code\u003e operator shall not cast away constness (5.2.11 [expr.const.cast]). \u003cdel\u003e[Note: Subject to the restrictions in this section, an expression may be cast to its own type using a \u003ccode\u003ereinterpret_cast\u003c/code\u003e operator. —end note]\u003c/del\u003e \u003cstrong\u003eAn expression of integral, enumeration, pointer, or pointer-to-member type can be explictly converted to its own type; such a cast yields the value of its operand.\u003c/strong\u003e \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChange 5.2.10 [expr.reinterpret.cast] paragraph 10 as follows:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAn rvalue of type “pointer to member of \u003ccode\u003eX\u003c/code\u003e of type \u003ccode\u003eT1\u003c/code\u003e” can be explicitly converted to an rvalue of \u003cstrong\u003ea different type\u003c/strong\u003e “pointer to member of \u003ccode\u003eY\u003c/code\u003e of type \u003ccode\u003eT2\u003c/code\u003e” if \u003ccode\u003eT1\u003c/code\u003e and \u003ccode\u003eT2\u003c/code\u003e are both function types or both object types... \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCore IssueとなりめでたくC++11で修正が入っているようだ。\u003c/p\u003e\n","body":"まあタイトルで大体話が終わっているんですが\n\n```cpp\nint main() \n{ \n    int a = reinterpret_cast\u003cint\u003e(-1); \n}\n```\n\nこんなコードが通りません。\n\n```\nsource.cpp(3): error C2440: 'reinterpret_cast' : cannot convert from 'int' to 'int'\n\nConversion is a valid standard conversion, which can be performed implicitly or by use of static_cast, C-style cast or function-style cast\n```\n\nこんなふうに言われます。\n\nところで本当にバグか不安なのでTwitterで聞いたところ\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e §5.2.10 p2により整数型を自分自身の型にキャストすることは合法。\u003c/p\u003e\u0026mdash; Ryou Ezoe (@EzoeRyou) \u003ca href=\"https://twitter.com/EzoeRyou/status/730256108812541952\"\u003e2016年5月11日\u003c/a\u003e\u003c/blockquote\u003e\n\nん？§5.2.10 p2ってなんだ\n\n§5.2.10 p2\n\n\u003eThe reinterpret_cast operator shall not cast away constness (5.2.11). **An expression of integral**, enumeration, pointer, or pointer-to-member **type can be explicitly converted to its own type**; such a cast yields the value of its operand.\n\nこれか。\n\nそんなわけでバグレポ投げました\n\nhttps://connect.microsoft.com/VisualStudio/feedback/details/2692140/cannot-convert-integral-type-to-own-type-by-reinterpret-cast\n\n# 追記\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/EzoeRyou\"\u003e@EzoeRyou\u003c/a\u003e \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e C++03 の規定に従えばエラーにする必要があったところで、それはおかしいということで C++11 で同じ型への変換を許すように改良されてました。\u003ca href=\"https://t.co/fxHwMopTmO\"\u003ehttps://t.co/fxHwMopTmO\u003c/a\u003e\u003cbr\u003eMSVC がこれに対応できていないようです。\u003c/p\u003e\u0026mdash; Kazutoshi SATODA (@k_satoda) \u003ca href=\"https://twitter.com/k_satoda/status/730801212212187140\"\u003e2016年5月12日\u003c/a\u003e\u003c/blockquote\u003e\n\nなんだって！？\n\n\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3086.html#UK55\n\n\u003e\n| ID          | Ref        | Comment                                                                                                                                                                                           | Proposed Resolution                                                                                                                                                                                    | Owner | Issue                                                               | Disposition                                                                                                                                                                                                                                                                         |\n|-------------|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------|---------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| UK 55,[236] | 5.2.10,¶,2 | dynamic_cast and reinterpret_cast,crossreference 5.2.11 without creating an extra note. The,second half of the note is unrelated to the crossrefernce,,and would serve as well in normative text. | Strike the note,about definition of casting away constness, preserve the,cross-reference. The second sentance on reintrepret_cast to,its own type should move out of the note into the normative,text. | CWG   | [799](http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_toc.html#799) | ACCEPTED,The repetition of the reference to 5.2.11 was handled as a quasi-editorialchange in paper N2841.,Issue 799 was opened for the question about castingto the same type as the operand.,See paper,[N2841](http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2841.html) |\n\nたしかにイギリスからNational Body commentsとして出ていて、\n\n\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#799\n\u003e799. Can reinterpret_cast be used to cast an operand to its own type?\nSection: 5.2.10  [expr.reinterpret.cast]     Status: CD2     Submitter: UK     Date: 3 March, 2009\n\n\u003e[N2800 comment UK 55](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3086.html#UK55)\n\n\u003e[Voted into WP at March, 2010 meeting.]\n\n\u003eThe note in 5.2.10 [expr.reinterpret.cast] paragraph 2 says,\n\n\u003e    Subject to the restrictions in this section, an expression may be cast to its own type using a ``reinterpret_cast`` operator. \n\n\u003eHowever, there is nothing in the normative text that permits this conversion, and paragraph 1 forbids any conversion not explicitly permitted.\n\n\u003e(See also [issue 944](http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#944).)\n\n\u003eProposed resolution (October, 2009):\n\n\u003e1. Change 5.2.10 [expr.reinterpret.cast] paragraph 2 as follows:  \n\u003e\u003eThe ``reinterpret_cast`` operator shall not cast away constness (5.2.11 [expr.const.cast]). ~~[Note: Subject to the restrictions in this section, an expression may be cast to its own type using a ``reinterpret_cast`` operator. —end note]~~ **An expression of integral, enumeration, pointer, or pointer-to-member type can be explictly converted to its own type; such a cast yields the value of its operand.** \n\n\u003e2. Change 5.2.10 [expr.reinterpret.cast] paragraph 10 as follows:\n\u003e\u003eAn rvalue of type “pointer to member of ``X`` of type ``T1``” can be explicitly converted to an rvalue of **a different type** “pointer to member of ``Y`` of type ``T2``” if ``T1`` and ``T2`` are both function types or both object types... \n\nCore IssueとなりめでたくC++11で修正が入っているようだ。\n","coediting":false,"comments_count":0,"created_at":"2016-05-11T17:39:42+09:00","group":null,"id":"19278427a69110175533","likes_count":5,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"VisualStudio2013","versions":[]},{"name":"VisualStudio2015","versions":[]}],"title":"Visual Studioのreinterpret_castは盛大にバグっている","updated_at":"2016-05-13T02:20:08+09:00","url":"https://qiita.com/yumetodo/items/19278427a69110175533","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"前置き\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%89%8D%E7%BD%AE%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e前置き\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"話を始める前にbomとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A9%B1%E3%82%92%E5%A7%8B%E3%82%81%E3%82%8B%E5%89%8D%E3%81%ABbom%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e話を始める前にBOMとは\u003c/h2\u003e\n\n\u003cp\u003eバイトオーダーマーク (byte order mark)のことです。間違ってもBill of materialsとか東方シューティングのスペカでは無いです。\u003c/p\u003e\n\n\u003cp\u003eUnicodeを知らないプログラマは流石に存在しないと思うので割愛して、BOMとは一般にはファイルの先頭につけるもので\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eUTF-8\u003c/code\u003e/\u003ccode\u003eUTF-16\u003c/code\u003e/\u003ccode\u003eUTF-32\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003elittle endianness\u003c/code\u003e/\u003ccode\u003ebig endianness\u003c/code\u003e(UTF-8は除く)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eを判別するためにあります。やべぇ、わからん、という人は\u003cbr\u003e\n\u003ca href=\"http://cpplover.blogspot.jp/2013/09/utf-32-is-not-fixed-legnth-character.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eUTF-32 is NOT a fixed-legnth character encoding | 本の虫\u003c/a\u003e\u003cbr\u003e\nを見ましょう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"世の中のテキストファイルは大体utf-8-with-bomだという幻想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%96%E3%81%AE%E4%B8%AD%E3%81%AE%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AF%E5%A4%A7%E4%BD%93utf-8-with-bom%E3%81%A0%E3%81%A8%E3%81%84%E3%81%86%E5%B9%BB%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e世の中のテキストファイルは大体UTF-8 with BOMだ(という幻想)\u003c/h2\u003e\n\n\u003cp\u003eという幻想を信じるならバイナリエディタで覗くと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eEF BB BF\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eでファイルが始まることになります。\u003c/p\u003e\n\n\u003cp\u003eところでみんな、C++のソースコードはもちろんUTF-8 with BOMだよね？間違ってもShift-JISじゃないよね？(きっとそれをつかう職場もあるだろうな)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ところでcでファイルってどう開くよ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A8%E3%81%93%E3%82%8D%E3%81%A7c%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A3%E3%81%A6%E3%81%A9%E3%81%86%E9%96%8B%E3%81%8F%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eところでC++でファイルってどう開くよ？\u003c/h2\u003e\n\n\u003cp\u003eまさかfopenを使うC++erはいないと信じて(きっとそれをつかう職場もあるだろうな)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;fstream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eifstream\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari_na_text.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//なんか\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"これまで私がやってたbom-skiputf-8-only\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%82%8C%E3%81%BE%E3%81%A7%E7%A7%81%E3%81%8C%E3%82%84%E3%81%A3%E3%81%A6%E3%81%9Fbom-skiputf-8-only\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこれまで私がやってたbom skip(UTF-8 only)\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;fstream\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;codecvt\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eskip_utf8_bom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eifstream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eutf8\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xEF\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xBB\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xBF\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eequal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edst\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eutf8\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003efs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eseekg\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eifstream\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari_na_text.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimbue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eskip_utf8_bom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//なんか\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこの方法はwfstreamに適応できないので、それを使うには一回bom skipしてcode_cvt噛ませつつwstringstreamにいれて、とかいうよくわかんないことをやってた。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"今回紹介する方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%8A%E5%9B%9E%E7%B4%B9%E4%BB%8B%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e今回紹介する方法\u003c/h1\u003e\n\n\u003cp\u003eネタ元は忘れた。どっかのStack Overflowに書いてあった気がする。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;fstream\u0026gt;\n#include \u0026lt;codecvt\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewifstream\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari_na_text.txt\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"error.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//Linuxではつかうcvt違うから直してくれ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimbue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecodecvt_utf8_utf16\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x10ffff\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003econsume_header\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e()));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//なんか\u003c/span\u003e\n\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003estd::fstream::imbue()に渡すlocaleに渡すcodecvtのtemplate第三引数に\u003ccode\u003estd::consume_header\u003c/code\u003eを渡すのが肝です。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCeZCtZtVIAQI4wP.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=6c54c08f8a5f190374bd55b0908bf63b\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCeZCtZtVIAQI4wP.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=6c54c08f8a5f190374bd55b0908bf63b\" alt=\"bom skip image\" data-canonical-src=\"https://pbs.twimg.com/media/CeZCtZtVIAQI4wP.jpg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCeZCtZtVIAQI4wP.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=c1a80a6375f3c9b8314db3cfecc8c972 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003eC++11が使える環境ではbom skipも幸せだということです。いい加減C++03は卒業しましょう。(きっとできない職場もあるだろうな)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"余談\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%99%E8%AB%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e余談\u003c/h1\u003e\n\n\u003cp\u003e試してないけど、BOMを逆に書き出すには\u003ccode\u003estd::generate_header\u003c/code\u003eっていうのがあるっぽいよ。\u003c/p\u003e\n\n\u003cp\u003eにしてもそろそろ標準で自動文字コード判別してくれないかな・・・。BOMあるときだけでいいからさ\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"経緯\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%8C%E7%B7%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e経緯\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e picojsonの前にcsvデータの方をUTF-8にしようとしたら、ifsからgetlineでstringに読みこんだデータが壊れているせいでSplitしようがないのですけれど、この場合はどうしましょう？ \u003ca href=\"https://t.co/2wVqtGdswL\" rel=\"nofollow noopener\" target=\"_blank\"\u003epic.twitter.com/2wVqtGdswL\u003c/a\u003e\u003c/p\u003e— YSR@孤高の人間観察好き㌠ (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/703605271227031552\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年2月27日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/YSRKEN\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@YSRKEN\u003c/a\u003e そのまま問題なく読み込めていると思います。(BOMskipしてるなら)\u003cbr\u003eVSのデバッガはchar幅の変数はshft-JISとして表示するのでバグって見えるだけじゃないかと。\u003cbr\u003eそのまま読み込んでwstring_convertすればいいと思います\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/703607096772685825\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年2月27日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e つまり読み込んだら速攻でwstring_convertしてから、wstring前提で作った関数に突っ込んでよしなにですが……作業が一段落したらやってみます\u003c/p\u003e— YSR@孤高の人間観察好き㌠ (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/703607418341601280\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年2月27日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/YSRKEN\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@YSRKEN\u003c/a\u003e はい\u003cbr\u003ewifstreamのimubleにcodecvt指定する方法もあるのですが、bom skipが面倒になるのでおすすめしません。\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/703608117595013120\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年2月27日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e まさかBOMに対応できないとは思いませんでしたもの\u003c/p\u003e— YSR@孤高の人間観察好き㌠ (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/708725409454563328\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/YSRKEN\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@YSRKEN\u003c/a\u003e \u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e VC++のfopenにはBOM対応とかエンコーディング指定とかの拡張があるんですが、iostreamは構造上、拡張できませんからねぇ…。fopenで開いてからiostreamに渡すとかぐらいしか \u003ca href=\"https://t.co/VRV02aat4X\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/VRV02aat4X\u003c/a\u003e\u003c/p\u003e— はぇ～☆ (@haxe) \u003ca href=\"https://twitter.com/haxe/status/708754657376505856\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月12日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/haxe\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@haxe\u003c/a\u003e \u003ca href=\"https://twitter.com/YSRKEN\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@YSRKEN\u003c/a\u003e 別にKCS_KAIでやっているように、BOMskip書くのは全然難しくないですよ、istreamならね。なおwistreamは(ry\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/708838794326192128\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月13日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/YSRKEN\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@YSRKEN\u003c/a\u003e 肝心なのはBOM skipだけでなく、UTF-16、UTF-8の自動デコードですよ。そんなのライブラリでやってほしいものです。\u003c/p\u003e— はぇ～☆ (@haxe) \u003ca href=\"https://twitter.com/haxe/status/708842320813101060\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月13日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003estd::codecvt_utf8_utf16のtemplate引数の3番めに\u003cbr\u003estd::codecvt_modeなるものが指定できて\u003cbr\u003estd::consume_headerを指定するとBOMskipしてくれる！！！！！ \u003ca href=\"https://t.co/ZvKMJj3DsC\" rel=\"nofollow noopener\" target=\"_blank\"\u003epic.twitter.com/ZvKMJj3DsC\u003c/a\u003e\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713327049260146690\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月25日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eいやぁ。これでUTF-8withBOMなファイルのBOMskipのためにわざわざ一回wstringstreamに読み込まなくてすむ！\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713328421971963904\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月25日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eいやぁ、素晴らしいね。これでBOMskip面倒だからと勧めづらかったWindows環境でのUTF-8withBOMなファイルのIOも薦められる！\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713329212321468416\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月25日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e祝！完全勝利！\u003cbr\u003eバイナリエディタで見えるBOM(EFBBBF)がskipされて読み込めているのがわかる \u003ca href=\"https://t.co/IQwtXWfblv\" rel=\"nofollow noopener\" target=\"_blank\"\u003epic.twitter.com/IQwtXWfblv\u003c/a\u003e\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713330939623936000\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年3月25日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003ch1\u003e\n\u003cspan id=\"追記-c17時代での対処\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-c17%E6%99%82%E4%BB%A3%E3%81%A7%E3%81%AE%E5%AF%BE%E5%87%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記: C++17時代での対処\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003estd::codecvt_utf8_utf16\u003c/code\u003eはdeprecatedになっているので、そもそもwchar_t系を利用しないで内部的にもUTF-8で扱うということでしょうね。そうすれば「これまで私がやってたbom skip」の項が使える。\u003c/p\u003e\n","body":"# 前置き\n## 話を始める前にBOMとは\n\nバイトオーダーマーク (byte order mark)のことです。間違ってもBill of materialsとか東方シューティングのスペカでは無いです。\n\nUnicodeを知らないプログラマは流石に存在しないと思うので割愛して、BOMとは一般にはファイルの先頭につけるもので\n\n- ``UTF-8``/``UTF-16``/``UTF-32``\n- ``little endianness``/``big endianness ``(UTF-8は除く)\n\nを判別するためにあります。やべぇ、わからん、という人は\n[UTF-32 is NOT a fixed-legnth character encoding | 本の虫](http://cpplover.blogspot.jp/2013/09/utf-32-is-not-fixed-legnth-character.html)\nを見ましょう。\n\n## 世の中のテキストファイルは大体UTF-8 with BOMだ(という幻想)\n\nという幻想を信じるならバイナリエディタで覗くと\n\n```\nEF BB BF\n```\n\nでファイルが始まることになります。\n\nところでみんな、C++のソースコードはもちろんUTF-8 with BOMだよね？間違ってもShift-JISじゃないよね？(きっとそれをつかう職場もあるだろうな)\n\n## ところでC++でファイルってどう開くよ？\n\nまさかfopenを使うC++erはいないと信じて(きっとそれをつかう職場もあるだろうな)\n\n```cpp\n#include \u003cfstream\u003e\nint main()\n{\n    std::ifstream file(\"arikitari_na_text.txt\");\n    if(!file) return -1;\n    //なんか\n}\n```\n\n# これまで私がやってたbom skip(UTF-8 only)\n\n```cpp\n#include \u003cfstream\u003e\n#include \u003calgorithm\u003e\n#include \u003ccodecvt\u003e\nvoid skip_utf8_bom(std::ifstream\u0026 fs) {\n\tint dst[3];\n\tfor (auto\u0026 i : dst) i = fs.get();\n\tconstexpr int utf8[] = { 0xEF, 0xBB, 0xBF };\n\tif (!std::equal(std::begin(dst), std::end(dst), utf8)) fs.seekg(0);\n}\nint main()\n{\n    std::ifstream file;\n    file.open(\"arikitari_na_text.txt\");\n    file.imbue(std::locale());\n    skip_utf8_bom(file);\n    if(!file) return -1;\n    //なんか\n}\n```\n\nこの方法はwfstreamに適応できないので、それを使うには一回bom skipしてcode_cvt噛ませつつwstringstreamにいれて、とかいうよくわかんないことをやってた。\n\n# 今回紹介する方法\n\nネタ元は忘れた。どっかのStack Overflowに書いてあった気がする。\n\n```cpp\n#include \u003cfstream\u003e\n#include \u003ccodecvt\u003e\nint main()\n    std::wifstream file;\n    file.open(\"arikitari_na_text.txt\");\n    static_assert(sizeof(wchar_t) == 2, \"error.\");//Linuxではつかうcvt違うから直してくれ\n    file.imbue(std::locale(std::locale(\"\"), new std::codecvt_utf8_utf16\u003cwchar_t, 0x10ffff, std::consume_header\u003e()));\n    if(!file) return -1;\n    //なんか\n}\n```\n\nstd::fstream::imbue()に渡すlocaleに渡すcodecvtのtemplate第三引数に``std::consume_header``を渡すのが肝です。\n\n![bom skip image](https://pbs.twimg.com/media/CeZCtZtVIAQI4wP.jpg)\n\n# 結論\n\nC++11が使える環境ではbom skipも幸せだということです。いい加減C++03は卒業しましょう。(きっとできない職場もあるだろうな)\n\n# 余談\n\n試してないけど、BOMを逆に書き出すには``std::generate_header``っていうのがあるっぽいよ。\n\nにしてもそろそろ標準で自動文字コード判別してくれないかな・・・。BOMあるときだけでいいからさ\n\n# 経緯\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e picojsonの前にcsvデータの方をUTF-8にしようとしたら、ifsからgetlineでstringに読みこんだデータが壊れているせいでSplitしようがないのですけれど、この場合はどうしましょう？ \u003ca href=\"https://t.co/2wVqtGdswL\"\u003epic.twitter.com/2wVqtGdswL\u003c/a\u003e\u003c/p\u003e\u0026mdash; YSR@孤高の人間観察好き㌠ (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/703605271227031552\"\u003e2016年2月27日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/YSRKEN\"\u003e@YSRKEN\u003c/a\u003e そのまま問題なく読み込めていると思います。(BOMskipしてるなら)\u003cbr\u003eVSのデバッガはchar幅の変数はshft-JISとして表示するのでバグって見えるだけじゃないかと。\u003cbr\u003eそのまま読み込んでwstring_convertすればいいと思います\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/703607096772685825\"\u003e2016年2月27日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e つまり読み込んだら速攻でwstring_convertしてから、wstring前提で作った関数に突っ込んでよしなにですが……作業が一段落したらやってみます\u003c/p\u003e\u0026mdash; YSR@孤高の人間観察好き㌠ (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/703607418341601280\"\u003e2016年2月27日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/YSRKEN\"\u003e@YSRKEN\u003c/a\u003e はい\u003cbr\u003ewifstreamのimubleにcodecvt指定する方法もあるのですが、bom skipが面倒になるのでおすすめしません。\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/703608117595013120\"\u003e2016年2月27日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e まさかBOMに対応できないとは思いませんでしたもの\u003c/p\u003e\u0026mdash; YSR@孤高の人間観察好き㌠ (@YSRKEN) \u003ca href=\"https://twitter.com/YSRKEN/status/708725409454563328\"\u003e2016年3月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/YSRKEN\"\u003e@YSRKEN\u003c/a\u003e \u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e VC++のfopenにはBOM対応とかエンコーディング指定とかの拡張があるんですが、iostreamは構造上、拡張できませんからねぇ…。fopenで開いてからiostreamに渡すとかぐらいしか \u003ca href=\"https://t.co/VRV02aat4X\"\u003ehttps://t.co/VRV02aat4X\u003c/a\u003e\u003c/p\u003e\u0026mdash; はぇ～☆ (@haxe) \u003ca href=\"https://twitter.com/haxe/status/708754657376505856\"\u003e2016年3月12日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/haxe\"\u003e@haxe\u003c/a\u003e \u003ca href=\"https://twitter.com/YSRKEN\"\u003e@YSRKEN\u003c/a\u003e 別にKCS_KAIでやっているように、BOMskip書くのは全然難しくないですよ、istreamならね。なおwistreamは(ry\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/708838794326192128\"\u003e2016年3月13日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e \u003ca href=\"https://twitter.com/YSRKEN\"\u003e@YSRKEN\u003c/a\u003e 肝心なのはBOM skipだけでなく、UTF-16、UTF-8の自動デコードですよ。そんなのライブラリでやってほしいものです。\u003c/p\u003e\u0026mdash; はぇ～☆ (@haxe) \u003ca href=\"https://twitter.com/haxe/status/708842320813101060\"\u003e2016年3月13日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003estd::codecvt_utf8_utf16のtemplate引数の3番めに\u003cbr\u003estd::codecvt_modeなるものが指定できて\u003cbr\u003estd::consume_headerを指定するとBOMskipしてくれる！！！！！ \u003ca href=\"https://t.co/ZvKMJj3DsC\"\u003epic.twitter.com/ZvKMJj3DsC\u003c/a\u003e\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713327049260146690\"\u003e2016年3月25日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eいやぁ。これでUTF-8withBOMなファイルのBOMskipのためにわざわざ一回wstringstreamに読み込まなくてすむ！\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713328421971963904\"\u003e2016年3月25日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eいやぁ、素晴らしいね。これでBOMskip面倒だからと勧めづらかったWindows環境でのUTF-8withBOMなファイルのIOも薦められる！\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713329212321468416\"\u003e2016年3月25日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e祝！完全勝利！\u003cbr\u003eバイナリエディタで見えるBOM(EFBBBF)がskipされて読み込めているのがわかる \u003ca href=\"https://t.co/IQwtXWfblv\"\u003epic.twitter.com/IQwtXWfblv\u003c/a\u003e\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/713330939623936000\"\u003e2016年3月25日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n# 追記: C++17時代での対処\n\n`std::codecvt_utf8_utf16`はdeprecatedになっているので、そもそもwchar_t系を利用しないで内部的にもUTF-8で扱うということでしょうね。そうすれば「これまで私がやってたbom skip」の項が使える。\n","coediting":false,"comments_count":0,"created_at":"2016-04-30T13:00:07+09:00","group":null,"id":"3744afa94ab029f4e1d5","likes_count":6,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C++14","versions":[]},{"name":"C++17","versions":[]}],"title":"C++のstreamでbom skipする方法をまた忘れないうちに書き留める","updated_at":"2018-10-19T00:33:40+09:00","url":"https://qiita.com/yumetodo/items/3744afa94ab029f4e1d5","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e事実上のonline Linux環境とも言えるサイトが有ります。もちろんC++11も使えます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.tutorialspoint.com/compile_cpp11_online.php\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.tutorialspoint.com/compile_cpp11_online.php\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eしかもSIMDも使えるらしい。\u003cdel\u003eSIMD使えるオンラインコンパイラほかにあったっけ？\u003c/del\u003e(追記: Wandboxで\u003ca href=\"http://qiita.com/yumetodo/items/ef24708900b0535aa28c#%E3%81%BE%E3%81%9A%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AA%E3%81%AE%E3%81%8B%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" id=\"reference-c9ff035c767b80f62ef7\"\u003eAVXまで使えるようになりました\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://mavericktse.mooo.com/wordpress/archives/2330\" rel=\"nofollow noopener\" target=\"_blank\"\u003eA free online C++ IDE with SIMD capability and more | 舶来ゴミ置き場\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ewgetなんかもできるけど、調子に乗ってffmpegとか落とさないように。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"git-cloneできない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#git-clone%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egit cloneできない\u003c/h1\u003e\n\n\u003cp\u003eで、こいつがなかなかに優秀なのですが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egit clone https://github.com/YSRKEN/Shioi.git\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eみたいなことをすると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003efatal: unable to look up current user in the passwd file: no such user \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと怒られてしまいます。\u003c/p\u003e\n\n\u003cp\u003eかと言って権限的に`\u003ccode\u003egit config --global\u003c/code\u003eは使えません。どうするか。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"解決策\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決策\u003c/h1\u003e\n\n\u003cp\u003eわりと簡単です。globalにconfigできないならlocalにconfigすればいいですね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emkdir Shioi\ncd Shioi\ngit init \ngit config user.name \"なまえ\"\ngit config user.email \"めるあど\"\ngit remote add origin https://github.com/YSRKEN/Shioi.git\ngit fetch\ngit merge origin/master\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eやったぜ。\u003c/p\u003e\n","body":"事実上のonline Linux環境とも言えるサイトが有ります。もちろんC++11も使えます。\n\nhttp://www.tutorialspoint.com/compile_cpp11_online.php\n\nしかもSIMDも使えるらしい。~~SIMD使えるオンラインコンパイラほかにあったっけ？~~(追記: Wandboxで[AVXまで使えるようになりました](http://qiita.com/yumetodo/items/ef24708900b0535aa28c#%E3%81%BE%E3%81%9A%E3%81%AF%E3%81%A9%E3%82%93%E3%81%AA%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AA%E3%81%AE%E3%81%8B%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86))\n\n[A free online C++ IDE with SIMD capability and more | 舶来ゴミ置き場](http://mavericktse.mooo.com/wordpress/archives/2330)\n\nwgetなんかもできるけど、調子に乗ってffmpegとか落とさないように。\n\n\n# git cloneできない\nで、こいつがなかなかに優秀なのですが\n\n```\ngit clone https://github.com/YSRKEN/Shioi.git\n```\n\nみたいなことをすると\n\n```\nfatal: unable to look up current user in the passwd file: no such user \n```\n\nと怒られてしまいます。\n\nかと言って権限的に```git config --global``は使えません。どうするか。\n\n# 解決策\n\nわりと簡単です。globalにconfigできないならlocalにconfigすればいいですね。\n\n```\nmkdir Shioi\ncd Shioi\ngit init \ngit config user.name \"なまえ\"\ngit config user.email \"めるあど\"\ngit remote add origin https://github.com/YSRKEN/Shioi.git\ngit fetch\ngit merge origin/master\n```\n\nやったぜ。\n","coediting":false,"comments_count":0,"created_at":"2016-04-28T13:21:41+09:00","group":null,"id":"1b1524a1ac591b5d07fb","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"Git","versions":[]},{"name":"tutorialspoint","versions":[]}],"title":"tutorialspoint.comでgitを使う","updated_at":"2017-07-17T00:45:01+09:00","url":"https://qiita.com/yumetodo/items/1b1524a1ac591b5d07fb","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e知らない人のために\u003c/p\u003e\n\n\u003cp\u003eはてなブログ\u003cbr\u003e\n\u003ca href=\"http://hatenablog.com/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://hatenablog.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eGoogle Photos\u003cbr\u003e\n\u003ca href=\"https://photos.google.com/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://photos.google.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこの2つのサービスを連携させて使っていきます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"目標\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%AE%E6%A8%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e目標\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eMarkdownってどう発音するのか覚える\u003c/li\u003e\n\u003cli\u003eMarkdownの書き方を覚える\u003c/li\u003e\n\u003cli\u003eGoogle Photosに写真を上げる方法を覚える\u003c/li\u003e\n\u003cli\u003eはてなブログの記事にGoogle Photosの写真を載せる方法を覚える\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"markdownってどう発音するの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E3%81%A3%E3%81%A6%E3%81%A9%E3%81%86%E7%99%BA%E9%9F%B3%E3%81%99%E3%82%8B%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdownってどう発音するの?\u003c/h1\u003e\n\n\u003cp\u003eマークダウン、です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"markdownとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdownとは\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://ja.wikipedia.org/wiki/Markdown\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ja.wikipedia.org/wiki/Markdown\u003c/a\u003e\u003cbr\u003e\nMarkdown（マークダウン）は、文書を記述するための\u003ca href=\"https://ja.wikipedia.org/wiki/%E8%BB%BD%E9%87%8F%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E8%A8%80%E8%AA%9E\" rel=\"nofollow noopener\" target=\"_blank\"\u003e軽量マークアップ言語\u003c/a\u003eのひとつである。本来は\u003ca href=\"https://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AC%E3%83%BC%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\"\u003eプレーンテキスト\u003c/a\u003e形式で手軽に書いた文書から\u003ca href=\"https://ja.wikipedia.org/wiki/HTML\" rel=\"nofollow noopener\" target=\"_blank\"\u003eHTML\u003c/a\u003eを生成するために開発されたものである。しかし、現在ではHTMLのほか\u003ca href=\"https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%AF%E3%83%BC%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\" rel=\"nofollow noopener\" target=\"_blank\"\u003eパワーポイント\u003c/a\u003e形式や\u003ca href=\"https://ja.wikipedia.org/wiki/LaTeX\" rel=\"nofollow noopener\" target=\"_blank\"\u003eLATEX\u003c/a\u003e形式のファイルへ変換するソフトウェア（\u003ca href=\"https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF\" rel=\"nofollow noopener\" target=\"_blank\"\u003eコンバータ\u003c/a\u003e）も開発されている。各コンバータの開発者によって多様な拡張が施されるため、各種の\u003ca href=\"https://ja.wikipedia.org/wiki/%E6%96%B9%E8%A8%80_(%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E)\" rel=\"nofollow noopener\" target=\"_blank\"\u003e方言\u003c/a\u003eが存在する。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eなんだかわかったようなわかんないような。\u003c/p\u003e\n\n\u003cp\u003eまずHTMLというのがあります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eありきたりなHTML\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u003c/span\u003e \u003cspan class=\"na\"\u003elang=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ja\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"UTF-8\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003eDocument\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eありきたりなタイトル\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eありきたりな世界\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://www.example.com\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eありきたりなリンク\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt;\u003c/span\u003eありきたりな文章\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;blockquote\u0026gt;\u003c/span\u003e\n        ありきたりな引用文と\u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://www.example.com\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eありきたりなリンク\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/blockquote\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんなテキストです。Webページはこれを使って書かれています。\u003c/p\u003e\n\n\u003cp\u003eでただこれを書くのは(入力補完でマシになりますが)めんdです。そこでMarkdownの出番です。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e# ありきたりなタイトル\n\nありきたりな世界\n\n[ありきたりなリンク](http://www.example.com)  \nありきたりな文章\n\n\u0026gt;ありきたりな引用文と[ありきたりなリンク](http://www.example.com)  \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eまあま見やすいですよね？で、これをmarkdownのパーサー(コンバーター)に通すと上のhtmlに変換されて\u003c/p\u003e\n\n\u003cblockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ありきたりなタイトル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%82%E3%82%8A%E3%81%8D%E3%81%9F%E3%82%8A%E3%81%AA%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eありきたりなタイトル\u003c/h1\u003e\n\n\u003cp\u003eありきたりな世界\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.example.com\" rel=\"nofollow noopener\" target=\"_blank\"\u003eありきたりなリンク\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nありきたりな文章\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eありきたりな引用文と\u003ca href=\"http://www.example.com\" rel=\"nofollow noopener\" target=\"_blank\"\u003eありきたりなリンク\u003c/a\u003e  \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eという感じで表示できます。というかこの解説記事もMarkdownで書いています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"markdwon入門n番煎じ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdwon%E5%85%A5%E9%96%80n%E7%95%AA%E7%85%8E%E3%81%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdwon入門(n番煎じ)\u003c/h1\u003e\n\n\u003cp\u003e掃いて捨てるほどMarkdownの解説はありますが、一応解説しておきます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"普通の文章を書くには\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%99%AE%E9%80%9A%E3%81%AE%E6%96%87%E7%AB%A0%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%AB%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e普通の文章を書くには\u003c/h2\u003e\n\n\u003cp\u003eそのまま書くだけです\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e文章\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eありきたりな文章\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eありきたりな文章\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"段落分けしたい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%AE%B5%E8%90%BD%E5%88%86%E3%81%91%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e段落分けしたい\u003c/h2\u003e\n\n\u003cp\u003e空行を作ります\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e空行の作り方\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eありきたりな文章\n\nありきたりとは\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eありきたりな文章\u003c/p\u003e\n\n\u003cp\u003eありきたりとは\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"改行したい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%94%B9%E8%A1%8C%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e改行したい\u003c/h2\u003e\n\n\u003cp\u003eこれが2つの流儀がありまして\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e改行するだけでいい(GitHub, Qiitaなど)\u003c/li\u003e\n\u003cli\u003eスペース2つ+改行(\u003cstrong\u003eはてなブログなど\u003c/strong\u003e)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eGithubなど\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eありきたりな文章\nありきたりとは\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eはてななど\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eありきたりな文章__\nありきたりとは\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003e_\u003c/code\u003eはスペースに読み替えてください。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eありきたりな文章\u003cbr\u003e\nありきたりとは\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"太字にする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%AA%E5%AD%97%E3%81%AB%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e太字にする\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e太字\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e**ありきたり**な文章\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eありきたり\u003c/strong\u003eな文章\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"太字ではないけど強調したい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%AA%E5%AD%97%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%84%E3%81%91%E3%81%A9%E5%BC%B7%E8%AA%BF%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e太字ではないけど強調したい\u003c/h2\u003e\n\n\u003cp\u003eアルファベットのキーワードの強調に使うことが多い。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e行内引用\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eありきたりな文章に``const``という文字が紛れ込む\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eありきたりな文章に\u003ccode\u003econst\u003c/code\u003eという文字が紛れ込む\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"箇条書き\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%AE%87%E6%9D%A1%E6%9B%B8%E3%81%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e箇条書き\u003c/h2\u003e\n\n\u003cp\u003eこれが分かりやすくて、私大好きです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e2種類の箇条書き\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e- ``Simulator::AirWarPhase``の``vector\u0026lt;int\u0026gt; anti_air_score``をarrayに\n- ``Fleet::RandomKammusuSS``の``vector\u0026lt;size_t\u0026gt; list``, ``vector\u0026lt;KammusuIndex\u0026gt; alived_list``のarray化\n- ``Simulator::TorpedoPhase``の``vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; all_damage``のarray化\n- ``Fleet::SearchValue``の高速化(無理じゃね？)\n- ``Simulator::Calc``のreturn文のstd::make_tupleでvectorがコピーされている・・・？\n-  ``Result::JudgeWinReason``からvectorを排除する\n- constexpr化の促進\n\n1. gitが使える端末を立ち上げる\n2. ``git config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"``する(パスは読み替えてください)\n3. 以上\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eSimulator::AirWarPhase\u003c/code\u003eの\u003ccode\u003evector\u0026lt;int\u0026gt; anti_air_score\u003c/code\u003eをarrayに\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eFleet::RandomKammusuSS\u003c/code\u003eの\u003ccode\u003evector\u0026lt;size_t\u0026gt; list\u003c/code\u003e, \u003ccode\u003evector\u0026lt;KammusuIndex\u0026gt; alived_list\u003c/code\u003eのarray化\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSimulator::TorpedoPhase\u003c/code\u003eの\u003ccode\u003evector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; all_damage\u003c/code\u003eのarray化\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eFleet::SearchValue\u003c/code\u003eの高速化(無理じゃね？)\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eSimulator::Calc\u003c/code\u003eのreturn文のstd::make_tupleでvectorがコピーされている・・・？\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eResult::JudgeWinReason\u003c/code\u003eからvectorを排除する\u003c/li\u003e\n\u003cli\u003econstexpr化の促進\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003col\u003e\n\u003cli\u003egitが使える端末を立ち上げる\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"\u003c/code\u003eする(パスは読み替えてください)\u003c/li\u003e\n\u003cli\u003e以上\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"リンクを貼りたい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E8%B2%BC%E3%82%8A%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eリンクを貼りたい\u003c/h2\u003e\n\n\u003cp\u003eサービスによっては、URLを貼るとそのままリンクが付くこともありますが(Github, Qiitaなど)任意の文にリンクを付けたいこともあるので覚えましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eLinkをはる\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e[C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml)\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11の文法と機能(C++11: Syntax and Feature)\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"引用したい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BC%95%E7%94%A8%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e引用したい\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e引用\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u0026gt;[C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml)\n\u0026gt;宣言とは、ある名前が、その翻訳単位で、何を意味するのかということを、明示するためにある。\n\n\u0026gt;定義とは、名前の指し示すものを、具体的に記述することである。宣言と定義は、多くの場合、同時に行われることが多いので、あまり意識しづらい。 \n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cblockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syn%0Atax-and-Feature.xhtml\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11の文法と機能(C++11: Syntax and Feature)\u003c/a\u003e\u003cbr\u003e\n宣言とは、ある名前が、その翻訳単位で、何を意味するのかということを、明示するためにある。\u003c/p\u003e\n\n\u003cp\u003e定義とは、名前の指し示すものを、具体的に記述することである。宣言と定義は、多くの場合、同時に行われることが多いので、あまり意識しづらい。 \u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"写真を貼りたい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%86%99%E7%9C%9F%E3%82%92%E8%B2%BC%E3%82%8A%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e写真を貼りたい\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"markdown的には\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E7%9A%84%E3%81%AB%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdown的には\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e画像をはる\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e![画像の説明](画像へのリンク)\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"google-photosを使おう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#google-photos%E3%82%92%E4%BD%BF%E3%81%8A%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGoogle Photosを使おう\u003c/h1\u003e\n\n\u003cp\u003e4592×3448まで(1,600万画素)なら容量を消費せずに写真を保管できるすぐれものです。写真も簡単に上げられます。\u003c/p\u003e\n\n\u003cp\u003eはてなブログは容量が小さいらしいので写真はここを使いましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はてなブログで写真を貼るには\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%AD%E3%82%B0%E3%81%A7%E5%86%99%E7%9C%9F%E3%82%92%E8%B2%BC%E3%82%8B%E3%81%AB%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはてなブログで写真を貼るには\u003c/h1\u003e\n\n\u003cp\u003e便利なことにはてなブログではGoogle Photosと連携しています。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8e2e82ba-fe91-a7e0-1728-e43f796aa34b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d250a902996f8ebfe4952760d4a42432\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8e2e82ba-fe91-a7e0-1728-e43f796aa34b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d250a902996f8ebfe4952760d4a42432\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/8e2e82ba-fe91-a7e0-1728-e43f796aa34b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8e2e82ba-fe91-a7e0-1728-e43f796aa34b.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=8e76b622c868d66a7125b0a1a14fe7f8 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F753ab9ef-d1f0-befc-4d0e-c20b882a64d6.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cff1b5919c086588c4a7b23a15a57180\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F753ab9ef-d1f0-befc-4d0e-c20b882a64d6.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cff1b5919c086588c4a7b23a15a57180\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/753ab9ef-d1f0-befc-4d0e-c20b882a64d6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F753ab9ef-d1f0-befc-4d0e-c20b882a64d6.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=943f9406da17a9f384ab1ed4aeb5ac10 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fba4f13e6-4138-b0b2-e994-b8142949d6ad.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=60e1b4cc4c705c80856a01f52c6f9079\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fba4f13e6-4138-b0b2-e994-b8142949d6ad.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=60e1b4cc4c705c80856a01f52c6f9079\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/ba4f13e6-4138-b0b2-e994-b8142949d6ad.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fba4f13e6-4138-b0b2-e994-b8142949d6ad.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d983dc92a500ff014fd24ba505b8494f 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F49cf171f-25f6-9c61-04f1-4c50b8bcab1d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=0c4160ce6e6da5cdeabdd602c645dbe2\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F49cf171f-25f6-9c61-04f1-4c50b8bcab1d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=0c4160ce6e6da5cdeabdd602c645dbe2\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/49cf171f-25f6-9c61-04f1-4c50b8bcab1d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F49cf171f-25f6-9c61-04f1-4c50b8bcab1d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1ab1be4722757a16f7c53c010bf5e546 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fc8094fdc-c149-3a9b-1586-09ef7522b80e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=89000e91f521d73bb4c93f6ada3e66cf\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fc8094fdc-c149-3a9b-1586-09ef7522b80e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=89000e91f521d73bb4c93f6ada3e66cf\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/c8094fdc-c149-3a9b-1586-09ef7522b80e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fc8094fdc-c149-3a9b-1586-09ef7522b80e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=16c8241c79909cf3c831fb21ebc8ba13 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fedb15cde-37d4-6e34-1193-016f1d1a79ad.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3e7a2395d6e586e3837c4ff4b3a78123\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fedb15cde-37d4-6e34-1193-016f1d1a79ad.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3e7a2395d6e586e3837c4ff4b3a78123\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/edb15cde-37d4-6e34-1193-016f1d1a79ad.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fedb15cde-37d4-6e34-1193-016f1d1a79ad.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3a41ec64cfb9f8b93f34386e2fe5bbcd 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F09e8e17b-7887-a694-2414-5ac09732dd2e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=eedd5fdd30011b447209474ed98af9c8\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F09e8e17b-7887-a694-2414-5ac09732dd2e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=eedd5fdd30011b447209474ed98af9c8\" alt=\"ブログ記事編集 - はてなブログ.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/09e8e17b-7887-a694-2414-5ac09732dd2e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F09e8e17b-7887-a694-2414-5ac09732dd2e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=307c307c5d139d306e153729780ebb49 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eなんかMarkdownじゃなくてHTMLなのが残念ですが気にしない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"markdownをもっと楽に書くために\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E3%82%92%E3%82%82%E3%81%A3%E3%81%A8%E6%A5%BD%E3%81%AB%E6%9B%B8%E3%81%8F%E3%81%9F%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdownをもっと楽に書くために\u003c/h1\u003e\n\n\u003cp\u003eVisual Studio Codeという物がありまして、このソフトを使うとプレビューしながら、コードの色分けもありつつ書けます。\u003c/p\u003e\n\n\u003cp\u003e詳細は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/1a8d371a20ba9a50eeaf\" id=\"reference-abb1e3ee9308228f786f\"\u003eVisualStudioCodeで最速で俺流Markdown編集環境を構築する\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"終わりに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%82%E3%82%8F%E3%82%8A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e終わりに\u003c/h1\u003e\n\n\u003cp\u003e(まともな)プログラマとちょっとした文章をやり取りするときはMarkdownにするといいでしょう。\u003c/p\u003e\n","body":"# はじめに\n\n知らない人のために\n\nはてなブログ\nhttp://hatenablog.com/\n\nGoogle Photos\nhttps://photos.google.com/\n\nこの2つのサービスを連携させて使っていきます。\n\n# 目標\n\n- Markdownってどう発音するのか覚える\n- Markdownの書き方を覚える\n- Google Photosに写真を上げる方法を覚える\n- はてなブログの記事にGoogle Photosの写真を載せる方法を覚える\n\n# Markdownってどう発音するの?\n\nマークダウン、です。\n\n# Markdownとは\n\n\u003ehttps://ja.wikipedia.org/wiki/Markdown\n\u003eMarkdown（マークダウン）は、文書を記述するための[軽量マークアップ言語](https://ja.wikipedia.org/wiki/%E8%BB%BD%E9%87%8F%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E8%A8%80%E8%AA%9E)のひとつである。本来は[プレーンテキスト](https://ja.wikipedia.org/wiki/%E3%83%97%E3%83%AC%E3%83%BC%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88)形式で手軽に書いた文書から[HTML](https://ja.wikipedia.org/wiki/HTML)を生成するために開発されたものである。しかし、現在ではHTMLのほか[パワーポイント](https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%AF%E3%83%BC%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88)形式や[LATEX](https://ja.wikipedia.org/wiki/LaTeX)形式のファイルへ変換するソフトウェア（[コンバータ](https://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF)）も開発されている。各コンバータの開発者によって多様な拡張が施されるため、各種の[方言](https://ja.wikipedia.org/wiki/%E6%96%B9%E8%A8%80_(%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E))が存在する。\n\nなんだかわかったようなわかんないような。\n\nまずHTMLというのがあります。\n\n```html:ありきたりなHTML\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ja\"\u003e\n\u003chead\u003e\n\t\u003cmeta charset=\"UTF-8\"\u003e\n\t\u003ctitle\u003eDocument\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\t\u003ch1\u003eありきたりなタイトル\u003c/h1\u003e\n\t\u003cp\u003eありきたりな世界\u003c/p\u003e\n\t\u003cp\u003e\u003ca href=\"http://www.example.com\"\u003eありきたりなリンク\u003c/a\u003e\u003cbr\u003eありきたりな文章\u003c/p\u003e\n\t\u003cblockquote\u003e\n\t\tありきたりな引用文と\u003ca href=\"http://www.example.com\"\u003eありきたりなリンク\u003c/a\u003e\n\t\u003c/blockquote\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n````\n\nこんなテキストです。Webページはこれを使って書かれています。\n\nでただこれを書くのは(入力補完でマシになりますが)めんdです。そこでMarkdownの出番です。\n\n```\n# ありきたりなタイトル\n\nありきたりな世界\n\n[ありきたりなリンク](http://www.example.com)  \nありきたりな文章\n\n\u003eありきたりな引用文と[ありきたりなリンク](http://www.example.com)  \n```\n\nまあま見やすいですよね？で、これをmarkdownのパーサー(コンバーター)に通すと上のhtmlに変換されて\n\n\u003e# ありきたりなタイトル\n\n\u003eありきたりな世界\n\n\u003e[ありきたりなリンク](http://www.example.com)  \n\u003eありきたりな文章\n\n\u003e\u003eありきたりな引用文と[ありきたりなリンク](http://www.example.com)  \n\nという感じで表示できます。というかこの解説記事もMarkdownで書いています。\n\n# Markdwon入門(n番煎じ)\n\n掃いて捨てるほどMarkdownの解説はありますが、一応解説しておきます。\n\n## 普通の文章を書くには\n\nそのまま書くだけです\n\n```plain:文章\nありきたりな文章\n```\n\n\u003eありきたりな文章\n\n## 段落分けしたい\n\n空行を作ります\n\n```plain:空行の作り方\nありきたりな文章\n\nありきたりとは\n```\n\n\u003eありきたりな文章\n\n\u003eありきたりとは\n\n## 改行したい\n\nこれが2つの流儀がありまして\n\n1. 改行するだけでいい(GitHub, Qiitaなど)\n2. スペース2つ+改行(**はてなブログなど**)\n\n```plain:Githubなど\nありきたりな文章\nありきたりとは\n```\n\n```plain:はてななど\nありきたりな文章__\nありきたりとは\n```\n\n``_``はスペースに読み替えてください。\n\n\u003eありきたりな文章\nありきたりとは\n\n## 太字にする\n\n```plain:太字\n**ありきたり**な文章\n```\n\n\u003e**ありきたり**な文章\n\n## 太字ではないけど強調したい\n\nアルファベットのキーワードの強調に使うことが多い。\n\n```plain:行内引用\nありきたりな文章に``const``という文字が紛れ込む\n```\n\n\u003eありきたりな文章に``const``という文字が紛れ込む\n\n\n## 箇条書き\n\nこれが分かりやすくて、私大好きです。\n\n```plain:2種類の箇条書き\n- ``Simulator::AirWarPhase``の``vector\u003cint\u003e anti_air_score``をarrayに\n- ``Fleet::RandomKammusuSS``の``vector\u003csize_t\u003e list``, ``vector\u003cKammusuIndex\u003e alived_list``のarray化\n- ``Simulator::TorpedoPhase``の``vector\u003cvector\u003cint\u003e\u003e all_damage``のarray化\n- ``Fleet::SearchValue``の高速化(無理じゃね？)\n- ``Simulator::Calc``のreturn文のstd::make_tupleでvectorがコピーされている・・・？\n-  ``Result::JudgeWinReason``からvectorを排除する\n- constexpr化の促進\n\n1. gitが使える端末を立ち上げる\n2. ``git config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"``する(パスは読み替えてください)\n3. 以上\n```\n\n\u003e- ``Simulator::AirWarPhase``の``vector\u003cint\u003e anti_air_score``をarrayに\n- ``Fleet::RandomKammusuSS``の``vector\u003csize_t\u003e list``, ``vector\u003cKammusuIndex\u003e alived_list``のarray化\n- ``Simulator::TorpedoPhase``の``vector\u003cvector\u003cint\u003e\u003e all_damage``のarray化\n- ``Fleet::SearchValue``の高速化(無理じゃね？)\n- ``Simulator::Calc``のreturn文のstd::make_tupleでvectorがコピーされている・・・？\n- ``Result::JudgeWinReason``からvectorを排除する\n- constexpr化の促進\n\n\n\u003e1. gitが使える端末を立ち上げる\n2. ``git config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"``する(パスは読み替えてください)\n3. 以上\n\n## リンクを貼りたい\n\nサービスによっては、URLを貼るとそのままリンクが付くこともありますが(Github, Qiitaなど)任意の文にリンクを付けたいこともあるので覚えましょう。\n\n```plain:Linkをはる\n[C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml)\n```\n\n\u003e[C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml)\n\n\n\n\n## 引用したい\n\n```plain:引用\n\u003e[C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml)\n\u003e宣言とは、ある名前が、その翻訳単位で、何を意味するのかということを、明示するためにある。\n\n\u003e定義とは、名前の指し示すものを、具体的に記述することである。宣言と定義は、多くの場合、同時に行われることが多いので、あまり意識しづらい。 \n```\n\n\u003e\u003e[C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syn\ntax-and-Feature.xhtml)\n\u003e\u003e宣言とは、ある名前が、その翻訳単位で、何を意味するのかということを、明示するためにある。\n\n\u003e\u003e定義とは、名前の指し示すものを、具体的に記述することである。宣言と定義は、多くの場合、同時に行われることが多いので、あまり意識しづらい。 \n\n## 写真を貼りたい\n\n### Markdown的には\n\n```plain:画像をはる\n![画像の説明](画像へのリンク)\n```\n\n# Google Photosを使おう\n\n4592×3448まで(1,600万画素)なら容量を消費せずに写真を保管できるすぐれものです。写真も簡単に上げられます。\n\nはてなブログは容量が小さいらしいので写真はここを使いましょう。\n\n\n# はてなブログで写真を貼るには\n\n\n便利なことにはてなブログではGoogle Photosと連携しています。\n\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/8e2e82ba-fe91-a7e0-1728-e43f796aa34b.png)\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/753ab9ef-d1f0-befc-4d0e-c20b882a64d6.png)\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/ba4f13e6-4138-b0b2-e994-b8142949d6ad.png)\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/49cf171f-25f6-9c61-04f1-4c50b8bcab1d.png)\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/c8094fdc-c149-3a9b-1586-09ef7522b80e.png)\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/edb15cde-37d4-6e34-1193-016f1d1a79ad.png)\n![ブログ記事編集 - はてなブログ.png](https://qiita-image-store.s3.amazonaws.com/0/94177/09e8e17b-7887-a694-2414-5ac09732dd2e.png)\n\nなんかMarkdownじゃなくてHTMLなのが残念ですが気にしない。\n\n# Markdownをもっと楽に書くために\n\nVisual Studio Codeという物がありまして、このソフトを使うとプレビューしながら、コードの色分けもありつつ書けます。\n\n詳細は\n[VisualStudioCodeで最速で俺流Markdown編集環境を構築する](http://qiita.com/yumetodo/items/1a8d371a20ba9a50eeaf)\n\n# 終わりに\n\n(まともな)プログラマとちょっとした文章をやり取りするときはMarkdownにするといいでしょう。\n","coediting":false,"comments_count":0,"created_at":"2016-04-12T02:33:48+09:00","group":null,"id":"50223bb0b74481e485b9","likes_count":2,"private":false,"reactions_count":0,"tags":[{"name":"Picasa","versions":[]},{"name":"はてなブログ","versions":[]},{"name":"非エンジニア","versions":[]},{"name":"GooglePhotos","versions":[]}],"title":"非プログラマーのためのはてなブログ+Google Photos入門","updated_at":"2016-11-28T02:25:40+09:00","url":"https://qiita.com/yumetodo/items/50223bb0b74481e485b9","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"注意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003eVSCodeのMarkdown周りはこの記事を書いたときから大きく変わっています\u003c/strong\u003e。パーサーが\u003ca href=\"https://github.com/markdown-it/markdown-it\" rel=\"nofollow noopener\" target=\"_blank\"\u003eMarkdown-it\u003c/a\u003eに変わりました。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://code.visualstudio.com/updates/v1_15#_languages\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVisual Studio Code July 2017\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eをみると大きく変わっていることが実感できると思います。Previewに対してのpluginが作れるようになり\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/mjbvz/vscode-github-markdown-preview-style\" rel=\"nofollow noopener\" target=\"_blank\"\u003emjbvz/vscode-github-markdown-preview-style: VS Code extension that changes the built-in markdown preview to match Github's styling\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/mjbvz/vscode-markdown-emoji\" rel=\"nofollow noopener\" target=\"_blank\"\u003emjbvz/vscode-markdown-emoji: VS Code extension that adds support for syntax to the built-in markdown preview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://caughtacold.hatenablog.com/entry/2017/06/28/174103\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVisual Studio CodeのMarkdown Previewに脚注記法を対応させた話 - ただの風邪。\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eのように誰でもmarkdown-it pluginを利用したVisual Studio Code Markdown Preview Pluginを作れるようになりました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003emarkdownを書く際、まあメモ帳でも書けるといえば書けるのだが、プレビューしながら書きたいし、syntaxhighlight(色分け)もしてほしい。\u003c/p\u003e\n\n\u003cp\u003eこれまでSublime Text 3を使っていたのだが、プレビューしながら書くにはブラウザも立ち上げないといけなくてなんか嫌だった。というわけでVisualStudioCodeを使う。\u003c/p\u003e\n\n\u003cp\u003eちなみにこの記事はWindows向けに書いています。ショートカットキー(key bindings)以外はだいたい同じはずだけど。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まずはvisualstudiocodeをインストールする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%81%AFvisualstudiocode%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずはVisualStudioCodeをインストールする\u003c/h1\u003e\n\n\u003cp\u003e\u003cdel\u003e編集現在、安定版最新は0.10.11だ。じゃあそれを使うか・・・と思ったんだが\u003c/del\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cdel\u003e\u003ca href=\"http://qiita.com/YuichiNukiyama/items/b77a4075f8ee980c3abe\" id=\"reference-571012e01cd85d8e126e\"\u003eVS Code 0.10.13の新機能（変更点）\u003c/a\u003e\u003c/del\u003e\u003cbr\u003e\n\u003cdel\u003eついに日本語化されました \u003cimg alt=\":smile:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f604.png\" title=\":smile:\" width=\"20\" loading=\"lazy\"\u003e 。英語アレルギーの方がいても、これで推進可能ですね \u003cimg alt=\":bowtie:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/bowtie.png\" title=\":bowtie:\" width=\"20\" loading=\"lazy\"\u003e!\u003c/del\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cdel\u003eまじか。というわけでstable(安定)版ではなくinsiders版を入れる。\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e追記(2016/04/15):Version 1.0.0出ましたね。\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cdel\u003e\u003ca href=\"https://code.visualstudio.com/Download#insiders\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://code.visualstudio.com/Download#insiders\u003c/a\u003e\u003c/del\u003e\u003cbr\u003e\n\u003ca href=\"https://code.visualstudio.com/Download\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://code.visualstudio.com/Download\u003c/a\u003e\u003cbr\u003e\nにアクセスする\u003c/li\u003e\n\u003cli\u003eダウンロードする。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa5fa81d6-c249-4d92-6c8b-66bf092eb217.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3f19d35643e865f67bb6040cae5cb4c0\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa5fa81d6-c249-4d92-6c8b-66bf092eb217.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3f19d35643e865f67bb6040cae5cb4c0\" alt=\"1.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/a5fa81d6-c249-4d92-6c8b-66bf092eb217.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa5fa81d6-c249-4d92-6c8b-66bf092eb217.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bacf7e0d04e81af6f6418e638b285951 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F78537737-3bc6-1199-5069-ef611d3290f3.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=bc3431a2d40dfd0df36a7e784058c7a8\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F78537737-3bc6-1199-5069-ef611d3290f3.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=bc3431a2d40dfd0df36a7e784058c7a8\" alt=\"2.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/78537737-3bc6-1199-5069-ef611d3290f3.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F78537737-3bc6-1199-5069-ef611d3290f3.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=cc309b2332c97ae11280158070502b21 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F26ebbee8-fa05-1030-e755-3ba879f952f7.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9d1d3dd9705c7232375d3cd9d53f011a\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F26ebbee8-fa05-1030-e755-3ba879f952f7.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9d1d3dd9705c7232375d3cd9d53f011a\" alt=\"3.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/26ebbee8-fa05-1030-e755-3ba879f952f7.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F26ebbee8-fa05-1030-e755-3ba879f952f7.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=2e0708371ffbc5af3d787be73cee55e8 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1dfdb431-d07f-ed0b-a4dd-abb8f7ea096f.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a1ea4d21d8230f0babfb7b2c3a4e9794\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1dfdb431-d07f-ed0b-a4dd-abb8f7ea096f.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a1ea4d21d8230f0babfb7b2c3a4e9794\" alt=\"4.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/1dfdb431-d07f-ed0b-a4dd-abb8f7ea096f.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1dfdb431-d07f-ed0b-a4dd-abb8f7ea096f.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bbd1d1b8a980b6bf9dfddf4d0c8c8ef2 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6fddc8a5-89bf-85eb-46e0-033ea7e7c508.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=516df2ea579036b37f9cd3104b92acef\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6fddc8a5-89bf-85eb-46e0-033ea7e7c508.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=516df2ea579036b37f9cd3104b92acef\" alt=\"5.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/6fddc8a5-89bf-85eb-46e0-033ea7e7c508.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6fddc8a5-89bf-85eb-46e0-033ea7e7c508.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=10c46d00df15c7dde5fc0f035936e516 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6a6540ac-5558-16ac-e027-3d80b0f9352a.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=edeb0d6678fad989d5a37ac6fec35aaa\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6a6540ac-5558-16ac-e027-3d80b0f9352a.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=edeb0d6678fad989d5a37ac6fec35aaa\" alt=\"6.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/6a6540ac-5558-16ac-e027-3d80b0f9352a.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6a6540ac-5558-16ac-e027-3d80b0f9352a.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=8153564fef2af29033a748057eece420 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F409b7931-8b2d-dd34-f36f-4249d2be4161.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ba3c50ed57371ca9f9107e4df0afe3d3\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F409b7931-8b2d-dd34-f36f-4249d2be4161.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ba3c50ed57371ca9f9107e4df0afe3d3\" alt=\"7.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/409b7931-8b2d-dd34-f36f-4249d2be4161.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F409b7931-8b2d-dd34-f36f-4249d2be4161.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=86183e6b442fcba05d77d5e7165d14ab 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1050ce9a-c867-7463-916a-b0ba248e3199.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=8725c32ae95506df565761dffaf152b5\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1050ce9a-c867-7463-916a-b0ba248e3199.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=8725c32ae95506df565761dffaf152b5\" alt=\"8.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/1050ce9a-c867-7463-916a-b0ba248e3199.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1050ce9a-c867-7463-916a-b0ba248e3199.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=59869b3ca4d4828e29522c851e8477e4 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F364940a9-f6ff-de31-167e-a7738dde2e9e.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=b333fdcde944d02e4a0bffac13533d34\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F364940a9-f6ff-de31-167e-a7738dde2e9e.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=b333fdcde944d02e4a0bffac13533d34\" alt=\"9.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/364940a9-f6ff-de31-167e-a7738dde2e9e.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F364940a9-f6ff-de31-167e-a7738dde2e9e.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=a5b917f25e195aa480fdbafe4d44b7c8 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F54795fc4-f27b-9c9d-b7d0-e3e55c3d70f1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=977e449c5ff5cf4e21d8c540536da46a\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F54795fc4-f27b-9c9d-b7d0-e3e55c3d70f1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=977e449c5ff5cf4e21d8c540536da46a\" alt=\"10.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/54795fc4-f27b-9c9d-b7d0-e3e55c3d70f1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F54795fc4-f27b-9c9d-b7d0-e3e55c3d70f1.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3d20979dbf962a3b31f3428bcdccab25 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eインストールできた。メニューとかもちゃんと日本語だね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"試しにmarkdownを書いてみる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A9%A6%E3%81%97%E3%81%ABmarkdown%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%81%BF%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e試しにMarkdownを書いてみる。\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2c8f22ac-0483-fb6d-3c78-3ea724c240a0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=06dff031a219a405c67183fe6fb37030\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2c8f22ac-0483-fb6d-3c78-3ea724c240a0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=06dff031a219a405c67183fe6fb37030\" alt=\"11.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/2c8f22ac-0483-fb6d-3c78-3ea724c240a0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2c8f22ac-0483-fb6d-3c78-3ea724c240a0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d2518eecb354e56c4564035d5bfb34bf 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nとりあえず適当に書きまして～(ちなみに中身は\u003ca href=\"http://qiita.com/yumetodo/items/600ca0df422010cbc4c1\" id=\"reference-6b551f08738caa3b6eb3\"\u003eこれ\u003c/a\u003eです)\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6d6d9008-25bb-912f-ef46-c2ea3420e28c.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=de0fecb1451a5fe3337d285c9a88e2a1\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6d6d9008-25bb-912f-ef46-c2ea3420e28c.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=de0fecb1451a5fe3337d285c9a88e2a1\" alt=\"12.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/6d6d9008-25bb-912f-ef46-c2ea3420e28c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6d6d9008-25bb-912f-ef46-c2ea3420e28c.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1acf161f9569fcc9af984ccb95467ffe 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n適当に保存しましてー\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f6e23dcd47bec6799b0d881cb6cc9afa\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f6e23dcd47bec6799b0d881cb6cc9afa\" alt=\"13.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d54c77f2f28808732d76304b890c31af 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eK\u003c/kbd\u003eしてそれから\u003ckbd\u003eV\u003c/kbd\u003eを押すとプレビューが出ます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"不満な点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%8D%E6%BA%80%E3%81%AA%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e不満な点\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eTex形式の数式が使えない\u003c/li\u003e\n\u003cli\u003eフォントが中華フォントでなんか違和感ある\u003c/li\u003e\n\u003cli\u003eGitHubとおなじようなデザインにしたい\u003c/li\u003e\n\u003cli\u003e私は白っぽい背景のほうが好きだ\u003c/li\u003e\n\u003cli\u003e\n\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003e↑\u003c/kbd\u003e/\u003ckbd\u003e↓\u003c/kbd\u003eで行移動できない\u003c/li\u003e\n\u003cli\u003eプロ生ちゃんがいない\u003c/li\u003e\n\u003cli\u003eショートカットキーで行選択出来ない(\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eL\u003c/kbd\u003eとか)\u003c/li\u003e\n\u003cli\u003e\u003cdel\u003e\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003eP\u003c/kbd\u003e``で出すコマンドパレットまで日本語化されたせいで入力が面倒\u003c/del\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cdel\u003e最後のはちょっとどうにもならなそう。\u003c/del\u003e公式で更新入りました\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"白っぽい背景にする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%99%BD%E3%81%A3%E3%81%BD%E3%81%84%E8%83%8C%E6%99%AF%E3%81%AB%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e白っぽい背景にする\u003c/h1\u003e\n\n\u003cp\u003e\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003eP\u003c/kbd\u003eと押すと\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7b4e54d0-6d5c-48c7-5624-9ede104bc8c3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1aea37859393b33f85fa14732dea1d56\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7b4e54d0-6d5c-48c7-5624-9ede104bc8c3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1aea37859393b33f85fa14732dea1d56\" alt=\"14.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/7b4e54d0-6d5c-48c7-5624-9ede104bc8c3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7b4e54d0-6d5c-48c7-5624-9ede104bc8c3.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=33e9aa82947852110d320a00ca2f0946 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこんな画面になります。いろいろ便利なので覚えましょう。ちなみにAtomやSublimeTextといった最近のテキストエディタはどれもこのショートカットが重要です。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd70049f8-06a4-b736-13a9-a2ce9fe4eb54.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=79879a484bcb7b4fc980506d5ac11d2e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd70049f8-06a4-b736-13a9-a2ce9fe4eb54.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=79879a484bcb7b4fc980506d5ac11d2e\" alt=\"15.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/d70049f8-06a4-b736-13a9-a2ce9fe4eb54.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd70049f8-06a4-b736-13a9-a2ce9fe4eb54.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=04977c4848febe5f231056f1dd2c51a8 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ccode\u003eテーマ\u003c/code\u003eと打ちまして～\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fc49302e5-1345-6847-cfba-98479c267a32.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=b4c37efdc6312b85fee0f36faca71fea\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fc49302e5-1345-6847-cfba-98479c267a32.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=b4c37efdc6312b85fee0f36faca71fea\" alt=\"16.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/c49302e5-1345-6847-cfba-98479c267a32.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fc49302e5-1345-6847-cfba-98479c267a32.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=6edace043fdfa79c45a9f4f9aeaeaa26 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n矢印キーで選択して\u003ckbd\u003eEnter\u003c/kbd\u003eで確定します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"編集画面のフォントとかを設定する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B7%A8%E9%9B%86%E7%94%BB%E9%9D%A2%E3%81%AE%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%A8%E3%81%8B%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e編集画面のフォントとかを設定する\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2c832514-8d5a-bc0c-7f6a-c84ece769529.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=69605e9fd13eeb51b12fdd3fea7d66db\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2c832514-8d5a-bc0c-7f6a-c84ece769529.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=69605e9fd13eeb51b12fdd3fea7d66db\" alt=\"17.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/2c832514-8d5a-bc0c-7f6a-c84ece769529.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2c832514-8d5a-bc0c-7f6a-c84ece769529.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f3d32ad97df7e8d0f0b2eeaf21ff6f00 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e「ファイル(File)」→「基本設定(Preferences)」→「ユーザー設定(User Settings)」と開きましてー\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4be78478-bedf-c3be-fa14-ee799e19fb69.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e8d79734f280822e6ee9f2c0d43b0ba2\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4be78478-bedf-c3be-fa14-ee799e19fb69.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e8d79734f280822e6ee9f2c0d43b0ba2\" alt=\"18.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/4be78478-bedf-c3be-fa14-ee799e19fb69.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F4be78478-bedf-c3be-fa14-ee799e19fb69.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=198619f2b0516e02094d7c6b1bc175bf 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"json\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003esetting.json\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e既定の設定を上書きするには、このファイル内に設定を挿入します\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eControls\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003ethe\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003efont\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003efamily.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"editor.fontFamily\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"consolas,'IPAexゴシック',Meiryo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eウィンドウ幅に合わせて折り返し\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"editor.wrappingColumn\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e半角スペースやタブの表示\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"editor.renderWhitespace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003cdel\u003eそういえばなんでjsonなのにコメント書けるんだろう\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003eこんなふうに設定します。\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eS\u003c/kbd\u003eでの保存をお忘れなく。保存した時点で再起動不要で反映されます。\u003c/p\u003e\n\n\u003cp\u003eIPAフォントは\u003cbr\u003e\n\u003ca href=\"http://ipafont.ipa.go.jp/node26#ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eIPAexフォント Ver.003.01(IPAexFont Ver.003.01) | IPAexフォント/IPAフォント\u003c/a\u003e\u003cbr\u003e\nから落として使っていますが、入れてなくても\u003ccode\u003eMeiryo\u003c/code\u003eを使うのでそれっぽくなると思います(未検証)。\u003c/p\u003e\n\n\u003cp\u003ecf.)\u003ca href=\"http://qiita.com/minfuk/items/c4b7caea617a1c3bdc3e\" id=\"reference-faf597d051c4916a438c\"\u003eVisual Studio Code でConsolasに含まれない文字をメイリオにする方法のメモ\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"markdownのpreview画面をどうにかする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E3%81%AEpreview%E7%94%BB%E9%9D%A2%E3%82%92%E3%81%A9%E3%81%86%E3%81%AB%E3%81%8B%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdownのPreview画面をどうにかする\u003c/h1\u003e\n\n\u003cp\u003e\u003cstrong\u003e注意：2016/9/11現在、私の手元ではこの方法ではものすごく中途半端にCSSが適用されます\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6c0dc394-893c-b493-c2f8-1e0cc5063f63.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=34b48d765e604c638d09ca5568ce8e9f\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6c0dc394-893c-b493-c2f8-1e0cc5063f63.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=34b48d765e604c638d09ca5568ce8e9f\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/6c0dc394-893c-b493-c2f8-1e0cc5063f63.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6c0dc394-893c-b493-c2f8-1e0cc5063f63.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=76fd276f23fafeefc03e4df049f1d146 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yuann/items/e4d4581c331aedc6da02\" id=\"reference-a562dbad17ab3829e2f6\"\u003eWindows環境で Visual Studio Code\u003c/a\u003eの丸パクリで申し訳ありませんが記事を要約します。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://gist.github.com/andyferra/2554919\" rel=\"nofollow noopener\" target=\"_blank\"\u003egithub.css\u003c/a\u003eをDLして解凍(展開)し、 \u003cbr\u003e\n\u003ccode\u003eC:\\Users\\[ユーザー名]\\.vscode\u003c/code\u003e\u003cbr\u003e\u003cbr\u003e\nに配置します。\u003c/p\u003e\n\n\u003cp\u003e次に\u003ccode\u003egithub.css\u003c/code\u003eをカスタマイズします。\u003ccode\u003euser.css\u003c/code\u003eを作成し  \u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003euser.css\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003efont-family\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\"Meiryo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003ecode\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003ecode\u003c/span\u003e \u003cspan class=\"nt\"\u003espan\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003efont-family\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\"consolas,'IPAexゴシック',Meiryo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003epadding-top\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e0px\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003emargin-top\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e0px\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eli\u003c/span\u003e \u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003emargin-top\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e0px\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003emargin-bottom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e0px\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003ehr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003eborder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e1px\u003c/span\u003e \u003cspan class=\"nb\"\u003esolid\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのように書いて保存します。\u003c/p\u003e\n\n\u003cp\u003e最後に先の\u003ccode\u003esettings.json\u003c/code\u003eに追記して\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"pi\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e//-------- Markdown preview configuration --------\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e// A list of URLs or local paths to CSS style sheets to use from the markdown preview.\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e\"markdown.styles\"\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003e'C:/Users/j.pierreno/.vscode/github.css'\"\u003c/span\u003e\u003cspan class=\"pi\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003e'C:/Users/j.pierreno/.vscode/user.css'\"\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e],\u003c/span\u003e\n\u003cspan class=\"pi\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書きます(パスは読み替えてください)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6cf518c1-e4fa-a16c-4c82-9e9b3c955477.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ae0c66dfdd2597feb709f66ef441e7a9\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6cf518c1-e4fa-a16c-4c82-9e9b3c955477.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ae0c66dfdd2597feb709f66ef441e7a9\" alt=\"19.jpg\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/6cf518c1-e4fa-a16c-4c82-9e9b3c955477.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F6cf518c1-e4fa-a16c-4c82-9e9b3c955477.jpeg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=6ffc2690bd071859246451ff8113ec54 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eいいね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"プロ生ちゃんを召喚する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E7%94%9F%E3%81%A1%E3%82%83%E3%82%93%E3%82%92%E5%8F%AC%E5%96%9A%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプロ生ちゃんを召喚する\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://chronoir.net/visual-studio-code-theme-v050/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVisual Studio Code（Ver. 0.5.0以降）でプロ生ちゃんを召喚する方法（※Ver. 0.10.8以降での方法を追加しました） | Chronoir.net\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e./Microsoft VS Code Insiders/resources/app/out/vs/workbench\u003c/code\u003e\u003cbr\u003e\nに(Linuxなら\u003ccode\u003e/usr/share/code-insiders/resources/app/out/vs/workbench\u003c/code\u003e)\u003ccode\u003eworkbench.main.css\u003c/code\u003eがありましてー\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.vs\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.vs\u003c/span\u003e \u003cspan class=\"nc\"\u003e.zone-widget\u003c/span\u003e \u003cspan class=\"nc\"\u003e.monaco-editor\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.vs\u003c/span\u003e \u003cspan class=\"nc\"\u003e.lines-content.monaco-editor-background\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.vs-dark\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.vs-dark\u003c/span\u003e \u003cspan class=\"nc\"\u003e.zone-widget\u003c/span\u003e \u003cspan class=\"nc\"\u003e.monaco-editor\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.vs-dark\u003c/span\u003e \u003cspan class=\"nc\"\u003e.lines-content.monaco-editor-background\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.hc-black\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.hc-black\u003c/span\u003e \u003cspan class=\"nc\"\u003e.zone-widget\u003c/span\u003e \u003cspan class=\"nc\"\u003e.monaco-editor\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nc\"\u003e.monaco-editor.hc-black\u003c/span\u003e \u003cspan class=\"nc\"\u003e.lines-content.monaco-editor-background\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nl\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"m\"\u003e#888\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"m\"\u003e#000000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"sx\"\u003eurl( 'http://pronama.jp/code/sd.png')\u003c/span\u003e \u003cspan class=\"nb\"\u003eno-repeat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nl\"\u003ebackground-position\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eright\u003c/span\u003e \u003cspan class=\"nb\"\u003ebottom\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと書き足すと\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0555826f-ff6e-a364-272f-1c2f816a6ef5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cc0f4377b8b4f1450b6b38b8886b5925\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0555826f-ff6e-a364-272f-1c2f816a6ef5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cc0f4377b8b4f1450b6b38b8886b5925\" alt=\"20.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/0555826f-ff6e-a364-272f-1c2f816a6ef5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0555826f-ff6e-a364-272f-1c2f816a6ef5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=b3733101c3c032b54699a518e4d7e393 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e召喚できます。\u003c/p\u003e\n\n\u003cp\u003ecf.)\u003ca href=\"http://qiita.com/kagerou_ts/items/2c45e2c6f807bb9f5324\" id=\"reference-698b7655763f12331f1c\"\u003eVisual Studio Codeのエディタ色を変える\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ショートカットキーkey-bindingsをカスタマイズする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88%E3%82%AD%E3%83%BCkey-bindings%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eショートカットキー(Key Bindings)をカスタマイズする\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/GENYA/items/2563bafe12ff98791ea1\" id=\"reference-6ce49ec8c0c4df3bffc6\"\u003eVisualStudioCodeでSublimeライクなショートカットの設定\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eを参考にしました。\u003c/p\u003e\n\n\u003cp\u003e「ファイル」→「基本設定」→「キーボード　ショートカット」\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"json\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ekeybindings.json\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e既定値を上書きするには、このファイル内にキー\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eバインドを挿入します\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eブロックコメントの追加\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"key\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"shift+ctrl+/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e           \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"command\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editor.action.blockComment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                                    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"when\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editorTextFocus\"\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e行の移動下方向\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"key\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"shift+ctrl+down\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"command\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editor.action.moveLinesDownAction\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                                    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"when\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editorTextFocus\"\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e行の移動上方向\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"key\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"shift+ctrl+up\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"command\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editor.action.moveLinesUpAction\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                                    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"when\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editorTextFocus\"\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e選択テキストで検索して全ての対象の末尾にマルチカーソル\u003c/span\u003e\u003cspan class=\"w\"\u003e             \n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"key\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"shift+ctrl+g\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e           \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"command\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editor.action.selectHighlights\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                                    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"when\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editorTextFocus\"\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"err\"\u003e//\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003eコンテキストメニュー表示\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"key\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"shift+ctrl+enter\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"command\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editor.action.showContextMenu\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n                                    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"when\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"editorTextFocus\"\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e \n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"tex形式の数式をちゃんと表示したい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tex%E5%BD%A2%E5%BC%8F%E3%81%AE%E6%95%B0%E5%BC%8F%E3%82%92%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eTex形式の数式をちゃんと表示したい\u003c/h1\u003e\n\n\u003cp\u003eプラグインを入れるだけになったっぽいです\u003c/p\u003e\n\n\u003cp\u003eVSCodeのMarkdownで数式を表示する - Qiita\u003cbr\u003e\n\u003ca href=\"http://qiita.com/kgoto/items/2452b6dbaed5b3f7df78#_reference-754e3ef857ae77f03e25\" class=\"autolink\" id=\"reference-7dc0bcd92637a977e760\"\u003ehttp://qiita.com/kgoto/items/2452b6dbaed5b3f7df78#_reference-754e3ef857ae77f03e25\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"過去のやり方tex形式の数式をちゃんと表示したいpc中級者向け\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%81%8E%E5%8E%BB%E3%81%AE%E3%82%84%E3%82%8A%E6%96%B9tex%E5%BD%A2%E5%BC%8F%E3%81%AE%E6%95%B0%E5%BC%8F%E3%82%92%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%9F%E3%81%84pc%E4%B8%AD%E7%B4%9A%E8%80%85%E5%90%91%E3%81%91\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e[過去のやり方]Tex形式の数式をちゃんと表示したい(PC中級者向け)\u003c/h1\u003e\n\n\u003cp\u003eなんで中級者向けかというと、patchコマンドを使うのですが、Windowsには標準でpatchコマンドが無いからですね。Windowsは初心者向けでは無いということですね！(違)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"手っ取り早くpatchコマンドを手に入れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%89%8B%E3%81%A3%E5%8F%96%E3%82%8A%E6%97%A9%E3%81%8Fpatch%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E6%89%8B%E3%81%AB%E5%85%A5%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e手っ取り早くpatchコマンドを手に入れる\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"http://blogs.osdn.jp/programming/windows/2015/01/13/patch.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003epatch.exe ユーザーアカウント制御(UAC)対応版\u003c/a\u003e\u003cbr\u003e\nこれを落としてPATHの通ったところに入れるのがいいと思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"unix環境を再現すればpatchも手に入るやん\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#unix%E7%92%B0%E5%A2%83%E3%82%92%E5%86%8D%E7%8F%BE%E3%81%99%E3%82%8C%E3%81%B0patch%E3%82%82%E6%89%8B%E3%81%AB%E5%85%A5%E3%82%8B%E3%82%84%E3%82%93\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eunix環境を再現すればpatchも手に入るやん\u003c/h2\u003e\n\n\u003cp\u003e可能な限り控えめにいって\u003ccode\u003ecmd.exe\u003c/code\u003eは糞なのでこの際別のshellを使おうという感じです。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e7-Zipを落とす\u003cbr\u003e\n\u003ca href=\"https://sevenzip.osdn.jp/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://sevenzip.osdn.jp/\u003c/a\u003e\u003cbr\u003e\nより64bit版もしくは32bit版を\u003cbr\u003e\n既に入っている人も、2015/11/19に随分久しぶりに最新版が出たのでバージョンを上げるといいです\u003c/li\u003e\n\u003cli\u003e7zipをインストール\u003cbr\u003e\nダブルクリックして実行すればいいです。\u003c/li\u003e\n\u003cli\u003emsys2を落とす\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://sourceforge.net/projects/msys2/files/Base/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://sourceforge.net/projects/msys2/files/Base/\u003c/a\u003e\u003cbr\u003e\nよりお使いのアーキテクチャ(おそらくはx86_64)をクリックしmsys2-base-[アーキテクチャ]-[日付].tar.xz\nを。exeの方は１回も使ったこと無いのでわかりません。\u003c/li\u003e\n\u003cli\u003e7-zipで解凍\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eをダブルクリック、\u003ccode\u003eClose Window\u003c/code\u003eと言われたらばってんを押して閉じる\u003c/li\u003e\n\u003cli\u003e再び\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eをダブルクリック、\u003ccode\u003epacman -Syuu\u003c/code\u003eと打ち実行、また閉じる\u003c/li\u003e\n\u003cli\u003e再び\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eをダブルクリック、\u003ccode\u003epacman -S patch\u003c/code\u003eと打ち実行、また閉じる\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003emsys2_shell.bat\u003c/code\u003eを起動するとpatchコマンドが使える\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"nodejsを導入する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#nodejs%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003enode.jsを導入する\u003c/h2\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eOS\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eWindows\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://qiita.com/satoyan419/items/56e0b5f35912b9374305\" id=\"reference-38c3c690e7d4c47ce5ad\"\u003enodistでNode.jsをバージョン管理\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eMac\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://qiita.com/satoyan419/items/693a84e26a8ad2f0e29e\" id=\"reference-be0edf5a410b1d5a4c0f\"\u003enodebrewでNode.jsをバージョン管理 - Node.jsとRubyの環境構築(2)\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLinux\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"http://qiita.com/TsutomuNakamura/items/7a8362efefde6bc3c68b#nvm-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\" id=\"reference-9c781e6145a8a876244d\"\u003eUbuntu でapt を使用してNode.js をインストールする3 つの方法(Ubuntu 15.04, Ubuntu 14.04.2 LTS)#NVM を使用してインストールする\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eこれ見て入れてくだい。v4系を入れればいいと思います。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"js-beautify-導入\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#js-beautify-%E5%B0%8E%E5%85%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ejs-beautify 導入\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003enpm install js-beautify -g\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"patchする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#patch%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003epatchする\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003e./Microsoft VS Code/resources/app/out/vs/languages/markdown/common\u003c/code\u003e(Linuxでは\u003ccode\u003e/usr/share/code-insiders/resources/app/out/vs/languages/markdown/common\u003c/code\u003e)に移動\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://gist.github.com/yumetodo/e961b0768f19a63c7f65d2490aa1c3f2\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://gist.github.com/yumetodo/e961b0768f19a63c7f65d2490aa1c3f2\u003c/a\u003e\u003cbr\u003e\nをzipで落として解凍(展開)、\u003ccode\u003emathjax.patch\u003c/code\u003eを同じパスに\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ejs-beautify markdownWorker.js -o fixed.js\npatch fixed.js \u0026lt; mathjax.patch\nren markdownWorker.js markdownWorker0.js\nren fixed.js markdownWorker.js\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"vs-codeを再起動すると\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vs-code%E3%82%92%E5%86%8D%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVS Codeを再起動すると・・・\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=179bbf44c0662f404672e1db95e5e2bc\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=179bbf44c0662f404672e1db95e5e2bc\" alt=\"21.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/d8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=dd1d4c1f7d15b113388f7738f33740f5 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eやったぜ！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"作業過程比較\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%9C%E6%A5%AD%E9%81%8E%E7%A8%8B%E6%AF%94%E8%BC%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e作業過程比較\u003c/h1\u003e\n\n\u003cp\u003eはじめ\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f6e23dcd47bec6799b0d881cb6cc9afa\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f6e23dcd47bec6799b0d881cb6cc9afa\" alt=\"13.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d54c77f2f28808732d76304b890c31af 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nプロ生ちゃんを召喚後\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0555826f-ff6e-a364-272f-1c2f816a6ef5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cc0f4377b8b4f1450b6b38b8886b5925\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0555826f-ff6e-a364-272f-1c2f816a6ef5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=cc0f4377b8b4f1450b6b38b8886b5925\" alt=\"20.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/0555826f-ff6e-a364-272f-1c2f816a6ef5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F0555826f-ff6e-a364-272f-1c2f816a6ef5.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=b3733101c3c032b54699a518e4d7e393 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nmathjax導入\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=179bbf44c0662f404672e1db95e5e2bc\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=179bbf44c0662f404672e1db95e5e2bc\" alt=\"21.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/d8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fd8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=dd1d4c1f7d15b113388f7738f33740f5 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"リンク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AA%E3%83%B3%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eリンク\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/3846masa/items/3c63aef11682fb1957e2\" id=\"reference-7c16eed397ccfa49971a\"\u003e#vscode Visual Studio Code のmarkdownでmathjaxを使えるようにするパッチ（仮）\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/tukiyo3/items/1a664bf3858e42040488\" id=\"reference-e13a92d36d6cb430c7e7\"\u003eVisual Studio Codeリンク集\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","body":"# 注意\n\n**VSCodeのMarkdown周りはこの記事を書いたときから大きく変わっています**。パーサーが[Markdown-it](https://github.com/markdown-it/markdown-it)に変わりました。\n\n[Visual Studio Code July 2017](https://code.visualstudio.com/updates/v1_15#_languages)\n\nをみると大きく変わっていることが実感できると思います。Previewに対してのpluginが作れるようになり\n\n- [mjbvz/vscode-github-markdown-preview-style: VS Code extension that changes the built-in markdown preview to match Github's styling](https://github.com/mjbvz/vscode-github-markdown-preview-style)\n- [mjbvz/vscode-markdown-emoji: VS Code extension that adds support for syntax to the built-in markdown preview](https://github.com/mjbvz/vscode-markdown-emoji)\n- [Visual Studio CodeのMarkdown Previewに脚注記法を対応させた話 - ただの風邪。](http://caughtacold.hatenablog.com/entry/2017/06/28/174103)\n\nのように誰でもmarkdown-it pluginを利用したVisual Studio Code Markdown Preview Pluginを作れるようになりました。\n\n# はじめに\n\nmarkdownを書く際、まあメモ帳でも書けるといえば書けるのだが、プレビューしながら書きたいし、syntaxhighlight(色分け)もしてほしい。\n\nこれまでSublime Text 3を使っていたのだが、プレビューしながら書くにはブラウザも立ち上げないといけなくてなんか嫌だった。というわけでVisualStudioCodeを使う。\n\nちなみにこの記事はWindows向けに書いています。ショートカットキー(key bindings)以外はだいたい同じはずだけど。\n\n# まずはVisualStudioCodeをインストールする\n\n~~編集現在、安定版最新は0.10.11だ。じゃあそれを使うか・・・と思ったんだが~~\n\n\u003e~~[VS Code 0.10.13の新機能（変更点）](http://qiita.com/YuichiNukiyama/items/b77a4075f8ee980c3abe)~~\n~~ついに日本語化されました :smile: 。英語アレルギーの方がいても、これで推進可能ですね :bowtie:!~~\n\n~~まじか。というわけでstable(安定)版ではなくinsiders版を入れる。~~\n\n**追記(2016/04/15):Version 1.0.0出ましたね。**\n\n1. ~~https://code.visualstudio.com/Download#insiders~~  \nhttps://code.visualstudio.com/Download  \nにアクセスする\n2. ダウンロードする。\n3. ![1.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/a5fa81d6-c249-4d92-6c8b-66bf092eb217.jpeg)\n4. ![2.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/78537737-3bc6-1199-5069-ef611d3290f3.jpeg)\n5. ![3.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/26ebbee8-fa05-1030-e755-3ba879f952f7.jpeg)\n6. ![4.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/1dfdb431-d07f-ed0b-a4dd-abb8f7ea096f.jpeg)\n7. ![5.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/6fddc8a5-89bf-85eb-46e0-033ea7e7c508.jpeg)\n8. ![6.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/6a6540ac-5558-16ac-e027-3d80b0f9352a.jpeg)\n9. ![7.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/409b7931-8b2d-dd34-f36f-4249d2be4161.jpeg)\n10. ![8.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/1050ce9a-c867-7463-916a-b0ba248e3199.jpeg)\n11. ![9.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/364940a9-f6ff-de31-167e-a7738dde2e9e.jpeg)\n12. ![10.png](https://qiita-image-store.s3.amazonaws.com/0/94177/54795fc4-f27b-9c9d-b7d0-e3e55c3d70f1.png)\n\nインストールできた。メニューとかもちゃんと日本語だね。\n\n# 試しにMarkdownを書いてみる。\n\n![11.png](https://qiita-image-store.s3.amazonaws.com/0/94177/2c8f22ac-0483-fb6d-3c78-3ea724c240a0.png)\nとりあえず適当に書きまして～(ちなみに中身は[これ](http://qiita.com/yumetodo/items/600ca0df422010cbc4c1)です)\n![12.png](https://qiita-image-store.s3.amazonaws.com/0/94177/6d6d9008-25bb-912f-ef46-c2ea3420e28c.png)\n適当に保存しましてー\n![13.png](https://qiita-image-store.s3.amazonaws.com/0/94177/56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png)\n\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eK\u003c/kbd\u003eしてそれから\u003ckbd\u003eV\u003c/kbd\u003eを押すとプレビューが出ます。\n\n# 不満な点\n- Tex形式の数式が使えない\n- フォントが中華フォントでなんか違和感ある\n- GitHubとおなじようなデザインにしたい\n- 私は白っぽい背景のほうが好きだ\n- \u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003e↑\u003c/kbd\u003e/\u003ckbd\u003e↓\u003c/kbd\u003eで行移動できない\n- プロ生ちゃんがいない\n- ショートカットキーで行選択出来ない(\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eL\u003c/kbd\u003eとか)\n- ~~\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003eP\u003c/kbd\u003e``で出すコマンドパレットまで日本語化されたせいで入力が面倒~~\n\n~~最後のはちょっとどうにもならなそう。~~公式で更新入りました\n\n# 白っぽい背景にする\n\n\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003eP\u003c/kbd\u003eと押すと\n\n![14.png](https://qiita-image-store.s3.amazonaws.com/0/94177/7b4e54d0-6d5c-48c7-5624-9ede104bc8c3.png)\n\nこんな画面になります。いろいろ便利なので覚えましょう。ちなみにAtomやSublimeTextといった最近のテキストエディタはどれもこのショートカットが重要です。\n![15.png](https://qiita-image-store.s3.amazonaws.com/0/94177/d70049f8-06a4-b736-13a9-a2ce9fe4eb54.png)\n``テーマ``と打ちまして～\n![16.png](https://qiita-image-store.s3.amazonaws.com/0/94177/c49302e5-1345-6847-cfba-98479c267a32.png)\n矢印キーで選択して\u003ckbd\u003eEnter\u003c/kbd\u003eで確定します。\n\n# 編集画面のフォントとかを設定する\n\n![17.png](https://qiita-image-store.s3.amazonaws.com/0/94177/2c832514-8d5a-bc0c-7f6a-c84ece769529.png)\n\n「ファイル(File)」→「基本設定(Preferences)」→「ユーザー設定(User Settings)」と開きましてー\n![18.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/4be78478-bedf-c3be-fa14-ee799e19fb69.jpeg)\n\n```json:setting.json\n// 既定の設定を上書きするには、このファイル内に設定を挿入します\n{\n    // Controls the font family.\n    \"editor.fontFamily\": \"consolas,'IPAexゴシック',Meiryo\",\n    // ウィンドウ幅に合わせて折り返し\n    \"editor.wrappingColumn\": 0,\n    // 半角スペースやタブの表示\n    \"editor.renderWhitespace\": true\n}\n```\n\n~~そういえばなんでjsonなのにコメント書けるんだろう~~\n\nこんなふうに設定します。\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eS\u003c/kbd\u003eでの保存をお忘れなく。保存した時点で再起動不要で反映されます。\n\nIPAフォントは\n[IPAexフォント Ver.003.01(IPAexFont Ver.003.01) | IPAexフォント/IPAフォント](http://ipafont.ipa.go.jp/node26#ja)\nから落として使っていますが、入れてなくても``Meiryo``を使うのでそれっぽくなると思います(未検証)。\n\ncf.)[Visual Studio Code でConsolasに含まれない文字をメイリオにする方法のメモ](http://qiita.com/minfuk/items/c4b7caea617a1c3bdc3e)\n\n# MarkdownのPreview画面をどうにかする\n\n**注意：2016/9/11現在、私の手元ではこの方法ではものすごく中途半端にCSSが適用されます**\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/6c0dc394-893c-b493-c2f8-1e0cc5063f63.png)\n\n\n[Windows環境で Visual Studio Code](http://qiita.com/yuann/items/e4d4581c331aedc6da02)の丸パクリで申し訳ありませんが記事を要約します。\n\n[github.css](https://gist.github.com/andyferra/2554919)をDLして解凍(展開)し、 \n``C:\\Users\\[ユーザー名]\\.vscode``  \nに配置します。\n\n次に``github.css``をカスタマイズします。``user.css``を作成し  \n\n```css:user.css\n* {\n  font-family: \"Meiryo\";\n}\n\ncode, code span {\n  font-family: \"consolas,'IPAexゴシック',Meiryo\";\n}\nbody {\n  padding-top: 0px;\n}\n\nh1 {\n  margin-top: 0px;\n}\n\nli, li ul {\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n\nhr {\n  border: 1px solid;\n  height: 0;\n}\n```\n\nのように書いて保存します。\n\n最後に先の``settings.json``に追記して\n\n```yaml\n{\n    //-------- Markdown preview configuration --------\n    // A list of URLs or local paths to CSS style sheets to use from the markdown preview.\n    \"markdown.styles\": [\n        \"'C:/Users/j.pierreno/.vscode/github.css'\",\n        \"'C:/Users/j.pierreno/.vscode/user.css'\"\n    ],\n}\n```\n\nのように書きます(パスは読み替えてください)\n\n![19.jpg](https://qiita-image-store.s3.amazonaws.com/0/94177/6cf518c1-e4fa-a16c-4c82-9e9b3c955477.jpeg)\n\nいいね。\n\n# プロ生ちゃんを召喚する\n\n[Visual Studio Code（Ver. 0.5.0以降）でプロ生ちゃんを召喚する方法（※Ver. 0.10.8以降での方法を追加しました） | Chronoir.net](http://chronoir.net/visual-studio-code-theme-v050/)\n\n``./Microsoft VS Code Insiders/resources/app/out/vs/workbench``\nに(Linuxなら``/usr/share/code-insiders/resources/app/out/vs/workbench``)``workbench.main.css``がありましてー\n\n```css\n.monaco-editor.vs,.monaco-editor.vs .zone-widget .monaco-editor,.monaco-editor.vs .lines-content.monaco-editor-background,.monaco-editor.vs-dark,.monaco-editor.vs-dark .zone-widget .monaco-editor,.monaco-editor.vs-dark .lines-content.monaco-editor-background,.monaco-editor.hc-black,.monaco-editor.hc-black .zone-widget .monaco-editor,.monaco-editor.hc-black .lines-content.monaco-editor-background{color:#888;background:#000000;background:url( 'http://pronama.jp/code/sd.png') no-repeat;background-position: right bottom;}\n```\n\nと書き足すと\n![20.png](https://qiita-image-store.s3.amazonaws.com/0/94177/0555826f-ff6e-a364-272f-1c2f816a6ef5.png)\n\n召喚できます。\n\ncf.)[Visual Studio Codeのエディタ色を変える](http://qiita.com/kagerou_ts/items/2c45e2c6f807bb9f5324)\n\n# ショートカットキー(Key Bindings)をカスタマイズする\n\n[VisualStudioCodeでSublimeライクなショートカットの設定](http://qiita.com/GENYA/items/2563bafe12ff98791ea1)\n\nを参考にしました。\n\n「ファイル」→「基本設定」→「キーボード　ショートカット」\n\n```json:keybindings.json\n// 既定値を上書きするには、このファイル内にキー バインドを挿入します\n[\n    // ブロックコメントの追加\n    { \"key\": \"shift+ctrl+/\",           \"command\": \"editor.action.blockComment\",\n                                    \"when\": \"editorTextFocus\" }, \n\n    // 行の移動下方向\n    { \"key\": \"shift+ctrl+down\",        \"command\": \"editor.action.moveLinesDownAction\",\n                                    \"when\": \"editorTextFocus\" },\n    // 行の移動上方向\n    { \"key\": \"shift+ctrl+up\",          \"command\": \"editor.action.moveLinesUpAction\",\n                                    \"when\": \"editorTextFocus\" },\n\n    // 選択テキストで検索して全ての対象の末尾にマルチカーソル             \n    { \"key\": \"shift+ctrl+g\",           \"command\": \"editor.action.selectHighlights\",\n                                    \"when\": \"editorTextFocus\" },\n    // コンテキストメニュー表示\n    { \"key\": \"shift+ctrl+enter\",       \"command\": \"editor.action.showContextMenu\",\n                                    \"when\": \"editorTextFocus\" } \n]\n```\n\n# Tex形式の数式をちゃんと表示したい\n\nプラグインを入れるだけになったっぽいです\n\nVSCodeのMarkdownで数式を表示する - Qiita\nhttp://qiita.com/kgoto/items/2452b6dbaed5b3f7df78#_reference-754e3ef857ae77f03e25\n\n# [過去のやり方]Tex形式の数式をちゃんと表示したい(PC中級者向け)\n\nなんで中級者向けかというと、patchコマンドを使うのですが、Windowsには標準でpatchコマンドが無いからですね。Windowsは初心者向けでは無いということですね！(違)\n\n## 手っ取り早くpatchコマンドを手に入れる\n[patch.exe ユーザーアカウント制御(UAC)対応版](http://blogs.osdn.jp/programming/windows/2015/01/13/patch.html)\nこれを落としてPATHの通ったところに入れるのがいいと思います。\n\n## unix環境を再現すればpatchも手に入るやん\n可能な限り控えめにいって``cmd.exe``は糞なのでこの際別のshellを使おうという感じです。\n\n1. 7-Zipを落とす  \nhttps://sevenzip.osdn.jp/  \nより64bit版もしくは32bit版を  \n既に入っている人も、2015/11/19に随分久しぶりに最新版が出たのでバージョンを上げるといいです\n2. 7zipをインストール  \nダブルクリックして実行すればいいです。\n3. msys2を落とす  \n4. \nhttp://sourceforge.net/projects/msys2/files/Base/  \nよりお使いのアーキテクチャ(おそらくはx86_64)をクリックしmsys2-base-[アーキテクチャ]-[日付].tar.xz\nを。exeの方は１回も使ったこと無いのでわかりません。\n4. 7-zipで解凍\n5. ``msys2_shell.cmd``をダブルクリック、``Close Window``と言われたらばってんを押して閉じる\n6. 再び``msys2_shell.cmd``をダブルクリック、``pacman -Syuu``と打ち実行、また閉じる\n7. 再び``msys2_shell.cmd``をダブルクリック、``pacman -S patch``と打ち実行、また閉じる\n8. ``msys2_shell.bat``を起動するとpatchコマンドが使える\n\n## node.jsを導入する\n| OS      |                                                                                                                                                                                                                                                                                                                       |\n|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Windows | [nodistでNode.jsをバージョン管理](http://qiita.com/satoyan419/items/56e0b5f35912b9374305)                                                                                                                                                                                                                             |\n| Mac     | [nodebrewでNode.jsをバージョン管理 - Node.jsとRubyの環境構築(2)](http://qiita.com/satoyan419/items/693a84e26a8ad2f0e29e)                                                                                                                                                                                              |\n| Linux   | [Ubuntu でapt を使用してNode.js をインストールする3 つの方法(Ubuntu 15.04, Ubuntu 14.04.2 LTS)#NVM を使用してインストールする](http://qiita.com/TsutomuNakamura/items/7a8362efefde6bc3c68b#nvm-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B) |\n\nこれ見て入れてくだい。v4系を入れればいいと思います。\n\n## js-beautify 導入\n\n```\nnpm install js-beautify -g\n```\n\n## patchする\n\n``./Microsoft VS Code/resources/app/out/vs/languages/markdown/common``(Linuxでは``/usr/share/code-insiders/resources/app/out/vs/languages/markdown/common``)に移動\n\nhttps://gist.github.com/yumetodo/e961b0768f19a63c7f65d2490aa1c3f2\nをzipで落として解凍(展開)、``mathjax.patch``を同じパスに\n\n```\njs-beautify markdownWorker.js -o fixed.js\npatch fixed.js \u003c mathjax.patch\nren markdownWorker.js markdownWorker0.js\nren fixed.js markdownWorker.js\n```\n\n## VS Codeを再起動すると・・・\n\n![21.png](https://qiita-image-store.s3.amazonaws.com/0/94177/d8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png)\n\nやったぜ！\n\n# 作業過程比較\n\nはじめ\n![13.png](https://qiita-image-store.s3.amazonaws.com/0/94177/56a5387a-3cbe-38ba-a0ae-54e2f7d3c3cf.png)\nプロ生ちゃんを召喚後\n![20.png](https://qiita-image-store.s3.amazonaws.com/0/94177/0555826f-ff6e-a364-272f-1c2f816a6ef5.png)\nmathjax導入\n\n![21.png](https://qiita-image-store.s3.amazonaws.com/0/94177/d8cdffbb-041c-ebc9-65b0-7f64cd3deb72.png)\n\n# リンク\n- [#vscode Visual Studio Code のmarkdownでmathjaxを使えるようにするパッチ（仮）](http://qiita.com/3846masa/items/3c63aef11682fb1957e2)\n- [Visual Studio Codeリンク集](http://qiita.com/tukiyo3/items/1a664bf3858e42040488)\n","coediting":false,"comments_count":0,"created_at":"2016-04-12T02:11:35+09:00","group":null,"id":"1a8d371a20ba9a50eeaf","likes_count":81,"private":false,"reactions_count":0,"tags":[{"name":"Markdown","versions":[]},{"name":"MathJax","versions":[]},{"name":"VisualStudioCode","versions":[]}],"title":"VisualStudioCodeで最速で俺流Markdown編集環境を構築する","updated_at":"2017-10-08T19:52:08+09:00","url":"https://qiita.com/yumetodo/items/1a8d371a20ba9a50eeaf","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"作業前に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%9C%E6%A5%AD%E5%89%8D%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e作業前に\u003c/h1\u003e\n\n\u003cp\u003e念の為に\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003enpm list -g\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eを書き出して保存しておきましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"nodist導入\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#nodist%E5%B0%8E%E5%85%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003enodist導入\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/satoyan419/items/56e0b5f35912b9374305\" id=\"reference-fbb159eb04a20e843f5c\"\u003enodistでNode.jsをバージョン管理\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこれまんまでいいです。「Node.jsのインストール」の項を全部やってください。ただしこれ終了時点ではpathの関係で古い方のnode.jsが呼ばれていると思います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"nodejsのアンインストーラー実行\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#nodejs%E3%81%AE%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%A9%E3%83%BC%E5%AE%9F%E8%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003enode.jsのアンインストーラー実行\u003c/h1\u003e\n\n\u003cp\u003e\"プログラムと機能\"からnodejsアンインストーラを起動する。\u003c/p\u003e\n\n\u003cp\u003ecf.)\u003ca href=\"http://sushichop.blogspot.jp/2013/09/nodejswindows.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://sushichop.blogspot.jp/2013/09/nodejswindows.html\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"確認\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%A2%BA%E8%AA%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e確認\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003enode -v\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eして、nodistで入れたバージョンになってたらいいです。\u003c/p\u003e\n\n\u003cp\u003eこの時点でnpmはそのままのはずです。\u003c/p\u003e\n","body":"\n# 作業前に\n\n念の為に\n\n```\nnpm list -g\n```\n\nを書き出して保存しておきましょう。\n\n# nodist導入\n\n[nodistでNode.jsをバージョン管理](http://qiita.com/satoyan419/items/56e0b5f35912b9374305)\n\nこれまんまでいいです。「Node.jsのインストール」の項を全部やってください。ただしこれ終了時点ではpathの関係で古い方のnode.jsが呼ばれていると思います。\n\n# node.jsのアンインストーラー実行\n\n\"プログラムと機能\"からnodejsアンインストーラを起動する。\n\ncf.)http://sushichop.blogspot.jp/2013/09/nodejswindows.html\n\n# 確認\n\n```\nnode -v\n```\n\nして、nodistで入れたバージョンになってたらいいです。\n\nこの時点でnpmはそのままのはずです。\n","coediting":false,"comments_count":0,"created_at":"2016-04-12T01:43:53+09:00","group":null,"id":"8badceb9d67f2df1e2a8","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"Node.js","versions":[]},{"name":"nodist","versions":[]}],"title":"Windowsでインストーラーで入れたnode.jsを消してnodistで入れ直す","updated_at":"2016-04-12T01:43:53+09:00","url":"https://qiita.com/yumetodo/items/8badceb9d67f2df1e2a8","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"各サービス紹介\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%90%84%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E7%B4%B9%E4%BB%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e各サービス紹介\u003c/h1\u003e\n\n\u003cp\u003eえっとまず知らない人もいると思うので\u003cbr\u003e\ncybozu live\u003cbr\u003e\n\u003ca href=\"https://cybozulive.com/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://cybozulive.com/\u003c/a\u003e\u003cbr\u003e\nGoogle Drive\u003cbr\u003e\n\u003ca href=\"https://drive.google.com/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://drive.google.com/\u003c/a\u003e\u003cbr\u003e\nこれのことです。\u003c/p\u003e\n\n\u003cp\u003e前者はオンラインで情報共有しつつプロジェクトの進行、割り振り、スケジューリングができるツールです。プログラマにはGitHub Issueの劣化版にカレンダーくっつけたといえばいいでしょうか。\u003cbr\u003e\n後者はクラウドストレージです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e私が所属している\u003ca href=\"https://miraiken.github.io/web/index.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eみらい研究室実行委員会\u003c/a\u003eではcybozuliveを使っているのですが、この度ファイル管理をGoogleDriveにしようぜ！ということを言うためにまとめています。\u003cbr\u003e\n内輪ネタは無いのでご安心ください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"cybozuliveでのファイル管理が決定的に辛い2つの理由\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cybozulive%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E7%AE%A1%E7%90%86%E3%81%8C%E6%B1%BA%E5%AE%9A%E7%9A%84%E3%81%AB%E8%BE%9B%E3%81%842%E3%81%A4%E3%81%AE%E7%90%86%E7%94%B1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecybozuliveでのファイル管理が決定的に辛い2つの理由\u003c/h1\u003e\n\n\u003cp\u003e糞なところは掃いて捨てるほどありますが、それは後述するとしてとりあえず決定的に糞な使用を２つ挙げましょう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"1容量が1gbしかない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1%E5%AE%B9%E9%87%8F%E3%81%8C1gb%E3%81%97%E3%81%8B%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.容量が1GBしかない\u003c/h2\u003e\n\n\u003cp\u003e正直つらいです。画像とかzipとかあげたら割とすぐ埋まってしまいます。しかしこれだけではまだ糞ではないですよね？\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"2ファイルを１つずつしかdlできない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#2%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%EF%BC%91%E3%81%A4%E3%81%9A%E3%81%A4%E3%81%97%E3%81%8Bdl%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2.ファイルを１つずつしかDLできない\u003c/h2\u003e\n\n\u003cp\u003eこんなのFワード不可避です。\u003c/p\u003e\n\n\u003cp\u003e容量少ないならせめて全件DLして移行とかしたいじゃないですか。でも真っ当なやり方ではできません。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"一括dlできない証拠であるサイボウズサポートの返答\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%80%E6%8B%ACdl%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E8%A8%BC%E6%8B%A0%E3%81%A7%E3%81%82%E3%82%8B%E3%82%B5%E3%82%A4%E3%83%9C%E3%82%A6%E3%82%BA%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%AE%E8%BF%94%E7%AD%94\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e一括DLできない証拠であるサイボウズサポートの返答\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"サイボウズLive サポートセンター\" \u003ca href=\"mailto:support@cybozulive.com\" class=\"autolink\"\u003esupport@cybozulive.com\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTo yume-wikijp\u003cbr\u003e\n○○○○ 様\u003c/p\u003e\n\n\u003cp\u003eサイボウズLive サポートセンター 松田です。\u003cbr\u003e\nお問合せ頂き、ありがとうございます。\u003c/p\u003e\n\n\u003cp\u003e残念ながら、サイボウズLiveでは、共有ファイルを\u003cbr\u003e\n一括でダウンロードすることはできません。\u003c/p\u003e\n\n\u003cp\u003eご要望にお応えできず、申し訳ございません。\u003c/p\u003e\n\n\u003cp\u003eお手数をおかけしますが、1つずつファイルを\u003cbr\u003e\nダウンロード頂きますようお願い申し上げます。\u003c/p\u003e\n\n\u003cp\u003eその他にご不明な点がございましたら、お気軽にご連絡ください。\u003cbr\u003e\n今後ともサイボウズLiveをご愛顧頂きますようお願い申し上げます。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e後述する通り\u003ccode\u003e1つずつファイルをダウンロード\u003c/code\u003eとやらを自動化することはできますが、辛いです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"google-driveの利点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#google-drive%E3%81%AE%E5%88%A9%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGoogle Driveの利点\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eGoogle Docsとの緊密な連携により、MS Officeなくても十分いろいろできる\u003c/li\u003e\n\u003cli\u003e検索で有名なGoogleだけあって検索機能は強い\u003c/li\u003e\n\u003cli\u003eデスクトップClientがある\u003c/li\u003e\n\u003cli\u003eファイルを外部に公開できる\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"google-driveとcybozu-liveを比較する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#google-drive%E3%81%A8cybozu-live%E3%82%92%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGoogle Driveとcybozu liveを比較する\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"他人の作ったファイルを見る\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%96%E4%BA%BA%E3%81%AE%E4%BD%9C%E3%81%A3%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A6%8B%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e他人の作ったファイルを見る\u003c/h2\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ecybozu live\u003c/th\u003e\n\u003cth\u003eGoogle Drive(Desktop Client導入時)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1. ファイルをDLする\u003c/td\u003e\n\u003ctd\u003e1. ファイルを開く\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2. ファイルを閲覧する\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3. 見終わったら削除する\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e勝手の同期してますからいきなりファイルを見れますね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ファイルを編集してアップロードするまで\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%97%E3%81%A6%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eファイルを編集してアップロードするまで\u003c/h2\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ecybozu live\u003c/th\u003e\n\u003cth\u003eGoogle Drive(Desktop Client導入時)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1. ブラウザでサイトにアクセスしファイルをDLする\u003c/td\u003e\n\u003ctd\u003e1. ファイルを編集する\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2. ファイルを編集する\u003c/td\u003e\n\u003ctd\u003e2. ファイルを保存する\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3. ファイルを保存する\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4. ブラウザでサイトにアクセスしファイルをアップロードする\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eGoogle Driveならとってもシンプル。いちいちDLするためにブラウザ開かなくていい。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"バージョン管理\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eバージョン管理\u003c/h2\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ecybozu live\u003c/th\u003e\n\u003cth\u003eGoogle Drive(Desktop Client導入時)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1. ファイルをDLする\u003c/td\u003e\n\u003ctd\u003e1. ファイルを編集する\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2. ファイルを編集する\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3. ブラウザでサイボウズのサイトを開く\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4. 共有フォルダから対象のファイルを探す\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e5. 「ファイルを上書きする」ボタンからアップロードする\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eDesktop Clientは勝手に版管理してくれる(というより同名は更新扱いする？)ので楽ですね。\u003c/p\u003e\n\n\u003cp\u003eちなみにGoogleDriveの版管理は\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F06022fea-6f75-8af6-bf50-ceeff6fea77d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=42f72a3714a2668a0f82d00ff1f38521\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F06022fea-6f75-8af6-bf50-ceeff6fea77d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=42f72a3714a2668a0f82d00ff1f38521\" alt=\"version_manage\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/06022fea-6f75-8af6-bf50-ceeff6fea77d.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F06022fea-6f75-8af6-bf50-ceeff6fea77d.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=73fca2ba20b57d57ca502969a0346d84 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eから見られます。30日間限定の版管理ですがまあ実用上支障ないかと。本当に版管理必要ならgit使えばいいですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"google-driveにするとどう変わるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#google-drive%E3%81%AB%E3%81%99%E3%82%8B%E3%81%A8%E3%81%A9%E3%81%86%E5%A4%89%E3%82%8F%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGoogle Driveにするとどう変わるか\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"複数人でファイルを編集する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A4%87%E6%95%B0%E4%BA%BA%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e複数人でファイルを編集する\u003c/h2\u003e\n\n\u003cp\u003e例えばなんかの解析をする時に複数人でやったとしましょう。\u003c/p\u003e\n\n\u003cp\u003eこれまでなら、解析範囲を解析担当者に割り振り、それぞれWordでまとめ、それを最終的に一つにまとめるということをしていました。\u003c/p\u003e\n\n\u003cp\u003eほかの解析者が何を書いているかを知るには、途中の物をアップロードしてもらうように頼み、それをダウンロードするぢかありませんでした。\u003c/p\u003e\n\n\u003cp\u003eGoogle Driveは先にいったように、Google Docsと緊密に連携しているので、同じファイルを複数人でブラウザ上で編集できます。編集競合を避けるために解析範囲を割り振るまでは同じですが、ほかの人の進捗も見ることができます。より効率的ですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"議論の過程でファイルを上げる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AD%B0%E8%AB%96%E3%81%AE%E9%81%8E%E7%A8%8B%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E4%B8%8A%E3%81%92%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e議論の過程でファイルを上げる\u003c/h2\u003e\n\n\u003cp\u003eこれに関しては若干面倒です。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F03114433-429c-1e92-8f8b-43f70edbdf80.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f395f18bec5e6d8ef047f1995e8b7eb4\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F03114433-429c-1e92-8f8b-43f70edbdf80.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f395f18bec5e6d8ef047f1995e8b7eb4\" alt=\"無題.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/03114433-429c-1e92-8f8b-43f70edbdf80.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F03114433-429c-1e92-8f8b-43f70edbdf80.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=139fd6551b2b59d273194eed576ffab2 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e図のように、同期しているファイルを右クリックして「Googleドライブ」→「共有」→「詳細設定」から共有リンクを取得し、これをコピペする、という方法になります。\u003c/p\u003e\n\n\u003cp\u003ecybozu liveに直接貼る場合\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F527098d0-6c1e-2e1b-ee77-d83dcb0890fe.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=383cde1e5545ae8ec2e7e8a2e238997b\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F527098d0-6c1e-2e1b-ee77-d83dcb0890fe.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=383cde1e5545ae8ec2e7e8a2e238997b\" alt=\"無題.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/527098d0-6c1e-2e1b-ee77-d83dcb0890fe.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F527098d0-6c1e-2e1b-ee77-d83dcb0890fe.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=2c76046991d8f8d9b0233bb9a56880f1 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこのように出来たので、若干不便になったかもしれません。\u003cbr\u003e\nしかし、これをするとcubouzu liveの共有フォルダの添付ファイルがあっという間に膨れ上がって収拾がつかなくなることを考えると、Google Driveにしたほうが結果的に楽かもしれません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"作成したファイルを外部の人にみせる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%9C%E6%88%90%E3%81%97%E3%81%9F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%A4%96%E9%83%A8%E3%81%AE%E4%BA%BA%E3%81%AB%E3%81%BF%E3%81%9B%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e作成したファイルを外部の人にみせる\u003c/h2\u003e\n\n\u003cp\u003eこれまではcybozu liveにファイル公開機能が無いため、一旦DLしてそれをメールに添付するしかありませんでした。\u003c/p\u003e\n\n\u003cp\u003eGoogle Driveでは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1d9ba1ab-a60b-d878-5b63-dcfdb283f07f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=554f737695195a783675b02f1f14a8d1\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1d9ba1ab-a60b-d878-5b63-dcfdb283f07f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=554f737695195a783675b02f1f14a8d1\" alt=\"公開リンク\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/1d9ba1ab-a60b-d878-5b63-dcfdb283f07f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F1d9ba1ab-a60b-d878-5b63-dcfdb283f07f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=5a0460677be79155911518d6de8030f9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこれのいい所は、ファイルはGoogle Drive上にあるので、相手に大きなファイルを送っていしまうことがなく、また、ファイルに変更があっても送り直す必要が無いというあたりでしょうか。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ファイルを検索する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eファイルを検索する\u003c/h2\u003e\n\n\u003cp\u003ecybozu liveでは\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F3c8defb8-df20-21aa-b82f-c3341a052504.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e082f3169097407b83b412ee56dc9e38\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F3c8defb8-df20-21aa-b82f-c3341a052504.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e082f3169097407b83b412ee56dc9e38\" alt=\"サイボウズLiveの検索\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/3c8defb8-df20-21aa-b82f-c3341a052504.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F3c8defb8-df20-21aa-b82f-c3341a052504.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=af1c39d535d0148d2ff271c89a5d30d1 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nキーワード以外に更新者や更新日で検索できました。\u003cstrong\u003eただしスマホアプリにはその機能がない模様\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003eGoogle Driveはどうでしょうか？\u003cbr\u003e\n検索で有名なGoogleが作ってるんですから、当然検索機能は優秀です。キーワード検索の他に\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2cdcd39f-7521-cd38-b131-3eaea742a58f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=76d32bdf398768d49033218545c2aeb1\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2cdcd39f-7521-cd38-b131-3eaea742a58f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=76d32bdf398768d49033218545c2aeb1\" alt=\"わかりやすいシンプルな絞込\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/2cdcd39f-7521-cd38-b131-3eaea742a58f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F2cdcd39f-7521-cd38-b131-3eaea742a58f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=40b44821bdc7790bbcf8084c965c8d21 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nファイル種別で絞り込んだり\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9e66998f-2c7f-67f5-29f0-e13253b6b23e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9bfcc65445720d068dd95287516d099e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9e66998f-2c7f-67f5-29f0-e13253b6b23e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9bfcc65445720d068dd95287516d099e\" alt=\"無題.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/9e66998f-2c7f-67f5-29f0-e13253b6b23e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9e66998f-2c7f-67f5-29f0-e13253b6b23e.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=8c5b4e22fa6bf3ee79164af654a29750 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nもちろん更新日などでも検索できます。\u003c/p\u003e\n\n\u003cp\u003eまた、\u003ca href=\"http://www.lifehacker.jp/2015/01/150104_google_drive.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eファイルサイズの大きい順に並べ替えることも出来ます\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eしかし、地味に優秀なのは、\u003cstrong\u003ePDFの中身も先頭10ページなら検索してくれる\u003c/strong\u003eということです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"複数人プロジェクトにおけるgoogle-driveの運用\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A4%87%E6%95%B0%E4%BA%BA%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bgoogle-drive%E3%81%AE%E9%81%8B%E7%94%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e複数人プロジェクトにおけるGoogle Driveの運用\u003c/h1\u003e\n\n\u003cp\u003e基本的には、閲覧者全員がGoogleアカウントを取得し、管理者は閲覧者に対しフォルダーを共有する、ということになると思います。人によってこのフォルダーだけ、とかこのファイルだけ、というように権限を管理できます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"google-driveの権限\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#google-drive%E3%81%AE%E6%A8%A9%E9%99%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGoogle Driveの権限\u003c/h2\u003e\n\n\u003cp\u003e三段階ありまして、\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e閲覧できる\u003c/li\u003e\n\u003cli\u003eコメントできる\u003c/li\u003e\n\u003cli\u003e編集できる\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eとなっています。用法用量を守って権限を管理しましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"プログラマーのためのcybozu-live解剖学\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEcybozu-live%E8%A7%A3%E5%89%96%E5%AD%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプログラマーのためのcybozu live解剖学\u003c/h1\u003e\n\n\u003cp\u003e「非プログラマーに」というタイトルはどこに行った、という感じですが気にしない。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cybozu-live共有フォルダ上のファイルの扱われ方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cybozu-live%E5%85%B1%E6%9C%89%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E4%B8%8A%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%89%B1%E3%82%8F%E3%82%8C%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecybozu live共有フォルダ上のファイルの扱われ方\u003c/h2\u003e\n\n\u003cp\u003eまず、これはcubouzu liveを使い込んでいればプログラマでなくてもわかるかもしれませんが、cybozu live共有フォルダ上のファイルには２つの名前があります。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eアップロード時のファイル名\u003c/li\u003e\n\u003cli\u003ecybozu live共有フォルダでの表示名(デフォルトでは1に同じ)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e厄介なことに、この2つは必ずしも一致しません。どういうことかというと、\u003cstrong\u003e1の名前が同じファイルが複数同じ階層に存在しうるということです\u003c/strong\u003e。これは、全件DLする際に障害になります。\u003c/p\u003e\n\n\u003cp\u003eで、これとは別に、各ファイルに\u003cstrong\u003euniqueなコンテンツID(cidと略記される)が振られます\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cybozu-live-での一括dl機能の実装予定について\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cybozu-live-%E3%81%A7%E3%81%AE%E4%B8%80%E6%8B%ACdl%E6%A9%9F%E8%83%BD%E3%81%AE%E5%AE%9F%E8%A3%85%E4%BA%88%E5%AE%9A%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecybozu live での一括DL機能の実装予定について\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://cybozulive.com/ideabox/view?requestId=150\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://cybozulive.com/ideabox/view?requestId=150\u003c/a\u003e\u003cbr\u003e\nこういうふうに2010年にユーザーから要望が出て、少なくとも2011年に\u003cstrong\u003e実装予定\u003c/strong\u003eになっています。\u003cbr\u003e\nさてあれから5年。サイボウズさん、いつ実装するんですか？\u003cbr\u003e\nzipで固めるなりtarで固めて落とせるようにしていただけませんか・・・？\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"cybozu-live-apiで取れる共有フォルダの情報\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cybozu-live-api%E3%81%A7%E5%8F%96%E3%82%8C%E3%82%8B%E5%85%B1%E6%9C%89%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%AE%E6%83%85%E5%A0%B1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecybozu live APIで取れる共有フォルダの情報\u003c/h2\u003e\n\n\u003cp\u003ecybozu live自体にファイルDL機能がない以上、ダウンローダーを自作しないといけないわけですが、まず考えるのは公式APIでしょう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.cybozulive.com/doc/current/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://developer.cybozulive.com/doc/current/\u003c/a\u003e\u003cbr\u003e\nここにドキュメントがあります。このうち関係するのは\u003cbr\u003e\n\u003ca href=\"https://developer.cybozulive.com/doc/current/pub/gwCabinet.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://developer.cybozulive.com/doc/current/pub/gwCabinet.html\u003c/a\u003e\u003cbr\u003e\nこれです。まあごくごくありきたりな内容が取得できますが、\u003cstrong\u003ecidは取得できません\u003c/strong\u003e。よってAPIは使いものにならないゴミという事になります。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ならばcokie使ってhtml落としてゴリ押しするしか無い\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AA%E3%82%89%E3%81%B0cokie%E4%BD%BF%E3%81%A3%E3%81%A6html%E8%90%BD%E3%81%A8%E3%81%97%E3%81%A6%E3%82%B4%E3%83%AA%E6%8A%BC%E3%81%97%E3%81%99%E3%82%8B%E3%81%97%E3%81%8B%E7%84%A1%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eならばcokie使ってhtml落としてゴリ押しするしか無い！\u003c/h2\u003e\n\n\u003cp\u003eさて、cidですが、共有フォルダのファイル一覧のhtmlには実は記載されています。\u003c/p\u003e\n\n\u003cp\u003e以下\u003ccode\u003ez_zzzzz\u003c/code\u003eはGroupIDを指します。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8bb953e4-69d8-7aa8-8134-1ddf2322ab2f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d3ffd65d964ae1e53ca2a0c453c1dc39\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8bb953e4-69d8-7aa8-8134-1ddf2322ab2f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d3ffd65d964ae1e53ca2a0c453c1dc39\" alt=\"GroupID\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/8bb953e4-69d8-7aa8-8134-1ddf2322ab2f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8bb953e4-69d8-7aa8-8134-1ddf2322ab2f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=680a646ba7aef7b03465b31cb10e7527 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"とりあえず共有フォルダのファイル一覧を調べる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E5%85%B1%E6%9C%89%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E4%B8%80%E8%A6%A7%E3%82%92%E8%AA%BF%E3%81%B9%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eとりあえず共有フォルダのファイル一覧を調べる\u003c/h3\u003e\n\n\u003cp\u003e共有フォルダのファイル一覧のURLですが(というよりGETのパラメータ)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ehttps://cybozulive.com/z_zzzzz/gwCabinet/list?currentFolderId=yyyyyy\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようになっています。ここでGETのパラメータは\u003c/p\u003e\n\n\u003cdl\u003e\n    \u003cdt\u003ecurrentFolderId\u003c/dt\u003e\n    \u003cdd\u003e各フォルダに固有のid\u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003cp\u003eです。FolderIDが問題ですね。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"folderidを取得する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#folderid%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eFolderIDを取得する\u003c/h3\u003e\n\n\u003cp\u003eところで共有フォルダのファイル一覧のhtmlには\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fdba3a4bc-c4c2-b480-7a07-5e9b2bec2722.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e43725a65186842fcb3612c8d62985a1\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fdba3a4bc-c4c2-b480-7a07-5e9b2bec2722.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e43725a65186842fcb3612c8d62985a1\" alt=\"共有フォルダ - みらい研実行委員会 - サイボウズLive.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/dba3a4bc-c4c2-b480-7a07-5e9b2bec2722.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fdba3a4bc-c4c2-b480-7a07-5e9b2bec2722.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=4363c514a048e9dd81d5d2cd8c374425 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nこのような部分があります。フォルダーの一覧がありますね。ここのhtmlは・・・？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e共有フォルダのhtml抜粋\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;li\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_gwCabinetFolder_yyyyyy\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"selfclear active\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"switch\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"folderOpen\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/plus11.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"開く\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"folderClose\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"display:none;\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/minus11.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"閉じる\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n\n        \u003cspan class=\"nt\"\u003e\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/cy_order20.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon categoryOrder\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"display: none;\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/list?currentFolderId=yyyyyy\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"iconLink categoryLink\"\u003c/span\u003e \u003cspan class=\"na\"\u003etitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"広報班\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"categoryName\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e広報班\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"targetCount\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e(3)\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n\n        \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"categoryEdit\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"display: none;\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"iconLink modifyCategory\"\u003c/span\u003e \u003cspan class=\"na\"\u003etitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"編集する\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/edit16.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"編集する\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"iconLink deleteCategory\"\u003c/span\u003e \u003cspan class=\"na\"\u003etitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"削除する\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/delete16.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"削除する\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;ul\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_gwCabinetFolderList_yyyyyy\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"include\"\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"display: none;\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/ul\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e  \n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eフォルダーごとにこの\u003ccode\u003eli\u003c/code\u003e要素があります。そしてFolderIdが書いてある！\u003c/p\u003e\n\n\u003cp\u003eということは\u003cstrong\u003ecokieをヘッダーにつけてhtmlをDLして正規表現で抜けばええやん!!\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"coffset\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#coffset\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecoffset\u003c/h3\u003e\n\n\u003cp\u003eところでフォルダー一覧の表示件数は20件です。20件を超えた分はどうやってしゅとくすればいいでしょうか？\u003c/p\u003e\n\n\u003cp\u003eここでFirefoxで次へボタンを押したときの挙動をみると\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa6e0339a-ddce-d227-794f-f2d84c2cb149.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f6b80fbe3753c5b616549cbb98a57671\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa6e0339a-ddce-d227-794f-f2d84c2cb149.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f6b80fbe3753c5b616549cbb98a57671\" alt=\"無題.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/a6e0339a-ddce-d227-794f-f2d84c2cb149.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa6e0339a-ddce-d227-794f-f2d84c2cb149.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=6aee050e5fc0cdd33fd9ef0aef4a9c42 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eなにやらajaxでGET要求を出してhtmlを取ってきています。つまりフォルダーのファイルリストの正体はこいつです。この要求URLは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ehttps://cybozulive.com/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\u0026amp;dummy=ttttttttttttt\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようになっています。ここでGETのパラメータを見ると\u003c/p\u003e\n\n\u003cdl\u003e\n    \u003cdt\u003ecurrentFolderId\u003c/dt\u003e\n    \u003cdd\u003e前述したFolderID\u003c/dd\u003e\n    \u003cdt\u003ecsort\u003c/dt\u003e\n    \u003cdd\u003eソート基準(1:タイトル 2:更新日時)\u003c/dd\u003e\n    \u003cdt\u003ecsortOrder\u003c/dt\u003e\n    \u003cdd\u003eソート時の並び順(0:降順 1:昇順)\u003c/dd\u003e\n    \u003cdt\u003ecoffset\u003c/dt\u003e\n    \u003cdd\u003eページ数×20(1ページあたりの表示数)\u003c/dd\u003e\n    \u003cdt\u003edummy\u003c/dt\u003e\n    \u003cdd\u003eGET要求時点の1 January 1970 00:00:00 UTC (Unix Epoch).からのミリ秒数を表す整数値(なんだけどサーバー側では見てないっぽいどころかこのパラメータなくてもいいみたい)\u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003cp\u003eつまりこのパラメータを指定してhtml落とせばいいということになります。\u003cbr\u003e\n全件DLの作業中にファイルが追加されることを考え、更新日時(降順)でソートしておくことにしましょう。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"cidを手に入れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cid%E3%82%92%E6%89%8B%E3%81%AB%E5%85%A5%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecidを手に入れる\u003c/h3\u003e\n\n\u003cp\u003eこうして落としたhtmlを見てみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e共有フォルダのhtml抜粋\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;tbody\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;tr\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"even confirmed subject\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"check\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u0026lt;input\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"checkbox\"\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cid\"\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"xxxxxxx\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"title\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"subject\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/view?cid=xxxxxxx\u0026amp;amp;coffset=0\u0026amp;amp;currentFolderId=yyyyyy\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"iconLink\"\u003c/span\u003e \u003cspan class=\"na\"\u003etitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ファイルの詳細へ\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/cabinet20.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"共有フォルダ\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"icon\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;span\u0026gt;\u003c/span\u003eファイル名\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"download\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/downloadFileDirect?cid=xxxxxxx\"\u003c/span\u003e \u003cspan class=\"na\"\u003etitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ダウンロード\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"download\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/btn_download_s.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ダウンロード\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"filesize\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;div\u0026gt;\u003c/span\u003e                        xx,xxx KB\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/tr\u0026gt;\u003c/span\u003e\n\n\n\u003cspan class=\"nt\"\u003e\u0026lt;tr\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"even confirmed contents\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"check\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/td\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003ecolspan=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"3\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"withFolder\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"dateformat_mde\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsParts\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsPartsWrapper\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsPartsBody\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"modifyParts\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"folder\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsLabel\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/folder16.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"フォルダ\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;/span\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsValue operation\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/list?currentFolderId=yyyyyy\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eフォルダー名\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"modifyMember\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsLabel\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e更新者:\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsValue\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e○○○○\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"modifyDate\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsLabel\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e更新日時:\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsValue\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eMM/DD(DATE)\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/tr\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/tbody\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんな風にxxxxxxxで隠しましたが3箇所に記載されています。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u0026lt;a href=\"/z_zzzzz/gwCabinet/view?cid=xxxxxxx\u0026amp;amp;coffset=0\u0026amp;amp;currentFolderId=yyyyyy\" class=\"iconLink\" title=\"ファイルの詳細へ\"\u0026gt;\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eここに着目するのがいいでしょう。この時、\u003cstrong\u003e\u003ccode\u003ecid\u003c/code\u003e\u003c/strong\u003eと\u003cstrong\u003e\u003ccode\u003ecoffset\u003c/code\u003e\u003c/strong\u003eと\u003cstrong\u003e\u003ccode\u003ecurrentFolderId\u003c/code\u003e\u003c/strong\u003eを手に入れましょう。\u003c/p\u003e\n\n\u003cp\u003eさて、ということは\u003cstrong\u003ecokieをヘッダーにつけてhtmlをDLして正規表現で抜けばええやん!!\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"coffsetをの終了条件は\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#coffset%E3%82%92%E3%81%AE%E7%B5%82%E4%BA%86%E6%9D%A1%E4%BB%B6%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecoffsetをの終了条件は？\u003c/h3\u003e\n\n\u003cp\u003eここまで見ればわかるようにcoffsetを20ずつ増やしてDLしてパースしてというのをループさせればいいわけですが、ループの終了条件は何でしょうか。ここで上記htmlをよく眺めると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e次がある時\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsInfo listUpdate\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"pageNavi\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                                    \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-url=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;amp;csort=s\u0026amp;amp;csortOrder=o\u0026amp;amp;coffset=of\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_commonPageNaviTop\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e先頭へ\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"delimiter\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e|\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-url=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;amp;csort=s\u0026amp;amp;csortOrder=o\u0026amp;amp;coffset=of\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_commonPageNaviPrev\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"ni\"\u003e\u0026amp;laquo;\u0026amp;nbsp;\u003c/span\u003e前の 20 件へ\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"delimiter\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e|\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                                                            \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-url=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;amp;csort=s\u0026amp;amp;csortOrder=o\u0026amp;amp;coffset=of\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_commonPageNaviNext\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e次の 20 件へ\u003cspan class=\"ni\"\u003e\u0026amp;nbsp;\u0026amp;raquo;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"delimiter\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e|\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-url=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;amp;csort=s\u0026amp;amp;csortOrder=o\u0026amp;amp;coffset=of\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_commonPageNaviLast\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e末尾へ\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eもう終わりの時\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"contentsInfo listUpdate\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"pageNavi\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                                    \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-url=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;amp;csort=s\u0026amp;amp;csortOrder=o\u0026amp;amp;coffset=of\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_commonPageNaviTop\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e先頭へ\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"delimiter\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e|\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"javascript:void(0);\"\u003c/span\u003e \u003cspan class=\"na\"\u003edata-url=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;amp;csort=s\u0026amp;amp;csortOrder=o\u0026amp;amp;coffset=of\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cba_commonPageNaviPrev\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"ni\"\u003e\u0026amp;laquo;\u0026amp;nbsp;\u003c/span\u003e前の 20 件へ\u003cspan class=\"nt\"\u003e\u0026lt;/a\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"delimiter\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e|\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"disable cba_commonPageNaviNext\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e次の 20 件へ\u003cspan class=\"ni\"\u003e\u0026amp;nbsp;\u0026amp;raquo;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"delimiter\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e|\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"disable cba_commonPageNaviLast\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e末尾へ\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eつまり、「末尾へ」という文字のある行に\u003ccode\u003edisable\u003c/code\u003eとあれば終了ですね。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"まってどうやってファイル名を取得するの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A3%E3%81%A6%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまって、どうやってファイル名を取得するの？\u003c/h3\u003e\n\n\u003cp\u003e最初に言ったように、ファイルには2つの名前があります。\u003cbr\u003e\n共有フォルダの一覧の名前は\u003cstrong\u003e拡張子が記載されてないことがあり\u003c/strong\u003e、保存する際の名前として採用できません。\u003cbr\u003e\nしたがってこれを取得する方法を考えます。ここで利用するのがファイル詳細画面です。\u003c/p\u003e\n\n\u003cp\u003eさてこの詳細画面のURLですが(というよりGETのパラメータ)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ehttps://cybozulive.com/z_zzzzz/gwCabinet/view?cid=xxxxxxx\u0026amp;coffset=0\u0026amp;currentFolderId=yyyyyy\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようになっています。ここで\u003c/p\u003e\n\n\u003cdl\u003e\n    \u003cdt\u003ecid\u003c/dt\u003e\n    \u003cdd\u003e「cidを手に入れる」で手に入れたcid\u003c/dd\u003e\n    \u003cdt\u003ecoffset\u003c/dt\u003e\n    \u003cdd\u003e「cidを手に入れる」で手に入れたcoffset\u003c/dd\u003e\n    \u003cdt\u003ecurrentFolderId\u003c/dt\u003e\n    \u003cdd\u003e「cidを手に入れる」で手に入れたcurrentFolderId\u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003cp\u003eです。\u003c/p\u003e\n\n\u003cp\u003eさて、こうして落としたHTMLには\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eファイル詳細画面のhtml(抜粋)\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;td\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"fileName\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"fileName\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eファイル名.拡張子\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n                                \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"button--download\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;a\u003c/span\u003e \u003cspan class=\"na\"\u003ehref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/z_zzzzz/gwCabinet/downloadFileDirect?cid=xxxxxxx\"\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"button--download__operation\"\u003c/span\u003e \u003cspan class=\"na\"\u003etitle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ダウンロード\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;img\u003c/span\u003e \u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://cybozulive.com/static/76ba8adc98/images/arrow/download.gif\"\u003c/span\u003e \u003cspan class=\"na\"\u003ealt=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ダウンロード\"\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u0026lt;span\u0026gt;\u003c/span\u003eダウンロード\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/td\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのような部分があります。さて\u003cstrong\u003e勝ち確定ですね！\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eGroupIDは既知\u003c/li\u003e\n\u003cli\u003eFolderID一覧は共有フォルダのファイル一覧のページどこでもいいのでブラウザで落としておいてそれをパースすれば手に入る(いやそこも自動化してもいいけどさ)\u003c/li\u003e\n\u003cli\u003ecidを各フォルダですべて取得するにはcoffsetを変化させつつDLしてパースすればよい\u003c/li\u003e\n\u003cli\u003eファイル名は3で手に入れた\u003ccode\u003ecid\u003c/code\u003e,\u003ccode\u003ecoffset\u003c/code\u003e,\u003ccode\u003ecurrentFolderId\u003c/code\u003eを使ってhtmlを落しパースして手に入れる\u003c/li\u003e\n\u003cli\u003ecybozu liveに全件DLという機能がないので全件DLは不可能という常識を捨て去ることにより\u003cdel\u003e\u003ca href=\"http://dic.pixiv.net/a/%E6%9D%B1%E9%A2%A8%E8%B0%B7%E6%97%A9%E8%8B%97#h2_5\" rel=\"nofollow noopener\" target=\"_blank\"\u003e早苗が奇跡を起こした\u003c/a\u003e\u003c/del\u003e全件DLへの道がひらけた\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ここまでをc11で半自動化した\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%81%93%E3%81%BE%E3%81%A7%E3%82%92c11%E3%81%A7%E5%8D%8A%E8%87%AA%E5%8B%95%E5%8C%96%E3%81%97%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eここまでをC++11で半自動化した\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/miraiken/cybozu_extract_dl_info\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/miraiken/cybozu_extract_dl_info\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eほい。そのままでは動かないけどここまでみればソースをいじるのは簡単のはず。cokieの話は書いてないけどそれくらいはわかるよね。\u003cbr\u003e\nVSでしか検証してないけど、別にLinux環境でもSSLが使えるcurlが\u003ccode\u003estd::system\u003c/code\u003e`から呼べれば\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimbue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecodecvt_utf8_utf16\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eを全部\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimbue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003elocale\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecodecvt_utf8\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eに置き換えれば使えるはず。\u003c/p\u003e\n\n\u003cp\u003ecid_list.txtを生成します。中身は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003efolder_id:yyyyyy cid:xxxxxxx filename:なまえ.拡張子\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eみたいな感じ。folder_idはDLには必要ないんだけど、見やすさを考えてつけました。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"あとはdlするだけだ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%82%E3%81%A8%E3%81%AFdl%E3%81%99%E3%82%8B%E3%81%A0%E3%81%91%E3%81%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eあとはDLするだけだ\u003c/h2\u003e\n\n\u003cp\u003eヘッダーを除くとDLする際のcurlのコマンドは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecurl 'https://cybozulive.com/z_zzzzz/gwCabinet/downloadFileDirect?cid=xxxxxxx' -o 'ファイル名.拡張子' -L\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"それもc11で自動化してやんよ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%82%8C%E3%82%82c11%E3%81%A7%E8%87%AA%E5%8B%95%E5%8C%96%E3%81%97%E3%81%A6%E3%82%84%E3%82%93%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eそれもC++11で自動化してやんよ！\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/miraiken/cybozu_get_file\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/miraiken/cybozu_get_file\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eほい。やっぱり手直しは必要です。\u003c/p\u003e\n\n\u003cp\u003eなんでC++なんだという声が聞こえてきそうだけど、書く人が一番書きやすい言語で書くのがいいよね。(一応Rubyで書こうとしたんだけど勝手が違うからめんdになって断念した)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003eサイボウズの共有フォルダとか糞だ。滅びろ・・・\u003c/p\u003e\n\n\u003cp\u003eさて、新人プログラマーの皆様、なんとなく途中で挫折して最後まで読んでいただけていない気がしますが、ここまで読んでいただきありがとうございます。\u003c/p\u003e\n\n\u003cp\u003e今回、htmlを落として正規表現で抜くという\u003cstrong\u003eとてつもなくdirtyな\u003c/strong\u003e方法を紹介しました。しかもboost.asioを使うでもなく、libcurlを使うでもなく、他言語のネットワークライブラリを使うでもなく、curlをそのまま叩くという・・・。世の中なんでも綺麗にはいかないらしいです。\u003c/p\u003e\n\n\u003cp\u003eなるべくこういうことはしたくないものですが、いざというときにはこういう汚い方法もできるようになっておくことは大事かと思います。\u003c/p\u003e\n\n\u003cp\u003eちなみにこれを調査してプログラム書くのに2日、この記事書くのに2日かかっています。皆さんならもっとはやく調査も執筆もできたでしょう。え？できない？・・・うん、がんばれ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"課題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%B2%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e課題\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003ecid_list、オレオレ形式じゃなくてjsonにしたい。(picojson)\u003c/li\u003e\n\u003cli\u003ecokieとかGroupIDとかコマンドライン引数で指定できるようにしたい\u003c/li\u003e\n\u003cli\u003eGUI作りたい\u003c/li\u003e\n\u003cli\u003eBoost.asio使って書き直したい\u003c/li\u003e\n\u003c/ul\u003e\n","body":"# 各サービス紹介\nえっとまず知らない人もいると思うので\ncybozu live\nhttps://cybozulive.com/\nGoogle Drive\nhttps://drive.google.com/\nこれのことです。\n\n前者はオンラインで情報共有しつつプロジェクトの進行、割り振り、スケジューリングができるツールです。プログラマにはGitHub Issueの劣化版にカレンダーくっつけたといえばいいでしょうか。\n後者はクラウドストレージです。\n\n# はじめに\n\n私が所属している[みらい研究室実行委員会](https://miraiken.github.io/web/index.html)ではcybozuliveを使っているのですが、この度ファイル管理をGoogleDriveにしようぜ！ということを言うためにまとめています。\n内輪ネタは無いのでご安心ください。\n\n# cybozuliveでのファイル管理が決定的に辛い2つの理由\n\n糞なところは掃いて捨てるほどありますが、それは後述するとしてとりあえず決定的に糞な使用を２つ挙げましょう。\n\n## 1.容量が1GBしかない\n\n正直つらいです。画像とかzipとかあげたら割とすぐ埋まってしまいます。しかしこれだけではまだ糞ではないですよね？\n\n## 2.ファイルを１つずつしかDLできない\n\nこんなのFワード不可避です。\n\n容量少ないならせめて全件DLして移行とかしたいじゃないですか。でも真っ当なやり方ではできません。\n\n### 一括DLできない証拠であるサイボウズサポートの返答\n\n\u003e\"サイボウズLive サポートセンター\" \u003csupport@cybozulive.com\u003e\n\n\u003eTo yume-wikijp\n○○○○ 様\n\n\u003eサイボウズLive サポートセンター 松田です。\nお問合せ頂き、ありがとうございます。\n\n\u003e残念ながら、サイボウズLiveでは、共有ファイルを\n一括でダウンロードすることはできません。\n\n\u003eご要望にお応えできず、申し訳ございません。\n\n\u003eお手数をおかけしますが、1つずつファイルを\nダウンロード頂きますようお願い申し上げます。\n\n\u003eその他にご不明な点がございましたら、お気軽にご連絡ください。\n今後ともサイボウズLiveをご愛顧頂きますようお願い申し上げます。\n\n\n後述する通り``1つずつファイルをダウンロード``とやらを自動化することはできますが、辛いです。\n\n# Google Driveの利点\n\n- Google Docsとの緊密な連携により、MS Officeなくても十分いろいろできる\n- 検索で有名なGoogleだけあって検索機能は強い\n- デスクトップClientがある\n- ファイルを外部に公開できる\n\n# Google Driveとcybozu liveを比較する\n\n## 他人の作ったファイルを見る\n\n| cybozu live            | Google Drive(Desktop Client導入時) |\n|-------------------------|------------------------------------|\n| 1. ファイルをDLする     | 1. ファイルを開く                  |\n| 2. ファイルを閲覧する   |                                    |\n| 3. 見終わったら削除する |                                    |\n\n勝手の同期してますからいきなりファイルを見れますね。\n\n## ファイルを編集してアップロードするまで\n\n| cybozu live                                              | Google Drive(Desktop Client導入時) |\n|-----------------------------------------------------------|------------------------------------|\n| 1. ブラウザでサイトにアクセスしファイルをDLする           | 1. ファイルを編集する              |\n| 2. ファイルを編集する                                     | 2. ファイルを保存する              |\n| 3. ファイルを保存する                                     |                                    |\n| 4. ブラウザでサイトにアクセスしファイルをアップロードする |                                    |\n\nGoogle Driveならとってもシンプル。いちいちDLするためにブラウザ開かなくていい。\n\n\n## バージョン管理\n\n| cybozu live                                          | Google Drive(Desktop Client導入時) |\n|-------------------------------------------------------|------------------------------------|\n| 1. ファイルをDLする                                   | 1. ファイルを編集する              |\n| 2. ファイルを編集する                                 |                                    |\n| 3. ブラウザでサイボウズのサイトを開く                 |                                    |\n| 4. 共有フォルダから対象のファイルを探す               |                                    |\n| 5. 「ファイルを上書きする」ボタンからアップロードする |                                    |\n\nDesktop Clientは勝手に版管理してくれる(というより同名は更新扱いする？)ので楽ですね。\n\nちなみにGoogleDriveの版管理は\n![version_manage](https://qiita-image-store.s3.amazonaws.com/0/94177/06022fea-6f75-8af6-bf50-ceeff6fea77d.png)\n\n\nから見られます。30日間限定の版管理ですがまあ実用上支障ないかと。本当に版管理必要ならgit使えばいいですね。\n\n\n# Google Driveにするとどう変わるか\n\n## 複数人でファイルを編集する\n\n例えばなんかの解析をする時に複数人でやったとしましょう。\n\nこれまでなら、解析範囲を解析担当者に割り振り、それぞれWordでまとめ、それを最終的に一つにまとめるということをしていました。\n\nほかの解析者が何を書いているかを知るには、途中の物をアップロードしてもらうように頼み、それをダウンロードするぢかありませんでした。\n\nGoogle Driveは先にいったように、Google Docsと緊密に連携しているので、同じファイルを複数人でブラウザ上で編集できます。編集競合を避けるために解析範囲を割り振るまでは同じですが、ほかの人の進捗も見ることができます。より効率的ですね。\n\n## 議論の過程でファイルを上げる\n\nこれに関しては若干面倒です。\n\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/94177/03114433-429c-1e92-8f8b-43f70edbdf80.png)\n\n図のように、同期しているファイルを右クリックして「Googleドライブ」→「共有」→「詳細設定」から共有リンクを取得し、これをコピペする、という方法になります。\n\ncybozu liveに直接貼る場合\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/94177/527098d0-6c1e-2e1b-ee77-d83dcb0890fe.png)\n\nこのように出来たので、若干不便になったかもしれません。\nしかし、これをするとcubouzu liveの共有フォルダの添付ファイルがあっという間に膨れ上がって収拾がつかなくなることを考えると、Google Driveにしたほうが結果的に楽かもしれません。\n\n\n## 作成したファイルを外部の人にみせる\n\nこれまではcybozu liveにファイル公開機能が無いため、一旦DLしてそれをメールに添付するしかありませんでした。\n\nGoogle Driveでは\n\n![公開リンク](https://qiita-image-store.s3.amazonaws.com/0/94177/1d9ba1ab-a60b-d878-5b63-dcfdb283f07f.png)\n\nこれのいい所は、ファイルはGoogle Drive上にあるので、相手に大きなファイルを送っていしまうことがなく、また、ファイルに変更があっても送り直す必要が無いというあたりでしょうか。\n\n## ファイルを検索する\ncybozu liveでは\n![サイボウズLiveの検索](https://qiita-image-store.s3.amazonaws.com/0/94177/3c8defb8-df20-21aa-b82f-c3341a052504.png)\nキーワード以外に更新者や更新日で検索できました。**ただしスマホアプリにはその機能がない模様**。\n\nGoogle Driveはどうでしょうか？\n検索で有名なGoogleが作ってるんですから、当然検索機能は優秀です。キーワード検索の他に\n![わかりやすいシンプルな絞込](https://qiita-image-store.s3.amazonaws.com/0/94177/2cdcd39f-7521-cd38-b131-3eaea742a58f.png)\nファイル種別で絞り込んだり\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/94177/9e66998f-2c7f-67f5-29f0-e13253b6b23e.png)\nもちろん更新日などでも検索できます。\n\nまた、[ファイルサイズの大きい順に並べ替えることも出来ます](http://www.lifehacker.jp/2015/01/150104_google_drive.html)\n\nしかし、地味に優秀なのは、**PDFの中身も先頭10ページなら検索してくれる**ということです。\n\n# 複数人プロジェクトにおけるGoogle Driveの運用\n\n基本的には、閲覧者全員がGoogleアカウントを取得し、管理者は閲覧者に対しフォルダーを共有する、ということになると思います。人によってこのフォルダーだけ、とかこのファイルだけ、というように権限を管理できます。\n\n## Google Driveの権限\n\n三段階ありまして、\n\n1. 閲覧できる\n2. コメントできる\n3. 編集できる\n\nとなっています。用法用量を守って権限を管理しましょう。\n\n# プログラマーのためのcybozu live解剖学\n\n「非プログラマーに」というタイトルはどこに行った、という感じですが気にしない。\n\n## cybozu live共有フォルダ上のファイルの扱われ方\n\nまず、これはcubouzu liveを使い込んでいればプログラマでなくてもわかるかもしれませんが、cybozu live共有フォルダ上のファイルには２つの名前があります。\n\n1. アップロード時のファイル名\n2. cybozu live共有フォルダでの表示名(デフォルトでは1に同じ)\n\n厄介なことに、この2つは必ずしも一致しません。どういうことかというと、**1の名前が同じファイルが複数同じ階層に存在しうるということです**。これは、全件DLする際に障害になります。\n\nで、これとは別に、各ファイルに**uniqueなコンテンツID(cidと略記される)が振られます**。\n\n## cybozu live での一括DL機能の実装予定について\n\nhttps://cybozulive.com/ideabox/view?requestId=150\nこういうふうに2010年にユーザーから要望が出て、少なくとも2011年に**実装予定**になっています。\nさてあれから5年。サイボウズさん、いつ実装するんですか？\nzipで固めるなりtarで固めて落とせるようにしていただけませんか・・・？\n\n## cybozu live APIで取れる共有フォルダの情報\n\ncybozu live自体にファイルDL機能がない以上、ダウンローダーを自作しないといけないわけですが、まず考えるのは公式APIでしょう。\n\nhttps://developer.cybozulive.com/doc/current/\nここにドキュメントがあります。このうち関係するのは\nhttps://developer.cybozulive.com/doc/current/pub/gwCabinet.html\nこれです。まあごくごくありきたりな内容が取得できますが、**cidは取得できません**。よってAPIは使いものにならないゴミという事になります。\n\n## ならばcokie使ってhtml落としてゴリ押しするしか無い！\n\nさて、cidですが、共有フォルダのファイル一覧のhtmlには実は記載されています。\n\n以下``z_zzzzz``はGroupIDを指します。\n![GroupID](https://qiita-image-store.s3.amazonaws.com/0/94177/8bb953e4-69d8-7aa8-8134-1ddf2322ab2f.png)\n\n### とりあえず共有フォルダのファイル一覧を調べる\n\n共有フォルダのファイル一覧のURLですが(というよりGETのパラメータ)\n\n```\nhttps://cybozulive.com/z_zzzzz/gwCabinet/list?currentFolderId=yyyyyy\n```\n\nのようになっています。ここでGETのパラメータは\n\n\u003cdl\u003e\n    \u003cdt\u003ecurrentFolderId\u003c/dt\u003e\n    \u003cdd\u003e各フォルダに固有のid\u003c/dd\u003e\n\u003c/dl\u003e\n\nです。FolderIDが問題ですね。\n\n### FolderIDを取得する\n\nところで共有フォルダのファイル一覧のhtmlには\n![共有フォルダ - みらい研実行委員会 - サイボウズLive.png](https://qiita-image-store.s3.amazonaws.com/0/94177/dba3a4bc-c4c2-b480-7a07-5e9b2bec2722.png)\nこのような部分があります。フォルダーの一覧がありますね。ここのhtmlは・・・？\n\n```html:共有フォルダのhtml抜粋\n\u003cli id=\"cba_gwCabinetFolder_yyyyyy\" class=\"selfclear active\"\u003e\n    \u003cspan class=\"switch\"\u003e\n        \u003ca href=\"javascript:void(0);\" class=\"folderOpen\" style=\"\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/plus11.gif\" alt=\"開く\" /\u003e\u003c/a\u003e\n        \u003ca href=\"javascript:void(0);\" class=\"folderClose\" style=\"display:none;\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/minus11.gif\" alt=\"閉じる\" /\u003e\u003c/a\u003e\n    \u003c/span\u003e\n\n        \u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/cy_order20.gif\" class=\"icon categoryOrder\" style=\"display: none;\"/\u003e\n    \n    \u003ca href=\"/z_zzzzz/gwCabinet/list?currentFolderId=yyyyyy\" class=\"iconLink categoryLink\" title=\"広報班\"\u003e\n        \u003cspan class=\"categoryName\"\u003e広報班\u003c/span\u003e\n    \u003c/a\u003e\n    \u003cspan class=\"targetCount\"\u003e(3)\u003c/span\u003e\n\n        \u003cspan class=\"categoryEdit\" style=\"display: none;\"\u003e\n        \u003ca href=\"javascript:void(0);\" class=\"iconLink modifyCategory\" title=\"編集する\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/edit16.gif\" alt=\"編集する\" class=\"icon\" /\u003e\u003c/a\u003e\n        \u003ca href=\"javascript:void(0);\" class=\"iconLink deleteCategory\" title=\"削除する\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/delete16.gif\" alt=\"削除する\" class=\"icon\" /\u003e\u003c/a\u003e\n    \u003c/span\u003e\n    \n    \u003cul id=\"cba_gwCabinetFolderList_yyyyyy\" class=\"include\" style=\"display: none;\"\u003e\n    \u003c/ul\u003e\n\u003c/li\u003e  \n```\n\nフォルダーごとにこの``li``要素があります。そしてFolderIdが書いてある！\n\nということは**cokieをヘッダーにつけてhtmlをDLして正規表現で抜けばええやん!!**\n\n### coffset\n\nところでフォルダー一覧の表示件数は20件です。20件を超えた分はどうやってしゅとくすればいいでしょうか？\n\nここでFirefoxで次へボタンを押したときの挙動をみると\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/94177/a6e0339a-ddce-d227-794f-f2d84c2cb149.png)\n\nなにやらajaxでGET要求を出してhtmlを取ってきています。つまりフォルダーのファイルリストの正体はこいつです。この要求URLは\n\n```\nhttps://cybozulive.com/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026csort=s\u0026csortOrder=o\u0026coffset=of\u0026dummy=ttttttttttttt\n```\n\nのようになっています。ここでGETのパラメータを見ると\n\n\u003cdl\u003e\n    \u003cdt\u003ecurrentFolderId\u003c/dt\u003e\n    \u003cdd\u003e前述したFolderID\u003c/dd\u003e\n    \u003cdt\u003ecsort\u003c/dt\u003e\n    \u003cdd\u003eソート基準(1:タイトル 2:更新日時)\u003c/dd\u003e\n    \u003cdt\u003ecsortOrder\u003c/dt\u003e\n    \u003cdd\u003eソート時の並び順(0:降順 1:昇順)\u003c/dd\u003e\n    \u003cdt\u003ecoffset\u003c/dt\u003e\n    \u003cdd\u003eページ数×20(1ページあたりの表示数)\u003c/dd\u003e\n    \u003cdt\u003edummy\u003c/dt\u003e\n    \u003cdd\u003eGET要求時点の1 January 1970 00:00:00 UTC (Unix Epoch).からのミリ秒数を表す整数値(なんだけどサーバー側では見てないっぽいどころかこのパラメータなくてもいいみたい)\u003c/dd\u003e\n\u003c/dl\u003e\n\nつまりこのパラメータを指定してhtml落とせばいいということになります。\n全件DLの作業中にファイルが追加されることを考え、更新日時(降順)でソートしておくことにしましょう。\n\n### cidを手に入れる\n\nこうして落としたhtmlを見てみましょう。\n\n```html:共有フォルダのhtml抜粋\n\u003ctbody\u003e\n\u003ctr class=\"even confirmed subject\"\u003e\n\u003ctd class=\"check\"\u003e\n    \u003cdiv\u003e\u003cinput type=\"checkbox\" name=\"cid\" value=\"xxxxxxx\" /\u003e\u003c/div\u003e\n\u003c/td\u003e\n\u003ctd class=\"title\"\u003e\n    \u003cdiv class=\"subject\"\u003e\n        \u003ca href=\"/z_zzzzz/gwCabinet/view?cid=xxxxxxx\u0026amp;coffset=0\u0026amp;currentFolderId=yyyyyy\" class=\"iconLink\" title=\"ファイルの詳細へ\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/cabinet20.gif\" alt=\"共有フォルダ\" class=\"icon\" /\u003e\u003cspan\u003eファイル名\u003c/span\u003e\u003c/a\u003e\n    \u003c/div\u003e\n\u003c/td\u003e\n\u003ctd class=\"download\"\u003e\n    \u003cdiv\u003e\n        \u003ca href=\"/z_zzzzz/gwCabinet/downloadFileDirect?cid=xxxxxxx\" title=\"ダウンロード\" class=\"download\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/btn_download_s.gif\" alt=\"ダウンロード\" /\u003e\u003c/a\u003e\n    \u003c/div\u003e\n\u003c/td\u003e\n\u003ctd class=\"filesize\"\u003e\u003cdiv\u003e                        xx,xxx KB\n\u003c/div\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\n\n\u003ctr class=\"even confirmed contents\"\u003e\n    \u003ctd class=\"check\"\u003e\u003c/td\u003e\n    \u003ctd colspan=\"3\" class=\"withFolder\"\u003e\n        \u003cdiv class=\"dateformat_mde\"\u003e\n            \u003cdiv class=\"contentsParts\"\u003e\n                \u003cdiv class=\"contentsPartsWrapper\"\u003e\n                    \u003cdiv class=\"contentsPartsBody\"\u003e\u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"modifyParts\"\u003e\n                \u003cdiv class=\"folder\"\u003e\n                    \u003cspan class=\"contentsLabel\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/folder16.gif\" alt=\"フォルダ\" /\u003e\u003c/span\u003e\n                    \u003cspan class=\"contentsValue operation\"\u003e\u003ca href=\"/z_zzzzz/gwCabinet/list?currentFolderId=yyyyyy\"\u003eフォルダー名\u003c/a\u003e\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"modifyMember\"\u003e\n                    \u003cspan class=\"contentsLabel\"\u003e更新者:\u003c/span\u003e\n                    \u003cspan class=\"contentsValue\"\u003e○○○○\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"modifyDate\"\u003e\n                    \u003cspan class=\"contentsLabel\"\u003e更新日時:\u003c/span\u003e\n                    \u003cspan class=\"contentsValue\"\u003eMM/DD(DATE)\u003c/span\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n````\n\nこんな風にxxxxxxxで隠しましたが3箇所に記載されています。\n\n```\n\u003ca href=\"/z_zzzzz/gwCabinet/view?cid=xxxxxxx\u0026amp;coffset=0\u0026amp;currentFolderId=yyyyyy\" class=\"iconLink\" title=\"ファイルの詳細へ\"\u003e\n```\n\nここに着目するのがいいでしょう。この時、**``cid``**と**``coffset``**と**``currentFolderId``**を手に入れましょう。\n\nさて、ということは**cokieをヘッダーにつけてhtmlをDLして正規表現で抜けばええやん!!**\n\n### coffsetをの終了条件は？\n\nここまで見ればわかるようにcoffsetを20ずつ増やしてDLしてパースしてというのをループさせればいいわけですが、ループの終了条件は何でしょうか。ここで上記htmlをよく眺めると\n\n```html:次がある時\n\u003cdiv class=\"contentsInfo listUpdate\"\u003e\n    \u003cdiv class=\"pageNavi\"\u003e\n                                    \u003ca href=\"javascript:void(0);\" data-url=\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\" class=\"cba_commonPageNaviTop\"\u003e先頭へ\u003c/a\u003e \u003cspan class=\"delimiter\"\u003e|\u003c/span\u003e\n            \u003ca href=\"javascript:void(0);\" data-url=\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\" class=\"cba_commonPageNaviPrev\"\u003e\u0026laquo;\u0026nbsp;前の 20 件へ\u003c/a\u003e\n                \u003cspan class=\"delimiter\"\u003e|\u003c/span\u003e\n                                                            \u003ca href=\"javascript:void(0);\" data-url=\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\" class=\"cba_commonPageNaviNext\"\u003e次の 20 件へ\u0026nbsp;\u0026raquo;\u003c/a\u003e \u003cspan class=\"delimiter\"\u003e|\u003c/span\u003e\n            \u003ca href=\"javascript:void(0);\" data-url=\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\" class=\"cba_commonPageNaviLast\"\u003e末尾へ\u003c/a\u003e\n                \u003c/div\u003e\n\u003c/div\u003e\n```\n\n```html:もう終わりの時\n\u003cdiv class=\"contentsInfo listUpdate\"\u003e\n    \u003cdiv class=\"pageNavi\"\u003e\n                                    \u003ca href=\"javascript:void(0);\" data-url=\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\" class=\"cba_commonPageNaviTop\"\u003e先頭へ\u003c/a\u003e \u003cspan class=\"delimiter\"\u003e|\u003c/span\u003e\n            \u003ca href=\"javascript:void(0);\" data-url=\"/z_zzzzz/gwCabinet/ajax/listAjax?currentFolderId=yyyyyy\u0026amp;csort=s\u0026amp;csortOrder=o\u0026amp;coffset=of\" class=\"cba_commonPageNaviPrev\"\u003e\u0026laquo;\u0026nbsp;前の 20 件へ\u003c/a\u003e\n                \u003cspan class=\"delimiter\"\u003e|\u003c/span\u003e\n            \u003cspan class=\"disable cba_commonPageNaviNext\"\u003e次の 20 件へ\u0026nbsp;\u0026raquo;\u003c/span\u003e \u003cspan class=\"delimiter\"\u003e|\u003c/span\u003e\n        \u003cspan class=\"disable cba_commonPageNaviLast\"\u003e末尾へ\u003c/span\u003e\n        \u003c/div\u003e\n\u003c/div\u003e\n```\n\nつまり、「末尾へ」という文字のある行に``disable``とあれば終了ですね。\n\n### まって、どうやってファイル名を取得するの？\n\n最初に言ったように、ファイルには2つの名前があります。\n共有フォルダの一覧の名前は**拡張子が記載されてないことがあり**、保存する際の名前として採用できません。\nしたがってこれを取得する方法を考えます。ここで利用するのがファイル詳細画面です。\n\nさてこの詳細画面のURLですが(というよりGETのパラメータ)\n\n```\nhttps://cybozulive.com/z_zzzzz/gwCabinet/view?cid=xxxxxxx\u0026coffset=0\u0026currentFolderId=yyyyyy\n```\n\nのようになっています。ここで\n\n\u003cdl\u003e\n    \u003cdt\u003ecid\u003c/dt\u003e\n    \u003cdd\u003e「cidを手に入れる」で手に入れたcid\u003c/dd\u003e\n    \u003cdt\u003ecoffset\u003c/dt\u003e\n    \u003cdd\u003e「cidを手に入れる」で手に入れたcoffset\u003c/dd\u003e\n    \u003cdt\u003ecurrentFolderId\u003c/dt\u003e\n    \u003cdd\u003e「cidを手に入れる」で手に入れたcurrentFolderId\u003c/dd\u003e\n\u003c/dl\u003e\n\nです。\n\nさて、こうして落としたHTMLには\n\n```html:ファイル詳細画面のhtml(抜粋)\n\u003ctd class=\"fileName\"\u003e\n    \u003cdiv\u003e\n        \u003cspan class=\"fileName\"\u003eファイル名.拡張子\u003c/span\u003e\n                                \u003cspan class=\"button--download\"\u003e\n                \u003ca href=\"/z_zzzzz/gwCabinet/downloadFileDirect?cid=xxxxxxx\" class=\"button--download__operation\" title=\"ダウンロード\"\u003e\u003cimg src=\"https://cybozulive.com/static/76ba8adc98/images/arrow/download.gif\" alt=\"ダウンロード\" /\u003e\u003cspan\u003eダウンロード\u003c/span\u003e\u003c/a\u003e\n            \u003c/span\u003e\n            \u003c/div\u003e\n\u003c/td\u003e\n```\n\nのような部分があります。さて**勝ち確定ですね！**\n\n### まとめ\n\n1. GroupIDは既知\n2. FolderID一覧は共有フォルダのファイル一覧のページどこでもいいのでブラウザで落としておいてそれをパースすれば手に入る(いやそこも自動化してもいいけどさ)\n3. cidを各フォルダですべて取得するにはcoffsetを変化させつつDLしてパースすればよい\n4. ファイル名は3で手に入れた``cid``,``coffset``,``currentFolderId``を使ってhtmlを落しパースして手に入れる\n5. cybozu liveに全件DLという機能がないので全件DLは不可能という常識を捨て去ることにより~~[早苗が奇跡を起こした](http://dic.pixiv.net/a/%E6%9D%B1%E9%A2%A8%E8%B0%B7%E6%97%A9%E8%8B%97#h2_5)~~全件DLへの道がひらけた\n\n\n## ここまでをC++11で半自動化した\n\nhttps://github.com/miraiken/cybozu_extract_dl_info\n\nほい。そのままでは動かないけどここまでみればソースをいじるのは簡単のはず。cokieの話は書いてないけどそれくらいはわかるよね。\nVSでしか検証してないけど、別にLinux環境でもSSLが使えるcurlが`std::system``から呼べれば\n\n```cpp\nfile.imbue(std::locale(std::locale(), new std::codecvt_utf8_utf16\u003cwchar_t\u003e));\n```\n\nを全部\n\n```cpp\nfile.imbue(std::locale(std::locale(), new std::codecvt_utf8\u003cwchar_t\u003e));\n```\n\nに置き換えれば使えるはず。\n\ncid_list.txtを生成します。中身は\n\n```\nfolder_id:yyyyyy cid:xxxxxxx filename:なまえ.拡張子\n```\n\nみたいな感じ。folder_idはDLには必要ないんだけど、見やすさを考えてつけました。\n\n## あとはDLするだけだ\n\nヘッダーを除くとDLする際のcurlのコマンドは\n\n```\ncurl 'https://cybozulive.com/z_zzzzz/gwCabinet/downloadFileDirect?cid=xxxxxxx' -o 'ファイル名.拡張子' -L\n```\n\nこんな感じ。\n\n## それもC++11で自動化してやんよ！\n\nhttps://github.com/miraiken/cybozu_get_file\n\nほい。やっぱり手直しは必要です。\n\nなんでC++なんだという声が聞こえてきそうだけど、書く人が一番書きやすい言語で書くのがいいよね。(一応Rubyで書こうとしたんだけど勝手が違うからめんdになって断念した)\n\n# 結論\nサイボウズの共有フォルダとか糞だ。滅びろ・・・\n\nさて、新人プログラマーの皆様、なんとなく途中で挫折して最後まで読んでいただけていない気がしますが、ここまで読んでいただきありがとうございます。\n\n今回、htmlを落として正規表現で抜くという**とてつもなくdirtyな**方法を紹介しました。しかもboost.asioを使うでもなく、libcurlを使うでもなく、他言語のネットワークライブラリを使うでもなく、curlをそのまま叩くという・・・。世の中なんでも綺麗にはいかないらしいです。\n\nなるべくこういうことはしたくないものですが、いざというときにはこういう汚い方法もできるようになっておくことは大事かと思います。\n\nちなみにこれを調査してプログラム書くのに2日、この記事書くのに2日かかっています。皆さんならもっとはやく調査も執筆もできたでしょう。え？できない？・・・うん、がんばれ。\n\n# 課題\n\n- cid_list、オレオレ形式じゃなくてjsonにしたい。(picojson)\n- cokieとかGroupIDとかコマンドライン引数で指定できるようにしたい\n- GUI作りたい\n- Boost.asio使って書き直したい\n","coediting":false,"comments_count":0,"created_at":"2016-04-03T03:51:39+09:00","group":null,"id":"7fe89200daa5ec00bcfb","likes_count":15,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"curl","versions":[]},{"name":"GoogleDrive","versions":[]},{"name":"新人プログラマ応援","versions":[]},{"name":"cybozulive","versions":[]}],"title":"なぜcybozuliveではなくGoogleDriveでファイル管理するべきかを非プログラマーに","updated_at":"2018-03-12T19:37:44+09:00","url":"https://qiita.com/yumetodo/items/7fe89200daa5ec00bcfb","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e一口にデジタル画像って言ってもいろいろあるよ！というお話です。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"その前にパソコンで色はどう扱うの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE%E5%89%8D%E3%81%AB%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%81%A7%E8%89%B2%E3%81%AF%E3%81%A9%E3%81%86%E6%89%B1%E3%81%86%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eその前にパソコンで色はどう扱うの？\u003c/h1\u003e\n\n\u003cp\u003e実はこの話ものすごく闇が深いんですが、そういう怖い闇は触れずに話をします(\u003ca href=\"http://www.arib.or.jp/english/html/overview/doc/2-BTA_S-001_C1_0.pdf\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003eITU-R BT.709-3\u003c/code\u003e\u003c/a\u003eとか\u003ca href=\"https://www.marumo.ne.jp/bt601/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003eITU-R ITU-R BT.601\u003c/code\u003e\u003c/a\u003e言われてもわからんでしょ、俺も正確にはわからん)。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://ja.wikipedia.org/wiki/%E5%8E%9F%E8%89%B2#.E5.8A.A0.E6.B3.95.E6.B7.B7.E5.90.88\" rel=\"nofollow noopener\" target=\"_blank\"\u003e光の三原則\u003c/a\u003eとか聞いたことがあると思います。\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fe%2Fe8%2FAdditiveColorMixiing.svg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f50b96631dd8b346754092808092356e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fe%2Fe8%2FAdditiveColorMixiing.svg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f50b96631dd8b346754092808092356e\" alt=\"RGB加法三原色\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/e/e8/AdditiveColorMixiing.svg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fe%2Fe8%2FAdditiveColorMixiing.svg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=4b4f07e39304fe41332cf04353ff6f80 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eいわゆるR(Red)G(Green)B(Blue)ですね。言い換えると3つの色からすべての色が作れるよ、ということです(だいぶ語弊ありますが)。\u003c/p\u003e\n\n\u003cp\u003e私が大嫌いで仕方がない数学的にいうと、単位ベクトルが3つ存在する世界だということです。\u003c/p\u003e\n\n\u003cp\u003eRGB以外にも動画でお馴染みYCbCrやYPbPr、HSBやHSV、xyzなどいろいろ表し方はありますが、とりあえずRGBだけわかっていればいいと思います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まずデジタル画像を2つに分けるよ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E7%94%BB%E5%83%8F%E3%82%922%E3%81%A4%E3%81%AB%E5%88%86%E3%81%91%E3%82%8B%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずデジタル画像を2つに分けるよ\u003c/h1\u003e\n\n\u003cp\u003eデジタル画像と言ってもラスター形式とベクター形式の2つがあります。なにそれ美味しいの？\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ラスター形式\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A9%E3%82%B9%E3%82%BF%E3%83%BC%E5%BD%A2%E5%BC%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eラスター形式\u003c/h1\u003e\n\n\u003cp\u003e多分もっとも一般的なデジタル画像形式です。\u003ccode\u003e.jpg\u003c/code\u003eとか\u003ccode\u003e.png\u003c/code\u003eとか\u003ccode\u003e.gif\u003c/code\u003eとか\u003ccode\u003e.bmp\u003c/code\u003eとかみたことあるんじゃ無いでしょうか？あれです。\u003c/p\u003e\n\n\u003cp\u003eパソコンのモニターで表示する以上、後述するベクター形式も内部的にこれに変換されます。\u003c/p\u003e\n\n\u003cp\u003eイメージとしては、表をイメージしてください。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8296fe04-8222-0c8f-e8be-c53dfae16415.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1e9a500345fe6b2f5abaacae45d74dc3\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8296fe04-8222-0c8f-e8be-c53dfae16415.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1e9a500345fe6b2f5abaacae45d74dc3\" alt=\"box.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/8296fe04-8222-0c8f-e8be-c53dfae16415.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F8296fe04-8222-0c8f-e8be-c53dfae16415.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=4e05e8d2686571b6b20eaba728b6b077 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこんな画像があった時、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e(R, G, B) (0 \u0026lt;= R \u0026lt;= 255, 0 \u0026lt;= G \u0026lt;= 255, 0 \u0026lt;= B \u0026lt;= 255)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ctable\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(200,179,216)\u003c/td\u003e\n            \u003ctd\u003e(172,140,197)\u003c/td\u003e\n            \u003ctd\u003e(247,245,250)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(204,185,219)\u003c/td\u003e\n            \u003ctd\u003e(130,82,167)\u003c/td\u003e\n            \u003ctd\u003e(106,50,151)\u003c/td\u003e\n            \u003ctd\u003e(105,48,150)\u003c/td\u003e\n            \u003ctd\u003e(119,67,159)\u003c/td\u003e\n            \u003ctd\u003e(200,179,216)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(237,232,243)\u003c/td\u003e\n            \u003ctd\u003e(147,107,180)\u003c/td\u003e\n            \u003ctd\u003e(109,54,153)\u003c/td\u003e\n            \u003ctd\u003e(103,46,149)\u003c/td\u003e\n            \u003ctd\u003e(124,74,163)\u003c/td\u003e\n            \u003ctd\u003e(233,225,240)\u003c/td\u003e\n            \u003ctd\u003e(238,231,243)\u003c/td\u003e\n            \u003ctd\u003e(224,212,233)\u003c/td\u003e\n            \u003ctd\u003e(119,68,160)\u003c/td\u003e\n            \u003ctd\u003e(172,140,197)\u003c/td\u003e\n            \u003ctd\u003e(123,73,162)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(252,251,253)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(112,57,155)\u003c/td\u003e\n            \u003ctd\u003e(169,136,195)\u003c/td\u003e\n            \u003ctd\u003e(238,231,243)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(240,235,245)\u003c/td\u003e\n            \u003ctd\u003e(141,97,175)\u003c/td\u003e\n            \u003ctd\u003e(118,66,159)\u003c/td\u003e\n            \u003ctd\u003e(150,111,182)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(219,205,230)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(252,251,253)\u003c/td\u003e\n            \u003ctd\u003e(168,135,194)\u003c/td\u003e\n            \u003ctd\u003e(106,49,151)\u003c/td\u003e\n            \u003ctd\u003e(173,142,197)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(147,107,180)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(133,87,169)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(233,225,240)\u003c/td\u003e\n            \u003ctd\u003e(137,93,173)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(245,241,248)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(167,134,193)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(146,105,179)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(209,192,223)\u003c/td\u003e\n            \u003ctd\u003e(145,104,178)\u003c/td\u003e\n            \u003ctd\u003e(114,61,157)\u003c/td\u003e\n            \u003ctd\u003e(174,143,198)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(164,129,191)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(158,120,187)\u003c/td\u003e\n            \u003ctd\u003e(188,162,208)\u003c/td\u003e\n            \u003ctd\u003e(124,74,163)\u003c/td\u003e\n            \u003ctd\u003e(131,84,168)\u003c/td\u003e\n            \u003ctd\u003e(195,172,213)\u003c/td\u003e\n            \u003ctd\u003e(250,248,251)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(154,116,184)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(147,107,179)\u003c/td\u003e\n            \u003ctd\u003e(221,208,231)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(245,241,248)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(219,205,230)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(147,107,180)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(170,138,195)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(204,185,220)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(170,138,195)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(238,231,243)\u003c/td\u003e\n            \u003ctd\u003e(195,172,213)\u003c/td\u003e\n            \u003ctd\u003e(153,114,183)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(147,107,180)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(170,138,195)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(216,202,228)\u003c/td\u003e\n            \u003ctd\u003e(174,143,198)\u003c/td\u003e\n            \u003ctd\u003e(129,81,167)\u003c/td\u003e\n            \u003ctd\u003e(117,64,158)\u003c/td\u003e\n            \u003ctd\u003e(160,124,188)\u003c/td\u003e\n            \u003ctd\u003e(202,182,218)\u003c/td\u003e\n            \u003ctd\u003e(245,241,248)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(147,107,180)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(103,45,149)\u003c/td\u003e\n            \u003ctd\u003e(129,81,167)\u003c/td\u003e\n            \u003ctd\u003e(129,81,167)\u003c/td\u003e\n            \u003ctd\u003e(228,218,236)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(200,179,216)\u003c/td\u003e\n            \u003ctd\u003e(129,81,167)\u003c/td\u003e\n            \u003ctd\u003e(238,231,243)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n            \u003ctd\u003e(255,255,255)\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eこんな感じに(実際にはもっとデータを小さくするためにいろいろしますが)保存されています。ようはドット絵ですね。\u003cbr\u003e\nちなみにこの表1マスのことをピクセル(Pixcel)といい、横一列を走査線と呼んだりします。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ベクター形式\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%99%E3%82%AF%E3%82%BF%E3%83%BC%E5%BD%A2%E5%BC%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eベクター形式\u003c/h1\u003e\n\n\u003cp\u003eベクターというとピンと来ない人はベクトルといえばピンときますかね？そうです、高校の数Bで習うあれです。\u003c/p\u003e\n\n\u003cp\u003eまあ実際には単に向きと方向だけでは無いですが、こんな図形をここからここに、と言った命令が羅列されているものになります。\u003ccode\u003e.odg\u003c/code\u003e,\u003ccode\u003e.svg\u003c/code\u003e,\u003ccode\u003e.ai\u003c/code\u003eやどっちかというと画像ではなくCADのデータになりますが\u003ccode\u003e.dxf\u003c/code\u003eや\u003ccode\u003e.jww\u003c/code\u003eなんかがこれに該当します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"xml\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003esvgの例(抜粋)\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e     \u003cspan class=\"nt\"\u003e\u0026lt;g\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"com.sun.star.drawing.CustomShape\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;g\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"id9\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;rect\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"BoundingBox\"\u003c/span\u003e \u003cspan class=\"na\"\u003estroke=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"none\"\u003c/span\u003e \u003cspan class=\"na\"\u003efill=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"none\"\u003c/span\u003e \u003cspan class=\"na\"\u003ex=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"21771\"\u003c/span\u003e \u003cspan class=\"na\"\u003ey=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"7676\"\u003c/span\u003e \u003cspan class=\"na\"\u003ewidth=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"716\"\u003c/span\u003e \u003cspan class=\"na\"\u003eheight=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"1486\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;path\u003c/span\u003e \u003cspan class=\"na\"\u003efill=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"rgb(0,123,67)\"\u003c/span\u003e \u003cspan class=\"na\"\u003estroke=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"none\"\u003c/span\u003e \u003cspan class=\"na\"\u003ed=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"M 22128,7677 C 21950,7677 21772,7855 21772,8033 L 21772,8803 C 21772,8981 21950,9160 22128,9160 L 22128,9160 C 22306,9160 22485,8981 22485,8803 L 22485,8033 C 22485,7855 22306,7677 22128,7677 L 22128,7677 Z M 21772,7677 L 21772,7677 Z M 22485,9160 L 22485,9160 Z\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;path\u003c/span\u003e \u003cspan class=\"na\"\u003efill=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"none\"\u003c/span\u003e \u003cspan class=\"na\"\u003estroke=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"rgb(0,123,67)\"\u003c/span\u003e \u003cspan class=\"na\"\u003ed=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"M 22128,7677 C 21950,7677 21772,7855 21772,8033 L 21772,8803 C 21772,8981 21950,9160 22128,9160 L 22128,9160 C 22306,9160 22485,8981 22485,8803 L 22485,8033 C 22485,7855 22306,7677 22128,7677 Z\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;path\u003c/span\u003e \u003cspan class=\"na\"\u003efill=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"none\"\u003c/span\u003e \u003cspan class=\"na\"\u003estroke=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"rgb(0,123,67)\"\u003c/span\u003e \u003cspan class=\"na\"\u003ed=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"M 21772,7677 L 21772,7677 Z\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;path\u003c/span\u003e \u003cspan class=\"na\"\u003efill=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"none\"\u003c/span\u003e \u003cspan class=\"na\"\u003estroke=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"rgb(0,123,67)\"\u003c/span\u003e \u003cspan class=\"na\"\u003ed=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"M 22485,9160 L 22485,9160 Z\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/g\u0026gt;\u003c/span\u003e\n     \u003cspan class=\"nt\"\u003e\u0026lt;/g\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"でどう使い分けるのさ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%81%A9%E3%81%86%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91%E3%82%8B%E3%81%AE%E3%81%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eで、どう使い分けるのさ\u003c/h2\u003e\n\n\u003ctable\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003cth\u003e \u003c/th\u003e\n            \u003cth\u003eメリット\u003c/th\u003e\n            \u003cth\u003eデメリット\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003eラスター\u003c/td\u003e\n            \u003ctd\u003e\n                \u003cul\u003e\n                    \u003cli\u003e一般的にお絵書きならこっち\u003c/li\u003e\n                    \u003cli\u003e複雑な図形でもデータが小さい\u003c/li\u003e\n                    \u003cli\u003eその気になれば圧縮しやすい\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n                \u003cul\u003e\n                    \u003cli\u003e拡大縮小すると画質が下がる、とくに拡大時(waifu2xという機械学習を利用したものである程度ましになるが)\u003c/li\u003e\n                    \u003cli\u003e容量を小さくするには画質が犠牲になる\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003eベクター\u003c/td\u003e\n            \u003ctd\u003e\n                \u003cul\u003e\n                    \u003cli\u003e劣化の余地が無い\u003c/li\u003e\n                    \u003cli\u003e拡大縮小によって画質が変化しない\u003c/li\u003e\n                    \u003cli\u003eシンプルな図形なら容量が小さい\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n                \u003cul\u003e\n                    \u003cli\u003e複雑な図形ほど容量が大きくなる\u003c/li\u003e\n                    \u003cli\u003eプログラム的に扱いがやや面倒\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ラスター画像を3つに分けるよ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A9%E3%82%B9%E3%82%BF%E3%83%BC%E7%94%BB%E5%83%8F%E3%82%923%E3%81%A4%E3%81%AB%E5%88%86%E3%81%91%E3%82%8B%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eラスター画像を3つに分けるよ\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"無圧縮\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%84%A1%E5%9C%A7%E7%B8%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e無圧縮\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003e.bmp\u003c/code\u003eとか\u003ccode\u003e.ppm\u003c/code\u003eとか。色をRGBではなくカラーテーブルを作ってたりするけど(色に名前をつけてそれで管理する)基本RGBがそのまま羅列されている\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eppm/P3\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eP3\n16 16\n255\n 255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   200 179 216   172 140 197   247 245 250   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   255 255 255   204 185 219   130  82 167   106  50 151   105  48 150   119  67 159   200 179 216   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n 255 255 255   237 232 243   147 107 180   109  54 153   103  46 149   124  74 163   233 225 240   238 231 243   224 212 233   119  68 160   172 140 197   123  73 162   255 255 255   255 255 255   255 255 255   255 255 255  \n 252 251 253   103  45 149   112  57 155   169 136 195   238 231 243   255 255 255   255 255 255   255 255 255   255 255 255   240 235 245   141  97 175   118  66 159   150 111 182   255 255 255   255 255 255   255 255 255  \n 255 255 255   103  45 149   103  45 149   219 205 230   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   252 251 253   168 135 194   106  49 151   173 142 197   255 255 255   255 255 255  \n 255 255 255   103  45 149   147 107 180   103  45 149   133  87 169   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   233 225 240   137  93 173   103  45 149   245 241 248   255 255 255  \n 255 255 255   103  45 149   255 255 255   167 134 193   103  45 149   146 105 179   255 255 255   255 255 255   255 255 255   209 192 223   145 104 178   114  61 157   174 143 198   103  45 149   255 255 255   255 255 255  \n 255 255 255   103  45 149   255 255 255   255 255 255   164 129 191   103  45 149   158 120 187   188 162 208   124  74 163   131  84 168   195 172 213   250 248 251   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   154 116 184   103  45 149   147 107 179   221 208 231   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 245 241 248   103  45 149   219 205 230   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   147 107 180   103  45 149   170 138 195   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   255 255 255   204 185 220   103  45 149   170 138 195   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   238 231 243   195 172 213   153 114 183   103  45 149   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   147 107 180   103  45 149   170 138 195   103  45 149   216 202 228   174 143 198   129  81 167   117  64 158   160 124 188   202 182 218   245 241 248   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   255 255 255   147 107 180   103  45 149   103  45 149   129  81 167   129  81 167   228 218 236   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   200 179 216   129  81 167   238 231 243   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"可逆圧縮\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%AF%E9%80%86%E5%9C%A7%E7%B8%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e可逆圧縮\u003c/h2\u003e\n\n\u003cp\u003eそのままRGBを羅列しているわけではないけど、圧縮しているもののうち、可逆圧縮のもの。\u003ccode\u003e.png\u003c/code\u003eとか\u003ccode\u003e.gif\u003c/code\u003eとか。\u003c/p\u003e\n\n\u003cp\u003e例えば\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e555555514444444111\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eというデータが有ったとすると、数字が何回連続で現れたかに注目して\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e5_8,1_1,4_7,1_3\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと書けば短く表せる。でこれはちゃんと元の数字列に戻せるよね？こういうのを可逆圧縮というわけです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"非不可逆圧縮\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%9E%E4%B8%8D%E5%8F%AF%E9%80%86%E5%9C%A7%E7%B8%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e非(不)可逆圧縮\u003c/h2\u003e\n\n\u003cp\u003e可逆圧縮があるならその逆もあります。\u003ccode\u003e.jpg/.jpeg\u003c/code\u003eが多分いちばん有名です\u003c/p\u003e\n\n\u003cp\u003eもとに戻せない圧縮ってどういうこと？と思うかもしれませんが説明すると専門的になりすぎるので割愛します。\u003c/p\u003e\n\n\u003cp\u003eデータを破壊的に圧縮することで可逆圧縮よりもさらに小さくできます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"でどう使い分ければいいんだ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%81%A9%E3%81%86%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91%E3%82%8C%E3%81%B0%E3%81%84%E3%81%84%E3%82%93%E3%81%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eで、どう使い分ければいいんだ\u003c/h2\u003e\n\n\u003cp\u003e基本的には可逆圧縮なPNGとか使っていればいいと思います。ただし、通信速度を基にしないといけないWebとかだと、劣化してもいいものはjpgが使われます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ラスター画像に於いて色をそのまま扱うか否かで分ける\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A9%E3%82%B9%E3%82%BF%E3%83%BC%E7%94%BB%E5%83%8F%E3%81%AB%E6%96%BC%E3%81%84%E3%81%A6%E8%89%B2%E3%82%92%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E6%89%B1%E3%81%86%E3%81%8B%E5%90%A6%E3%81%8B%E3%81%A7%E5%88%86%E3%81%91%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eラスター画像に於いて、色をそのまま扱うか否かで分ける\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"そのまま扱う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E6%89%B1%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eそのまま扱う\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003epng\u003c/code\u003eとか\u003ccode\u003eppm\u003c/code\u003eとか\u003ccode\u003ejpg\u003c/code\u003eなんかが該当します(RGBで扱っているとは言っていない)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"カラーテーブルを作って色数に制約がある\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%AB%E3%83%A9%E3%83%BC%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E8%89%B2%E6%95%B0%E3%81%AB%E5%88%B6%E7%B4%84%E3%81%8C%E3%81%82%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eカラーテーブルを作って、色数に制約がある\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ebmp\u003c/code\u003eの\u003cstrong\u003e一部\u003c/strong\u003eや\u003ccode\u003e.gif\u003c/code\u003eなどが該当します。例えば256(=0～2^8)色しか使えなかったり。\u003c/p\u003e\n\n\u003cp\u003eつまり\u003cstrong\u003e減色\u003c/strong\u003eという作業が発生します。例えば\u003ccode\u003e.gif\u003c/code\u003eは可逆圧縮ですが、それは減色後(色数制限をクリアした後)のデータからみて可逆圧縮だということで、減色の仮定でデータは失われます\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"なぜ安易にjpegをつかってはいけないか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AA%E3%81%9C%E5%AE%89%E6%98%93%E3%81%ABjpeg%E3%82%92%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%A6%E3%81%AF%E3%81%84%E3%81%91%E3%81%AA%E3%81%84%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eなぜ安易にJPEGをつかってはいけないか\u003c/h1\u003e\n\n\u003cp\u003e単純明快で、非可逆圧縮だからです。非可逆圧縮ということは、破壊的圧縮ですから、圧縮したその瞬間、データが失われているということになります。\u003cstrong\u003e一度失ったデータは取り戻せません\u003c/strong\u003e。言い換えると、\u003cstrong\u003eそのデータ、本当に劣化しても大丈夫ですか？\u003c/strong\u003eということです。\u003cbr\u003e\nJPEGの場合、その圧縮アルゴリズムの関係で圧縮することによりノイズが発生しやすいです。\u003cbr\u003e\nもちろん\u003cstrong\u003e圧倒的にファイルサイズは小さくなる\u003c/strong\u003eのでケースバイケースですが、\u003cstrong\u003e用量用法は守って使いましょう\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e私が思うに、\u003cstrong\u003eほとんどの場面ではPNGにするべき\u003c/strong\u003eです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"なぜ色空間についての話を避けるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AA%E3%81%9C%E8%89%B2%E7%A9%BA%E9%96%93%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%AE%E8%A9%B1%E3%82%92%E9%81%BF%E3%81%91%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eなぜ色空間についての話を避けるか\u003c/h1\u003e\n\n\u003cp\u003eちょっと前に\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRGBで扱っているとは言っていない\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと書きましたがどういうことでしょう？これが序盤に書いた闇の一つです。\u003c/p\u003e\n\n\u003cp\u003eコンピューターでは実数を扱えず、有限桁の小数がせいぜいです。また、小数は内部で指数を使って管理しています。\u003cbr\u003e\n\u003ca href=\"http://pc.nikkeibp.co.jp/pc21/special/gosa/eg4.shtml\" rel=\"nofollow noopener\" target=\"_blank\"\u003e日経PC21 / 演算誤差の正体 - IEEE 754 浮動小数点数の仕組み\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eで何が言いたいかというと、つまり、0.01を100回足しあわせても1にはならないということです。\u003c/p\u003e\n\n\u003cp\u003eこれがどう影響するかというと、数学的に例えばRGBとYCbCrの変換は可逆なのにコンピューター上では可逆にならないということです。\u003c/p\u003e\n\n\u003cp\u003eで、だから何？となりますが以下は\u003cbr\u003e\n\u003ca href=\"https://onedrive.live.com/view.aspx?cid=6BDD4375AC8933C6\u0026amp;resid=6BDD4375AC8933C6!755\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAviutl の内部形式と x264guiEx の色空間変換について \u003c/a\u003e\u003cbr\u003e\nにまるなげします\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h1\u003e\n\n\u003cp\u003e偉そうに書いていますが、書いている私自身全然詳しくなかったりするのでどこか間違っていたら、優しく指摘or編集リクエストしていただければ幸いです。\u003c/p\u003e\n","body":"一口にデジタル画像って言ってもいろいろあるよ！というお話です。\n\n# その前にパソコンで色はどう扱うの？\n\n実はこの話ものすごく闇が深いんですが、そういう怖い闇は触れずに話をします([``ITU-R BT.709-3``](http://www.arib.or.jp/english/html/overview/doc/2-BTA_S-001_C1_0.pdf)とか[``ITU-R ITU-R BT.601``](https://www.marumo.ne.jp/bt601/)言われてもわからんでしょ、俺も正確にはわからん)。\n\n[光の三原則](https://ja.wikipedia.org/wiki/%E5%8E%9F%E8%89%B2#.E5.8A.A0.E6.B3.95.E6.B7.B7.E5.90.88)とか聞いたことがあると思います。\n![RGB加法三原色](https://upload.wikimedia.org/wikipedia/commons/e/e8/AdditiveColorMixiing.svg)\n\nいわゆるR(Red)G(Green)B(Blue)ですね。言い換えると3つの色からすべての色が作れるよ、ということです(だいぶ語弊ありますが)。\n\n私が大嫌いで仕方がない数学的にいうと、単位ベクトルが3つ存在する世界だということです。\n\nRGB以外にも動画でお馴染みYCbCrやYPbPr、HSBやHSV、xyzなどいろいろ表し方はありますが、とりあえずRGBだけわかっていればいいと思います。\n\n# まずデジタル画像を2つに分けるよ\n\nデジタル画像と言ってもラスター形式とベクター形式の2つがあります。なにそれ美味しいの？\n\n# ラスター形式\n\n多分もっとも一般的なデジタル画像形式です。``.jpg``とか``.png``とか``.gif``とか``.bmp``とかみたことあるんじゃ無いでしょうか？あれです。\n\nパソコンのモニターで表示する以上、後述するベクター形式も内部的にこれに変換されます。\n\nイメージとしては、表をイメージしてください。\n\n![box.png](https://qiita-image-store.s3.amazonaws.com/0/94177/8296fe04-8222-0c8f-e8be-c53dfae16415.png)\n\nこんな画像があった時、\n\n```\n(R, G, B) (0 \u003c= R \u003c= 255, 0 \u003c= G \u003c= 255, 0 \u003c= B \u003c= 255)\n```\n\n\u003ctable\u003e\n\t\u003ctbody\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(200,179,216)\"\u003e(200,179,216)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(172,140,197)\"\u003e(172,140,197)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(247,245,250)\"\u003e(247,245,250)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(204,185,219)\"\u003e(204,185,219)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(130,82,167)\"\u003e(130,82,167)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(106,50,151)\"\u003e(106,50,151)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(105,48,150)\"\u003e(105,48,150)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(119,67,159)\"\u003e(119,67,159)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(200,179,216)\"\u003e(200,179,216)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(237,232,243)\"\u003e(237,232,243)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(147,107,180)\"\u003e(147,107,180)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(109,54,153)\"\u003e(109,54,153)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,46,149)\"\u003e(103,46,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(124,74,163)\"\u003e(124,74,163)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(233,225,240)\"\u003e(233,225,240)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(238,231,243)\"\u003e(238,231,243)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(224,212,233)\"\u003e(224,212,233)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(119,68,160)\"\u003e(119,68,160)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(172,140,197)\"\u003e(172,140,197)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(123,73,162)\"\u003e(123,73,162)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(252,251,253)\"\u003e(252,251,253)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(112,57,155)\"\u003e(112,57,155)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(169,136,195)\"\u003e(169,136,195)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(238,231,243)\"\u003e(238,231,243)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(240,235,245)\"\u003e(240,235,245)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(141,97,175)\"\u003e(141,97,175)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(118,66,159)\"\u003e(118,66,159)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(150,111,182)\"\u003e(150,111,182)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(219,205,230)\"\u003e(219,205,230)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(252,251,253)\"\u003e(252,251,253)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(168,135,194)\"\u003e(168,135,194)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(106,49,151)\"\u003e(106,49,151)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(173,142,197)\"\u003e(173,142,197)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(147,107,180)\"\u003e(147,107,180)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(133,87,169)\"\u003e(133,87,169)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(233,225,240)\"\u003e(233,225,240)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(137,93,173)\"\u003e(137,93,173)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(245,241,248)\"\u003e(245,241,248)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(167,134,193)\"\u003e(167,134,193)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(146,105,179)\"\u003e(146,105,179)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(209,192,223)\"\u003e(209,192,223)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(145,104,178)\"\u003e(145,104,178)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(114,61,157)\"\u003e(114,61,157)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(174,143,198)\"\u003e(174,143,198)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(164,129,191)\"\u003e(164,129,191)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(158,120,187)\"\u003e(158,120,187)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(188,162,208)\"\u003e(188,162,208)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(124,74,163)\"\u003e(124,74,163)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(131,84,168)\"\u003e(131,84,168)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(195,172,213)\"\u003e(195,172,213)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(250,248,251)\"\u003e(250,248,251)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(154,116,184)\"\u003e(154,116,184)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(147,107,179)\"\u003e(147,107,179)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(221,208,231)\"\u003e(221,208,231)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(245,241,248)\"\u003e(245,241,248)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(219,205,230)\"\u003e(219,205,230)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(147,107,180)\"\u003e(147,107,180)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(170,138,195)\"\u003e(170,138,195)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(204,185,220)\"\u003e(204,185,220)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(170,138,195)\"\u003e(170,138,195)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(238,231,243)\"\u003e(238,231,243)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(195,172,213)\"\u003e(195,172,213)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(153,114,183)\"\u003e(153,114,183)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(147,107,180)\"\u003e(147,107,180)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(170,138,195)\"\u003e(170,138,195)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(216,202,228)\"\u003e(216,202,228)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(174,143,198)\"\u003e(174,143,198)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(129,81,167)\"\u003e(129,81,167)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(117,64,158)\"\u003e(117,64,158)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(160,124,188)\"\u003e(160,124,188)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(202,182,218)\"\u003e(202,182,218)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(245,241,248)\"\u003e(245,241,248)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(147,107,180)\"\u003e(147,107,180)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(103,45,149)\"\u003e(103,45,149)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(129,81,167)\"\u003e(129,81,167)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(129,81,167)\"\u003e(129,81,167)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(228,218,236)\"\u003e(228,218,236)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(200,179,216)\"\u003e(200,179,216)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(129,81,167)\"\u003e(129,81,167)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(238,231,243)\"\u003e(238,231,243)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\t\u003ctd style=\"background-color: rgb(255,255,255)\"\u003e(255,255,255)\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\u003c/tbody\u003e\n\u003c/table\u003e\n\n\nこんな感じに(実際にはもっとデータを小さくするためにいろいろしますが)保存されています。ようはドット絵ですね。\nちなみにこの表1マスのことをピクセル(Pixcel)といい、横一列を走査線と呼んだりします。\n\n# ベクター形式\n\nベクターというとピンと来ない人はベクトルといえばピンときますかね？そうです、高校の数Bで習うあれです。\n\nまあ実際には単に向きと方向だけでは無いですが、こんな図形をここからここに、と言った命令が羅列されているものになります。``.odg``,``.svg``,``.ai``やどっちかというと画像ではなくCADのデータになりますが``.dxf``や``.jww``なんかがこれに該当します。\n\n```xml:svgの例(抜粋)\n     \u003cg class=\"com.sun.star.drawing.CustomShape\"\u003e\n      \u003cg id=\"id9\"\u003e\n       \u003crect class=\"BoundingBox\" stroke=\"none\" fill=\"none\" x=\"21771\" y=\"7676\" width=\"716\" height=\"1486\"/\u003e\n       \u003cpath fill=\"rgb(0,123,67)\" stroke=\"none\" d=\"M 22128,7677 C 21950,7677 21772,7855 21772,8033 L 21772,8803 C 21772,8981 21950,9160 22128,9160 L 22128,9160 C 22306,9160 22485,8981 22485,8803 L 22485,8033 C 22485,7855 22306,7677 22128,7677 L 22128,7677 Z M 21772,7677 L 21772,7677 Z M 22485,9160 L 22485,9160 Z\"/\u003e\n       \u003cpath fill=\"none\" stroke=\"rgb(0,123,67)\" d=\"M 22128,7677 C 21950,7677 21772,7855 21772,8033 L 21772,8803 C 21772,8981 21950,9160 22128,9160 L 22128,9160 C 22306,9160 22485,8981 22485,8803 L 22485,8033 C 22485,7855 22306,7677 22128,7677 Z\"/\u003e\n       \u003cpath fill=\"none\" stroke=\"rgb(0,123,67)\" d=\"M 21772,7677 L 21772,7677 Z\"/\u003e\n       \u003cpath fill=\"none\" stroke=\"rgb(0,123,67)\" d=\"M 22485,9160 L 22485,9160 Z\"/\u003e\n      \u003c/g\u003e\n     \u003c/g\u003e\n```\n\n## で、どう使い分けるのさ\n\n\u003ctable\u003e\n\t\u003ctbody\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003cth\u003e \u003c/th\u003e\n\t\t\t\u003cth\u003eメリット\u003c/th\u003e\n\t\t\t\u003cth\u003eデメリット\u003c/th\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd\u003eラスター\u003c/td\u003e\n\t\t\t\u003ctd\u003e\n\t\t\t\t\u003cul\u003e\n\t\t\t\t\t\u003cli\u003e一般的にお絵書きならこっち\u003c/li\u003e\n\t\t\t\t\t\u003cli\u003e複雑な図形でもデータが小さい\u003c/li\u003e\n\t\t\t\t\t\u003cli\u003eその気になれば圧縮しやすい\u003c/li\u003e\n\t\t\t\t\u003c/ul\u003e\n\t\t\t\u003c/td\u003e\n\t\t\t\u003ctd\u003e\n\t\t\t\t\u003cul\u003e\n\t\t\t\t\t\u003cli\u003e拡大縮小すると画質が下がる、とくに拡大時(waifu2xという機械学習を利用したものである程度ましになるが)\u003c/li\u003e\n\t\t\t\t\t\u003cli\u003e容量を小さくするには画質が犠牲になる\u003c/li\u003e\n\t\t\t\t\u003c/ul\u003e\n\t\t\t\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\t\u003ctr\u003e\n\t\t\t\u003ctd\u003eベクター\u003c/td\u003e\n\t\t\t\u003ctd\u003e\n\t\t\t\t\u003cul\u003e\n\t\t\t\t\t\u003cli\u003e劣化の余地が無い\u003c/li\u003e\n\t\t\t\t\t\u003cli\u003e拡大縮小によって画質が変化しない\u003c/li\u003e\n\t\t\t\t\t\u003cli\u003eシンプルな図形なら容量が小さい\u003c/li\u003e\n\t\t\t\t\u003c/ul\u003e\n\t\t\t\u003c/td\u003e\n\t\t\t\u003ctd\u003e\n\t\t\t\t\u003cul\u003e\n\t\t\t\t\t\u003cli\u003e複雑な図形ほど容量が大きくなる\u003c/li\u003e\n\t\t\t\t\t\u003cli\u003eプログラム的に扱いがやや面倒\u003c/li\u003e\n\t\t\t\t\u003c/ul\u003e\n\t\t\t\u003c/td\u003e\n\t\t\u003c/tr\u003e\n\t\u003c/tbody\u003e\n\u003c/table\u003e\n\n# ラスター画像を3つに分けるよ\n\n## 無圧縮\n\n``.bmp``とか``.ppm``とか。色をRGBではなくカラーテーブルを作ってたりするけど(色に名前をつけてそれで管理する)基本RGBがそのまま羅列されている\n\n```plain:ppm/P3\nP3\n16 16\n255\n 255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   200 179 216   172 140 197   247 245 250   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   255 255 255   204 185 219   130  82 167   106  50 151   105  48 150   119  67 159   200 179 216   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n 255 255 255   237 232 243   147 107 180   109  54 153   103  46 149   124  74 163   233 225 240   238 231 243   224 212 233   119  68 160   172 140 197   123  73 162   255 255 255   255 255 255   255 255 255   255 255 255  \n 252 251 253   103  45 149   112  57 155   169 136 195   238 231 243   255 255 255   255 255 255   255 255 255   255 255 255   240 235 245   141  97 175   118  66 159   150 111 182   255 255 255   255 255 255   255 255 255  \n 255 255 255   103  45 149   103  45 149   219 205 230   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   252 251 253   168 135 194   106  49 151   173 142 197   255 255 255   255 255 255  \n 255 255 255   103  45 149   147 107 180   103  45 149   133  87 169   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   233 225 240   137  93 173   103  45 149   245 241 248   255 255 255  \n 255 255 255   103  45 149   255 255 255   167 134 193   103  45 149   146 105 179   255 255 255   255 255 255   255 255 255   209 192 223   145 104 178   114  61 157   174 143 198   103  45 149   255 255 255   255 255 255  \n 255 255 255   103  45 149   255 255 255   255 255 255   164 129 191   103  45 149   158 120 187   188 162 208   124  74 163   131  84 168   195 172 213   250 248 251   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   154 116 184   103  45 149   147 107 179   221 208 231   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 245 241 248   103  45 149   219 205 230   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   147 107 180   103  45 149   170 138 195   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   103  45 149   255 255 255   255 255 255  \n 255 255 255   255 255 255   204 185 220   103  45 149   170 138 195   255 255 255   103  45 149   255 255 255   255 255 255   255 255 255   238 231 243   195 172 213   153 114 183   103  45 149   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   147 107 180   103  45 149   170 138 195   103  45 149   216 202 228   174 143 198   129  81 167   117  64 158   160 124 188   202 182 218   245 241 248   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   255 255 255   147 107 180   103  45 149   103  45 149   129  81 167   129  81 167   228 218 236   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n 255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   200 179 216   129  81 167   238 231 243   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255   255 255 255  \n```\n\n## 可逆圧縮\n\nそのままRGBを羅列しているわけではないけど、圧縮しているもののうち、可逆圧縮のもの。``.png``とか``.gif``とか。\n\n例えば\n\n```\n555555514444444111\n```\n\nというデータが有ったとすると、数字が何回連続で現れたかに注目して\n\n```\n5_8,1_1,4_7,1_3\n```\n\nと書けば短く表せる。でこれはちゃんと元の数字列に戻せるよね？こういうのを可逆圧縮というわけです。\n\n## 非(不)可逆圧縮\n\n可逆圧縮があるならその逆もあります。``.jpg/.jpeg``が多分いちばん有名です\n\nもとに戻せない圧縮ってどういうこと？と思うかもしれませんが説明すると専門的になりすぎるので割愛します。\n\nデータを破壊的に圧縮することで可逆圧縮よりもさらに小さくできます。\n\n## で、どう使い分ければいいんだ\n\n基本的には可逆圧縮なPNGとか使っていればいいと思います。ただし、通信速度を基にしないといけないWebとかだと、劣化してもいいものはjpgが使われます。\n\n# ラスター画像に於いて、色をそのまま扱うか否かで分ける\n## そのまま扱う\n``png``とか``ppm``とか``jpg``なんかが該当します(RGBで扱っているとは言っていない)\n\n## カラーテーブルを作って、色数に制約がある\n\n``bmp``の**一部**や``.gif``などが該当します。例えば256(=0～2^8)色しか使えなかったり。\n\nつまり**減色**という作業が発生します。例えば``.gif``は可逆圧縮ですが、それは減色後(色数制限をクリアした後)のデータからみて可逆圧縮だということで、減色の仮定でデータは失われます\n\n# なぜ安易にJPEGをつかってはいけないか\n\n単純明快で、非可逆圧縮だからです。非可逆圧縮ということは、破壊的圧縮ですから、圧縮したその瞬間、データが失われているということになります。**一度失ったデータは取り戻せません**。言い換えると、**そのデータ、本当に劣化しても大丈夫ですか？**ということです。\nJPEGの場合、その圧縮アルゴリズムの関係で圧縮することによりノイズが発生しやすいです。\nもちろん**圧倒的にファイルサイズは小さくなる**のでケースバイケースですが、**用量用法は守って使いましょう**\n\n私が思うに、**ほとんどの場面ではPNGにするべき**です。\n\n# なぜ色空間についての話を避けるか\n\nちょっと前に\n\n\u003eRGBで扱っているとは言っていない\n\nと書きましたがどういうことでしょう？これが序盤に書いた闇の一つです。\n\nコンピューターでは実数を扱えず、有限桁の小数がせいぜいです。また、小数は内部で指数を使って管理しています。\n[日経PC21 / 演算誤差の正体 - IEEE 754 浮動小数点数の仕組み](http://pc.nikkeibp.co.jp/pc21/special/gosa/eg4.shtml)\n\nで何が言いたいかというと、つまり、0.01を100回足しあわせても1にはならないということです。\n\nこれがどう影響するかというと、数学的に例えばRGBとYCbCrの変換は可逆なのにコンピューター上では可逆にならないということです。\n\nで、だから何？となりますが以下は\n[Aviutl の内部形式と x264guiEx の色空間変換について ](https://onedrive.live.com/view.aspx?cid=6BDD4375AC8933C6\u0026resid=6BDD4375AC8933C6!755)\nにまるなげします\n\n# 最後に\n\n偉そうに書いていますが、書いている私自身全然詳しくなかったりするのでどこか間違っていたら、優しく指摘or編集リクエストしていただければ幸いです。\n","coediting":false,"comments_count":0,"created_at":"2016-03-31T06:12:14+09:00","group":null,"id":"4d19f27ce0b2c7cfcace","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"画像","versions":[]},{"name":"非エンジニア","versions":[]},{"name":"色空間","versions":[]},{"name":"新人プログラマ応援","versions":[]}],"title":"非プログラマーのためのデジタル画像入門講座","updated_at":"2017-05-21T22:56:24+09:00","url":"https://qiita.com/yumetodo/items/4d19f27ce0b2c7cfcace","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"情報提供\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%83%85%E5%A0%B1%E6%8F%90%E4%BE%9B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e情報提供\u003c/h1\u003e\n\n\u003cp\u003e情報提供お待ちしています。編集リクエストなりコメントでいただければなるべく早く反映します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記-cpprefjp-devtoにも同じ表を記載\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-cpprefjp-devto%E3%81%AB%E3%82%82%E5%90%8C%E3%81%98%E8%A1%A8%E3%82%92%E8%A8%98%E8%BC%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記: cpprefjp, dev.toにも同じ表を記載\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpprefjp.github.io/implementation.html#visual_cpp_ver\" rel=\"nofollow noopener\" target=\"_blank\"\u003e処理系 - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.to/yumetodo/list-of-mscver-and-mscfullver-8nd\" rel=\"nofollow noopener\" target=\"_blank\"\u003eList of _MSC_VER and _MSC_FULL_VER\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eにてこの記事とほぼ同じ内容を記述するようになりました。どちらも私がメンテナンスしますので、どちらかに修正依頼が来れば双方に反映します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"visual-studioのversionと判別マクロ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#visual-studio%E3%81%AEversion%E3%81%A8%E5%88%A4%E5%88%A5%E3%83%9E%E3%82%AF%E3%83%AD\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVisual Studioのversionと判別マクロ\u003c/h1\u003e\n\n\u003cp\u003e空欄はわからないところです。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e表記\u003c/th\u003e\n\u003cth\u003e製品名 [Visual Studio version] \u003csup id=\"fnref1\"\u003e\u003ca href=\"#fn1\" rel=\"footnote\" title=\"製品名の列にはVisual C++コンパイラを含む実際に入手する製品の名称を示す。製品のエディション (Express/Standard/Professional/Enterprise/Community 他) は省略する。Visual Studioの製品versionは、製品名に現れていないときは [ ～ ] 内に記す。製品versionは、2017以降、メインメニューの [ヘルプ]-[Microsoft Visual Studio のversion情報] から確認できるものを指す。\"\u003e1\u003c/a\u003e\u003c/sup\u003e\n\u003c/th\u003e\n\u003cth\u003eVC++ version \u003csup id=\"fnref2\"\u003e\u003ca href=\"#fn2\" rel=\"footnote\" title=\"VC++versionの列にはVisual C++ツールセットのversionを記述する。この表では特にVisual C++を入れた時に既定で選択されるツールセットのみについて扱う。\"\u003e2\u003c/a\u003e\u003c/sup\u003e\n\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003e_MSC_VER\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003e\u003ccode\u003e_MSC_FULL_VER\u003c/code\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019 Update 4\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2019 version 16.3.2\u003c/td\u003e\n\u003ctd\u003e14.24\u003c/td\u003e\n\u003ctd\u003e1924\u003c/td\u003e\n\u003ctd\u003e192428314\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019 Update 3\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2019 version 16.3.2\u003c/td\u003e\n\u003ctd\u003e14.23\u003c/td\u003e\n\u003ctd\u003e1923\u003c/td\u003e\n\u003ctd\u003e192328105\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019 Update 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2019 version 16.2.3\u003c/td\u003e\n\u003ctd\u003e14.22\u003c/td\u003e\n\u003ctd\u003e1922\u003c/td\u003e\n\u003ctd\u003e192227905\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019 Update 1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2019 version 16.1.2\u003c/td\u003e\n\u003ctd\u003e14.21\u003c/td\u003e\n\u003ctd\u003e1921\u003c/td\u003e\n\u003ctd\u003e192127702\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2019\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2019 version 16.0.0\u003c/td\u003e\n\u003ctd\u003e14.20\u003c/td\u003e\n\u003ctd\u003e1920\u003c/td\u003e\n\u003ctd\u003e192027508\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 9\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.9.11\u003c/td\u003e\n\u003ctd\u003e14.16\u003c/td\u003e\n\u003ctd\u003e1916\u003c/td\u003e\n\u003ctd\u003e191627030\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 9\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.9.7\u003c/td\u003e\n\u003ctd\u003e14.16\u003c/td\u003e\n\u003ctd\u003e1916\u003c/td\u003e\n\u003ctd\u003e191627027\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 9\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.9.5\u003c/td\u003e\n\u003ctd\u003e14.16\u003c/td\u003e\n\u003ctd\u003e1916\u003c/td\u003e\n\u003ctd\u003e191627026\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 9\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.9.4\u003c/td\u003e\n\u003ctd\u003e14.16\u003c/td\u003e\n\u003ctd\u003e1916\u003c/td\u003e\n\u003ctd\u003e191627025\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 9\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.9.1\u003c/td\u003e\n\u003ctd\u003e14.16\u003c/td\u003e\n\u003ctd\u003e1916\u003c/td\u003e\n\u003ctd\u003e191627023\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 9\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.9.0\u003c/td\u003e\n\u003ctd\u003e14.16\u003c/td\u003e\n\u003ctd\u003e1916\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 8\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.8.0\u003c/td\u003e\n\u003ctd\u003e14.15\u003c/td\u003e\n\u003ctd\u003e1915\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 7\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.7.5\u003c/td\u003e\n\u003ctd\u003e14.14\u003c/td\u003e\n\u003ctd\u003e1914\u003c/td\u003e\n\u003ctd\u003e191426433\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 7\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.7.3\u003c/td\u003e\n\u003ctd\u003e14.14\u003c/td\u003e\n\u003ctd\u003e1914\u003c/td\u003e\n\u003ctd\u003e191426430\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 7\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.7.2\u003c/td\u003e\n\u003ctd\u003e14.14\u003c/td\u003e\n\u003ctd\u003e1914\u003c/td\u003e\n\u003ctd\u003e191426429\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 7\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.7.1\u003c/td\u003e\n\u003ctd\u003e14.14\u003c/td\u003e\n\u003ctd\u003e1914\u003c/td\u003e\n\u003ctd\u003e191426428\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.7\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326132\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.6\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326131\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.4\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326129\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.3\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326129\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.2\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326128\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.1\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326128\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.6.0\u003c/td\u003e\n\u003ctd\u003e14.13\u003c/td\u003e\n\u003ctd\u003e1913\u003c/td\u003e\n\u003ctd\u003e191326128\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.5.7\u003c/td\u003e\n\u003ctd\u003e14.12\u003c/td\u003e\n\u003ctd\u003e1912\u003c/td\u003e\n\u003ctd\u003e191225835\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.5.6\u003c/td\u003e\n\u003ctd\u003e14.12\u003c/td\u003e\n\u003ctd\u003e1912\u003c/td\u003e\n\u003ctd\u003e191225835\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.5.4\u003c/td\u003e\n\u003ctd\u003e14.12\u003c/td\u003e\n\u003ctd\u003e1912\u003c/td\u003e\n\u003ctd\u003e191225834\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.5.3\u003c/td\u003e\n\u003ctd\u003e14.12\u003c/td\u003e\n\u003ctd\u003e1912\u003c/td\u003e\n\u003ctd\u003e191225834\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.5.2\u003c/td\u003e\n\u003ctd\u003e14.12\u003c/td\u003e\n\u003ctd\u003e1912\u003c/td\u003e\n\u003ctd\u003e191225831\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 4\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.4.5\u003c/td\u003e\n\u003ctd\u003e14.11\u003c/td\u003e\n\u003ctd\u003e1911\u003c/td\u003e\n\u003ctd\u003e191125547\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 4\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.4.4\u003c/td\u003e\n\u003ctd\u003e14.11\u003c/td\u003e\n\u003ctd\u003e1911\u003c/td\u003e\n\u003ctd\u003e191125542\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 3\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.3.3\u003c/td\u003e\n\u003ctd\u003e14.11\u003c/td\u003e\n\u003ctd\u003e1911\u003c/td\u003e\n\u003ctd\u003e191125507\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 2 \u003csup id=\"fnref3\"\u003e\u003ca href=\"#fn3\" rel=\"footnote\" title='IDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。\n- C++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog - \"After VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.\"\n- Description of Visual Studio 2013 Update 1'\u003e3\u003c/a\u003e\u003c/sup\u003e\n\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.2\u003c/td\u003e\n\u003ctd\u003e14.10\u003c/td\u003e\n\u003ctd\u003e1910\u003c/td\u003e\n\u003ctd\u003e191025017\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017 Update 1 \u003csup id=\"fnref3\"\u003e\u003ca href=\"#fn3\" rel=\"footnote\" title='IDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。\n- C++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog - \"After VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.\"\n- Description of Visual Studio 2013 Update 1'\u003e3\u003c/a\u003e\u003c/sup\u003e\n\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.1\u003c/td\u003e\n\u003ctd\u003e14.10\u003c/td\u003e\n\u003ctd\u003e1910\u003c/td\u003e\n\u003ctd\u003e191025017\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2017\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2017 version 15.0\u003c/td\u003e\n\u003ctd\u003e14.10 \u003csup id=\"fnref4\"\u003e\u003ca href=\"#fn4\" rel=\"footnote\" title=\"2017は2015とバイナリ互換が保たれているためメジャーversionアップは行われなかった。その結果、製品versionとVisual C++versionが一致しなくなった。\nBinary Compatibility and Pain-free Upgrade: Why Moving to Visual Studio 2017 is almost “too easy”\"\u003e4\u003c/a\u003e\u003c/sup\u003e\n\u003c/td\u003e\n\u003ctd\u003e1910\u003c/td\u003e\n\u003ctd\u003e191025017\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2015 Update 3\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2015 Update 3 [14.0]\u003c/td\u003e\n\u003ctd\u003e14.0\u003c/td\u003e\n\u003ctd\u003e1900\u003c/td\u003e\n\u003ctd\u003e190024210\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2015 Update 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2015 Update 2 [14.0]\u003c/td\u003e\n\u003ctd\u003e14.0\u003c/td\u003e\n\u003ctd\u003e1900\u003c/td\u003e\n\u003ctd\u003e190023918\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2015 Update 1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2015 Update 1 [14.0]\u003c/td\u003e\n\u003ctd\u003e14.0\u003c/td\u003e\n\u003ctd\u003e1900\u003c/td\u003e\n\u003ctd\u003e190023506\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2015\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2015          [14.0]\u003c/td\u003e\n\u003ctd\u003e14.0\u003c/td\u003e\n\u003ctd\u003e1900\u003c/td\u003e\n\u003ctd\u003e190023026\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Nobemver CTP\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Nobemver CTP [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180021114\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Update 5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Update 5 [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180040629\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Update 4\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Update 4 [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180031101\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Update 3\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Update 3 [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180030723\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Update 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Update 2 [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180030501\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Update2 RC\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Update2 RC [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180030324\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Update 1 \u003csup id=\"fnref3\"\u003e\u003ca href=\"#fn3\" rel=\"footnote\" title='IDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。\n- C++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog - \"After VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.\"\n- Description of Visual Studio 2013 Update 1'\u003e3\u003c/a\u003e\u003c/sup\u003e\n\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Update 1 [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180021005\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013          [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180021005\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 RC\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 RC       [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180020827\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2013 Preview\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2013 Preview  [12.0]\u003c/td\u003e\n\u003ctd\u003e12.0\u003c/td\u003e\n\u003ctd\u003e1800\u003c/td\u003e\n\u003ctd\u003e180020617\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2012 November CTP\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2012 November CTP [11.0]\u003c/td\u003e\n\u003ctd\u003e11.0\u003c/td\u003e\n\u003ctd\u003e1700\u003c/td\u003e\n\u003ctd\u003e170051025\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2012 Update 4\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2012 Update 4 [11.0]\u003c/td\u003e\n\u003ctd\u003e11.0\u003c/td\u003e\n\u003ctd\u003e1700\u003c/td\u003e\n\u003ctd\u003e170061030\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2012 Update 3\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2012 Update 3 [11.0]\u003c/td\u003e\n\u003ctd\u003e11.0\u003c/td\u003e\n\u003ctd\u003e1700\u003c/td\u003e\n\u003ctd\u003e170060610\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2012 Update 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2012 Update 2 [11.0]\u003c/td\u003e\n\u003ctd\u003e11.0\u003c/td\u003e\n\u003ctd\u003e1700\u003c/td\u003e\n\u003ctd\u003e170060315\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2012 Update 1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2012 Update 1 [11.0]\u003c/td\u003e\n\u003ctd\u003e11.0\u003c/td\u003e\n\u003ctd\u003e1700\u003c/td\u003e\n\u003ctd\u003e170051106\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2012\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2012          [11.0]\u003c/td\u003e\n\u003ctd\u003e11.0\u003c/td\u003e\n\u003ctd\u003e1700\u003c/td\u003e\n\u003ctd\u003e170050727\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2010 SP1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2010 SP1      [10.0]\u003cbr\u003eVisual C++ 2010 SP1     [10.0]\u003c/td\u003e\n\u003ctd\u003e10.0\u003c/td\u003e\n\u003ctd\u003e1600\u003c/td\u003e\n\u003ctd\u003e160040219\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2010\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2010          [10.0]\u003cbr\u003eVisual C++ 2010         [10.0]\u003c/td\u003e\n\u003ctd\u003e10.0\u003c/td\u003e\n\u003ctd\u003e1600\u003c/td\u003e\n\u003ctd\u003e160030319\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2010 Beta 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2010 Beta 2   [10.0]\u003c/td\u003e\n\u003ctd\u003e10.0\u003c/td\u003e\n\u003ctd\u003e1600\u003c/td\u003e\n\u003ctd\u003e160021003\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2010 Beta 1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2010 Beta 1   [10.0]\u003c/td\u003e\n\u003ctd\u003e10.0\u003c/td\u003e\n\u003ctd\u003e1600\u003c/td\u003e\n\u003ctd\u003e160020506\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2008 SP1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2008 SP1      [9.0] \u003cbr\u003eVisual C++ 2008 SP1     [9.0]\u003c/td\u003e\n\u003ctd\u003e9.0\u003c/td\u003e\n\u003ctd\u003e1500\u003c/td\u003e\n\u003ctd\u003e150030729\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2008\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2008          [9.0] \u003cbr\u003eVisual C++ 2008         [9.0]\u003c/td\u003e\n\u003ctd\u003e9.0\u003c/td\u003e\n\u003ctd\u003e1500\u003c/td\u003e\n\u003ctd\u003e150021022\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2008 Beta 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2008 Beta 2   [9.0]\u003c/td\u003e\n\u003ctd\u003e9.0\u003c/td\u003e\n\u003ctd\u003e1500\u003c/td\u003e\n\u003ctd\u003e150020706\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2005 SP1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2005 SP1      [8.0] \u003cbr\u003eVisual C++ 2005 SP1     [8.0]\u003c/td\u003e\n\u003ctd\u003e8.0\u003c/td\u003e\n\u003ctd\u003e1400\u003c/td\u003e\n\u003ctd\u003e140050727\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2005\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2005          [8.0] \u003cbr\u003eVisual C++ 2005         [8.0]\u003c/td\u003e\n\u003ctd\u003e8.0\u003c/td\u003e\n\u003ctd\u003e1400\u003c/td\u003e\n\u003ctd\u003e140050320\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2005 Beta 2\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2005 Beta 2   [8.0]\u003c/td\u003e\n\u003ctd\u003e8.0\u003c/td\u003e\n\u003ctd\u003e1400\u003c/td\u003e\n\u003ctd\u003e140050215\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2005 Beta 1\u003c/td\u003e\n\u003ctd\u003eVisual Studio 2005 Beta 1   [8.0]\u003c/td\u003e\n\u003ctd\u003e8.0\u003c/td\u003e\n\u003ctd\u003e1400\u003c/td\u003e\n\u003ctd\u003e140040607\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eWindows Server 2003 SP1 DDK (for AMD64)\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e1400\u003c/td\u003e\n\u003ctd\u003e140040310\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2003 SP1\u003c/td\u003e\n\u003ctd\u003eVisual Studio .NET 2003 SP1 [7.1]\u003cbr\u003eVisual C++ .NET 2003 SP1 [7.1]\u003c/td\u003e\n\u003ctd\u003e7.1\u003c/td\u003e\n\u003ctd\u003e1310\u003c/td\u003e\n\u003ctd\u003e13106030\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eWindows Server 2003 SP1 DDK\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e1310\u003c/td\u003e\n\u003ctd\u003e13104035\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2003\u003c/td\u003e\n\u003ctd\u003eVisual Studio .NET 2003     [7.1]\u003cbr\u003eVisual C++ .NET 2003     [7.1]\u003c/td\u003e\n\u003ctd\u003e7.1\u003c/td\u003e\n\u003ctd\u003e1310\u003c/td\u003e\n\u003ctd\u003e13103077\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual Studio Toolkit 2003  [7.1]\u003c/td\u003e\n\u003ctd\u003e7.1\u003c/td\u003e\n\u003ctd\u003e1310\u003c/td\u003e\n\u003ctd\u003e13103052\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2003 Beta\u003c/td\u003e\n\u003ctd\u003eVisual Studio .NET 2003 Beta [7.1]\u003c/td\u003e\n\u003ctd\u003e7.1\u003c/td\u003e\n\u003ctd\u003e1310\u003c/td\u003e\n\u003ctd\u003e13102292\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eWindows Server 2003 DDK\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e1310\u003c/td\u003e\n\u003ctd\u003e13102179\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2002\u003c/td\u003e\n\u003ctd\u003eVisual Studio .NET 2002     [7.0]\u003cbr\u003eVisual C++ .NET 2002     [7.0]\u003c/td\u003e\n\u003ctd\u003e7.0\u003c/td\u003e\n\u003ctd\u003e1300\u003c/td\u003e\n\u003ctd\u003e13009466\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eWindows XP SP1 DDK\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e1300\u003c/td\u003e\n\u003ctd\u003e13009176\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e6.0 SP6\u003c/td\u003e\n\u003ctd\u003eVisual Studio 6.0 SP6\u003cbr\u003eVisual C++ 6.0 SP6\u003c/td\u003e\n\u003ctd\u003e6.0\u003c/td\u003e\n\u003ctd\u003e1200\u003c/td\u003e\n\u003ctd\u003e12008804\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e6.0 SP5\u003c/td\u003e\n\u003ctd\u003eVisual Studio 6.0 SP5\u003cbr\u003eVisual C++ 6.0 SP5\u003c/td\u003e\n\u003ctd\u003e6.0\u003c/td\u003e\n\u003ctd\u003e1200\u003c/td\u003e\n\u003ctd\u003e12008804\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual Studio 97 [5.0]\u003cbr\u003eVisual C++ 5.0\u003c/td\u003e\n\u003ctd\u003e5.0\u003c/td\u003e\n\u003ctd\u003e1100\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual C++ 4.2\u003c/td\u003e\n\u003ctd\u003e4.2\u003c/td\u003e\n\u003ctd\u003e1020\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual C++ 4.1\u003c/td\u003e\n\u003ctd\u003e4.1\u003c/td\u003e\n\u003ctd\u003e1010\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual C++ 4.0\u003c/td\u003e\n\u003ctd\u003e4.0\u003c/td\u003e\n\u003ctd\u003e1000\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual C++ 2.0\u003c/td\u003e\n\u003ctd\u003e2.0\u003c/td\u003e\n\u003ctd\u003e900\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eVisual C++ 1.0\u003c/td\u003e\n\u003ctd\u003e1.0\u003c/td\u003e\n\u003ctd\u003e800\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eMicrosoft C/C++ 7.0\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e700\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003eMicrosoft C 6.0\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e600\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eC++11の\u003ccode\u003econstexpr\u003c/code\u003eがまともに使えるようになったのはVisual Studio 2015 Update1からですね。\u003c/p\u003e\n\n\u003cp\u003eC++17に完全対応したのがVisual Studio 2017 version 15.7からです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"参考サイト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%82%B5%E3%82%A4%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考サイト\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/XhmikosR/notepad2-mod/blob/master/src/Version.h\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/XhmikosR/notepad2-mod/blob/master/src/Version.h\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://blogs.msdn.com/b/vcblog/archive/2013/11/18/announcing-the-visual-c-compiler-november-2013-ctp.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://blogs.msdn.com/b/vcblog/archive/2013/11/18/announcing-the-visual-c-compiler-november-2013-ctp.aspx\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://blog.systemjp.net/entry/20091014/p6\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://blog.systemjp.net/entry/20091014/p6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://srz-zumix.blogspot.jp/2013/11/constexpr.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://srz-zumix.blogspot.jp/2013/11/constexpr.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/13794130/visual-studio-how-to-check-used-c-platform-toolset-programmatically\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://stackoverflow.com/questions/13794130/visual-studio-how-to-check-used-c-platform-toolset-programmatically\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://blogs.msdn.com/b/bharry/archive/2014/01/20/vs-2013-1-update-1-is-available.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://blogs.msdn.com/b/bharry/archive/2014/01/20/vs-2013-1-update-1-is-available.aspx\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.com/YSRKEN/status/707908641177767936\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://twitter.com/YSRKEN/status/707908641177767936\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.ailight.jp/Blog/sha256/archive/2009/3/8/_MSC_VER%20%E3%81%AE%E3%83%A1%E3%83%A2%20%28%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E7%89%88%29%20-%20Visual%20C\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.ailight.jp/Blog/sha256/archive/2009/3/8/_MSC_VER のメモ (アップデート版) - Visual C\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.ailight.jp/Blog/sha256/archive/2005/8/16/_MSC_VER%20%E3%81%AE%E3%83%A1%E3%83%A2%20-%20Visual%20C\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.ailight.jp/Blog/sha256/archive/2005/8/16/_MSC_VER のメモ - Visual C\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20121106/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e_MSC_FULL_VERマクロ - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"注釈\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E9%87%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注釈\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e2015以降、Visual Studioの既定のインストールではVisual C++は入らなくなった。Visual StudioのインストーラでVisual C++コンポーネントを選択する必要がある。\n\u003ca href=\"https://msdn.microsoft.com/ja-jp/library/60k1461a.aspx\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVisual Studio 2015 の Visual C++\u003c/a\u003e の [警告] を参照。\u003c/li\u003e\n\u003cli\u003e2017 Update 5からside-by-sideがサポートされ、一つの製品内で同時に複数のVisual C++ツールセットを選択できるようになった。\n\u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2017/11/15/side-by-side-minor-version-msvc-toolsets-in-visual-studio-2017/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eSide-by-side minor version MSVC toolsets in Visual Studio 2017 | Visual C++ Team Blog\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"footnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\n\u003cli id=\"fn1\"\u003e\n\u003cp\u003e製品名の列にはVisual C++コンパイラを含む実際に入手する製品の名称を示す。製品のエディション (Express/Standard/Professional/Enterprise/Community 他) は省略する。Visual Studioの製品versionは、製品名に現れていないときは \u003ccode\u003e[ ～ ]\u003c/code\u003e 内に記す。製品versionは、2017以降、メインメニューの [ヘルプ]-[Microsoft Visual Studio のversion情報] から確認できるものを指す。 \u003ca href=\"#fnref1\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn2\"\u003e\n\u003cp\u003eVC++versionの列にはVisual C++ツールセットのversionを記述する。この表では特にVisual C++を入れた時に既定で選択されるツールセットのみについて扱う。 \u003ca href=\"#fnref2\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn3\"\u003e\n\u003cp\u003eIDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。\u003cbr\u003e\n- \u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog\u003c/a\u003e - \"\u003cem\u003eAfter VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.\u003c/em\u003e\"\u003cbr\u003e\n- \u003ca href=\"https://support.microsoft.com/en-us/help/2911573/description-of-visual-studio-2013-update-1\" rel=\"nofollow noopener\" target=\"_blank\"\u003eDescription of Visual Studio 2013 Update 1\u003c/a\u003e \u003ca href=\"#fnref3\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn4\"\u003e\n\u003cp\u003e2017は2015とバイナリ互換が保たれているためメジャーversionアップは行われなかった。その結果、製品versionとVisual C++versionが一致しなくなった。\u003cbr\u003e\n\u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/binary-compatibility-and-pain-free-upgrade-why-moving-to-visual-studio-2017-is-almost-too-easy/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eBinary Compatibility and Pain-free Upgrade: Why Moving to Visual Studio 2017 is almost “too easy”\u003c/a\u003e \u003ca href=\"#fnref4\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003c/ol\u003e\n\u003c/div\u003e\n","body":"# 情報提供\n\n情報提供お待ちしています。編集リクエストなりコメントでいただければなるべく早く反映します。\n\n# 追記: cpprefjp, dev.toにも同じ表を記載\n\n- [処理系 - cpprefjp C++日本語リファレンス](https://cpprefjp.github.io/implementation.html#visual_cpp_ver)\n- [List of \\_MSC\\_VER and \\_MSC\\_FULL\\_VER](https://dev.to/yumetodo/list-of-mscver-and-mscfullver-8nd)\n\nにてこの記事とほぼ同じ内容を記述するようになりました。どちらも私がメンテナンスしますので、どちらかに修正依頼が来れば双方に反映します。\n\n# Visual Studioのversionと判別マクロ\n\n空欄はわからないところです。\n\n| 表記          | 製品名 [Visual Studio version] [^1] | VC++ version [^2] | `_MSC_VER` | `_MSC_FULL_VER` |\n|---------------|----------------------------------------|-----------------|------------|-----------------|\n| 2019 Update 4 | Visual Studio 2019 version 16.3.2 | 14.24 | 1924 | 192428314 |\n| 2019 Update 3 | Visual Studio 2019 version 16.3.2 | 14.23 | 1923 | 192328105 |\n| 2019 Update 2 | Visual Studio 2019 version 16.2.3 | 14.22 | 1922 | 192227905 |\n| 2019 Update 1 | Visual Studio 2019 version 16.1.2 | 14.21 | 1921 | 192127702 |\n| 2019          | Visual Studio 2019 version 16.0.0   | 14.20           | 1920       | 192027508       |\n| 2017 Update 9 | Visual Studio 2017 version 15.9.11  | 14.16           | 1916       | 191627030       |\n| 2017 Update 9 | Visual Studio 2017 version 15.9.7   | 14.16           | 1916       | 191627027       |\n| 2017 Update 9 | Visual Studio 2017 version 15.9.5   | 14.16           | 1916       | 191627026       |\n| 2017 Update 9 | Visual Studio 2017 version 15.9.4   | 14.16           | 1916       | 191627025       |\n| 2017 Update 9 | Visual Studio 2017 version 15.9.1   | 14.16           | 1916       | 191627023       |\n| 2017 Update 9 | Visual Studio 2017 version 15.9.0   | 14.16           | 1916       |                 |\n| 2017 Update 8 | Visual Studio 2017 version 15.8.0   | 14.15           | 1915       |                 |\n| 2017 Update 7 | Visual Studio 2017 version 15.7.5   | 14.14           | 1914     | 191426433       |\n| 2017 Update 7 | Visual Studio 2017 version 15.7.3   | 14.14           | 1914     | 191426430       |\n| 2017 Update 7 | Visual Studio 2017 version 15.7.2   | 14.14           | 1914     | 191426429       |\n| 2017 Update 7 | Visual Studio 2017 version 15.7.1   | 14.14           | 1914       | 191426428       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.7   | 14.13           | 1913       | 191326132       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.6   | 14.13           | 1913       | 191326131       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.4   | 14.13           | 1913       | 191326129       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.3   | 14.13           | 1913       | 191326129       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.2   | 14.13           | 1913       | 191326128       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.1   | 14.13           | 1913       | 191326128       |\n| 2017 Update 6 | Visual Studio 2017 version 15.6.0   | 14.13           | 1913       | 191326128       |\n| 2017 Update 5 | Visual Studio 2017 version 15.5.7   | 14.12           | 1912       | 191225835       |\n| 2017 Update 5 | Visual Studio 2017 version 15.5.6   | 14.12           | 1912       | 191225835       |\n| 2017 Update 5 | Visual Studio 2017 version 15.5.4   | 14.12           | 1912       | 191225834       |\n| 2017 Update 5 | Visual Studio 2017 version 15.5.3   | 14.12           | 1912       | 191225834       |\n| 2017 Update 5 | Visual Studio 2017 version 15.5.2   | 14.12           | 1912       | 191225831       |\n| 2017 Update 4 | Visual Studio 2017 version 15.4.5   | 14.11           | 1911       | 191125547       |\n| 2017 Update 4 | Visual Studio 2017 version 15.4.4   | 14.11           | 1911       | 191125542       |\n| 2017 Update 3 | Visual Studio 2017 version 15.3.3   | 14.11           | 1911       | 191125507       |\n| 2017 Update 2 [^3] | Visual Studio 2017 version 15.2 | 14.10          | 1910       | 191025017       |\n| 2017 Update 1 [^3] | Visual Studio 2017 version 15.1 | 14.10          | 1910       | 191025017       |\n| 2017          | Visual Studio 2017 version 15.0     | 14.10 [^4]      | 1910       | 191025017       |\n| 2015 Update 3 | Visual Studio 2015 Update 3 [14.0]  | 14.0            | 1900       | 190024210       |\n| 2015 Update 2 | Visual Studio 2015 Update 2 [14.0]  | 14.0            | 1900       | 190023918       |\n| 2015 Update 1 | Visual Studio 2015 Update 1 [14.0]  | 14.0            | 1900       | 190023506       |\n| 2015          | Visual Studio 2015          [14.0]  | 14.0            | 1900       | 190023026       |\n| 2013 Nobemver CTP | Visual Studio 2013 Nobemver CTP [12.0] | 12.0     | 1800       | 180021114       |\n| 2013 Update 5 | Visual Studio 2013 Update 5 [12.0]  | 12.0            | 1800       | 180040629       |\n| 2013 Update 4 | Visual Studio 2013 Update 4 [12.0]  | 12.0            | 1800       | 180031101       |\n| 2013 Update 3 | Visual Studio 2013 Update 3 [12.0]  | 12.0            | 1800       | 180030723       |\n| 2013 Update 2 | Visual Studio 2013 Update 2 [12.0]  | 12.0            | 1800       | 180030501       |\n| 2013 Update2 RC| Visual Studio 2013 Update2 RC [12.0] | 12.0          | 1800       | 180030324       |\n| 2013 Update 1 [^3] | Visual Studio 2013 Update 1 [12.0] | 12.0        | 1800       | 180021005       |\n| 2013          | Visual Studio 2013          [12.0]  | 12.0            | 1800       | 180021005       |\n| 2013 RC       | Visual Studio 2013 RC       [12.0]  | 12.0            | 1800       | 180020827       |\n| 2013 Preview  | Visual Studio 2013 Preview  [12.0]  | 12.0            | 1800       | 180020617       |\n| 2012 November CTP | Visual Studio 2012 November CTP [11.0] | 11.0     | 1700       | 170051025       |\n| 2012 Update 4 | Visual Studio 2012 Update 4 [11.0]  | 11.0            | 1700       | 170061030       |\n| 2012 Update 3 | Visual Studio 2012 Update 3 [11.0]  | 11.0            | 1700       | 170060610       |\n| 2012 Update 2 | Visual Studio 2012 Update 2 [11.0]  | 11.0            | 1700       | 170060315       |\n| 2012 Update 1 | Visual Studio 2012 Update 1 [11.0]  | 11.0            | 1700       | 170051106       |\n| 2012          | Visual Studio 2012          [11.0]  | 11.0            | 1700       | 170050727       |\n| 2010 SP1      | Visual Studio 2010 SP1      [10.0]\u003cbr/\u003eVisual C++ 2010 SP1     [10.0] | 10.0 | 1600 | 160040219 |\n| 2010          | Visual Studio 2010          [10.0]\u003cbr/\u003eVisual C++ 2010         [10.0] | 10.0 | 1600 | 160030319 |\n| 2010 Beta 2   | Visual Studio 2010 Beta 2   [10.0]  | 10.0            | 1600       | 160021003       |\n| 2010 Beta 1   | Visual Studio 2010 Beta 1   [10.0]  | 10.0            | 1600       | 160020506       |\n| 2008 SP1      | Visual Studio 2008 SP1      [9.0] \u003cbr/\u003eVisual C++ 2008 SP1     [9.0]  | 9.0  | 1500 | 150030729 |\n| 2008          | Visual Studio 2008          [9.0] \u003cbr/\u003eVisual C++ 2008         [9.0]  | 9.0  | 1500 | 150021022 |\n| 2008 Beta 2   | Visual Studio 2008 Beta 2   [9.0]   | 9.0             | 1500       | 150020706       |\n| 2005 SP1      | Visual Studio 2005 SP1      [8.0] \u003cbr/\u003eVisual C++ 2005 SP1     [8.0]  | 8.0  | 1400 | 140050727 |\n| 2005          | Visual Studio 2005          [8.0] \u003cbr/\u003eVisual C++ 2005         [8.0]  | 8.0  | 1400 | 140050320 |\n| 2005 Beta 2   | Visual Studio 2005 Beta 2   [8.0]   | 8.0             | 1400       | 140050215       |\n| 2005 Beta 1   | Visual Studio 2005 Beta 1   [8.0]   | 8.0             | 1400       | 140040607       |\n|               | Windows Server 2003 SP1 DDK (for AMD64)                               |      | 1400 | 140040310 |\n| 2003 SP1      | Visual Studio .NET 2003 SP1 [7.1]\u003cbr/\u003eVisual C++ .NET 2003 SP1 [7.1]  | 7.1  | 1310 | 13106030  |\n|               | Windows Server 2003 SP1 DDK                                           |      | 1310 | 13104035  |\n| 2003          | Visual Studio .NET 2003     [7.1]\u003cbr/\u003eVisual C++ .NET 2003     [7.1]  | 7.1  | 1310 | 13103077  |\n|               | Visual Studio Toolkit 2003  [7.1]   | 7.1             | 1310       | 13103052        |\n| 2003 Beta     | Visual Studio .NET 2003 Beta [7.1]  | 7.1             | 1310       | 13102292        |\n|               | Windows Server 2003 DDK                                               |      | 1310 | 13102179  |\n| 2002          | Visual Studio .NET 2002     [7.0]\u003cbr/\u003eVisual C++ .NET 2002     [7.0]  | 7.0  | 1300 | 13009466  |\n|               | Windows XP SP1 DDK                                                    |      | 1300 | 13009176  |\n| 6.0 SP6       | Visual Studio 6.0 SP6\u003cbr/\u003eVisual C++ 6.0 SP6 | 6.0    | 1200       | 12008804        |\n| 6.0 SP5       | Visual Studio 6.0 SP5\u003cbr/\u003eVisual C++ 6.0 SP5 | 6.0    | 1200       | 12008804        |\n|               | Visual Studio 97 [5.0]\u003cbr/\u003eVisual C++ 5.0 | 5.0       | 1100       |                 |\n|               | Visual C++ 4.2                      | 4.2             | 1020       |                 |\n|               | Visual C++ 4.1                      | 4.1             | 1010       |                 |\n|               | Visual C++ 4.0                      | 4.0             | 1000       |                 |\n|               | Visual C++ 2.0                      | 2.0             | 900        |                 |\n|               | Visual C++ 1.0                      | 1.0             | 800        |                 |\n|               | Microsoft C/C++ 7.0                 |                 | 700        |                 |\n|               | Microsoft C 6.0                     |                 | 600        |                 |\n\nC++11の``constexpr``がまともに使えるようになったのはVisual Studio 2015 Update1からですね。\n\nC++17に完全対応したのがVisual Studio 2017 version 15.7からです。\n\n## 参考サイト\n- https://github.com/XhmikosR/notepad2-mod/blob/master/src/Version.h\n- http://blogs.msdn.com/b/vcblog/archive/2013/11/18/announcing-the-visual-c-compiler-november-2013-ctp.aspx\n- http://blog.systemjp.net/entry/20091014/p6\n- http://srz-zumix.blogspot.jp/2013/11/constexpr.html\n- http://stackoverflow.com/questions/13794130/visual-studio-how-to-check-used-c-platform-toolset-programmatically\n- http://blogs.msdn.com/b/bharry/archive/2014/01/20/vs-2013-1-update-1-is-available.aspx\n- https://twitter.com/YSRKEN/status/707908641177767936\n- [http://www.ailight.jp/Blog/sha256/archive/2009/3/8/_MSC_VER のメモ (アップデート版) - Visual C](http://www.ailight.jp/Blog/sha256/archive/2009/3/8/_MSC_VER%20%E3%81%AE%E3%83%A1%E3%83%A2%20%28%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E7%89%88%29%20-%20Visual%20C)\n- [http://www.ailight.jp/Blog/sha256/archive/2005/8/16/_MSC_VER のメモ - Visual C](http://www.ailight.jp/Blog/sha256/archive/2005/8/16/_MSC_VER%20%E3%81%AE%E3%83%A1%E3%83%A2%20-%20Visual%20C)\n- [_MSC_FULL_VERマクロ - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20121106/p1)\n\n## 注釈\n[^1]: 製品名の列にはVisual C++コンパイラを含む実際に入手する製品の名称を示す。製品のエディション (Express/Standard/Professional/Enterprise/Community 他) は省略する。Visual Studioの製品versionは、製品名に現れていないときは `[ ～ ]` 内に記す。製品versionは、2017以降、メインメニューの [ヘルプ]-[Microsoft Visual Studio のversion情報] から確認できるものを指す。\n[^2]: VC++versionの列にはVisual C++ツールセットのversionを記述する。この表では特にVisual C++を入れた時に既定で選択されるツールセットのみについて扱う。\n[^3]: IDEのみ修正され、コンパイラ、ヘッダー、ライブラリ等は変更されなかった。\n    - [C++17 Features And STL Fixes In VS 2017 15.3 | Visual C++ Team Blog](https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/) - \"*After VS 2017 RTM, the 15.1 and 15.2 updates improved the IDE. The 15.3 update improves both the IDE and the toolset.*\"\n  - [Description of Visual Studio 2013 Update 1](https://support.microsoft.com/en-us/help/2911573/description-of-visual-studio-2013-update-1)\n\n\n[^4]: 2017は2015とバイナリ互換が保たれているためメジャーversionアップは行われなかった。その結果、製品versionとVisual C++versionが一致しなくなった。\n  [Binary Compatibility and Pain-free Upgrade: Why Moving to Visual Studio 2017 is almost “too easy”](https://blogs.msdn.microsoft.com/vcblog/2017/03/07/binary-compatibility-and-pain-free-upgrade-why-moving-to-visual-studio-2017-is-almost-too-easy/)\n\n- 2015以降、Visual Studioの既定のインストールではVisual C++は入らなくなった。Visual StudioのインストーラでVisual C++コンポーネントを選択する必要がある。\n  [Visual Studio 2015 の Visual C++](https://msdn.microsoft.com/ja-jp/library/60k1461a.aspx) の [警告] を参照。\n- 2017 Update 5からside-by-sideがサポートされ、一つの製品内で同時に複数のVisual C++ツールセットを選択できるようになった。\n  [Side-by-side minor version MSVC toolsets in Visual Studio 2017 | Visual C++ Team Blog](https://blogs.msdn.microsoft.com/vcblog/2017/11/15/side-by-side-minor-version-msvc-toolsets-in-visual-studio-2017/)\n\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n","coediting":false,"comments_count":20,"created_at":"2016-03-10T23:49:35+09:00","group":null,"id":"8c112fca0a8e6b47072d","likes_count":69,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"VisualStudio","versions":[]},{"name":"_MSC_VER","versions":[]}],"title":"_MSC_VERと_MSC_FULL_VERをまとめる","updated_at":"2019-12-17T14:29:44+09:00","url":"https://qiita.com/yumetodo/items/8c112fca0a8e6b47072d","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e皆様こんにちは。普段はC++やってます。\u003c/p\u003e\n\n\u003cp\u003e本題に。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"jqueryを用いて単にhtmlを読み込み表示する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#jquery%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6%E5%8D%98%E3%81%ABhtml%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ejQueryを用いて単にhtmlを読み込み表示する\u003c/h1\u003e\n\n\u003cp\u003eこれは簡単です。\u003cbr\u003e\n\u003ca href=\"http://yokano-jp.blogspot.jp/2013/10/jquery-html_10.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://yokano-jp.blogspot.jp/2013/10/jquery-html_10.html\u003c/a\u003e\u003cbr\u003e\nより引用します\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eindex.html\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003ejQuery load() sample\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eここに外部 HTML ファイルを表示します\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"page\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/div\u0026gt;\u003c/span\u003e\n\n  \u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"load.js\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eexternal.html\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;h2\u0026gt;\u003c/span\u003e外部ファイル\u003cspan class=\"nt\"\u003e\u0026lt;/h2\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eこの文章は external.html に記載された外部 HTML の文章です\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eload.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#page\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eload\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003eexternal.html\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e簡単ですよね\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"jqueryのajaxを使って外部htmlの一部を抜き出し挿入する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#jquery%E3%81%AEajax%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%A4%96%E9%83%A8html%E3%81%AE%E4%B8%80%E9%83%A8%E3%82%92%E6%8A%9C%E3%81%8D%E5%87%BA%E3%81%97%E6%8C%BF%E5%85%A5%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ejQueryのAjaxを使って外部HTMLの一部を抜き出し挿入する\u003c/h1\u003e\n\n\u003cp\u003eええ、違うんです、やりたいのはそうじゃない。そもそも、その\u003ccode\u003eexternal.html\u003c/code\u003e、HTMLとして成立してねーだろ。\u003c/p\u003e\n\n\u003cp\u003eじゃあどうするか？こうじゃ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eindex.html\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003ejQueryのAjaxを使って外部HTMLの一部を抜き出し挿入する\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;script \u003c/span\u003e\u003cspan class=\"na\"\u003esrc=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"load.js\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/script\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eここに外部 HTML ファイルを表示します\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"page\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003edst\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"page2\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003edst\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eexternal.html\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;html\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;head\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;meta\u003c/span\u003e \u003cspan class=\"na\"\u003echarset=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"utf-8\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;title\u0026gt;\u003c/span\u003eexternal-ありきたりとは\u003cspan class=\"nt\"\u003e\u0026lt;/title\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/head\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;body\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sub\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;h2\u0026gt;\u003c/span\u003e外部ファイル\u003cspan class=\"nt\"\u003e\u0026lt;/h2\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eこの文章は external.html に記載された外部 HTML の文章です\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"sub2\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;h2\u0026gt;\u003c/span\u003e外部ファイル\u003cspan class=\"nt\"\u003e\u0026lt;/h2\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003eこれはありきたりな文章です\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/body\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/html\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eload.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eajax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003eexternal.html\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003etimeout\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 1000 ms\u003c/span\u003e\n        \u003cspan class=\"na\"\u003edatatype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003ehtml\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eout_html\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparseHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e//parse\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#page\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eout_html\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#sub\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003einnerHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//insert\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#page2\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eempty\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eout_html\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#sub2\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003einnerHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//insert\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//var sub_html = out_html.filter(function(index) {\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//    return $(this).attr(\"id\") === \"sub\";\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//})[0].innerHTML;//extract\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//var sub2_html = out_html.filter(function(index) {\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//    return $(this).attr(\"id\") === \"sub2\";\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//})[0].innerHTML;//extract\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//$('#page').empty().append(sub_html);//insert\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//$('#page2').empty().append(sub2_html);//insert\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ejqXHR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003etextStatus\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etextStatus\u003c/span\u003e\u003cspan class=\"o\"\u003e!==\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003esuccess\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etxt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;p\u0026gt;textStatus:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003etextStatus\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n                \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;p\u0026gt;status:\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ejqXHR\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n                \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;p\u0026gt;responseText : \u0026lt;/p\u0026gt;\u0026lt;div\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003ejqXHR\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponseText\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n                \u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#page\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etxt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#page2\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003etxt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// $('#page').load('external.html');\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003ejQueryは楽でいいですね・・・。それに引き換え、C++のboost.asioは(ry。\u003c/p\u003e\n\n\u003cp\u003eajaxに渡すパラメータは最低限\u003ccode\u003etimeout\u003c/code\u003eと\u003ccode\u003edatatype\u003c/code\u003eだけあれば十分です。\u003cbr\u003e\najaxのcallbackは\u003ccode\u003edone()/error()\u003c/code\u003eを使う方法もありますが、他言語との共通性の観点から\u003ccode\u003ethen()\u003c/code\u003eを使います。C++にも標準にfuture/thenとかpromiseとか入るらしいね、やっと。\u003cbr\u003e\n\u003ccode\u003ethen()\u003c/code\u003eの第1引数が成功した時、第2引数が失敗した時に呼ばれる関数を登録するところです。\u003c/p\u003e\n\n\u003cp\u003ethenの第一引数に登録した関数の第一引数\u003ccode\u003edata\u003c/code\u003eにはhtmlが\u003cstrong\u003e文字列として\u003c/strong\u003e入ってきます。\u003ca href=\"https://twitter.com/yumetodo/status/706071299508973568\" rel=\"nofollow noopener\" target=\"_blank\"\u003eどういうわけかlocalでテストすると\u003ccode\u003eXMLDocumet\u003c/code\u003e型になるんですが\u003c/a\u003e。\u003c/p\u003e\n\n\u003cp\u003eでそれを取り出すのに\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#sub\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#sub\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)).\u003c/span\u003e\u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003e#sub\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparseHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparseHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)).\u003c/span\u003e\u003cspan class=\"nx\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003e#sub\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとかとかいろいろやりましたが\u003cstrong\u003e全部ダメです\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eじゃあどうするかというと、\u003ccode\u003e$.filter()\u003c/code\u003e関数をつかえばいいです。\u003cdel\u003eこいつは条件を満たした(引数に指定する関数が\u003ccode\u003etrue\u003c/code\u003eを返す)ものだけを\u003c/del\u003e第一引数にidとかで指定かければ、それに合うものだけjQuery特有のあのarrayもどきなobjectに入れて返します。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eまともなhtmlを書いていればidは重複しないので\u003c/strong\u003e0番目の要素がほしい部分になります。\u003c/p\u003e\n\n\u003cp\u003eあとはその\u003ccode\u003einnerHtml\u003c/code\u003eを挿入すればいいです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"githubに上げた\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#github%E3%81%AB%E4%B8%8A%E3%81%92%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGitHubに上げた\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/yumetodo/jQuery_Ajax_get_html_test\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/yumetodo/jQuery_Ajax_get_html_test\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eはい。デモページは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://yumetodo.github.io/jQuery_Ajax_get_html_test/index.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://yumetodo.github.io/jQuery_Ajax_get_html_test/index.html\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"余談\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%99%E8%AB%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e余談\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yumetodo\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yumetodo\u003c/a\u003e それ、jQuery使わないで自分でXHR生で使った方が早かったんじゃね？\u003c/p\u003e— Chikuzen (@mtfmk) \u003ca href=\"https://twitter.com/mtfmk/status/707873470382641153\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016, 3月 10\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\n\n\u003cp\u003eいいんですよ！私はthenって書きたかったんだ！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考リンク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考リンク\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.koikikukan.com/archives/2013/12/05-012345.php\" rel=\"nofollow noopener\" target=\"_blank\"\u003ejQuery.ajax()で取得したHTMLの一部を抜き出す方法: 小粋空間\u003c/a\u003e (さっぱり動かなかった)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/12734444/setting-timeout-jquery-load\" rel=\"nofollow noopener\" target=\"_blank\"\u003ejavascript - Setting timeout jQuery.load() - Stack Overflow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/16533360/ajax-timeout-callback-function\" rel=\"nofollow noopener\" target=\"_blank\"\u003ejquery - ajax timeout callback function - Stack Overflow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://stackoverflow.com/questions/15403600/jquery-not-finding-elements-inside-of-results-from-jquery-parsehtml\" rel=\"nofollow noopener\" target=\"_blank\"\u003ejavascript - jQuery() not finding elements inside of results from jQuery.parseHTML() - Stack Overflow\u003c/a\u003e(質問者自ら書いている回答に\u003ccode\u003e$.filter()\u003c/code\u003e使えとあります。これのおかげで救われました)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://semooh.jp/jquery/api/traversing/filter/fn/\" rel=\"nofollow noopener\" target=\"_blank\"\u003efilter(fn) - jQuery 日本語リファレンス\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","body":"皆様こんにちは。普段はC++やってます。\n\n本題に。\n\n# jQueryを用いて単にhtmlを読み込み表示する\n\nこれは簡単です。\nhttp://yokano-jp.blogspot.jp/2013/10/jquery-html_10.html\nより引用します\n\n```html:index.html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n \u003chead\u003e\n  \u003cmeta charset=\"utf-8\"\u003e\n  \u003ctitle\u003ejQuery load() sample\u003c/title\u003e\n \u003c/head\u003e\n \u003cbody\u003e\n  \u003ch1\u003eここに外部 HTML ファイルを表示します\u003c/h1\u003e\n  \u003cdiv id=\"page\"\u003e\u003c/div\u003e\n  \n  \u003cscript src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"\u003e\u003c/script\u003e\n  \u003cscript src=\"load.js\"\u003e\u003c/script\u003e\n \u003c/body\u003e\n\u003c/html\u003e\n```\n\n```html:external.html\n\u003ch2\u003e外部ファイル\u003c/h2\u003e\n\u003cp\u003eこの文章は external.html に記載された外部 HTML の文章です\u003c/p\u003e\n```\n\n```js:load.js\n$(function() {\n $('#page').load('external.html');\n});\n```\n\n簡単ですよね\n\n# jQueryのAjaxを使って外部HTMLの一部を抜き出し挿入する\n\nええ、違うんです、やりたいのはそうじゃない。そもそも、その``external.html``、HTMLとして成立してねーだろ。\n\nじゃあどうするか？こうじゃ。\n\n```html:index.html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\t\u003chead\u003e\n\t\t\u003cmeta charset=\"utf-8\"\u003e\n\t\t\u003ctitle\u003ejQueryのAjaxを使って外部HTMLの一部を抜き出し挿入する\u003c/title\u003e\n\t\t\u003cscript src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js\"\u003e\u003c/script\u003e\n\t\t\u003cscript src=\"load.js\"\u003e\u003c/script\u003e\n\t\u003c/head\u003e\n\t\u003cbody\u003e\n\t\t\u003ch1\u003eここに外部 HTML ファイルを表示します\u003c/h1\u003e\n\t\t\u003cdiv id=\"page\"\u003edst\u003c/div\u003e\n\t\t\u003cdiv id=\"page2\"\u003edst\u003c/div\u003e\n\t\u003c/body\u003e\n\u003c/html\u003e\n```\n\n```html:external.html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n\t\u003cmeta charset=\"utf-8\"\u003e\n\t\u003ctitle\u003eexternal-ありきたりとは\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\t\u003cdiv id=\"sub\"\u003e\n\t\t\u003ch2\u003e外部ファイル\u003c/h2\u003e\n\t\t\u003cp\u003eこの文章は external.html に記載された外部 HTML の文章です\u003c/p\u003e\n\t\u003c/div\u003e\n\t\u003cdiv id=\"sub2\"\u003e\n\t\t\u003ch2\u003e外部ファイル\u003c/h2\u003e\n\t\t\u003cp\u003eこれはありきたりな文章です\u003c/p\u003e\n\t\u003c/div\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n```js:load.js\n$(function() {\n\t$.ajax('external.html', {\n\t\ttimeout : 1000, // 1000 ms\n\t\tdatatype:'html'\n\t}).then(function(data){\n        var out_html = $($.parseHTML(data));//parse\n        $('#page').empty().append(out_html.filter('#sub')[0].innerHTML);//insert\n        $('#page2').empty().append(out_html.filter('#sub2')[0].innerHTML);//insert\n        //var sub_html = out_html.filter(function(index) {\n        //    return $(this).attr(\"id\") === \"sub\";\n        //})[0].innerHTML;//extract\n        //var sub2_html = out_html.filter(function(index) {\n        //    return $(this).attr(\"id\") === \"sub2\";\n        //})[0].innerHTML;//extract\n        //$('#page').empty().append(sub_html);//insert\n        //$('#page2').empty().append(sub2_html);//insert\n\t},function(jqXHR, textStatus) {\n        if(textStatus!==\"success\") {\n            var txt = \"\u003cp\u003etextStatus:\"+ textStatus + \"\u003c/p\u003e\" +\n                \"\u003cp\u003estatus:\"+ jqXHR.status + \"\u003c/p\u003e\" +\n                \"\u003cp\u003eresponseText : \u003c/p\u003e\u003cdiv\u003e\" + jqXHR.responseText +\n                \"\u003c/div\u003e\";\n        \t$('#page').html(txt);\n            $('#page2').html(txt);\n        }\n    });\n\t// $('#page').load('external.html');\n});\n```\n\njQueryは楽でいいですね・・・。それに引き換え、C++のboost.asioは(ry。\n\najaxに渡すパラメータは最低限``timeout``と``datatype``だけあれば十分です。\najaxのcallbackは``done()/error()``を使う方法もありますが、他言語との共通性の観点から``then()``を使います。C++にも標準にfuture/thenとかpromiseとか入るらしいね、やっと。\n``then()``の第1引数が成功した時、第2引数が失敗した時に呼ばれる関数を登録するところです。\n\nthenの第一引数に登録した関数の第一引数``data``にはhtmlが**文字列として**入ってきます。[どういうわけかlocalでテストすると``XMLDocumet``型になるんですが](https://twitter.com/yumetodo/status/706071299508973568)。\n\nでそれを取り出すのに\n\n```js\nvar h = $(\"#sub\", $(data));\nvar h = $(\"#sub\", $(data)).html();\nvar h = $(\"#sub\", $($.parseHTML(data)));\nvar h = $($.parseHTML(data)).find('#sub').text()\n```\n\nとかとかいろいろやりましたが**全部ダメです**\n\nじゃあどうするかというと、``$.filter()``関数をつかえばいいです。~~こいつは条件を満たした(引数に指定する関数が``true``を返す)ものだけを~~第一引数にidとかで指定かければ、それに合うものだけjQuery特有のあのarrayもどきなobjectに入れて返します。\n\n**まともなhtmlを書いていればidは重複しないので**0番目の要素がほしい部分になります。\n\nあとはその``innerHtml``を挿入すればいいです。\n\n# GitHubに上げた\n\nhttps://github.com/yumetodo/jQuery_Ajax_get_html_test\n\nはい。デモページは\n\nhttp://yumetodo.github.io/jQuery_Ajax_get_html_test/index.html\n\n# 余談\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yumetodo\"\u003e@yumetodo\u003c/a\u003e それ、jQuery使わないで自分でXHR生で使った方が早かったんじゃね？\u003c/p\u003e\u0026mdash; Chikuzen (@mtfmk) \u003ca href=\"https://twitter.com/mtfmk/status/707873470382641153\"\u003e2016, 3月 10\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\nいいんですよ！私はthenって書きたかったんだ！\n\n# 参考リンク\n\n- [jQuery.ajax()で取得したHTMLの一部を抜き出す方法: 小粋空間](http://www.koikikukan.com/archives/2013/12/05-012345.php) (さっぱり動かなかった)\n- [javascript - Setting timeout jQuery.load() - Stack Overflow](http://stackoverflow.com/questions/12734444/setting-timeout-jquery-load)\n- [jquery - ajax timeout callback function - Stack Overflow](http://stackoverflow.com/questions/16533360/ajax-timeout-callback-function)\n- [javascript - jQuery() not finding elements inside of results from jQuery.parseHTML() - Stack Overflow](http://stackoverflow.com/questions/15403600/jquery-not-finding-elements-inside-of-results-from-jquery-parsehtml)(質問者自ら書いている回答に``$.filter()``使えとあります。これのおかげで救われました)\n- [filter(fn) - jQuery 日本語リファレンス](http://semooh.jp/jquery/api/traversing/filter/fn/)\n","coediting":false,"comments_count":15,"created_at":"2016-03-10T19:50:12+09:00","group":null,"id":"00b37234cb86e741f0fb","likes_count":100,"private":false,"reactions_count":0,"tags":[{"name":"HTML","versions":[]},{"name":"JavaScript","versions":[]},{"name":"jQuery","versions":[]},{"name":"Ajax","versions":[]}],"title":"jQueryのAjaxを使って外部HTMLの一部を抜き出し挿入する","updated_at":"2016-03-11T10:36:27+09:00","url":"https://qiita.com/yumetodo/items/00b37234cb86e741f0fb","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003egitの標準のエディタはvimなんですが、\u003cstrong\u003eWindowsとかいうろくな端末がない世界\u003c/strong\u003eではvimは役に立ちません。で、\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/__mick/items/9445d73bc89718ed6dfb\" id=\"reference-61b1965c34e85cbee250\"\u003eGitのコミットメッセージを標準のテキストエディットで入力する\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eというのを見たんですが、個人的にはSublime text 3を使いたいので調べました。やり方は至って簡単。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"設定方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A8%AD%E5%AE%9A%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e設定方法\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003egitが使える端末を立ち上げる\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egit config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"\u003c/code\u003eする(パスは読み替えてください)\u003c/li\u003e\n\u003cli\u003e以上\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"使用方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使用方法\u003c/h1\u003e\n\n\u003cp\u003e例えば直前のcommitメッセージを書き換えるときは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egit commit --amend\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとするとSublime text 3が立ち上がります。\u003c/p\u003e\n\n\u003cp\u003e普通に編集して保存、[ctrl]+[w]でタブを閉じれば終わりです。\u003c/p\u003e\n\n\u003cp\u003e注意点としてこれはエディタ関係ないですが、\u003ccode\u003e#\u003c/code\u003eから始まる行は無視されるので、うっかり\u003ccode\u003e#\u003c/code\u003eで初めてメッセージを消さないように注意しましょう(\u003cstrong\u003eissue番号とかチケット番号書く時特に！\u003c/strong\u003e)\u003c/p\u003e\n\n\u003cp\u003eご丁寧に\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと書いてあります。エディタで開くと。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考リンク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考リンク\u003c/h1\u003e\n\n\u003cp\u003e情報のネタ元を書き忘れた・・・。まあ調べればすぐ出るんですけど。\u003cbr\u003e\n\u003ca href=\"http://stackoverflow.com/questions/8951275/how-can-i-make-sublime-text-the-default-editor-for-git/9408117#9408117\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://stackoverflow.com/questions/8951275/how-can-i-make-sublime-text-the-default-editor-for-git/9408117#9408117\u003c/a\u003e\u003c/p\u003e\n","body":"gitの標準のエディタはvimなんですが、**Windowsとかいうろくな端末がない世界**ではvimは役に立ちません。で、\n\n[Gitのコミットメッセージを標準のテキストエディットで入力する](http://qiita.com/__mick/items/9445d73bc89718ed6dfb)\n\nというのを見たんですが、個人的にはSublime text 3を使いたいので調べました。やり方は至って簡単。\n\n# 設定方法\n1. gitが使える端末を立ち上げる\n2. ``git config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"``する(パスは読み替えてください)\n3. 以上\n\n# 使用方法\n\n例えば直前のcommitメッセージを書き換えるときは\n\n```\ngit commit --amend\n```\n\nとするとSublime text 3が立ち上がります。\n\n普通に編集して保存、[ctrl]+[w]でタブを閉じれば終わりです。\n\n注意点としてこれはエディタ関係ないですが、``#``から始まる行は無視されるので、うっかり``#``で初めてメッセージを消さないように注意しましょう(**issue番号とかチケット番号書く時特に！**)\n\nご丁寧に\n\n```\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n```\n\nと書いてあります。エディタで開くと。\n\n# 参考リンク\n情報のネタ元を書き忘れた・・・。まあ調べればすぐ出るんですけど。\nhttp://stackoverflow.com/questions/8951275/how-can-i-make-sublime-text-the-default-editor-for-git/9408117#9408117\n","coediting":false,"comments_count":2,"created_at":"2016-03-07T15:44:12+09:00","group":null,"id":"12ac52ce08277839830f","likes_count":9,"private":false,"reactions_count":0,"tags":[{"name":"Windows","versions":[]},{"name":"Git","versions":[]},{"name":"SublimeText3","versions":[]}],"title":"GitのコミットメッセージをSublime text 3に編集させる","updated_at":"2016-03-07T18:37:56+09:00","url":"https://qiita.com/yumetodo/items/12ac52ce08277839830f","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"初めに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初めに\u003c/h1\u003e\n\n\u003cp\u003e関数定義をcpp/ccファイルに書くか、h/hppに書くかたまに悩むことがあると思うんですが、コンパイル速度的にはどうなんよ、ということで検証しました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"調査対象\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%BF%E6%9F%BB%E5%AF%BE%E8%B1%A1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e調査対象\u003c/h1\u003e\n\n\u003cp\u003e定義をヘッダーに書いていたもの\u003cbr\u003e\n\u003ca href=\"https://github.com/YSRKEN/KanColleSimulator_KAI/commit/7a37a02343c224018c3962aa04addad0c77894c4\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/YSRKEN/KanColleSimulator_KAI/commit/7a37a02343c224018c3962aa04addad0c77894c4\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e定義をcppファイルに移したもの\u003cbr\u003e\n\u003ca href=\"https://github.com/YSRKEN/KanColleSimulator_KAI/commit/a14223991c37a1eb64c4df4d97fedd47db3c1ac5\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/YSRKEN/KanColleSimulator_KAI/commit/a14223991c37a1eb64c4df4d97fedd47db3c1ac5\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"使うコンパイラ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%86%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使うコンパイラ\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eVisual Studio 2015 community Update 1\u003c/li\u003e\n\u003cli\u003eVisual Studio 2015 community Update 1 Clang with Microsoft CodeGen (January 2016) (clang3.7)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこの2つのコンパイラ ✕ x86/x64 ✕ Debug(-O0)/Release(-O2)\u003cbr\u003e\nの計8通りの構成を作り、VSのバッチビルド機能ですべてリビルドした時間を測定\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"測定環境\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B8%AC%E5%AE%9A%E7%92%B0%E5%A2%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e測定環境\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://freesofutotravel.blog94.fc2.com/blog-entry-9.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://freesofutotravel.blog94.fc2.com/blog-entry-9.html\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"計測方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A8%88%E6%B8%AC%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e計測方法\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.amarectv.com/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eアマレコTV\u003c/a\u003eを用いてコンパイル時のlogウィンドウを録画する。録画コーデックは\u003ca href=\"http://umezawa.dyndns.info/wordpress/?cat=28\" rel=\"nofollow noopener\" target=\"_blank\"\u003eUtVideo Codec Suite 15.3.0 YUV420 BT.709 VCM\u003c/a\u003e。\u003c/p\u003e\n\n\u003cp\u003eこれをAviUtlにて取り込みカット編集、AviUtlに表示される総時間と総frame数を記録する。なおAviUtlの読み込みプラグインには\u003ca href=\"https://github.com/VFR-maniac/L-SMASH-Works\" rel=\"nofollow noopener\" target=\"_blank\"\u003eL-SMASH Works\u003c/a\u003e File Reader r785を利用した\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結果\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E6%9E%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結果\u003c/h1\u003e\n\n\u003cp\u003eヘッダーに定義を書いたもの　3:58.59[7158frame]\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCct1PPqVIAAP1bE.jpg%3Alarge?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=8109ff07d78c55de65f4de68451726f3\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCct1PPqVIAAP1bE.jpg%3Alarge?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=8109ff07d78c55de65f4de68451726f3\" alt=\"def_at_header\" data-canonical-src=\"https://pbs.twimg.com/media/Cct1PPqVIAAP1bE.jpg:large\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCct1PPqVIAAP1bE.jpg%3Alarge?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=fdc8d951624d11e722e43f6ebff1e548 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\ncppに定義を書いたもの　3.57.80[7134frame]\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCct1PQ_VIAAglZH.jpg%3Alarge?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=09020e10b23664ded3489ab46c5eefe2\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCct1PQ_VIAAglZH.jpg%3Alarge?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=09020e10b23664ded3489ab46c5eefe2\" alt=\"declear_only\" data-canonical-src=\"https://pbs.twimg.com/media/Cct1PQ_VIAAglZH.jpg:large\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fpbs.twimg.com%2Fmedia%2FCct1PQ_VIAAglZH.jpg%3Alarge?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=ad0d54c7239f0334d9ee29e97773b229 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e有意な差は出なかった(ヘッダーに書くと+0.3%コンパイル時間増加した)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003eコンパイラは十分優秀なのでどっちでもいいんじゃないか。\u003cbr\u003e\ntemplateが絡む関数を公開するととどうせヘッダーに書くしか無いのだから、ヘッダーに定義を書くことへの罪悪感をもし持っている人がいたら少しは減ったかな？\u003c/p\u003e\n\n\u003cp\u003e他のコンパイラでも(gccとかgccとかgccとか)多分同じなんじゃなかろうか。\u003c/p\u003e\n","body":"# 初めに\n関数定義をcpp/ccファイルに書くか、h/hppに書くかたまに悩むことがあると思うんですが、コンパイル速度的にはどうなんよ、ということで検証しました。\n\n# 調査対象\n\n定義をヘッダーに書いていたもの\nhttps://github.com/YSRKEN/KanColleSimulator_KAI/commit/7a37a02343c224018c3962aa04addad0c77894c4\n\n定義をcppファイルに移したもの\nhttps://github.com/YSRKEN/KanColleSimulator_KAI/commit/a14223991c37a1eb64c4df4d97fedd47db3c1ac5\n\n# 使うコンパイラ\n\n- Visual Studio 2015 community Update 1\n- Visual Studio 2015 community Update 1 Clang with Microsoft CodeGen (January 2016) (clang3.7)\n\nこの2つのコンパイラ ✕ x86/x64 ✕ Debug(-O0)/Release(-O2)\nの計8通りの構成を作り、VSのバッチビルド機能ですべてリビルドした時間を測定\n\n# 測定環境\nhttp://freesofutotravel.blog94.fc2.com/blog-entry-9.html\n\n# 計測方法\n[アマレコTV](http://www.amarectv.com/)を用いてコンパイル時のlogウィンドウを録画する。録画コーデックは[UtVideo Codec Suite 15.3.0 YUV420 BT.709 VCM](http://umezawa.dyndns.info/wordpress/?cat=28)。\n\nこれをAviUtlにて取り込みカット編集、AviUtlに表示される総時間と総frame数を記録する。なおAviUtlの読み込みプラグインには[L-SMASH Works](https://github.com/VFR-maniac/L-SMASH-Works) File Reader r785を利用した\n\n# 結果\nヘッダーに定義を書いたもの　3:58.59[7158frame]\n![def_at_header](https://pbs.twimg.com/media/Cct1PPqVIAAP1bE.jpg:large)\ncppに定義を書いたもの　3.57.80[7134frame]\n![declear_only](https://pbs.twimg.com/media/Cct1PQ_VIAAglZH.jpg:large)\n\n有意な差は出なかった(ヘッダーに書くと+0.3%コンパイル時間増加した)\n\n# 結論\nコンパイラは十分優秀なのでどっちでもいいんじゃないか。\ntemplateが絡む関数を公開するととどうせヘッダーに書くしか無いのだから、ヘッダーに定義を書くことへの罪悪感をもし持っている人がいたら少しは減ったかな？\n\n他のコンパイラでも(gccとかgccとかgccとか)多分同じなんじゃなかろうか。\n","coediting":false,"comments_count":3,"created_at":"2016-03-05T01:55:51+09:00","group":null,"id":"c082a3af36eebf3dfb20","likes_count":1,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C++14","versions":[]}],"title":"少なくともVSでは関数定義を無理してヘッダーに書かないようにする必要はなさそうだ","updated_at":"2016-03-05T01:55:51+09:00","url":"https://qiita.com/yumetodo/items/c082a3af36eebf3dfb20","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e皆様ご存知のとおり、Visual Studioには逆アセンブラーがついてきます。\u003cbr\u003e\n開発者コマンド プロンプトを立ち上げ、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003edumpbin /DISASM /rawdata aaa.exe \u0026gt; aaa.asm\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eとするとアセンブリが吐かれます。\u003c/p\u003e\n\n\u003cp\u003eで、今回はCPU演算命令(instruction)をリストアップ\u0026amp;カウントアップしたいと思います。\u003c/p\u003e\n\n\u003cp\u003e最初は適当なテキストエディタでinstructionだけのリストを作ってからカウントアップしようかと思っていました。しかし今回解析するのが\u003cbr\u003e\n\u003ca href=\"https://github.com/TakeObara/DoNotPushGame\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/TakeObara/DoNotPushGame\u003c/a\u003e\u003cbr\u003e\nをx64 \u003ccode\u003e/arch=AVX2 /Ox /fp:fast\u003c/code\u003eでPGOビルドしたものだったので、dumpbin.exeの出力が87.1MBとかなっており、適当なテキストエディタ(Sublime Text 3)には流石に荷が重かったのでdumpbin.exeの出力をそのまま放り込めるようにしました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ソースコード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eソースコード\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://gist.github.com/yumetodo/b7d55812a719f8bc81cc\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://gist.github.com/yumetodo/b7d55812a719f8bc81cc\u003c/a\u003e\u003cbr\u003e\nです。ファイル名とかをソースコードに埋め込んでしまったので適当に手直しして使ってください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結果\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E6%9E%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結果\u003c/h1\u003e\n\n\u003cp\u003e超長いので\u003cbr\u003e\n\u003ca href=\"http://pastebin.com/utRZ6gKU\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://pastebin.com/utRZ6gKU\u003c/a\u003e\u003cbr\u003e\n見てください。どんだけ命令あるんですかね。\u003cbr\u003e\n抜粋すると\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emov           : 285897\nadd           : 60998\ncmp           : 37286\nmovzx         : 36338\nlea           : 36104\nimul          : 31387\ncall          : 27917\nsub           : 25906\nje            : 22029\ntest          : 20655\njne           : 20402\nand           : 18440\njmp           : 18348\nxor           : 15204\nsar           : 10689\npop           : 9882\nshr           : 9359\ninc           : 8687\npush          : 8384\nor            : 8215\nshl           : 7077\nmovss         : 6874\nmovsxd        : 6146\nnop           : 5602\nmovaps        : 4996\nint           : 4214\njle           : 4030\ndec           : 3725\njl            : 3069\njge           : 3049\nmovups        : 2950\nmulss         : 2444\nmovsd         : 2359\naddss         : 1938\njae           : 1776\njb            : 1689\nja            : 1608\nmulsd         : 1571\njg            : 1547\nmovd          : 1411\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e本当はここから、AVXとかの命令がどれくらい使われているのかを調べたかったんだけど、さくっと使えそうな命令一覧表がなかったので諦めましたが、チラホラとFMAやらAVXやらSSEやらの命令が見つかって満足したのでこれでいいものとします。コンパイルオプションのSIMD化なめちゃだめだなと。\u003c/p\u003e\n\n\u003cp\u003e更に解析したい人は\u003cbr\u003e\n- \u003ca href=\"http://softwaretechnique.jp/OS_Development/Tips/IA32_instructions.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://softwaretechnique.jp/OS_Development/Tips/IA32_instructions.html\u003c/a\u003e\u003cbr\u003e\n- \u003ca href=\"http://www.officedaytime.com/tips/simd.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.officedaytime.com/tips/simd.html\u003c/a\u003e\u003cbr\u003e\n- \u003ca href=\"http://sky.geocities.jp/krypton_pl/x86/x86ext.htm\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://sky.geocities.jp/krypton_pl/x86/x86ext.htm\u003c/a\u003e\u003cbr\u003e\n- \u003ca href=\"http://wiki.onakasuita.org/pukiwiki/?%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86ASM%E5%91%BD%E4%BB%A4%E3%83%99%E3%82%B9%E3%83%88100%E4%BD%8D%E3%81%AB%E8%AA%AC%E6%98%8E%E3%81%A4%E3%81%91%E3%81%A6%E3%81%BF%E3%81%9F\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://wiki.onakasuita.org/pukiwiki/?よく使うASM命令ベスト100位に説明つけてみた\u003c/a\u003e\u003cbr\u003e\n- Intel のあの馬鹿でかいPDF\u003c/p\u003e\n\n\u003cp\u003eとかで頑張ればいいんじゃないかな(諦め)\u003c/p\u003e\n","body":"# はじめに\n皆様ご存知のとおり、Visual Studioには逆アセンブラーがついてきます。\n開発者コマンド プロンプトを立ち上げ、\n\n```\ndumpbin /DISASM /rawdata aaa.exe \u003e aaa.asm\n```\n\nとするとアセンブリが吐かれます。\n\nで、今回はCPU演算命令(instruction)をリストアップ\u0026カウントアップしたいと思います。\n\n最初は適当なテキストエディタでinstructionだけのリストを作ってからカウントアップしようかと思っていました。しかし今回解析するのが\nhttps://github.com/TakeObara/DoNotPushGame\nをx64 ``/arch=AVX2 /Ox /fp:fast``でPGOビルドしたものだったので、dumpbin.exeの出力が87.1MBとかなっており、適当なテキストエディタ(Sublime Text 3)には流石に荷が重かったのでdumpbin.exeの出力をそのまま放り込めるようにしました。\n\n# ソースコード\nhttps://gist.github.com/yumetodo/b7d55812a719f8bc81cc\nです。ファイル名とかをソースコードに埋め込んでしまったので適当に手直しして使ってください。\n\n# 結果\n超長いので\nhttp://pastebin.com/utRZ6gKU\n見てください。どんだけ命令あるんですかね。\n抜粋すると\n\n```\nmov           : 285897\nadd           : 60998\ncmp           : 37286\nmovzx         : 36338\nlea           : 36104\nimul          : 31387\ncall          : 27917\nsub           : 25906\nje            : 22029\ntest          : 20655\njne           : 20402\nand           : 18440\njmp           : 18348\nxor           : 15204\nsar           : 10689\npop           : 9882\nshr           : 9359\ninc           : 8687\npush          : 8384\nor            : 8215\nshl           : 7077\nmovss         : 6874\nmovsxd        : 6146\nnop           : 5602\nmovaps        : 4996\nint           : 4214\njle           : 4030\ndec           : 3725\njl            : 3069\njge           : 3049\nmovups        : 2950\nmulss         : 2444\nmovsd         : 2359\naddss         : 1938\njae           : 1776\njb            : 1689\nja            : 1608\nmulsd         : 1571\njg            : 1547\nmovd          : 1411\n```\n\n本当はここから、AVXとかの命令がどれくらい使われているのかを調べたかったんだけど、さくっと使えそうな命令一覧表がなかったので諦めましたが、チラホラとFMAやらAVXやらSSEやらの命令が見つかって満足したのでこれでいいものとします。コンパイルオプションのSIMD化なめちゃだめだなと。\n\n更に解析したい人は\n- http://softwaretechnique.jp/OS_Development/Tips/IA32_instructions.html\n- http://www.officedaytime.com/tips/simd.html\n- http://sky.geocities.jp/krypton_pl/x86/x86ext.htm\n- [http://wiki.onakasuita.org/pukiwiki/?よく使うASM命令ベスト100位に説明つけてみた](http://wiki.onakasuita.org/pukiwiki/?%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86ASM%E5%91%BD%E4%BB%A4%E3%83%99%E3%82%B9%E3%83%88100%E4%BD%8D%E3%81%AB%E8%AA%AC%E6%98%8E%E3%81%A4%E3%81%91%E3%81%A6%E3%81%BF%E3%81%9F)\n- Intel のあの馬鹿でかいPDF\n\nとかで頑張ればいいんじゃないかな(諦め)\n","coediting":false,"comments_count":0,"created_at":"2016-03-03T01:52:49+09:00","group":null,"id":"3c20f7c25eedbf41d63a","likes_count":8,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"asm","versions":[]},{"name":"逆アセンブル","versions":[]}],"title":"dumpbin.exeで吐かれる逆アセンブルの結果を解析する","updated_at":"2016-03-03T02:14:27+09:00","url":"https://qiita.com/yumetodo/items/3c20f7c25eedbf41d63a","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"初めに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初めに\u003c/h1\u003e\n\n\u003cp\u003e音楽編集ソフトでフリーと言ったら真っ先にAudacityが浮かぶと思います。ちょちょっと編集して書きだすのに便利ですよね。\u003c/p\u003e\n\n\u003cp\u003eところでデフォルトのm4a書き出し(aac)がFFmpeg(しかも古いやつ)を使ったもので、これはちょっと不満です。どうせならqaacとかNeroAacEncで書き出したいですよね？\u003c/p\u003e\n\n\u003cp\u003e今回は私がAviUtlを使っていて、rigayaさんのx264guiExのauo_setupでqaacがついてくるからちょうど持っている、というただそれだけの理由で、qaacを使います。NeroAacEncでも手順は同じです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"その前にqaacのコマンドラインオプションを確認しようか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE%E5%89%8D%E3%81%ABqaac%E3%81%AE%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%97%E3%82%88%E3%81%86%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eその前にqaacのコマンドラインオプションを確認しようか\u003c/h1\u003e\n\n\u003cp\u003e基本は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eqaac $mode --ignorelength -o $file_name\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eです。\u003ccode\u003e$mode\u003c/code\u003eの部分はざっと5パターンですね。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e$mode_cmd\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eABR(AAC)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e-q 2 --abr $rate\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eABR(HE-AAC)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e-q 2 --he --abr $rate\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCVBR(AAC)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e-q 2 --cvbr $rate\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCVBR(HE-AAC)\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e-q 2 --he --cvbr $rate\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eTVBR(AAC)\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003e\u003ccode\u003e-q 2 --tvbr $cmd\u003c/code\u003e\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e私はx264guiExのデフォルトがTVBRなのでいつもそれ使っています。で、これの\u003ccode\u003e$cmd\u003c/code\u003eってのがさっぱり直感的じゃないです。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003etarget bitrate\u003c/th\u003e\n\u003cth\u003e$cmd\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e300\u003c/td\u003e\n\u003ctd\u003e127\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e250\u003c/td\u003e\n\u003ctd\u003e118\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e230\u003c/td\u003e\n\u003ctd\u003e109\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e210\u003c/td\u003e\n\u003ctd\u003e100\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e190\u003c/td\u003e\n\u003ctd\u003e91\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e160\u003c/td\u003e\n\u003ctd\u003e82\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e145\u003c/td\u003e\n\u003ctd\u003e73\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e130\u003c/td\u003e\n\u003ctd\u003e63\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e110\u003c/td\u003e\n\u003ctd\u003e54\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e100\u003c/td\u003e\n\u003ctd\u003e45\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e90\u003c/td\u003e\n\u003ctd\u003e36\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e80\u003c/td\u003e\n\u003ctd\u003e27\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e70\u003c/td\u003e\n\u003ctd\u003e18\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e50\u003c/td\u003e\n\u003ctd\u003e9\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e40\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"下準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%8B%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e下準備\u003c/h1\u003e\n\n\u003cp\u003eコマンドラインが長くならないように、qaac.exeのある場所にPATHを通しておくといいと思います。\u003c/p\u003e\n\n\u003cp\u003e私の場合は\u003cbr\u003e\n\u003ccode\u003eC:\\program1\\aviutl100\\exe_files\u003c/code\u003e\u003cbr\u003e\nにPATHを通しています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ではaudacityから書きだそう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A7%E3%81%AFaudacity%E3%81%8B%E3%82%89%E6%9B%B8%E3%81%8D%E3%81%A0%E3%81%9D%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eではAudacityから書きだそう\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F427ee79c-278e-2754-461e-f9d0063decd2.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=aed4b4280949b016ac84d8691ce61bd0\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F427ee79c-278e-2754-461e-f9d0063decd2.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=aed4b4280949b016ac84d8691ce61bd0\" alt=\"image\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/427ee79c-278e-2754-461e-f9d0063decd2.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F427ee79c-278e-2754-461e-f9d0063decd2.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=760d2006e455c34b2dbbb17c3e717c50 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e基本的に画像通りです。パイプがなにかわかっていれば何も難しくないですね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eqaac           -q 2 --tvbr 91 --ignorelength -                                -o \"%f\"\n[実行ファイル名][TVBR 190kbps～でエンコード]   [標準入力にパイプされたものを受ける] [出力]\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n","body":"# 初めに\n\n音楽編集ソフトでフリーと言ったら真っ先にAudacityが浮かぶと思います。ちょちょっと編集して書きだすのに便利ですよね。\n\nところでデフォルトのm4a書き出し(aac)がFFmpeg(しかも古いやつ)を使ったもので、これはちょっと不満です。どうせならqaacとかNeroAacEncで書き出したいですよね？\n\n今回は私がAviUtlを使っていて、rigayaさんのx264guiExのauo_setupでqaacがついてくるからちょうど持っている、というただそれだけの理由で、qaacを使います。NeroAacEncでも手順は同じです。\n\n# その前にqaacのコマンドラインオプションを確認しようか\n\n基本は\n\n```\nqaac $mode --ignorelength -o $file_name\n```\n\nです。``$mode``の部分はざっと5パターンですね。\n\n|              | $mode_cmd     |\n|--------------|------------------------|\n| ABR(AAC)     | ``-q 2 --abr $rate``       |\n| ABR(HE-AAC)  | ``-q 2 --he --abr $rate``  |\n| CVBR(AAC)    | ``-q 2 --cvbr $rate``      |\n| CVBR(HE-AAC) | ``-q 2 --he --cvbr $rate`` |\n| TVBR(AAC)    | **``-q 2 --tvbr $cmd``**   |\n\n私はx264guiExのデフォルトがTVBRなのでいつもそれ使っています。で、これの``$cmd``ってのがさっぱり直感的じゃないです。\n\n| target bitrate | $cmd |\n|----------------|------|\n| 300            | 127  |\n| 250            | 118  |\n| 230            | 109  |\n| 210            | 100  |\n| 190            | 91   |\n| 160            | 82   |\n| 145            | 73   |\n| 130            | 63   |\n| 110            | 54   |\n| 100            | 45   |\n| 90             | 36   |\n| 80             | 27   |\n| 70             | 18   |\n| 50             | 9    |\n| 40             | 0    |\n\n\n# 下準備\n\nコマンドラインが長くならないように、qaac.exeのある場所にPATHを通しておくといいと思います。\n\n私の場合は\n``C:\\program1\\aviutl100\\exe_files``\nにPATHを通しています。\n\n# ではAudacityから書きだそう\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/94177/427ee79c-278e-2754-461e-f9d0063decd2.png)\n\n基本的に画像通りです。パイプがなにかわかっていれば何も難しくないですね。\n\n```\nqaac           -q 2 --tvbr 91 --ignorelength -                                -o \"%f\"\n[実行ファイル名][TVBR 190kbps～でエンコード]   [標準入力にパイプされたものを受ける] [出力]\n```\n\n","coediting":false,"comments_count":0,"created_at":"2016-02-16T22:55:53+09:00","group":null,"id":"7d088b6a6bb91d998856","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"mp4","versions":[]},{"name":"Audacity","versions":[]},{"name":"m4a","versions":[]},{"name":"aac","versions":[]},{"name":"qaac","versions":[]}],"title":"QAACをAudacityから使ってm4a(aac)書き出しする","updated_at":"2016-02-16T22:55:53+09:00","url":"https://qiita.com/yumetodo/items/7d088b6a6bb91d998856","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003eWin32APIには御存知の通り\u003ccode\u003eWideCharToMultiByte\u003c/code\u003e関数と\u003ccode\u003eMultiByteToWideChar\u003c/code\u003e関数があるが、わりと使うのは面倒くさい。\u003c/p\u003e\n\n\u003cp\u003eそもそも当たり前だけど\u003ccode\u003estd::basic_string\u0026lt;char_type\u0026gt;\u003c/code\u003e使えないし。\u003c/p\u003e\n\n\u003cp\u003eというわけでメモ代わりにまとめておく。locale周りはガバのプーさんだけどそこは勘弁して下さい。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003eこれでいいかと。なんとなく\u003ccode\u003eshrink_to_fit\u003c/code\u003e呼んでるけどこれ必要なのかねぇ\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;windows.h\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewstring\u003c/span\u003e \u003cspan class=\"nf\"\u003eshift_jis_to_utf_16\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"this function is windows only\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eMultiByteToWideChar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e932\u003c/span\u003e\u003cspan class=\"cm\"\u003e/*CP_ACP*/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewstring\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003eL'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!::\u003c/span\u003e\u003cspan class=\"n\"\u003eMultiByteToWideChar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCP_ACP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eGetLastError\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_INSUFFICIENT_BUFFER\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INSUFFICIENT_BUFFER\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_INVALID_FLAGS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_FLAGS\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_INVALID_PARAMETER\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_PARAMETER\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_NO_UNICODE_TRANSLATION\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_NO_UNICODE_TRANSLATION\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003edefault:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: unknown(\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eto_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ereal_len\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewcslen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereal_len\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshrink_to_fit\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003eutf_16_to_shift_jis\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ewstring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"this function is windows only\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eWideCharToMultiByte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e932\u003c/span\u003e\u003cspan class=\"cm\"\u003e/*CP_ACP*/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!::\u003c/span\u003e\u003cspan class=\"n\"\u003eWideCharToMultiByte\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCP_ACP\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eGetLastError\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_INSUFFICIENT_BUFFER\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INSUFFICIENT_BUFFER\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_INVALID_FLAGS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_FLAGS\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eERROR_INVALID_PARAMETER\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_PARAMETER\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003edefault:\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: unknown(\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eto_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ereal_len\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereal_len\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshrink_to_fit\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"雑記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9B%91%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e雑記\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003eCP_ACP\u003c/code\u003eってところを変えればいろいろ出来たりする。例えば\u003ccode\u003eISO_8859_1\u003c/code\u003eなら西ヨーロッパ言語  - iso-8859-1からutf-16への変換ができる。\u003cbr\u003e\ncf.)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://channel9.msdn.com/Forums/TechOff/184894-WIN32-Text-Encoding-APIs/ebf597d0472b441e819e9dea013dba85\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://channel9.msdn.com/Forums/TechOff/184894-WIN32-Text-Encoding-APIs/ebf597d0472b441e819e9dea013dba85\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://msdn.microsoft.com/ja-jp/library/aa288104%28v=vs.71%29.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://msdn.microsoft.com/ja-jp/library/aa288104%28v=vs.71%29.aspx\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eあと、WideCharToMultiByte関数は第二引数に\u003ccode\u003eWC_NO_BEST_FIT_CHARS\u003c/code\u003eを指定せずに呼ぶと似た文字への変換が発生するらしい。\u003cbr\u003e\ncf.)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/hasegawayosuke/20060209#1139475064\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/hasegawayosuke/20060209#1139475064\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://msdn.microsoft.com/ja-jp/library/windows/desktop/dd374130%28v=vs.85%29.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://msdn.microsoft.com/ja-jp/library/windows/desktop/dd374130%28v=vs.85%29.aspx\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"参考サイト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%82%B5%E3%82%A4%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考サイト\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20130413/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e文字列取得バッファとしてのstd::string - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/snaka72/20090429/1241027781\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVisual C++でShift-JISをUTF-8に変換するコード - 今日もスミマセン。\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://bebolog.blogspot.jp/2014/11/c.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e備忘録: C++で文字コード変換\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003eちょっと違うけど\u003cbr\u003e\n\u003ca href=\"http://qiita.com/AsladaGSX/items/af50066dbbfd59991af9\" class=\"autolink\" id=\"reference-6db5a412af15c0a258a0\"\u003ehttp://qiita.com/AsladaGSX/items/af50066dbbfd59991af9\u003c/a\u003e\u003cbr\u003e\nなんかすごい頑張っている記事を見つけました、\u003c/p\u003e\n","body":"Win32APIには御存知の通り``WideCharToMultiByte``関数と``MultiByteToWideChar``関数があるが、わりと使うのは面倒くさい。\n\nそもそも当たり前だけど``std::basic_string\u003cchar_type\u003e``使えないし。\n\nというわけでメモ代わりにまとめておく。locale周りはガバのプーさんだけどそこは勘弁して下さい。\n\n# 結論\n\nこれでいいかと。なんとなく``shrink_to_fit``呼んでるけどこれ必要なのかねぇ\n\n```cpp\n#include \u003cstring\u003e\n#include \u003cwindows.h\u003e\n#include \u003ccstring\u003e\nstd::wstring shift_jis_to_utf_16(const std::string\u0026 str)\n{\n\tstatic_assert(sizeof(wchar_t) == 2, \"this function is windows only\");\n\tconst int len = ::MultiByteToWideChar(932/*CP_ACP*/, 0, str.c_str(), -1, nullptr, 0);\n\tstd::wstring re(len * 2 + 2, L'\\0');\n\tif (!::MultiByteToWideChar(CP_ACP, 0, str.c_str(), -1, \u0026re[0], len)) {\n\t\tconst auto ec = ::GetLastError();\n\t\tswitch (ec)\n\t\t{\n\t\tcase ERROR_INSUFFICIENT_BUFFER:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INSUFFICIENT_BUFFER\"); break;\n\t\tcase ERROR_INVALID_FLAGS:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_FLAGS\"); break;\n\t\tcase ERROR_INVALID_PARAMETER:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_PARAMETER\"); break;\n\t\tcase ERROR_NO_UNICODE_TRANSLATION:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_NO_UNICODE_TRANSLATION\"); break;\n\t\tdefault:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: unknown(\" + std::to_string(ec) + ')'); break;\n\t\t}\n\t}\n\tconst std::size_t real_len = std::wcslen(re.c_str());\n\tre.resize(real_len);\n\tre.shrink_to_fit();\n\treturn re;\n}\nstd::string utf_16_to_shift_jis(const std::wstring\u0026 str) {\n\tstatic_assert(sizeof(wchar_t) == 2, \"this function is windows only\");\n\tconst int len = ::WideCharToMultiByte(932/*CP_ACP*/, 0, str.c_str(), -1, nullptr, 0, nullptr, nullptr);\n\tstd::string re(len * 2, '\\0');\n\tif (!::WideCharToMultiByte(CP_ACP, 0, str.c_str(), -1, \u0026re[0], len, nullptr, nullptr)) {\n\t\tconst auto ec = ::GetLastError();\n\t\tswitch (ec)\n\t\t{\n\t\tcase ERROR_INSUFFICIENT_BUFFER:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INSUFFICIENT_BUFFER\"); break;\n\t\tcase ERROR_INVALID_FLAGS:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_FLAGS\"); break;\n\t\tcase ERROR_INVALID_PARAMETER:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: ERROR_INVALID_PARAMETER\"); break;\n\t\tdefault:\n\t\t\tthrow std::runtime_error(\"in function utf_16_to_shift_jis, WideCharToMultiByte fail. cause: unknown(\" + std::to_string(ec) + ')'); break;\n\t\t}\n\t}\n\tconst std::size_t real_len = std::strlen(re.c_str());\n\tre.resize(real_len);\n\tre.shrink_to_fit();\n\treturn re;\n}\n\n```\n\n# 雑記\n``CP_ACP``ってところを変えればいろいろ出来たりする。例えば``ISO_8859_1``なら西ヨーロッパ言語  - iso-8859-1からutf-16への変換ができる。\ncf.)\n\n- https://channel9.msdn.com/Forums/TechOff/184894-WIN32-Text-Encoding-APIs/ebf597d0472b441e819e9dea013dba85\n- https://msdn.microsoft.com/ja-jp/library/aa288104%28v=vs.71%29.aspx\n\nあと、WideCharToMultiByte関数は第二引数に``WC_NO_BEST_FIT_CHARS``を指定せずに呼ぶと似た文字への変換が発生するらしい。\ncf.)\n\n- http://d.hatena.ne.jp/hasegawayosuke/20060209#1139475064\n- https://msdn.microsoft.com/ja-jp/library/windows/desktop/dd374130%28v=vs.85%29.aspx\n\n# 参考サイト\n\n- [文字列取得バッファとしてのstd::string - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20130413/p1)\n- [Visual C++でShift-JISをUTF-8に変換するコード - 今日もスミマセン。](http://d.hatena.ne.jp/snaka72/20090429/1241027781)\n- [備忘録: C++で文字コード変換](http://bebolog.blogspot.jp/2014/11/c.html)\n\n# 追記\n\nちょっと違うけど\nhttp://qiita.com/AsladaGSX/items/af50066dbbfd59991af9\nなんかすごい頑張っている記事を見つけました、\n","coediting":false,"comments_count":3,"created_at":"2016-01-31T00:55:24+09:00","group":null,"id":"453d14eff41b805d8fc4","likes_count":12,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"Windows","versions":[]},{"name":"unicode","versions":[]},{"name":"文字コード変換","versions":[]},{"name":"Shift_JIS","versions":[]}],"title":"そろそろWindowsでUTF-16とShift-JISの変換方法をC++erらしくまとめようか","updated_at":"2018-05-02T10:18:16+09:00","url":"https://qiita.com/yumetodo/items/453d14eff41b805d8fc4","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null}]