[{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yumetodo/items/238751b879c09b56234b\" id=\"reference-039d66f5d9df71ea9d8f\"\u003eC言語で安全に標準入力から数値を習得\u003c/a\u003e\u003cbr\u003e\nというものを書いたがC++ではどうか見ていく。\u003c/p\u003e\n\n\u003cp\u003e幸いなことにCと違いC++の標準入出力は優秀である。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++での数値入力の実にありきたりな例\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003einput_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecin\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einput_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eCみたいに標準入出力がラスボス、なんてことはない。\u003c/p\u003e\n\n\u003cp\u003eしかしながら、クラスについての理解、フラグについての理解はやはり必要になってしまう。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yumetodo/items/238751b879c09b56234b\"\u003eC言語で安全に標準入力から数値を習得\u003c/a\u003eで紹介したエラー時は再帰する、と言うのは実は初心者にもわかりやすいのではないのか？と思うのでそれを書いてみる。もちろん例外なんていう初心者にはよくわからないものは意識せず済むよう、\u003ccode\u003enoexcept\u003c/code\u003e指定をつける。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"注意点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8F%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意点\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"arithmeticに限定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#arithmetic%E3%81%AB%E9%99%90%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003earithmeticに限定\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9194c15d-2b2a-5353-428f-89667cb002f9.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=dc85b89befd47fd02e949d9c05bd5dbb\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9194c15d-2b2a-5353-428f-89667cb002f9.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=dc85b89befd47fd02e949d9c05bd5dbb\" alt=\"nc32177.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/9194c15d-2b2a-5353-428f-89667cb002f9.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F9194c15d-2b2a-5353-428f-89667cb002f9.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1fe6d03d87299ccfd607c3a9fcc2327d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eありすー・・・じゃない、arithmeticではないものに対する\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eが呼ばれないよう、TMPで弾く必要がある。もちろんSFINAEを使う。やり方は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462\" id=\"reference-df5214111de0eef0e40f\"\u003estd::enable_ifを使ってオーバーロードする時、enablerを使う？\u003c/a\u003e\u003cbr\u003e\nの\u003ccode\u003estd::nullptr_t\u003c/code\u003e型を使うものを使う。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"int8_tuint8_t型のために\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#int8_tuint8_t%E5%9E%8B%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003eint8_t\u003c/code\u003e/\u003ccode\u003euint8_t\u003c/code\u003e型のために\u003c/h2\u003e\n\n\u003cp\u003eまた\u003ccode\u003eint8_t\u003c/code\u003e/\u003ccode\u003euint8_t\u003c/code\u003e型は一般に\u003ccode\u003echar\u003c/code\u003e/\u003ccode\u003eunsigned char\u003c/code\u003eにtypedefされており、\u003ccode\u003eoperator\u0026gt;\u0026gt;\u003c/code\u003eは\u003cstrong\u003e一文字読み取る\u003c/strong\u003eという動作になるので、\u003cstrong\u003e一度大きな型で受けて範囲チェックした後キャストする必要がある\u003c/strong\u003e。\u003cbr\u003e\n\u003ccode\u003echar\u003c/code\u003e/\u003ccode\u003esinged shar\u003c/code\u003e/\u003ccode\u003eunsigend char\u003c/code\u003e型は\u003ccode\u003esizeof\u003c/code\u003e演算子で1になることを利用して書けばいいが、今のC++には\u003cstrong\u003e\u003ccode\u003estatic_if\u003c/code\u003eのような便利な機能は無いのでTMPする必要がある\u003c/strong\u003e。\u003cbr\u003e\nこの際\u003ccode\u003estd::conditional\u003c/code\u003eを使うと非常に読みにくくなるので、\u003cbr\u003e\n\u003ca href=\"http://qiita.com/kazatsuyu/items/f8c3b304e7f8b35263d8\" id=\"reference-8b82ff414dff64c26bee\"\u003eメモ：std::conditionalでif～else if～elseみたいなことをしようとすると見づらい\u003c/a\u003e\u003cbr\u003e\nのやり方を使う。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"成果物\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%88%90%E6%9E%9C%E7%89%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e成果物\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;exception\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;type_traits\u0026gt;\n#include \u0026lt;limits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cm\"\u003e/**\n@brief  \\~japanese 複数条件のあるTMP用if\n\\~english multi-conditional if struct for TMP.\n\\~japanese  std::enable_ifと組み合わせて使います。\n\\~english   This class is used in conjunction with std::enable_if.\n\\~\n@code\ntemplate\u0026lt;typename T\u0026gt;\nusing bar = first_enabled_t\u0026lt;\n    std::enbale_if\u0026lt;cond1, type1\u0026gt;,\n    std::enbale_if\u0026lt;cond2, type2\u0026gt;,\n    std::enbale_if\u0026lt;cond3, type3\u0026gt;,\n    default_type\n\u0026gt;;\n@endcode\n*/\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled_t\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eArgs\u003c/span\u003e\u003cspan class=\"p\"\u003e...\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//! for int8_t/uint8_t\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_arithmetic\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003earithmetic_t\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_enabled_t\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_signed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT_\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT_\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//create new type. C++11:alias declaration\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受ける\n * @details [long description]\n * \n * @param echo_str 入力を受ける前に表示する文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字\n * @exception none\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_arithmetic\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//Tが整数か浮動小数点型でないならばコンパイルエラーを出す\u003c/span\u003e\n\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eecho_str\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elimit\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003elowest\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003earithmetic_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecin\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eexceptions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eios\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efailbit\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eios\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebadbit\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eecho_str\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eecho_str\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eecho_str\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//文字列が空じゃなければ出力\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecin\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力を受ける\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eout_of_range\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"input is iligal\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//範囲チェック\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eexception\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecerr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhat\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//エラーメッセージ表示\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください。\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//エラー時は再帰する方向で\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuf\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"使い方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使い方\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einput1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"数字を1～50の間で入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//input1はint型\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einput2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"数字を1～50の間で入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e50U\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1U\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//input2はunsigned int型\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einput3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"数字を1～50の間で入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1200\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//input3はunsigned long long型\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003einput4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"数字を入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//input4はunsigned short型\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003e内部実装は例外を乱用したものになり、若干重いかも知れないが、そもそも標準入出力に速度を求めてもしかたがないのでこれでいいとする。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003eよくよく見たらこいつboolでも動くぞ・・・。\u003c/p\u003e\n","body":"# はじめに\n[C言語で安全に標準入力から数値を習得](http://qiita.com/yumetodo/items/238751b879c09b56234b)\nというものを書いたがC++ではどうか見ていく。\n\n幸いなことにCと違いC++の標準入出力は優秀である。\n\n```cpp:C++での数値入力の実にありきたりな例\nint input_num;\nstd::cin \u003e\u003e input_num;\n```\nCみたいに標準入出力がラスボス、なんてことはない。\n\nしかしながら、クラスについての理解、フラグについての理解はやはり必要になってしまう。\n\n[C言語で安全に標準入力から数値を習得](http://qiita.com/yumetodo/items/238751b879c09b56234b)で紹介したエラー時は再帰する、と言うのは実は初心者にもわかりやすいのではないのか？と思うのでそれを書いてみる。もちろん例外なんていう初心者にはよくわからないものは意識せず済むよう、``noexcept``指定をつける。\n\n# 注意点\n\n## arithmeticに限定\n![nc32177.png](https://qiita-image-store.s3.amazonaws.com/0/94177/9194c15d-2b2a-5353-428f-89667cb002f9.png)\n\n\nありすー・・・じゃない、arithmeticではないものに対する``operator\u003e\u003e``が呼ばれないよう、TMPで弾く必要がある。もちろんSFINAEを使う。やり方は\n[std::enable_ifを使ってオーバーロードする時、enablerを使う？](http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462)\nの``std::nullptr_t``型を使うものを使う。\n\n## ``int8_t``/``uint8_t``型のために\nまた``int8_t``/``uint8_t``型は一般に``char``/``unsigned char``にtypedefされており、``operator\u003e\u003e``は**一文字読み取る**という動作になるので、**一度大きな型で受けて範囲チェックした後キャストする必要がある**。\n``char``/``singed shar``/``unsigend char``型は``sizeof``演算子で1になることを利用して書けばいいが、今のC++には**``static_if``のような便利な機能は無いのでTMPする必要がある**。\nこの際``std::conditional``を使うと非常に読みにくくなるので、\n[メモ：std::conditionalでif～else if～elseみたいなことをしようとすると見づらい](http://qiita.com/kazatsuyu/items/f8c3b304e7f8b35263d8)\nのやり方を使う。\n\n# 成果物\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003cexception\u003e\n#include \u003cstdexcept\u003e\n#include \u003ctype_traits\u003e\n#include \u003climits\u003e\n/**\n@brief  \\~japanese 複数条件のあるTMP用if\n\\~english multi-conditional if struct for TMP.\n\\~japanese  std::enable_ifと組み合わせて使います。\n\\~english   This class is used in conjunction with std::enable_if.\n\\~\n@code\ntemplate\u003ctypename T\u003e\nusing bar = first_enabled_t\u003c\n    std::enbale_if\u003ccond1, type1\u003e,\n    std::enbale_if\u003ccond2, type2\u003e,\n    std::enbale_if\u003ccond3, type3\u003e,\n    default_type\n\u003e;\n@endcode\n*/\ntemplate\u003ctypename ...Args\u003e\nstruct first_enabled {};\n\ntemplate\u003ctypename T, typename ...Args\u003e\nstruct first_enabled\u003cstd::enable_if\u003ctrue, T\u003e, Args...\u003e { using type = T; };\ntemplate\u003ctypename T, typename ...Args\u003e\nstruct first_enabled\u003cstd::enable_if\u003cfalse, T\u003e, Args...\u003e : first_enabled\u003cArgs...\u003e {};\ntemplate\u003ctypename T, typename ...Args\u003e\nstruct first_enabled\u003cT, Args...\u003e { using type = T; };\n\ntemplate\u003ctypename ...Args\u003e\nusing first_enabled_t = typename first_enabled\u003cArgs...\u003e::type;\n\n//! for int8_t/uint8_t\ntemplate\u003ctypename T, std::enable_if_t\u003cstd::is_arithmetic\u003cT\u003e::value, std::nullptr_t\u003e = nullptr\u003e\nusing arithmetic_t = first_enabled_t \u003c\n    std::enable_if\u003c1 != sizeof(T), T\u003e,\n    std::enable_if\u003cstd::is_signed\u003cT\u003e::value, int\u003e,\n    unsigned int\n\u003e;\ntemplate\u003ctypename T_\u003e using limit = std::numeric_limits\u003cT_\u003e;//create new type. C++11:alias declaration\n/**\n * @brief 標準入力から入力を受ける\n * @details [long description]\n * \n * @param echo_str 入力を受ける前に表示する文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字\n * @exception none\n */\ntemplate\u003ctypename T, std::enable_if_t\u003cstd::is_arithmetic\u003cT\u003e::value, std::nullptr_t\u003e = nullptr\u003e//Tが整数か浮動小数点型でないならばコンパイルエラーを出す\nT input(const char* echo_str, const T max = limit\u003cT\u003e::max(), const T min = limit\u003cT\u003e::lowest()) noexcept {\n    arithmetic_t\u003cT\u003e buf;\n    try {\n        std::cin.exceptions(std::ios::failbit | std::ios::badbit);\n        if (nullptr != echo_str \u0026\u0026 '\\0' != echo_str[0]) std::cout \u003c\u003c echo_str \u003c\u003c std::endl;//文字列が空じゃなければ出力\n        std::cin \u003e\u003e buf;//入力を受ける\n        if (max \u003c buf || buf \u003c min) throw std::out_of_range(\"input is iligal\");//範囲チェック\n    }\n    catch (std::exception\u0026 er) {\n        std::cerr \u003c\u003c er.what() \u003c\u003c std::endl;//エラーメッセージ表示\n        return input(\"再入力してください。\", max, min);//エラー時は再帰する方向で\n    }\n    return static_cast\u003cT\u003e(buf);\n}\n```\n\n# 使い方\n\n```cpp\nint main(){\n    const auto input1 = input(\"数字を1～50の間で入力してください\", 50, 1);//input1はint型\n    const auto input2 = input(\"数字を1～50の間で入力してください\", 50U, 1U);//input2はunsigned int型\n    const auto input3 = input\u003cunsigned long long\u003e(\"数字を1～50の間で入力してください\", 1200, 3);//input3はunsigned long long型\n    const auto input4 = input\u003cunsigned short\u003e(\"数字を入力してください\");//input4はunsigned short型\n    return 0;\n}\n```\n\n# 結論\n\n内部実装は例外を乱用したものになり、若干重いかも知れないが、そもそも標準入出力に速度を求めてもしかたがないのでこれでいいとする。\n\n# 追記\n\nよくよく見たらこいつboolでも動くぞ・・・。\n","coediting":false,"comments_count":0,"created_at":"2016-01-22T11:48:47+09:00","group":null,"id":"2a1d5f855bae6d100658","likes_count":9,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"stdin","versions":[]}],"title":"C++で再帰しつつnoexceptな数値入力関数を作る","updated_at":"2016-04-28T21:45:20+09:00","url":"https://qiita.com/yumetodo/items/2a1d5f855bae6d100658","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e多くの入門書で数値の入力を受けるのに\u003ccode\u003escanf\u003c/code\u003e関数を使用していますが、これが\u003cstrong\u003e明確に誤り\u003c/strong\u003eなのは\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.kijineko.co.jp/tech/superstitions/buffer-overrun-of-scanf.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e[迷信] scanf ではバッファオーバーランを防げない | 株式会社きじねこ\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003escanf 系の関数では、整数や実浮動小数点数を読み込む際に、オーバーフローやアンダーフローが発生しても検知することができません。実引数で指定した格納先の型で、入力した数値を表現できない場合の動作は未定義なのです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eすでに有名な話です。というわけでなんとかしていきましょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"エラーを戻り値で返すこれはダメ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E3%82%92%E6%88%BB%E3%82%8A%E5%80%A4%E3%81%A7%E8%BF%94%E3%81%99%E3%81%93%E3%82%8C%E3%81%AF%E3%83%80%E3%83%A1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eエラーを戻り値で返す(これはダメ)\u003c/h1\u003e\n\n\u003cp\u003eつまりfgetsとstrtol系関数を組み合わせることが唯一解となります。\u003c/p\u003e\n\n\u003cp\u003estrtol系関数は全部で以下のとおりです。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003efunction name\u003c/th\u003e\n\u003cth\u003etype\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtol\u003c/td\u003e\n\u003ctd\u003elong\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtoul\u003c/td\u003e\n\u003ctd\u003eunsigned long\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtoll\u003c/td\u003e\n\u003ctd\u003eunsigned long long\u003c/td\u003e\n\u003ctd\u003eC99\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtoull\u003c/td\u003e\n\u003ctd\u003eunsigned long long\u003c/td\u003e\n\u003ctd\u003eC99\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtof\u003c/td\u003e\n\u003ctd\u003efloat\u003c/td\u003e\n\u003ctd\u003eC99\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtod\u003c/td\u003e\n\u003ctd\u003edouble\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrtold\u003c/td\u003e\n\u003ctd\u003elong double\u003c/td\u003e\n\u003ctd\u003eC99\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eここに無い型はそれより大きい方から範囲チェックしたうえでキャストする必要があります。\u003c/p\u003e\n\n\u003cp\u003e一部関数はC99以降となりますが、今時C99すら使えない糞環境無いよね？(煽り)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;limits.h\u0026gt;\n#include \u0026lt;errno.h\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力を数字に変換する。\n * @param max 戻り値の最大値\n * @param min 戻り値の最小値\n * @return 入力した数字、エラー時はINT_MIN, EOFのときはEOF\n */\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_integer_num\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\u003cspan class=\"c1\"\u003e//エラーの原因がEOFか切り分け\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEOF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//strlenもどき\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetchar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtol\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力を数字に変換する。\n * @param max 戻り値の最大値\n * @param min 戻り値の最小値\n * @return 入力した数字、エラー時は-2, EOFのときはEOF\n */\u003c/span\u003e\n\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_double_num\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\u003cspan class=\"c1\"\u003e//エラーの原因がEOFか切り分け\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEOF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//strlenもどき\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetchar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"エラー時は再帰するこれもだめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E6%99%82%E3%81%AF%E5%86%8D%E5%B8%B0%E3%81%99%E3%82%8B%E3%81%93%E3%82%8C%E3%82%82%E3%81%A0%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eエラー時は再帰する(これもだめ)\u003c/h1\u003e\n\n\u003cp\u003eしかし戻り値としてエラーを通知すると、例えば上の場合\u003ccode\u003eINT_MIN\u003c/code\u003eが入力されたらエラーに成ってしまう、という問題があります。つまり結果とエラーを分離する必要があるわけです。\u003c/p\u003e\n\n\u003cp\u003eかと言ってエラーコードを引数経由で返すのは冗長ですし、入力された値を引数経由で返すのは入力を受けた後constに変数をできないのでダメです。\u003c/p\u003e\n\n\u003cp\u003eさて、こういう入力の時、多くの場合はエラーメッセージを吐いて再度入力を求めたいことが多いはず。ならば再帰しましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;limits.h\u0026gt;//in gcc\n#include \u0026lt;errno.h\u0026gt;//in gcc\n#include \u0026lt;stdbool.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cm\"\u003e/**\n * @brief 文字列が文字を持っているか調べます。\n * @param str 対象文字列へのポインタ\n * @return false: nullptrか空白文字のみの文字列 true:それ以外\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、int型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時は再帰\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときはEOF\n */\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEOF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//strlenもどき\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetchar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtol\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、unsigned int型に変換する\n * @details fgetsしてstrtoulしている。max, minの条件に合わないかエラー時は再帰\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときはEOF\n */\u003c/span\u003e\n\u003cspan class=\"n\"\u003euint\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_uint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003euint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003euint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEOF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//strlenもどき\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetchar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput_uint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtoul\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput_uint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、double型に変換する\n * @details fgetsしてstrtodしている。max, minの条件に合わないかエラー時は再帰\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときはEOF\n */\u003c/span\u003e\n\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_double\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEOF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//strlenもどき\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetchar\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput_double\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput_double\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"エラー時は関数内でループするこれもだめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E6%99%82%E3%81%AF%E9%96%A2%E6%95%B0%E5%86%85%E3%81%A7%E3%83%AB%E3%83%BC%E3%83%97%E3%81%99%E3%82%8B%E3%81%93%E3%82%8C%E3%82%82%E3%81%A0%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eエラー時は関数内でループする(これもだめ)\u003c/h1\u003e\n\n\u003cp\u003eコメントで \u003ca href=\"/yohhoy\" class=\"user-mention js-hovercard\" title=\"yohhoy\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"yohhoy\"\u003e@yohhoy\u003c/a\u003e さんから\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e蛇足ですが、「エラー時に再帰呼び出し」はスタックオーバーフロー攻撃への脆弱性になり得るため、同一関数内でのリトライ処理の方が良いかもしれませんね。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとか言われたので、再帰じゃなくてループに書き直します。\u003c/p\u003e\n\n\u003cp\u003eついでにEOFかどうかと戻り値も分離。そもそも再帰した理由がエラーコードと入力値を混ぜて戻り値で返すとか正気じゃない、ということだったはずなのになんでEOFは分離しなかった、過去の私。\u003c/p\u003e\n\n\u003cp\u003eというわけでEOFかどうかは呼び出し元で\u003ccode\u003efeof\u003c/code\u003e関数を呼んで調べてください。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/yohhoy\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@yohhoy\u003c/a\u003e そもそもEOFかどうかを戻り値で通知するのが無理だと悟った\u003c/p\u003e— yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/781486373580648448\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2016年9月29日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;limits.h\u0026gt;//in gcc\n#include \u0026lt;errno.h\u0026gt;//in gcc\n#include \u0026lt;stdbool.h\u0026gt;\n#include \u0026lt;ctype.h\u0026gt;\n#include \u0026lt;float.h\u0026gt;\n#if defined(_MSC_VER) || defined(__cplusplus)\n#   define RESTRICT\n#else \n#   define RESTRICT restrict\n#endif\n\u003c/span\u003e\u003cspan class=\"cm\"\u003e/**\n * @brief 文字列が文字を持っているか調べます。\n * @param str 対象文字列へのポインタ\n * @return false: nullptrか空白文字のみの文字列 true:それ以外\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 文字列が文字を持っているか調べます。\n * @param io 書き換えるbool型変数へのポインタ、呼び出し後はポインタが指す変数にnew_valueが代入される\n * @param new_value 新しい値\n * @return ioが指すbool変数がもともと持っていた値\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003eexchange_bool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003enew_value\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enew_value\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief fgetsで失敗したときにストリームをクリアしてループする関数\n * @param s ストリームから読み取った文字列を格納するための領域へのポインタ\n * @param buf_size ストリームから読み取った文字列を格納するための領域の大きさ\n * @param stream FILE構造体へのポインタかstdin\n * @param message_on_error エラー時に表示してループする\n * @return 成功時は0, EOFのときはEOF\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eFILE\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_flg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEOF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange_bool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_flg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//strlenもどき\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efgetc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、int型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//EOF\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//数字が入っていないときはループ\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtol\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、unsigned int型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_uint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//EOF\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//数字が入っていないときはループ\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtoul\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、double型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_double\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eRESTRICT\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//EOF\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//数字が入っていないときはループ\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eループで書き直して、ついでに100回リトライすると強制的に\u003ccode\u003eexit\u003c/code\u003eするようにした。\u003ccode\u003erestrict\u003c/code\u003eの使い方があっているかは少し不安。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"長過ぎる入力に正しく対応する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%95%B7%E9%81%8E%E3%81%8E%E3%82%8B%E5%85%A5%E5%8A%9B%E3%81%AB%E6%AD%A3%E3%81%97%E3%81%8F%E5%AF%BE%E5%BF%9C%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e長過ぎる入力に正しく対応する\u003c/h1\u003e\n\n\u003cp\u003e上のだと長過ぎる入力にうまく対応できていない。言い換えるとfgetsの扱い方に問題がある。\u003c/p\u003e\n\n\u003cp\u003eまずfgetsは環境によっては長大な入力を受け取ったときに\u003ccode\u003eerrno\u003c/code\u003eに\u003ccode\u003eERANGE(34)\u003c/code\u003eに設定してくる。するとstrtol系関数のエラー捕捉のためにerrnoを見ていたが、これをbypassしないといけない。\u003c/p\u003e\n\n\u003cp\u003eまた長大な入力のときにfgetsが戻り値NULLを通知すると勘違いしていたため、入力ストリームの整理部分が機能していなかった。\u003c/p\u003e\n\n\u003cp\u003eというわけで直した。\u003c/p\u003e\n\n\u003cp\u003eC言語の標準入力難しすぎでは？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC11\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;string.h\u0026gt;\n#include \u0026lt;limits.h\u0026gt;\n#include \u0026lt;errno.h\u0026gt;\n#include \u0026lt;stdbool.h\u0026gt;\n#include \u0026lt;ctype.h\u0026gt;\n#include \u0026lt;float.h\u0026gt;\n#include \u0026lt;assert.h\u0026gt;\n#ifndef static_assert\n#   define NO_STDC_STATIC_ASSERT\n#   define static_assert(...)\n#endif\n#if defined(_MSC_VER) || defined(__cplusplus)\n#   define restrict\n#endif\n\u003c/span\u003e\u003cspan class=\"cm\"\u003e/**\n * @brief 文字列が文字を持っているか調べます。\n * @param str 対象文字列へのポインタ\n * @return false: nullptrか空白文字のみの文字列 true:それ以外\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\0'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e' '\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eret\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 文字列が文字を持っているか調べます。\n * @param io 書き換えるbool型変数へのポインタ、呼び出し後はポインタが指す変数にnew_valueが代入される\n * @param new_value 新しい値\n * @return ioが指すbool変数がもともと持っていた値\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003eexchange_bool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebool\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003enew_value\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enew_value\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief fgetsで失敗したときにストリームをクリアしてループする関数\n * @param s ストリームから読み取った文字列を格納するための領域へのポインタ\n * @param buf_size ストリームから読み取った文字列を格納するための領域の大きさ\n * @param stream FILE構造体へのポインタかstdin\n * @param message_on_error エラー時に表示してループする\n * @return 成功時は0, new line at the end of fileのときは-1\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eFILE\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003efirst_flg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003efgets\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebuf_size\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange_bool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003efirst_flg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"再入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100u\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//短すぎる入力\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]))\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//長過ぎる入力\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//入力ストリームを掃除\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efgetc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estream\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"sc\"\u003e'\\n'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、int型に変換する\n * @details fgetsしてstrtoulしている。max, minの条件に合わないかエラー時はループ\n * @details errnoの値を書き換える\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"err\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100u\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//長過ぎる入力以降の無限ループ防止にerrnoをクリアする\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//EOF\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//短すぎる入力\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//長過ぎる入力\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//ループ制御フラグとして流用\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003edefault:\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtol\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100u\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、unsigned int型に変換する\n * @details fgetsしてstrtodしている。max, minの条件に合わないかエラー時はループ\n * @details errnoの値を書き換える\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_uint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"err\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100u\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//長過ぎる入力以降の無限ループ防止にerrnoをクリアする\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//EOF\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//短すぎる入力\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//長過ぎる入力\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//ループ制御フラグとして流用\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003edefault:\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtoul\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cm\"\u003e/**\n * @brief 標準入力から入力を受け、double型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @details errnoの値を書き換える\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"nf\"\u003einput_double\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr_has_char\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"n\"\u003eputs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//長過ぎる入力以降の無限ループ防止にerrnoをクリアする\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eerrno\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efgets_wrap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage_on_error\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//EOF\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//短すぎる入力\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//長過ぎる入力\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//ループ制御フラグとして流用\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003edefault:\u003c/span\u003e \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estrtod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//無限ループ防止\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#ifdef NO_STDC_STATIC_ASSERT\n#   undef static_assert\n#   undef NO_STDC_STATIC_ASSERT\n#endif\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"使い方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e使い方\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ein\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"値を入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MAX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e//do something\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einput_int\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"値を入力してください\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNULL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MAX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eINT_MIN\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003efeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"p\"\u003e);){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"input \u0026gt; %d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003eC言語で標準入出力ってラスボスの一つじゃないか説\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記-strtol系関数のエラーハンドリング\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-strtol%E7%B3%BB%E9%96%A2%E6%95%B0%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記: strtol系関数のエラーハンドリング\u003c/h1\u003e\n\n\u003cp\u003eC11規格書によれば\u003cbr\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e7.22.1.4 The strtol, strtoll, strtoul, and strtoull functions\u003cbr\u003e\nSynopsis\u003c/p\u003e\n\n\u003cp\u003e1 \u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdlib.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003estrtol\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003enptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003estrtoll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003enptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003estrtoul\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003enptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003estrtoull\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003enptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"kr\"\u003erestrict\u003c/span\u003e \u003cspan class=\"n\"\u003eendptr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e7 If the subject sequence is empty or does not have the expected form, \u003cstrong\u003eno conversion is\u003cbr\u003e\nperformed; the value of nptr is stored in the object pointed to by endptr\u003c/strong\u003e, provided\u003cbr\u003e\nthat endptr is not a null pointer.\u003cbr\u003e\nReturns\u003c/p\u003e\n\n\u003cp\u003e8 The strtol, strtoll, strtoul, and strtoull functions return the converted\u003cbr\u003e\nvalue, if any. \u003cstrong\u003eIf no conversion could be performed, zero is returned.\u003c/strong\u003e If the correct value\u003cbr\u003e\nis outside the range of representable values, LONG_MIN, LONG_MAX, LLONG_MIN,\u003cbr\u003e\nLLONG_MAX, ULONG_MAX, or ULLONG_MAX is returned (according to the return type\u003cbr\u003e\nand sign of the value, if any), and the value of the macro ERANGE is stored in errno.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとなっているから、\u003ccode\u003eerrno\u003c/code\u003eの値などを確認するだけでは不充分で\u003ccode\u003eendptr\u003c/code\u003eも渡して見ないといけないのか。知らなかった。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記-strtodのエラーハンドリング\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98-strtod%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記: strtodのエラーハンドリング\u003c/h1\u003e\n\n\u003cp\u003e基本的には上の通りなのだが、underflowsが起こったかをportableに知る方法はない。何故かと言うと\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e//§7.22.1.3 (N1570)\u003cbr\u003e\nIf the result underflows (7.12.1)\u003cbr\u003e\n(中略)\u003cbr\u003e\n; whether errno acquires the value ERANGE is implementation-defined.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eERANGEになるかが実装依存だからだ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"類似の記事\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%A1%9E%E4%BC%BC%E3%81%AE%E8%A8%98%E4%BA%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e類似の記事\u003c/h1\u003e\n\n\u003cp\u003e今更ながらネタ被りしている記事を見つけてしまった。\u003ccode\u003eC言語タグ\u003c/code\u003eではなく\u003ccode\u003eC\u003c/code\u003eタグしか見てなかったから気が付かなかった・・・\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/mpyw/items/aff12a6ff2c7726ed1d8\" id=\"reference-8483bbecb2236ec46899\"\u003e標準入力から安全に文字列を受け取る方法いろいろ\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eまあ結果的に同じアプローチになりますよね。\u003c/p\u003e\n","body":"# はじめに\n多くの入門書で数値の入力を受けるのに``scanf``関数を使用していますが、これが**明確に誤り**なのは\n\n[[迷信] scanf ではバッファオーバーランを防げない | 株式会社きじねこ](http://www.kijineko.co.jp/tech/superstitions/buffer-overrun-of-scanf.html)\n\n\u003escanf 系の関数では、整数や実浮動小数点数を読み込む際に、オーバーフローやアンダーフローが発生しても検知することができません。実引数で指定した格納先の型で、入力した数値を表現できない場合の動作は未定義なのです。\n\nすでに有名な話です。というわけでなんとかしていきましょう。\n\n# エラーを戻り値で返す(これはダメ)\n\nつまりfgetsとstrtol系関数を組み合わせることが唯一解となります。\n\nstrtol系関数は全部で以下のとおりです。\n\n| function name | type               |     |\n|---------------|--------------------|-----|\n| strtol        | long               |     |\n| strtoul       | unsigned long      |     |\n| strtoll       | unsigned long long | C99 |\n| strtoull      | unsigned long long | C99 |\n| strtof        | float              | C99 |\n| strtod        | double             |     |\n| strtold       | long double        | C99 |\n\nここに無い型はそれより大きい方から範囲チェックしたうえでキャストする必要があります。\n\n一部関数はC99以降となりますが、今時C99すら使えない糞環境無いよね？(煽り)\n\n```c\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003climits.h\u003e\n#include \u003cerrno.h\u003e\n\n/**\n * @brief 標準入力を数字に変換する。\n * @param max 戻り値の最大値\n * @param min 戻り値の最小値\n * @return 入力した数字、エラー時はINT_MIN, EOFのときはEOF\n */\nint get_integer_num(const int max, const int min){\n    char s[100];\n\n    if (NULL == fgets(s, 100, stdin)){\n        if (feof(stdin)){//エラーの原因がEOFか切り分け\n            return EOF;\n        }\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t i;\n        for(i = 0; i \u003c 100 \u0026\u0026 '\\0' == s[i]; i++);//strlenもどき\n        if('\\n' != s[i - 1]) while(getchar() != '\\n');//入力ストリームを掃除\n        return INT_MIN;\n    }\n    if ('\\n' == s[0]) return INT_MIN;\n    errno = 0;\n    char* endptr;\n    const long t = strtol(s, \u0026endptr, 10);\n    if (0 != errno || (0 == t \u0026\u0026 endptr == s) || t \u003c min || max \u003c t)\n        return INT_MIN;\n    return (int)t;\n}\n/**\n * @brief 標準入力を数字に変換する。\n * @param max 戻り値の最大値\n * @param min 戻り値の最小値\n * @return 入力した数字、エラー時は-2, EOFのときはEOF\n */\ndouble get_double_num(const double max, const double min){\n    char s[200];\n\n    if (NULL == fgets(s, 200, stdin)){\n        if (feof(stdin)){//エラーの原因がEOFか切り分け\n            return EOF;\n        }\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t i;\n        for(i = 0; i \u003c 100 \u0026\u0026 '\\0' == s[i]; i++);//strlenもどき\n        if('\\n' != s[i - 1]) while(getchar() != '\\n');//入力ストリームを掃除\n        return -2;\n    }\n    errno = 0;\n    char* endptr;\n    const double t = strtod(s, \u0026endptr);\n    if (0 != errno || (0 == t \u0026\u0026 endptr == s) || t \u003c min || max \u003c t)\n        return -2;\n    return t;\n}\n```\n\n# エラー時は再帰する(これもだめ)\n\nしかし戻り値としてエラーを通知すると、例えば上の場合``INT_MIN``が入力されたらエラーに成ってしまう、という問題があります。つまり結果とエラーを分離する必要があるわけです。\n\nかと言ってエラーコードを引数経由で返すのは冗長ですし、入力された値を引数経由で返すのは入力を受けた後constに変数をできないのでダメです。\n\nさて、こういう入力の時、多くの場合はエラーメッセージを吐いて再度入力を求めたいことが多いはず。ならば再帰しましょう。\n\n```c:C99\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003climits.h\u003e//in gcc\n#include \u003cerrno.h\u003e//in gcc\n#include \u003cstdbool.h\u003e\n/**\n * @brief 文字列が文字を持っているか調べます。\n * @param str 対象文字列へのポインタ\n * @return false: nullptrか空白文字のみの文字列 true:それ以外\n */\nstatic bool str_has_char(const char *str) {\n    bool ret = false;\n    for (; !ret \u0026\u0026 *str != '\\0'; str++)\n        ret = (*str != ' ');\n    return ret;\n}\n/**\n * @brief 標準入力から入力を受け、int型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時は再帰\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときはEOF\n */\nint input_int(const char* message, const int max, const int min){\n    if(str_has_char(message)) puts(message);\n    char s[100];\n\n    if (NULL == fgets(s, 100, stdin)){\n        if (feof(stdin)) return EOF;\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t i;\n        for(i = 0; i \u003c 100 \u0026\u0026 '\\0' == s[i]; i++);//strlenもどき\n        if('\\n' != s[i - 1]) while(getchar() != '\\n');//入力ストリームを掃除\n        return input_int(\"再入力してください\", max, min);\n    }\n    if ('\\n' == s[0]) return INT_MIN;\n    char* endptr;\n    const long t = strtol(s, \u0026endptr, 10);\n    if (0 != errno || (0 == t \u0026\u0026 endptr == s) || t \u003c min || max \u003c t)\n        return input_int(\"再入力してください\", max, min);\n    return (int)t;\n}\ntypedef unsigned int uint;\n/**\n * @brief 標準入力から入力を受け、unsigned int型に変換する\n * @details fgetsしてstrtoulしている。max, minの条件に合わないかエラー時は再帰\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときはEOF\n */\nuint input_uint(const char* message, const uint max, const uint min){\n    if(str_has_char(message)) puts(message);\n    char s[100];\n\n    if (NULL == fgets(s, 100, stdin)){\n        if (feof(stdin)) return EOF;\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t i;\n        for(i = 0; i \u003c 100 \u0026\u0026 '\\0' == s[i]; i++);//strlenもどき\n        if('\\n' != s[i - 1]) while(getchar() != '\\n');//入力ストリームを掃除\n        return input_uint(\"再入力してください\", max, min);\n    }\n    if ('\\n' == s[0]) return INT_MIN;\n    errno = 0;\n    char* endptr;\n    const unsigned long t = strtoul(s, \u0026endptr, 10);\n    if (0 != errno || (0 == t \u0026\u0026 endptr == s) || t \u003c min || max \u003c t)\n        return input_uint(\"再入力してください\", max, min);\n    return (uint)t;\n}\n/**\n * @brief 標準入力から入力を受け、double型に変換する\n * @details fgetsしてstrtodしている。max, minの条件に合わないかエラー時は再帰\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときはEOF\n */\ndouble input_double(const char* message, const double max, const double min){\n    if(str_has_char(message)) puts(message);\n    char s[100];\n\n    if (NULL == fgets(s, 100, stdin)){\n        if (feof(stdin)) return EOF;\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t i;\n        for(i = 0; i \u003c 100 \u0026\u0026 '\\0' == s[i]; i++);//strlenもどき\n        if('\\n' != s[i - 1]) while(getchar() != '\\n');//入力ストリームを掃除\n        return input_double(\"再入力してください\", max, min);\n    }\n    if ('\\n' == s[0]) return INT_MIN;\n    errno = 0;\n    char* endptr;\n    const double t = strtod(s, \u0026endptr);\n    if (0 != errno || (0 == t \u0026\u0026 endptr == s) || t \u003c min || max \u003c t)\n        return input_double(\"再入力してください\", max, min);\n    return t;\n}\n```\n\n# エラー時は関数内でループする(これもだめ)\n\nコメントで @yohhoy さんから\n\n\u003e蛇足ですが、「エラー時に再帰呼び出し」はスタックオーバーフロー攻撃への脆弱性になり得るため、同一関数内でのリトライ処理の方が良いかもしれませんね。\n\nとか言われたので、再帰じゃなくてループに書き直します。\n\nついでにEOFかどうかと戻り値も分離。そもそも再帰した理由がエラーコードと入力値を混ぜて戻り値で返すとか正気じゃない、ということだったはずなのになんでEOFは分離しなかった、過去の私。\n\nというわけでEOFかどうかは呼び出し元で``feof``関数を呼んで調べてください。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e\u003ca href=\"https://twitter.com/yohhoy\"\u003e@yohhoy\u003c/a\u003e そもそもEOFかどうかを戻り値で通知するのが無理だと悟った\u003c/p\u003e\u0026mdash; yumetodo-C++erだけど化学科 (@yumetodo) \u003ca href=\"https://twitter.com/yumetodo/status/781486373580648448\"\u003e2016年9月29日\u003c/a\u003e\u003c/blockquote\u003e\n\n\n\n```c:C99\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003climits.h\u003e//in gcc\n#include \u003cerrno.h\u003e//in gcc\n#include \u003cstdbool.h\u003e\n#include \u003cctype.h\u003e\n#include \u003cfloat.h\u003e\n#if defined(_MSC_VER) || defined(__cplusplus)\n#   define RESTRICT\n#else \n#   define RESTRICT restrict\n#endif\n/**\n * @brief 文字列が文字を持っているか調べます。\n * @param str 対象文字列へのポインタ\n * @return false: nullptrか空白文字のみの文字列 true:それ以外\n */\nstatic inline bool str_has_char(const char *str) {\n    if(NULL == str) return false;\n    bool ret = false;\n    for (; !ret \u0026\u0026 *str != '\\0'; str++) ret = (*str != ' ');\n    return ret;\n}\n/**\n * @brief 文字列が文字を持っているか調べます。\n * @param io 書き換えるbool型変数へのポインタ、呼び出し後はポインタが指す変数にnew_valueが代入される\n * @param new_value 新しい値\n * @return ioが指すbool変数がもともと持っていた値\n */\nstatic inline bool exchange_bool(bool* RESTRICT const io, const bool new_value){\n    const bool tmp = *io;\n    *io = new_value;\n    return tmp;\n}\n/**\n * @brief fgetsで失敗したときにストリームをクリアしてループする関数\n * @param s ストリームから読み取った文字列を格納するための領域へのポインタ\n * @param buf_size ストリームから読み取った文字列を格納するための領域の大きさ\n * @param stream FILE構造体へのポインタかstdin\n * @param message_on_error エラー時に表示してループする\n * @return 成功時は0, EOFのときはEOF\n */\nstatic inline int fgets_wrap(char* RESTRICT const s, size_t buf_size, FILE* RESTRICT const stream, const char* RESTRICT message_on_error){\n    bool first_flg = true;\n    size_t i;\n    for (i = 0; i \u003c 100 \u0026\u0026 NULL == fgets(s, buf_size, stream); ++i){\n        if (feof(stdin)) return EOF;\n        if (!exchange_bool(\u0026first_flg, false)) puts((message_on_error) ? message_on_error : \"再入力してください\");\n        //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n        size_t j;\n        for (j = 0; j \u003c 100 \u0026\u0026 '\\0' == s[j]; j++);//strlenもどき\n        if ('\\n' != s[j - 1]) while (fgetc(stream) != '\\n');//入力ストリームを掃除\n    }\n    if (100 == i) exit(1);//無限ループ防止\n    return 0;\n}\n/**\n * @brief 標準入力から入力を受け、int型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\nstatic inline int input_int(const char* message, const char* RESTRICT message_on_error, const int max, const int min){\n    if (str_has_char(message)) puts(message);\n    char s[100];\n    long t = 0;\n    size_t i = 0;\n    for(char* endptr = s; ((0 == t \u0026\u0026 endptr == s) || 0 != errno || t \u003c min || max \u003c t) \u0026\u0026 i \u003c 100; ++i){\n        if (0 != fgets_wrap(s, 100, stdin, message_on_error)) return 0;//EOF\n        if ('\\n' == s[0]) continue;//数字が入っていないときはループ\n        t = strtol(s, \u0026endptr, 10);\n    }\n    if (100 == i) exit(1);//無限ループ防止\n    return ((int)(t));\n}\n/**\n * @brief 標準入力から入力を受け、unsigned int型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\nstatic inline unsigned int input_uint(const char* message, const char* RESTRICT message_on_error, const unsigned int max, const unsigned int min){\n    if (str_has_char(message)) puts(message);\n    char s[100];\n    unsigned long t = 0;\n    size_t i = 0;\n    for(char* endptr = s; ((0 == t \u0026\u0026 endptr == s) || 0 != errno || t \u003c min || max \u003c t) \u0026\u0026 i \u003c 100; ++i){\n        if (0 != fgets_wrap(s, 100, stdin, message_on_error)) return 0;//EOF\n        if ('\\n' == s[0]) continue;//数字が入っていないときはループ\n        t = strtoul(s, \u0026endptr, 10);\n    }\n    if (100 == i) exit(1);//無限ループ防止\n    return ((unsigned int)(t));\n}\n/**\n * @brief 標準入力から入力を受け、double型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\nstatic inline double input_double(const char* message, const char* RESTRICT message_on_error, const double max, const double min){\n    if (str_has_char(message)) puts(message);\n    char s[100];\n    double t = 0;\n    size_t i = 0;\n    for(char* endptr = s; ((0 == t \u0026\u0026 endptr == s) || 0 != errno || t \u003c min || max \u003c t) \u0026\u0026 i \u003c 100; ++i){\n        if (0 != fgets_wrap(s, 100, stdin, message_on_error)) return 0;//EOF\n        if ('\\n' == s[0]) continue;//数字が入っていないときはループ\n        t = strtod(s, \u0026endptr);\n    }\n    if (100 == i) exit(1);//無限ループ防止\n    return t;\n}\n```\n\nループで書き直して、ついでに100回リトライすると強制的に``exit``するようにした。``restrict``の使い方があっているかは少し不安。\n\n# 長過ぎる入力に正しく対応する\n\n上のだと長過ぎる入力にうまく対応できていない。言い換えるとfgetsの扱い方に問題がある。\n\nまずfgetsは環境によっては長大な入力を受け取ったときに`errno`に`ERANGE(34)`に設定してくる。するとstrtol系関数のエラー捕捉のためにerrnoを見ていたが、これをbypassしないといけない。\n\nまた長大な入力のときにfgetsが戻り値NULLを通知すると勘違いしていたため、入力ストリームの整理部分が機能していなかった。\n\nというわけで直した。\n\nC言語の標準入力難しすぎでは？\n\n```c:C11\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n#include \u003climits.h\u003e\n#include \u003cerrno.h\u003e\n#include \u003cstdbool.h\u003e\n#include \u003cctype.h\u003e\n#include \u003cfloat.h\u003e\n#include \u003cassert.h\u003e\n#ifndef static_assert\n#   define NO_STDC_STATIC_ASSERT\n#   define static_assert(...)\n#endif\n#if defined(_MSC_VER) || defined(__cplusplus)\n#   define restrict\n#endif\n/**\n * @brief 文字列が文字を持っているか調べます。\n * @param str 対象文字列へのポインタ\n * @return false: nullptrか空白文字のみの文字列 true:それ以外\n */\nstatic inline bool str_has_char(const char *str)\n{\n    if (NULL == str) return false;\n    bool ret = false;\n    for (; !ret \u0026\u0026 *str != '\\0'; str++) ret = (*str != ' ');\n    return ret;\n}\n/**\n * @brief 文字列が文字を持っているか調べます。\n * @param io 書き換えるbool型変数へのポインタ、呼び出し後はポインタが指す変数にnew_valueが代入される\n * @param new_value 新しい値\n * @return ioが指すbool変数がもともと持っていた値\n */\nstatic inline bool exchange_bool(bool* restrict const io, const bool new_value)\n{\n    const bool tmp = *io;\n    *io = new_value;\n    return tmp;\n}\n/**\n * @brief fgetsで失敗したときにストリームをクリアしてループする関数\n * @param s ストリームから読み取った文字列を格納するための領域へのポインタ\n * @param buf_size ストリームから読み取った文字列を格納するための領域の大きさ\n * @param stream FILE構造体へのポインタかstdin\n * @param message_on_error エラー時に表示してループする\n * @return 成功時は0, new line at the end of fileのときは-1\n */\nstatic inline int fgets_wrap(char* restrict const s, size_t buf_size, FILE* restrict const stream, const char* restrict message_on_error)\n{\n    size_t i = 0;\n    for (bool first_flg = true; i \u003c 100 \u0026\u0026 NULL == fgets(s, buf_size, stream); ++i) {\n        if (feof(stdin)) return -1;\n        if (!exchange_bool(\u0026first_flg, false)) puts((message_on_error) ? message_on_error : \"再入力してください\");\n    }\n    if (100u == i) exit(1);//無限ループ防止\n    if (feof(stdin)) return 0;\n    //改行文字が入力を受けた配列にない場合、入力ストリームにごみがある\n    const size_t len = strlen(s);\n    //短すぎる入力\n    if (0 == len || (1 == len \u0026\u0026 '\\n' == s[0])) return 1;\n    //長過ぎる入力\n    if ('\\n' != s[len - 1]) {\n        //入力ストリームを掃除\n        while (fgetc(stream) != '\\n');\n        return 2;\n    }\n    return 0;\n}\n/**\n * @brief 標準入力から入力を受け、int型に変換する\n * @details fgetsしてstrtoulしている。max, minの条件に合わないかエラー時はループ\n * @details errnoの値を書き換える\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\nstatic inline int input_int(const char* message, const char* restrict message_on_error, const int max, const int min)\n{\n    if (str_has_char(message)) puts(message);\n    char s[30];\n    static_assert(sizeof(int) \u003c 8, \"err\");\n    long t = 0;\n    size_t i = 0;\n    for (char* endptr = s; ((0 == t \u0026\u0026 endptr == s) || 0 != errno || t \u003c min || max \u003c t) \u0026\u0026 i \u003c 100u; ++i) {\n        //長過ぎる入力以降の無限ループ防止にerrnoをクリアする\n        errno = 0;\n        switch (fgets_wrap(s, sizeof(s), stdin, message_on_error)) {\n        case -1: return 0;//EOF\n        case 1://短すぎる入力\n        case 2://長過ぎる入力\n            endptr = s;//ループ制御フラグとして流用\n            continue;\n        default: break;\n        }\n        t = strtol(s, \u0026endptr, 10);\n    }\n    if (100u == i) exit(1);//無限ループ防止\n    return ((int)(t));\n}\n/**\n * @brief 標準入力から入力を受け、unsigned int型に変換する\n * @details fgetsしてstrtodしている。max, minの条件に合わないかエラー時はループ\n * @details errnoの値を書き換える\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\nstatic inline unsigned int input_uint(const char* message, const char* restrict message_on_error, const unsigned int max, const unsigned int min)\n{\n    if (str_has_char(message)) puts(message);\n    char s[30];\n    static_assert(sizeof(unsigned int) \u003c 8, \"err\");\n    unsigned long t = 0;\n    size_t i = 0;\n    for (char* endptr = s; ((0 == t \u0026\u0026 endptr == s) || 0 != errno || t \u003c min || max \u003c t) \u0026\u0026 i \u003c 100u; ++i) {\n        //長過ぎる入力以降の無限ループ防止にerrnoをクリアする\n        errno = 0;\n        switch (fgets_wrap(s, sizeof(s), stdin, message_on_error)) {\n        case -1: return 0;//EOF\n        case 1://短すぎる入力\n        case 2://長過ぎる入力\n            endptr = s;//ループ制御フラグとして流用\n            continue;\n        default: break;\n        }\n        t = strtoul(s, \u0026endptr, 10);\n    }\n    if (100 == i) exit(1);//無限ループ防止\n    return ((unsigned int)(t));\n}\n/**\n * @brief 標準入力から入力を受け、double型に変換する\n * @details fgetsしてstrtolしている。max, minの条件に合わないかエラー時はループ\n * @details errnoの値を書き換える\n * @param message 入力を受ける前にputsに渡す文字列。表示しない場合はnullptrか空白文字のみで構成された文字列へのポインタを渡す\n * @param message_on_error エラー時に表示してループする\n * @param max 入力値を制限する。最大値を指定\n * @param min 入力値を制限する。最小値を指定\n * @return 入力した数字、EOFのときは0\n */\nstatic inline double input_double(const char* message, const char* restrict message_on_error, const double max, const double min)\n{\n    if (str_has_char(message)) puts(message);\n    char s[100];\n    double t = 0;\n    size_t i = 0;\n    for(char* endptr = s; ((0 == t \u0026\u0026 endptr == s) || 0 != errno || t \u003c min || max \u003c t) \u0026\u0026 i \u003c 100; ++i){\n        //長過ぎる入力以降の無限ループ防止にerrnoをクリアする\n        errno = 0;\n        switch (fgets_wrap(s, sizeof(s), stdin, message_on_error)) {\n        case -1: return 0;//EOF\n        case 1://短すぎる入力\n        case 2://長過ぎる入力\n            endptr = s;//ループ制御フラグとして流用\n            continue;\n        default: break;\n        }\n        t = strtod(s, \u0026endptr);\n    }\n    if (100 == i) exit(1);//無限ループ防止\n    return t;\n}\n#ifdef NO_STDC_STATIC_ASSERT\n#   undef static_assert\n#   undef NO_STDC_STATIC_ASSERT\n#endif\n```\n\n# 使い方\n\n```c:C99\nint main(void)\n{\n    const int in = input_int(\"値を入力してください\", NULL, INT_MAX, INT_MIN);\n\n    //do something\n\n    for(int tmp; tmp = input_int(\"値を入力してください\", NULL, INT_MAX, INT_MIN) || !feof(stdin);){\n        printf(\"input \u003e %d\", tmp);\n    }\n    return 0;\n}\n```\n\n# 結論\n\nC言語で標準入出力ってラスボスの一つじゃないか説\n\n# 追記: strtol系関数のエラーハンドリング\n\nC11規格書によれば\nhttp://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\n\n\n\u003e7.22.1.4 The strtol, strtoll, strtoul, and strtoull functions\nSynopsis\n\n\u003e1 \n\n\u003e```c\n#include \u003cstdlib.h\u003e\nlong int strtol(\nconst char * restrict nptr,\nchar ** restrict endptr,\nint base);\nlong long int strtoll(\nconst char * restrict nptr,\nchar ** restrict endptr,\nint base);\nunsigned long int strtoul(\nconst char * restrict nptr,\nchar ** restrict endptr,\nint base);\nunsigned long long int strtoull(\nconst char * restrict nptr,\nchar ** restrict endptr,\nint base);\n```\n\n\u003e7 If the subject sequence is empty or does not have the expected form, **no conversion is\nperformed; the value of nptr is stored in the object pointed to by endptr**, provided\nthat endptr is not a null pointer.\nReturns\n\n\u003e8 The strtol, strtoll, strtoul, and strtoull functions return the converted\nvalue, if any. **If no conversion could be performed, zero is returned.** If the correct value\nis outside the range of representable values, LONG_MIN, LONG_MAX, LLONG_MIN,\nLLONG_MAX, ULONG_MAX, or ULLONG_MAX is returned (according to the return type\nand sign of the value, if any), and the value of the macro ERANGE is stored in errno.\n\nとなっているから、``errno``の値などを確認するだけでは不充分で``endptr``も渡して見ないといけないのか。知らなかった。\n\n# 追記: strtodのエラーハンドリング\n\n基本的には上の通りなのだが、underflowsが起こったかをportableに知る方法はない。何故かと言うと\n\n\u003e//§7.22.1.3 (N1570)\n\u003eIf the result underflows (7.12.1)\n\u003e(中略)\n\u003e; whether errno acquires the value ERANGE is implementation-defined.\n\nERANGEになるかが実装依存だからだ。\n\n# 類似の記事\n\n今更ながらネタ被りしている記事を見つけてしまった。`C言語タグ`ではなく`C`タグしか見てなかったから気が付かなかった・・・\n\n[標準入力から安全に文字列を受け取る方法いろいろ](http://qiita.com/mpyw/items/aff12a6ff2c7726ed1d8)\n\nまあ結果的に同じアプローチになりますよね。\n","coediting":false,"comments_count":13,"created_at":"2016-01-22T10:59:59+09:00","group":null,"id":"238751b879c09b56234b","likes_count":43,"private":false,"reactions_count":0,"tags":[{"name":"C","versions":[]},{"name":"C言語","versions":[]},{"name":"stdin","versions":[]}],"title":"C言語で安全に標準入力から数値を取得","updated_at":"2019-01-14T21:11:27+09:00","url":"https://qiita.com/yumetodo/items/238751b879c09b56234b","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"c初心者advent-calendar-2015\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%BF%83%E8%80%85advent-calendar-2015\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++初心者Advent Calendar 2015\u003c/h1\u003e\n\n\u003cp\u003eこの記事は\u003ca href=\"http://www.adventar.org/calendars/922\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++初心者Advent Calendar 2015\u003c/a\u003e 17日目の記事です\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/bd41f31f39dd590e8c80\" id=\"reference-f48ad02257c4f005d7b8\"\u003e\u0026lt;\u0026lt;9日目  ｜Clang with Microsoft CodeGenがでたので試す\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://srz-zumix.blogspot.jp/2015/12/boosttest-v3.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u0026lt;\u0026lt;16日目 | ブログズミ: Boost.Test v3 を使ってみた\u003c/a\u003e || \u003ca href=\"https://blog.myon.info/blog/2015-12-18/avoid-defining-macros/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e18日目 | それC++なら#defineじゃなくてもできるよ | とさいぬの隠し部屋 \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003eみなさま、ナマステ。さて、この記事のタイトルを見て、「時代・・・\u003cstrong\u003eサトウキビ\u003c/strong\u003e・・・\u003ca href=\"http://www.nicovideo.jp/user/5006073\" rel=\"nofollow noopener\" target=\"_blank\"\u003e忍者\u003c/a\u003e・・・うぅ、頭が」となった人は私と趣味が似ています・・・って話はどうでもいいか。\u003c/p\u003e\n\n\u003cp\u003eよく、「C++はBetter Cとしてはじめればいい」みたいな話を聞くのでそれにそって一気にC++14まで駆け抜けようと思います。\u003c/p\u003e\n\n\u003cp\u003eちなみにC99を知らない人はお断りです。さようなら。\u003c/p\u003e\n\n\u003cp\u003eでははじめますか。\u003c/p\u003e\n\n\u003cp\u003eしっかし書き終わってから思った。\u003cstrong\u003eなぜ複数の記事に分割しなかったし\u003c/strong\u003e\u003cbr\u003e\nというわけで、超長文です。すみません。そのうち単独の記事も出します、きっと。\u003c/p\u003e\n\n\u003cp\u003eところで、実はホッとしておりまして、なにかというと、前日のsrz-zumixさんの記事が\u003cstrong\u003eちっとも初心者向けじゃない\u003c/strong\u003eんですよ。\u003cstrong\u003e初心者はBoostなんて使えません!!\u003c/strong\u003e\u003cbr\u003e\n書き終わってから投稿に気が付いたんですが。この記事の後半は初心者向けじゃないなぁと思っていたのですが、それみて「\u003cstrong\u003eこれよりは初心者向けだわー\u003c/strong\u003e」といった感じです。\u003c/p\u003e\n\n\u003cp\u003e個人的には、\u003ca href=\"https://ezoeryou.github.io/blog/article/2015-05-18-kabukiza-tech-8.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e歌舞伎座.tech #8 「C++初心者会」\u003c/a\u003eとか見て以降、「初心者」が怖くなってしまっていましたが(\u003ca href=\"http://www.shigemk2.com/entry/kbkz_tech.8.3\" rel=\"nofollow noopener\" target=\"_blank\"\u003e初心者がBoost.asioをつかえるもんか！\u003c/a\u003e)、さらに怖くなりました。初心者怖い。(srz-zumixさんすみません)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"0で初期化をやめよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0%E3%81%A7%E5%88%9D%E6%9C%9F%E5%8C%96%E3%82%92%E3%82%84%E3%82%81%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e=0で初期化をやめよう\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"0初期化は妥当か\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%AF%E5%A6%A5%E5%BD%93%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e0初期化は妥当か？\u003c/h2\u003e\n\n\u003cp\u003eさて、初期化と聞くと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//static/thread_localな変数は0初期化される\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//変数fooを0初期化\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"c1\"\u003e//変数hogeの最初のメンバ変数aを0で初期化、それ以外のメンバ変数(=メンバ変数b)をstatic変数と同じ方法で初期化(=0初期化)\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//略\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eみたいに、0初期化を浮かべる人が多いかもしれませんが、初期化はそれだけではありません。\u003c/p\u003e\n\n\u003cp\u003eそもそも\u003cstrong\u003e初期化とは、変数などの状態をプログラマにとって既知にすること\u003c/strong\u003eで、\u003cstrong\u003e断じて0にすることと同義ではありません\u003c/strong\u003e。どういうことでしょう？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdlib.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//変数fooを2で初期化\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003en_p\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emalloc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e//変数n_pをmalloc関数で割り当てたメモリー領域へのポインタで初期化\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en_p\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xcc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e//変数n_pをmalloc関数で割り当てたメモリー領域を0xCCで全byte埋めて初期化\u003c/span\u003e\n  \u003cspan class=\"n\"\u003efree\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en_p\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e一般に初期化は、変数の読み出し操作の前に、変数の状態をプログラマーから既知にするために行います。static/thread_localな変数\u003cstrong\u003e以外\u003c/strong\u003eの変数は初期化子を書かない場合デフォルト初期化されますが、この時、クラス型ではないもしくは配列型で要素型がクラス型ではない変数(ex.)int型のような組み込み型やそのポインタ型のint*型、int[5]のような配列型)は\u003cstrong\u003e初期化が行われません(=値が不定)\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e値が不定だと困るので初期化子を書くわけですが、この時0初期化することが多いの、はxor命令に帰結させたりmemsetの呼び出しに最適化できたりするために一般に高速なためであって、なにも0でなくとも初期化には違いないわけです。\u003c/p\u003e\n\n\u003cp\u003eなお\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようにするコードをたまに見かけますが、わざわざmemsetを自分で書かなくても\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eで十分です。現代のコンパイラはmemsetの呼び出しに最適化できます。\u003c/p\u003e\n\n\u003cp\u003eまたC++の場合は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eで十分だったりします。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"0で初期化できない例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0%E3%81%A7%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e=0で初期化できない例\u003c/h2\u003e\n\n\u003cp\u003e=0と書く初期化は次のようなものです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eしかしこれはCなら構造体、C++ならクラスには適用できません\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"c1\"\u003e//Hoge hoge = 0;//NG\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"0初期化するべきではない場面\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%99%E3%82%8B%E3%81%B9%E3%81%8D%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%84%E5%A0%B4%E9%9D%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e0初期化するべきではない場面\u003c/h2\u003e\n\n\u003cp\u003ememsetで0初期化もよく見かけます。これはどうでしょうか？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ec99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eHoge\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHoge\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eC99では問題ありませんでした。しかしC++にはクラスがあります。\u003cbr\u003e\nここで次のようなクラスを見てみましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;cstring\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \"hexdumper.hpp\"\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHexa\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHexa\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003estr_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003eHexa\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evirtual\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003esetStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e){}\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprotected:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003estr_\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mh\"\u003e0x10\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHexa2\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eHexa\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHexa2\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eHexa\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003eHexa2\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003esetStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"k\"\u003eoverride\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estrcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estr_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s\"\u003e\"hexadrive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003edrawStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estr_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003edrawStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003estr_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHexa2\u003c/span\u003e \u003cspan class=\"n\"\u003ehexa\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"before memset\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehexdump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehexa\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHexa2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003epHexa\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ehexa\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epHexa\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHexa2\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"after memset\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehexdump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehexa\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003epHexa\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003esetStr\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// ここでクラッシュする\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003epHexa\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003edrawStr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ehexdump\u003c/code\u003eは自作関数です。\u003c/p\u003e\n\n\u003cp\u003e仮想関数がある派生クラスに対してmemsetを用いた例です。仮想関数である\u003ccode\u003esetStr\u003c/code\u003eは呼び出せず、手元の環境ではSegmentation faultしました。なぜでしょうか？\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://wandbox.org/permlink/0aoTnoyqgYaJd9Z6\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://wandbox.org/permlink/0aoTnoyqgYaJd9Z6\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e実行結果\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ebefore memset\n Address | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | 123456789ABCDEF\n---------+-------------------------------------------------+----------------\n00000000 | 00 19 40 00 00 00 00 00 61 72 69 6B 69 74 61 72 | .@.....arikitar\n00000010 | 69 00 00 00 00 00 00 00                         | i.......\n\nafter memset\n Address | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | 123456789ABCDEF\n---------+-------------------------------------------------+----------------\n00000000 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................\n00000010 | 00 00 00 00 00 00 00 00                         | ........\n\nSegmentation fault\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003ememsetの前後でclass変数を自作したhexdump関数でダンプしてみました。このコードの処理系では、仮想関数をvtableと呼ばれるもので実装しているようで(というかそれ以外の実装あるの？)、\u003ccode\u003e00000000\u003c/code\u003e～\u003ccode\u003e00000007\u003c/code\u003eの範囲がどうも該当しているようです。memsetによってこの部分が吹き飛ばされてしまうため、仮想関数である\u003ccode\u003esetStr\u003c/code\u003eの実行コードのあるアドレスが消え、結果としてヌルポしているようです。\u003c/p\u003e\n\n\u003cp\u003eまた、コンストラクタでメンバ変数\u003ccode\u003estr_\u003c/code\u003eに与えた\u003ccode\u003earikitari\u003c/code\u003eという文字列も吹き飛んでいます。せっかくデフォルトコンストラクタで初期化したのに、memsetで2重の初期化をしてしまっているわけです。\u003c/p\u003e\n\n\u003cp\u003eクラス変数の初期化memsetを使いたい場合は最低でもstandard-layout class(trivially copyable classである必要はあったっけ？)、一般にはPODクラスであるべきで、\u003cstrong\u003ePODとは何かがわからないうちは、memsetをクラス変数に使うのはご法度とおぼえておくべきです。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cpplover.blogspot.jp/2010/06/c0xpod.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e本の虫: C++0xにおけるPODの定義\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://torini.hateblo.jp/entry/2015/03/08/C%2B%2B%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%AF%E5%88%86%E3%81%8B%E3%82%8A%E3%81%AB%E3%81%8F%E3%81%84\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++の初期化は分かりにくい - ぷろみん\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cpp.aquariuscode.com/plain-old-data\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePlain Old Data | 闇夜のC++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"統一初期化構文universal-initializationuniform-initializationで初期化しよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%B1%E4%B8%80%E5%88%9D%E6%9C%9F%E5%8C%96%E6%A7%8B%E6%96%87universal-initializationuniform-initialization%E3%81%A7%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%97%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e統一初期化構文(Universal Initialization/Uniform Initialization)で初期化しよう\u003c/h2\u003e\n\n\u003cp\u003eじゃあどうすればいいのでしょうか。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://dev.activebasic.com/egtra/2015/12/02/845/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e統一初期化・リスト初期化の見本帳 - イグトランスの頭の中\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dev.activebasic.com/egtra/2015/12/03/847/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e波括弧の初期化があって嬉しいとき - イグトランスの頭の中\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cpplover.blogspot.jp/2010/09/aggregate.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eaggregateと初期化リストの不思議 | 本の虫\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cpplover.blogspot.jp/2010/09/blog-post_18.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e多くのプログラマは言語を表面的な理解だけで使っている | 本の虫\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cpplover.blogspot.jp/2010/03/initializer-list.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003einitializer listの解説\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cpplover.blogspot.jp/2014/10/c14_2.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++14の新機能: メンバー初期化子と初期化リストの組み合わせ | 本の虫\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yohhoy/20120724/p1\" rel=\"nofollow noopener\" target=\"_blank\"\u003evector/arrayとUniform initialization+Initializer list - yohhoyの日記\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#dcl.init\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11: Syntax and Feature#8.5 初期化子（Initializers）\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eはい、2日目、3日目でも解説がありましたし、本の虫にもありますね。統一初期化構文(Universal Initialization/Uniform Initialization)を使えばいいです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e結論\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep3\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e{{}}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようにかけます。\u003c/p\u003e\n\n\u003cp\u003e後述するtemplateと組み合わせて、任意の型をstatic storageと同じように初期化したいときとかは統一初期化構文一択だったりします。\u003c/p\u003e\n\n\u003cp\u003eまあしかし、実際の運用では常に使うというわけではなく、使うべきでない場面というのもあります。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/h2suzuki/items/d033679afde821d04af8\" id=\"reference-318e659cb8d9ccaa1aec\"\u003eC++11 Universal Initialization は、いつでも使うべきなのか\u003c/a\u003e\u003cbr\u003e\nを読んでみると良いでしょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"stdcoutとprintf\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdcout%E3%81%A8printf\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estd::coutとprintf\u003c/h1\u003e\n\n\u003cp\u003eC++でなんか出力と言われたらやっぱり\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eありきたり\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari_na_world!\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eですよね。なんでprintfが好まれないのか見ていきましょう。\u003c/p\u003e\n\n\u003cp\u003eそもそもprintfのプロトタイプ宣言は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eprintf\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003eprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"format指定と型安全\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#format%E6%8C%87%E5%AE%9A%E3%81%A8%E5%9E%8B%E5%AE%89%E5%85%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eformat指定と型安全\u003c/h2\u003e\n\n\u003cp\u003e例えば\u003ccode\u003estdint.h\u003c/code\u003e/\u003ccode\u003ecstdint\u003c/code\u003eにある\u003ccode\u003eint64_t\u003c/code\u003e型を表示させたい場合、どうすればいいでしょうか？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC99\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdint.h\u0026gt;\n#include \u0026lt;stdio.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4288957324576\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//どっち？\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%lld\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%I64d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこの2つを\u003ccode\u003e#if\u003c/code\u003eつかって分けるというコードを書かねばならないのでしょうか？\u003cbr\u003e\nもちろんそんなことはなく、標準にそれをやってくれるマクロがあります。\u003ccode\u003e#define __STDC_FORMAT_MACROS\u003c/code\u003e \u0026amp; \u003ccode\u003e#include \u0026lt;inttypes.h\u0026gt;\u003c/code\u003e (C99) / \u003ccode\u003e#include \u0026lt;cinttypes\u0026gt;\u003c/code\u003e (C++11) のマクロをつかって、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eコメントでもらったコード\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdint.h\u0026gt;\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;inttypes.h\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4288957324576\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%\"\u003c/span\u003e \u003cspan class=\"n\"\u003ePRId64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこう書くことはできますが、文字列が(マクロで連結されますが)とぎれて見えます。これはなかなかみにくいんじゃないでしょうか(私見)。\u003cstrong\u003eちなみに、文字列リテラルとマクロの間にスペースを入れ忘れると、C++11の機能であるUDLsと誤認されます\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e問題は\u003cstrong\u003eさらに深い\u003c/strong\u003eです。format指定することの利点は出力されるものがわかりやすいということになりますが、対応させるべき型が無限に存在する場合、\u003cstrong\u003e無限通りのformatが必要になります\u003c/strong\u003e。恐ろしや。STLに入っている型のうち対応させるべきものだけでもいくつあるんですかね、覚えられるか。\u003c/p\u003e\n\n\u003cp\u003eさらに型安全なものにしようとしたら、つまり、\u003cstrong\u003eformat指定が適切かを調べコンパイルエラーにするには、どれだけ苦労しなければならないのでしょうか\u003c/strong\u003e。先のようなマクロもたくさん必要になります。\u003c/p\u003e\n\n\u003cp\u003eそれでも型安全printfをつくるべく立ち向かう人たちは後を立ちません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;string\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003eint64_t\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4288957324576\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003etemplateが使えるおかげで、膨大な型全てに対応できました。formatがあるから面倒なんだ、という論法ですね。\u003c/p\u003e\n\n\u003cp\u003eただし、iostreamいいぞ、という書き方をしましたが、正直に言うと設計が古すぎて、作り直すべきという声もC++聞こえてきます。\u003c/p\u003e\n\n\u003cp\u003eああ、ちなみに\u003ca href=\"https://github.com/fmtlib/fmt\" rel=\"nofollow noopener\" target=\"_blank\"\u003efmtlib/fmt\u003c/a\u003eというライブラリがあって、高速かつC#に近いSyntaxで書けます。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/advent-calendar/2014/cpp\"\u003eC++ Advent Calendar 2014\u003c/a\u003eの17日目の記事である\u003cbr\u003e\n\u003ca href=\"http://rhysd.hatenablog.com/entry/2014/12/17/000053\" rel=\"nofollow noopener\" target=\"_blank\"\u003e今年気になった C++ ライブラリとかフレームワークを紹介する記事 - はやくプログラムになりたい\u003c/a\u003e\u003cbr\u003e\nに紹介があります。2017/02/02現在も活発に開発されているようです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003efmtlib/fmt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Hello, {}!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"world\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// =\u0026gt; Hello, world!\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efmt\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"{0}{1}{0}\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"abra\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"cad\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// s == \"abracadabra\"\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"auto\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#auto\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eauto\u003c/h1\u003e\n\n\u003cp\u003eいわゆる型推論ですね。\u003ca href=\"http://d.hatena.ne.jp/nowokay/20131224\" rel=\"nofollow noopener\" target=\"_blank\"\u003eどこぞの\u003c/a\u003e\u003ca href=\"http://cpplover.blogspot.jp/2009/11/java-7.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e糞言語\u003c/a\u003e\u003ca href=\"http://docs.oracle.com/javase/jp/8/docs/technotes/guides/language/type-inference-generic-instance-creation.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e(Java)\u003c/a\u003eを除けば、型推論は右辺の型から左辺の型を推測するものです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//int型、2になる\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e組み込み型くらいはauto使わないほうがいいですが、\u003ccode\u003estd::array::iterator\u003c/code\u003eとか\u003ccode\u003estd::vector\u0026lt;std::vector\u0026lt;int\u0026gt;\u0026gt;::iterator\u003c/code\u003eとかわけわかめな長さの型が使われるので必須機能です。\u003cbr\u003e\nあ、あとTMPする時・・・(ry\u003c/p\u003e\n\n\u003cp\u003eこの辺はいなむ先生が、\u003ca href=\"http://www.adventar.org/calendars/926\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++アドベントカレンダー\u003c/a\u003e12日目で\u003cbr\u003e\n\u003ca href=\"http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e\" id=\"reference-aeb2d68d26af1f85354a\"\u003eC++のつまずきポイント解説\u003c/a\u003e\u003cbr\u003e\n詳しく書いているので、少し難し目ですがぜひ読んでみてください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"stdpair\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdpair\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estd::pair\u003c/h1\u003e\n\n\u003cp\u003eさて、こいつはなにかと便利です。純粋に２つの変数をまとめるだけのものです\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003ePAIR\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eみたいなものを二度と書かなくて良くなります。２つペアのものって多いですからね。座標とか、画像の大きさとかetc...\u003c/p\u003e\n\n\u003cp\u003e専用のクラスを書くまでもないときに重宝します。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/yumetodo/items/600ca0df422010cbc4c1\" id=\"reference-099b1483fe8b5fc7a05e\"\u003eC++でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003cbr\u003e\nここでは\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eマイナンバー\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;utility\u0026gt;\n#include \u0026lt;numeric\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;cctype\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"n.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eaccumulate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erbegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eisdigit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"n.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003efirstを合計、secoundをループカウントに使いました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"stdarray\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdarray\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estd::array\u003c/h1\u003e\n\n\u003cp\u003e配列です。説明は以上です。\u003cbr\u003e\n・・・嘘です。\u003c/p\u003e\n\n\u003cp\u003eCにも配列があって\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#ifndef _countof\n#define _countof( arr ) ( sizeof(arr) / sizeof(arr[0]))\n#endif\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003e_countof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d,\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんなコードを書いたことはあると思います。ちなみにこれC++だと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこう書けます。\u003ccode\u003estd::begin\u003c/code\u003eと\u003ccode\u003estd::end\u003c/code\u003eが配列にも使えるんですね。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estd::array\u003c/code\u003eを使うと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;array\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eで、Cの配列ではなく\u003ccode\u003estd::array\u003c/code\u003eを使うメリットは、\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eback()\u003c/code\u003e(最後の要素を取得)や\u003ccode\u003esize()\u003c/code\u003e(配列の大きさを取得)が使える\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e式中でポインタとみなされない\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e式中でポインタとみなされないとはどういうこっちゃ？ですが、例えばCで要素型がint型の配列の全要素を表示する関数を作ることを考えてください。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC版の配列全要素を表示関数\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003earray_print\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d, \"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eCでは御存知の通り、\u003cstrong\u003e配列は3つの例外を除き、常にポインタに読み替えられます\u003c/strong\u003e。3つの例外の1つは\u003ccode\u003esizeof\u003c/code\u003e演算子を使う場合ですが、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[])\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e//arrはint*型\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"%d\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e//arrはint[5]型\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこのように、要素数の型データが消えてしまうわけです。\u003c/p\u003e\n\n\u003cp\u003eC++を使えばもうすこしマシに書けます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstddef\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//arrはconst int (\u0026amp;)[5]型\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003esizeof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//arrは//arrはint[5]型\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eしかし、参照として渡されてもそれを取り回すのがわりと面倒です。また戻り値として指定できないことには代わりありません。\u003c/p\u003e\n\n\u003cp\u003eそこで\u003ccode\u003estd::array\u003c/code\u003eです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;array\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eすっきり。\u003c/p\u003e\n\n\u003cp\u003eCを長くやっていた人なら、構造体のなかに配列のみをもたせたものを作った経験があるかもしれませんが、まさにそういう実装になっています。\u003c/p\u003e\n\n\u003cp\u003eなお\u003ccode\u003esize()\u003c/code\u003eは明日のmyon___氏が記事で書いてくれるかもしれませんが、\u003ccode\u003econstexpr\u003c/code\u003e関数なのでコンパイル時に値が決定します。どこぞの\u003ca href=\"http://boleros.hateblo.jp/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e陶芸家で中３女子\u003c/a\u003eな人が喜びそう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"range-based-for\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#range-based-for\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRange-based for\u003c/h1\u003e\n\n\u003cp\u003eRange-based forとはCの配列と、\u003ccode\u003ebegin()\u003c/code\u003e/\u003ccode\u003eend()\u003c/code\u003eメンバ関数をもつクラス型と(特殊な?)ADLで\u003ccode\u003ebegin()\u003c/code\u003e/\u003ccode\u003eend()\u003c/code\u003e関数が見つかる型にのみ提供できるfor文です。いわゆるforeachですね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eRange-based_for不使用\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eRange-based_for使用\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eRange-based_for不使用\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;array\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれが\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eRange-based_for使用\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;array\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこう書けます。\u003ccode\u003eauto\u0026amp;\u0026amp;\u003c/code\u003eってのはRange-based_forを使う際のおまじないです。ループ内でループ対象を書き換えないなら\u003ccode\u003econst auto\u0026amp;\u003c/code\u003eのほうがいいかもしれませんが、前者の方が\u003cstrong\u003e汎用的なのでよくわからない時は前者を使えばいい\u003c/strong\u003eと思います。おまじないの原理は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/rinse_/items/cdfce8aa6a685a8ebe0c\" id=\"reference-5b8e7745963cbe5641dc\"\u003erange-based for loopsの要素の型について\u003c/a\u003e\u003cbr\u003e\nとコメントを参照してください。この下で話すReferenceの種類と参照できるものが関係します。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"reference\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#reference\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eReference\u003c/h1\u003e\n\n\u003cp\u003e参照、と言ったほうが聞いたことがあるかもしれません。\u003cstrong\u003eReferenceとはすでにある値に対し別名をつける機能です。\u003c/strong\u003e\u003cbr\u003e\nで、Referenceですが、大きくわけてlvalue referenceとrvalue referenceがあります。\u003c/p\u003e\n\n\u003cp\u003eで、この2つにどんな差があるのか、ですが、参照できるものの型を除けば\u003cstrong\u003eなにも違いはありません\u003c/strong\u003e。よくrvalue referenceはlvalue referenceと全く異なる、と考えて違いを考えすぎるあまり、わけわかめになる人がいますが、Referenceには違いないのです。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e種類\u003c/th\u003e\n\u003cth\u003e参照できるもの\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003elvalue reference(T\u0026amp;)\u003c/td\u003e\n\u003ctd\u003elvalue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003econst lvalue reference(const T\u0026amp;)\u003c/td\u003e\n\u003ctd\u003e\u003cstrong\u003eなんでも\u003c/strong\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ervalue reference (T\u0026amp;\u0026amp;)\u003c/td\u003e\n\u003ctd\u003ervalue\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003econst rvalue reference(const T\u0026amp;\u0026amp;)\u003c/td\u003e\n\u003ctd\u003econst rvalue\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eReferenceの例\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e \u003cspan class=\"nf\"\u003emake_Test\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eTest\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea_lr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea_clr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//int\u0026amp; b_lr = b;//NG\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eb_clr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et_lr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et_rr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et_clr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et_crr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_Test\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003et_clr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_Test\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//OK\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eという感じで、\u003ccode\u003econst lvalue reference\u003c/code\u003eが無双というか最強なので、rvalue referenceはあまり出番がありません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rvalue-referenceをムーブに使う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rvalue-reference%E3%82%92%E3%83%A0%E3%83%BC%E3%83%96%E3%81%AB%E4%BD%BF%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ervalue referenceをムーブに使う\u003c/h2\u003e\n\n\u003cp\u003e追記: \u003cstrong\u003eさらに明快な解説を書きました\u003c/strong\u003e\u003cbr\u003e\n\u003ca href=\"https://qiita.com/yumetodo/items/8eae5714a6cfe1c0407d\" id=\"reference-c46eba5520e80caa35ab\"\u003eみんなlvalueとrvalueを難しく考えすぎちゃいないかい？\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eさて、ざっとconstの有無を含めて4つのreferenceがあったわけですが、rvalue referenceに出番が無いかというとそんなことはありません。まあ他にもありますが、最も一般的な例であるrvalue referenceの用途、moveを紹介します。\u003c/p\u003e\n\n\u003cp\u003e実質的な機能は同じでも\u003cstrong\u003e型は違います\u003c/strong\u003e。また、それぞれ\u003cstrong\u003e優先順位があります\u003c/strong\u003e。ということは、関数のオーバーロードで型を変えれば呼び分けができるとうことです。\u003cbr\u003e\n優先順位の詳細は\u003cbr\u003e\n\u003ca href=\"http://fimbul.hateblo.jp/entry/2013/12/22/015912\" rel=\"nofollow noopener\" target=\"_blank\"\u003econst rvalue referenceは何に使えばいいのか - ここは匣\u003c/a\u003e\u003cbr\u003e\nを参照していただくとして、簡単な例を見ましょう。・・・クラスがなにかの説明は省きます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eなんちゃってstringクラス\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;cstring\u0026gt;\n#include \u0026lt;cstddef\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003einferior_string\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"nl\"\u003epublic:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estrlen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy constructor\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e]();\u003c/span\u003e\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ememcpy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"c1\"\u003e//move constructor\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//disable input object's destructor. DO NO FORGEET!!!\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nl\"\u003eprivate:\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003em_s_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003em_len_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003em_capacity_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"k\"\u003eoperator\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eostream\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eos\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//copy constructor call\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//move constructor call\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//inferior_string str3 = static_cast\u0026lt;inferior_string\u0026amp;\u0026amp;\u0026gt;(str);//同じ意味\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/Ame2XHIjS0oB0oLW\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/Ame2XHIjS0oB0oLW\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこの場合、\u003ccode\u003econst inferior_string\u0026amp;\u003c/code\u003eより\u003ccode\u003einferior_string\u0026amp;\u0026amp;\u003c/code\u003eのほうが、オーバーロードの優先順位が高いので、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれはinferior_string\u0026amp;\u0026amp;を受け取る、move constructorが呼ばれます。ただし、このキャストを書くのはだるいので\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003einferior_string\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと書くのが一般的です。\u003c/p\u003e\n\n\u003cp\u003eこうしてみてわかったように、\u003cstrong\u003e断じてrvalue reference自体にはmove機能はありません\u003c/strong\u003e。たかが参照に一体何を求めてるのさ。\u003c/p\u003e\n\n\u003cp\u003eこの辺もいなむ先生が、\u003ca href=\"http://www.adventar.org/calendars/926\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++アドベントカレンダー\u003c/a\u003e12日目で\u003cbr\u003e\n\u003ca href=\"http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e\"\u003eC++のつまずきポイント解説\u003c/a\u003e\u003cbr\u003e\n詳しく書いているので(ry\u003c/p\u003e\n\n\u003cp\u003e念の為に引用しておきます\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://cpplover.blogspot.jp/2009/12/rvalue-reference.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpplover.blogspot.jp/2009/12/rvalue-reference.html\u003c/a\u003e\u003cbr\u003e\nstd::move()を、何かコア言語の機能のように勘違いしていませんか？\u003cbr\u003e\nあくまでSemanticsです。\u003cbr\u003e\nstd::moveは、static_cast(a)　をしているにすぎないのです。\u003cbr\u003e\nrvalue referenceも、単なるreferenceに過ぎないのです。\u003cbr\u003e\nMove Semanticsとは、たんにlvalueとrvalueを、movableなフラグとして使っているに過ぎないのです。\u003c/p\u003e\n\n\u003cp\u003eその他は、lvalue referenceの場合と、何も変わりありません。\u003cbr\u003e\nlvalue referenceで、データメンバにアクセスしたからと言って、そのオブジェクトがその後使えなくなるとは限らないでしょう。\u003cbr\u003e\nもちろん、参照しているわけですから、publicなメンバ変数に対して、破壊的な書き換えもできるわけです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003e単にlvalueとrvalueを、movableなフラグとして使っているに過ぎない\u003c/strong\u003eんです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"stdstring\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdstring\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estd::string\u003c/h1\u003e\n\n\u003cp\u003eさきほどなんちゃって文字列クラスを作りましたが、ちゃんとC++には\u003ccode\u003estd::string\u003c/code\u003eがあるのでそれを使いましょう。\u003cbr\u003e\n\u003cstrong\u003eというかCで文字列操作するな、そういうことする言語じゃない！！\u003c/strong\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;string\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"arikitari_na_world!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epopback\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//最後の一文字消去\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_first_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'_'\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e//最初の'_'より前を抜き出し('_'は含めない)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estr2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\"_toha\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//文字列の連結\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e・・・まあこんな感じで使えます。例えばフルパスからファイル名だけほしい時は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;string\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_n\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003efullpath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efullpath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efullpath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_last_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003efullpath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_last_of\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'.'\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"C:\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003eUsers\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003eyumetodo\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003eOneDrive\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003eドキュメント\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e東京理科大\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003e物理学実験\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e\u003cspan class=\"s\"\u003efit.log\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eget_n\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな感じですね。とっても楽。\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eもっと初心者向け\u003c/strong\u003eな説明は\u003cbr\u003e\n\u003ca href=\"http://yumechi0525.hatenablog.com/entry/2015/12/23/004020\" rel=\"nofollow noopener\" target=\"_blank\"\u003e22日目| C++の文字列処理関係と正規探索（未完）について - 水面下の夢\u003c/a\u003e\u003cbr\u003e\nへ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"template入門\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#template%E5%85%A5%E9%96%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etemplate入門\u003c/h1\u003e\n\n\u003cp\u003eさきに「初心者にはtemplateなんて無理です」とか言ったのは誰でしょうね(私だ)。\u003cbr\u003e\n大丈夫です、入門です。んなのまじめに解説したら本が一冊書けます。以下の解説より詳しく知りたい人は、\u003cbr\u003e\n\u003ca href=\"http://qiita.com/_EnumHack/items/cd904d383588ddb2189f\" id=\"reference-ec75ebc88157d300ae8a\"\u003eC++関数テンプレートと半順序とオーバーロード\u003c/a\u003e\u003cbr\u003e\nを見てください。いなむ先生がなぜかプロ生ちゃんのAdventCalenderに投稿してます。\u003c/p\u003e\n\n\u003cp\u003eまあすでに出てきましたが。まずは定義から。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eテンプレートとは、コンパイル時に型や値を引数として渡す機能のことである。\u003cbr\u003e\n\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp\" rel=\"nofollow noopener\" target=\"_blank\"\u003e14 テンプレート(Templates) | C++11の文法と機能(C++11: Syntax and Feature)\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e分かった・・・？いい？\u003cstrong\u003eコンパイル時だよ？コンパイル時\u003c/strong\u003e。そこ大事だからね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT_\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT_\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT_\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT_\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e54\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//hoge1はint型\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e54\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//hoge2はunsigned int型\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eみれば分かるように最大値を返す関数ですが、型が「T_」になってます。どういうことだってばよ？\u003c/p\u003e\n\n\u003cp\u003eこれまで最大値を求める関数を作ろうと思ったら全部の型ごとに関数を書く必要が有りました。事実C言語のmath.hを見ると同じような機能の型が違う関数が乱造されています。んなもんいちいち覚えてらんないですよね？\u003c/p\u003e\n\n\u003cp\u003eそういった背景から(?)C++では関数をオーバーロード出来るようになりました。つまり、引数の型が異なれば同名の関数をいくつでも作れるようになりました。\u003c/p\u003e\n\n\u003cp\u003e2行目を見てください。templateから始まる部分がありますが、これがtemplateの仮引数と呼ばれるところです。関数にも仮引数があったけどあれに似てます。\u003cbr\u003e\nただし指定できるのは型名(とコンパイル時定数)のみです。\u003cbr\u003e\n例えばこの場合新たにT_という型をでっち上げているわけですが、この時点では実際の型はわかりません。若干違いますが型の異なる関数が\u003cstrong\u003e無限に存在するイメージで差し支えありません\u003c/strong\u003e(但し、コンパイル時に確定します)。\u003c/p\u003e\n\n\u003cp\u003e7行目を見てください。これは\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp.expl.spec\" rel=\"nofollow noopener\" target=\"_blank\"\u003eテンプレートの実引数推定(Template argument deduction)\u003c/a\u003eという機能を使っています。\u003cbr\u003e\nできるだけ普通のプログラマーの常識に合わせるために、とても複雑になっているのですが、逆に言えば、\u003cbr\u003e\nノリと勘と気分となんとなくでどーにかなるということです。\u003cbr\u003e\nようはtemplate関数の引数に書いた型に推論されるわけで。まあみればわかるでしょ。\u003c/p\u003e\n\n\u003cp\u003e8行目は\u003ca href=\"http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp.fct.spec\" rel=\"nofollow noopener\" target=\"_blank\"\u003e明示的なテンプレート実引数指定(explicit template argument specification)\u003c/a\u003eと呼ばれていて、かっこ良く名前をつけましたがこの場合ならようはT_の型はunsigned intだよ～と教えているだけです。\u003c/p\u003e\n\n\u003cp\u003e7, 8行目のようにtemplateを使ったもの(今回はtempalte関数)を実際に読んでコンパイルされると、先ほどの「無限に存在する」状態の例えで言うならどれか特定のものに定まります。\u003cbr\u003e\nもちろん実際に関数としてコンパイルされるのは呼び出されているものだけです(つまり使う場所と\u003cstrong\u003e同じ翻訳単位\u003c/strong\u003eにないとうまくいかない)。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"初心者だってstdenable_ifでsfinaeしたい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E5%BF%83%E8%80%85%E3%81%A0%E3%81%A3%E3%81%A6stdenable_if%E3%81%A7sfinae%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初心者だってstd::enable_ifでSFINAEしたい\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://qiita.com/_EnumHack/items/cd904d383588ddb2189f\"\u003eC++関数テンプレートと半順序とオーバーロード\u003c/a\u003e\u003cbr\u003e\nSFINAEとは\u003cbr\u003e\nSubstitution Failure Is Not A Error\u003cbr\u003e\nの略語である\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e知らんかったわ、まあそれはさておき。\u003c/p\u003e\n\n\u003cp\u003eテンプレートはどんな型でも受け取っていまいます。そのままだと\u003cstrong\u003e予期せぬ動作\u003c/strong\u003eをしたり、「\u003ca href=\"http://faithandbrave.hateblo.jp/entry/2014/03/25/150659\" rel=\"nofollow noopener\" target=\"_blank\"\u003eコンパイルエラーの爆発量を競う大会\u003c/a\u003e」が開かれるほどのエラーメッセージがでます。\u003cbr\u003e\n使える型を制約するにはどうしたら良いでしょうか？\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"conceptの歴史超要約とc1zc17\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#concept%E3%81%AE%E6%AD%B4%E5%8F%B2%E8%B6%85%E8%A6%81%E7%B4%84%E3%81%A8c1zc17\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003econceptの歴史(超要約)とC++1z(C++17)\u003c/h2\u003e\n\n\u003cp\u003eここでこの記事のタイトルを改めてみましょう。\u003cstrong\u003e「C99からC++14を駆け抜けるC++講座」\u003c/strong\u003eです。残念ながらC++1z(C++17)の機能は\u003cstrong\u003e紹介できない\u003c/strong\u003eわけです。\u003c/p\u003e\n\n\u003cp\u003eなんでこんなことを書くかというと、C++1zに\u003cstrong\u003econcept\u003c/strong\u003eなる機能が提案されています。もともとC++11で入るはずのものでしたが、\u003cbr\u003e\n\u003ca href=\"http://cpplover.blogspot.jp/2009/08/bjarne-stroustrupconcept_14.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eBjarne Stroustrup、Conceptと未来を語る | 本の虫\u003c/a\u003e\u003cbr\u003e\nにあるように、かなりいろいろあって結局入りませんでした。それからまもなく6年、再びconceptが提案されています。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/_Nnwww/items/5a242466e94b2e432376\" id=\"reference-885f7ba66c919f728f94\"\u003e新機能\"コンセプト\"でC++1z時代のジェネリックプログラミング\u003c/a\u003e\u003cbr\u003e\n早くほしいです。これから紹介するstd::enable_ifよりも直感的なはずですから。\u003c/p\u003e\n\n\u003cp\u003e追記:こんないい加減な説明より、\u003cstrong\u003e江添さんの\u003cbr\u003e\n\u003ca href=\"http://ezoeryou.github.io/boost-benkyokai-oosaka-16/#/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e帰ってきたコンセプト | Boost勉強会 #16 大阪\u003c/a\u003e\u003cbr\u003e\nが数千倍わかりやすいです。\u003c/strong\u003e(岡山の陶芸家(\u003ca href=\"https://twitter.com/bolero_MURAKAMI\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@bolero_MURAKAMI\u003c/a\u003e)とでちまるさんの兄(\u003ca href=\"https://twitter.com/decimalbloat\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@decimalbloat\u003c/a\u003e)はワロタ)\u003c/p\u003e\n\n\u003cp\u003eしかし無いものは仕方ないです。std::enable_ifを紹介しましょう。\u003c/p\u003e\n\n\u003cp\u003e更に追記:どうもC++17に提案されていたconceptはrejectされたっぽい・・・？C++11でもさんざん揉めて入らなかったのにまた入らねーのかよ！\u003c/p\u003e\n\n\u003cp\u003eC++17の\u003ccode\u003eif constexpr\u003c/code\u003eとC++14の戻り値にautoを使う記法で少しましになりそうですが\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.youtube.com/watch?v=qHgM5UdzPQU\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/http%3A%2F%2Fimg.youtube.com%2Fvi%2FqHgM5UdzPQU%2F0.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1a33f36b73c76b074ad36cd3c8ed1e54\" alt=\"C++ Weekly - Ep 18 C++17's constexpr if\" data-canonical-src=\"http://img.youtube.com/vi/qHgM5UdzPQU/0.jpg\" srcset=\"https://qiita-user-contents.imgix.net/http%3A%2F%2Fimg.youtube.com%2Fvi%2FqHgM5UdzPQU%2F0.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=84af70b2ddf0d734c6303be259438530 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++17\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral_v\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_floating_point_v\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eliterals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"n\"\u003emaybe_unused\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ea1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//result: 2(int)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"n\"\u003emaybe_unused\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ea2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//result: 1.1(double)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"n\"\u003emaybe_unused\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ea3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"arikitari\"\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//result: \"arikitari\"(std::string)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eいや、conceptくれ。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"stdenable_if\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#stdenable_if\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003estd::enable_if\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003estd::enable_if\u003c/code\u003eなるものがありまして、これを使うとSFINAEを\u003cdel\u003e悪用\u003c/del\u003e利用した型制約templateを書けます。\u003c/p\u003e\n\n\u003cp\u003eいろいろ流儀がありますが、私は\u003cbr\u003e\n\u003ca href=\"http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462\" id=\"reference-2072ce4d49a253259ea0\"\u003estd::enable_ifを使ってオーバーロードする時、enablerを使う？\u003c/a\u003e\u003cbr\u003e\nの方法が好きなのでそれを紹介します。enablerを使わず、\u003ccode\u003estd::nullptr_t\u003c/code\u003eを使うといえば伝わる人には伝わるでしょう。\u003c/p\u003e\n\n\u003cp\u003e例えば、算術型(intとかdoubleとか)だけを受け取りたい場合を考えましょう。\u003cbr\u003e\nまずは算術型か否かを判別する必要があります。\u003cbr\u003e\nそういう時に活躍するのが\u003cstrong\u003etype_traits\u003c/strong\u003eヘッダーです。ていうか\u003ccode\u003estd::enable_if\u003c/code\u003eもこれ\u003cstrong\u003eincludeしないと使えません\u003c/strong\u003e。\u003cbr\u003e\nで日本語より英語のサイトのほうがわかりやすいので\u003cbr\u003e\n\u003ca href=\"http://www.cplusplus.com/reference/type_traits/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u0026lt;type_traits\u0026gt; - C++ Reference\u003c/a\u003e\u003cbr\u003e\nを見ながら話を進めます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F61a6529b-1f46-b888-cc43-1b4a8fcbdca8.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1e3d7fa68035108d2597ece7b28b9e05\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F61a6529b-1f46-b888-cc43-1b4a8fcbdca8.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1e3d7fa68035108d2597ece7b28b9e05\" alt=\"無題.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/61a6529b-1f46-b888-cc43-1b4a8fcbdca8.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F61a6529b-1f46-b888-cc43-1b4a8fcbdca8.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3f769d7cb5372f4a802c8399500f3d25 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eこんな風に書いてありますね。算術型はarithmeticって言うんですね・・・ってそうじゃない。\u003cbr\u003e\nつまり\u003ccode\u003estd::is_arithmetic\u003c/code\u003eをつかえばいいと分かります。\u003cbr\u003e\n\u003ca href=\"http://www.cplusplus.com/reference/type_traits/is_arithmetic/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eis_arithmetic - C++ Reference\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_arithmetic\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこれがtrueになる時、\u003ccode\u003eT\u003c/code\u003eは算術型ですね。\u003c/p\u003e\n\n\u003cp\u003eさて、であとは\u003ccode\u003estd::enable_if\u003c/code\u003eを書くだけですが、その前に\u003cstrong\u003eおまじない\u003c/strong\u003eを。\u003ccode\u003etypename\u003c/code\u003eって書くのはだるいので。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ealias_declarationでおまじない\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003econdition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003estd::enable_if_t\u003c/code\u003eってのが標準にあるんですね。\u003c/p\u003e\n\n\u003cp\u003eでは算術型のみ受け取る関数fを作ってみましよう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_arithmetic\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"num:\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//f(\"num\");\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/Dfn1NNNNR2lXaYlr\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/Dfn1NNNNR2lXaYlr\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eもしコメントアウトを外すと\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eprog.cc:12:5: error: no matching function for call to 'f'\n    f(\"num\");\n    ^\nprog.cc:3:48: note: candidate template ignored: disabled by 'enable_if' [with T = const char *]\nusing enable_if_type = typename std::enable_if\u0026lt;condition, T\u0026gt;::type;\n                                               ^\n1 error generated.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように\u003cstrong\u003eコンパイルエラーになります。やったぜ！\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eさて、ここからがSFINAEの出番です。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efalse_type\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003etype_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003evolatile\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003etype_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003evolatile\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003etype_traits\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etrue_type\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etrue_type\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003echar16_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etrue_type\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003echar32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etrue_type\u003c/span\u003e \u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_arithmetic\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"num:\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eis_char_type\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"str:\"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"num\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんな風に文字列へのポインタを受け取るオーバーロードを追加しました。\u003cbr\u003e\nもしSFINAEがないと\u003ccode\u003ef(3)\u003c/code\u003eという呼び出しはコンパイルエラーになります。なぜならば、オーバーロード解決のためにまずfという名前の関数を捜索し、2つ見つかるわけですが、下のほうのfが呼べるかを調べるときにエラーになるからです。\u003cbr\u003e\nSFINAEはこのエラーを\u003cstrong\u003eとりあえず無視(=オーバーロード候補から外す)\u003c/strong\u003eので関数が一つに定まり、呼び分けができるわけです。\u003c/p\u003e\n\n\u003cp\u003eちなみにC++03でも仕様が曖昧だっただけで使えたコンパイラもあったらしいです\u003cbr\u003e\n\u003ca href=\"http://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e任意の式によるSFINAE - cpprefjp C++日本語リファレンス\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eまとめると、\u003ccode\u003e型名T\u003c/code\u003eに制約を書ける場合は\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eenable_if_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e許可条件\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etrue\u003c/span\u003e\u003cspan class=\"err\"\u003eで有効\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enullptr_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003enullptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書けばいいということになります。\u003c/p\u003e\n\n\u003cp\u003e実際にこれを使って、2次元のpointクラスを作ってみたものがこちらになります。\u003cbr\u003e\n\u003ca href=\"https://github.com/Nagarei/DxLibEx/blob/master/dxlibex/basic_types/point2d.hpp#L72\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/Nagarei/DxLibEx/blob/master/dxlibex/basic_types/point2d.hpp#L72\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e型制約をかけただけではSFINAEは使っていません、オーバーロード解決の際の候補から外すことがSFINAEです、念のため\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"templateでif\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#template%E3%81%A7if\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etemplateでif\u003c/h1\u003e\n\n\u003cp\u003eもはや初心者とは何だったのかという内容ですが、さわりだけ。\u003cbr\u003e\n結論から言うと、C++11で\u003ccode\u003estd::conditional\u003c/code\u003eが入りまして、まんまIFなので、\u003cstrong\u003eそれ使えばいいです\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/kazatsuyu/items/f8c3b304e7f8b35263d8\" id=\"reference-18f5962f44c4c942fac1\"\u003eメモ：std::conditionalでif～else if～elseみたいなことをしようとすると見づらい\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://faithandbrave.hateblo.jp/entry/20100510/1273473979\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++0x std::conditional - Faith and Brave - C++で遊ぼう\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//C++11 or later\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003ec_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003econditional\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"err\"\u003eコンパイル時に評価できる\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e条件式\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"err\"\u003e真の時の型\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"err\"\u003e偽の時の型\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//C++14 or later\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003ec_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003econditional_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"err\"\u003eコンパイル時に評価できる\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e条件式\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"err\"\u003e真の時の型\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"err\"\u003e偽の時の型\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのように書けまして、\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/adatchey/items/7d721f7670c4cd8f8af0\" id=\"reference-e9d0cff15eefcae32328\"\u003eVariadic Template を使って switch を使ったテンプレート関数呼び出しを除去する\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://www.adventar.org/calendars/926\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++ Advent Calendar 2015\u003c/a\u003eの2日目の記事ですがこんな具合に\u003cdel\u003e悪用\u003c/del\u003e利用できます\u003c/p\u003e\n\n\u003cp\u003eですが\u003cstrong\u003e原理\u003c/strong\u003eを説明しましょう。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eCon\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eThen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eElse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(2, 3, 4)\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eIF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(1)\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eThen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eElse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(5)\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eIF\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eElse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(6)template第一引数がtrueの時はこの定義\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"n\"\u003eThen\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(7, 8, 12)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eThen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eElse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(5)\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eIF\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThen\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eElse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(6)template第一引数がfalseの時はこの定義\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"n\"\u003eElse\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//(7, 9, 15)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e//中略\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etype1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eIF\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//int型になる(10, 11, 13)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003etype2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eIF\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//double型になる(10, 14, 16)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eまるで暗号のようだ\u003c/strong\u003eという声が聞こえてきそうです。一つ一つ説明します。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eまず、\u003ccode\u003eIF\u003c/code\u003eというクラス(structと書いてあるので原則public指定)があります。\u003c/li\u003e\n\u003cli\u003eこいつはtemplateクラスです。\u003c/li\u003e\n\u003cli\u003eこのクラスのtemplate引数は3つです\u003c/li\u003e\n\u003cli\u003e一つ目は\u003ccode\u003ebool\u003c/code\u003e型、2つめと3つめは\u003cstrong\u003e型名\u003c/strong\u003eです\u003c/li\u003e\n\u003cli\u003e2つのtemplate特殊化があります\u003c/li\u003e\n\u003cli\u003etemplate第1引数が\u003cstrong\u003etrueの時とfalseの時\u003c/strong\u003eです\u003c/li\u003e\n\u003cli\u003e2つのtemplate特殊化では\u003cstrong\u003eどちらでも型名typeがtypedefされます\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003etemplate第1引数がtrueの時、\u003cstrong\u003e型名typeはtemplate第2引数の別名\u003c/strong\u003eとなります。\u003c/li\u003e\n\u003cli\u003etemplate第1引数がfalseの時、\u003cstrong\u003e型名typeはtemplate第3引数の別名\u003c/strong\u003eとなります。\u003c/li\u003e\n\u003cli\u003eこのクラスを使ってみます。\u003c/li\u003e\n\u003cli\u003etemplate第1実引数にtrueが指定されました\u003c/li\u003e\n\u003cli\u003e型名typeはtemplate第2実引数の別名になるのでint型になります\u003c/li\u003e\n\u003cli\u003eそれの別名として\u003ccode\u003etype1\u003c/code\u003eという新たな型を定義するので、\u003ccode\u003etype1\u003c/code\u003eはint型です\u003c/li\u003e\n\u003cli\u003etemplate第1実引数にfalseが指定されました\u003c/li\u003e\n\u003cli\u003e型名typeはtemplate第3実引数の別名になるのでdouble型になります\u003c/li\u003e\n\u003cli\u003eそれの別名として\u003ccode\u003etype2\u003c/code\u003eという新たな型を定義するので、\u003ccode\u003etype2\u003c/code\u003eはdouble型です\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e説明とコード中の()の数字を対応させながら読んでみてください。\u003c/p\u003e\n\n\u003cp\u003eで、今回trueとかfalseとかやってたところはもちろん、\u003ccode\u003estd::is_arithmetic\u003c/code\u003eとか、とにかく\u003cstrong\u003eコンパイル時に値が決まれば\u003c/strong\u003e指定できます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"templateをつかって入力関数を作ってみよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#template%E3%82%92%E3%81%A4%E3%81%8B%E3%81%A3%E3%81%A6%E5%85%A5%E5%8A%9B%E9%96%A2%E6%95%B0%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etemplateをつかって入力関数を作ってみよう\u003c/h1\u003e\n\n\u003cp\u003e追記\u003cbr\u003e\n\u003cstrong\u003e単体の記事にしました\u003c/strong\u003e\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/2a1d5f855bae6d100658\" class=\"autolink\" id=\"reference-1f1596802cf75c014661\"\u003ehttp://qiita.com/yumetodo/items/2a1d5f855bae6d100658\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"license\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#license\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLicense\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by/4.0/deed.ja\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCC BY 4.0\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=66aa549d659263ec972c387f23626372\" alt=\"CC-BY icon.svg\" width=\"88px\" data-canonical-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F16%2FCC-BY_icon.svg%2F1200px-CC-BY_icon.svg.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bc030b206d86c07d8785ee921a53c18e 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c初心者advent-calendar-2015-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%BF%83%E8%80%85advent-calendar-2015-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++初心者Advent Calendar 2015\u003c/h1\u003e\n\n\u003cp\u003eこの記事は\u003ca href=\"http://www.adventar.org/calendars/922\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++初心者Advent Calendar 2015\u003c/a\u003e 17日目の記事です\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/bd41f31f39dd590e8c80\"\u003e\u0026lt;\u0026lt;9日目  ｜Clang with Microsoft CodeGenがでたので試す\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://srz-zumix.blogspot.jp/2015/12/boosttest-v3.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u0026lt;\u0026lt;16日目 | ブログズミ: Boost.Test v3 を使ってみた\u003c/a\u003e || \u003ca href=\"https://blog.myon.info/blog/2015-12-18/avoid-defining-macros/\" rel=\"nofollow noopener\" target=\"_blank\"\u003e18日目 | それC++なら#defineじゃなくてもできるよ | とさいぬの隠し部屋 \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e次は18日目、myon___さんの「それ #define じゃなくてもできるよ」ですね。constexprとか出るのかな\u003cdel\u003e(きっと出ない)\u003c/del\u003eと思ったら触りだけでた\u003c/p\u003e\n","body":"# C++初心者Advent Calendar 2015\nこの記事は[C++初心者Advent Calendar 2015](http://www.adventar.org/calendars/922) 17日目の記事です\n[\u003c\u003c9日目\t｜Clang with Microsoft CodeGenがでたので試す](http://qiita.com/yumetodo/items/bd41f31f39dd590e8c80)\n[\u003c\u003c16日目 | ブログズミ: Boost.Test v3 を使ってみた](http://srz-zumix.blogspot.jp/2015/12/boosttest-v3.html) || [18日目 | それC++なら#defineじゃなくてもできるよ | とさいぬの隠し部屋 \u003e\u003e](https://blog.myon.info/blog/2015-12-18/avoid-defining-macros/)\n\n# はじめに\n\nみなさま、ナマステ。さて、この記事のタイトルを見て、「時代・・・**サトウキビ**・・・[忍者](http://www.nicovideo.jp/user/5006073)・・・うぅ、頭が」となった人は私と趣味が似ています・・・って話はどうでもいいか。\n\nよく、「C++はBetter Cとしてはじめればいい」みたいな話を聞くのでそれにそって一気にC++14まで駆け抜けようと思います。\n\nちなみにC99を知らない人はお断りです。さようなら。\n\nでははじめますか。\n\nしっかし書き終わってから思った。**なぜ複数の記事に分割しなかったし**\nというわけで、超長文です。すみません。そのうち単独の記事も出します、きっと。\n\nところで、実はホッとしておりまして、なにかというと、前日のsrz-zumixさんの記事が**ちっとも初心者向けじゃない**んですよ。**初心者はBoostなんて使えません!!**\n書き終わってから投稿に気が付いたんですが。この記事の後半は初心者向けじゃないなぁと思っていたのですが、それみて「**これよりは初心者向けだわー**」といった感じです。\n\n個人的には、[歌舞伎座.tech #8 「C++初心者会」](https://ezoeryou.github.io/blog/article/2015-05-18-kabukiza-tech-8.html)とか見て以降、「初心者」が怖くなってしまっていましたが([初心者がBoost.asioをつかえるもんか！](http://www.shigemk2.com/entry/kbkz_tech.8.3))、さらに怖くなりました。初心者怖い。(srz-zumixさんすみません)\n\n# =0で初期化をやめよう\n\n## 0初期化は妥当か？\n\nさて、初期化と聞くと\n\n```c:C99\ntypedef struct {\n  int a;\n  int b;\n} Hoge;\nstatic int n;//static/thread_localな変数は0初期化される\nint main(void)\n{\n  int foo = 0;//変数fooを0初期化\n  Hoge hoge = { 0 };//変数hogeの最初のメンバ変数aを0で初期化、それ以外のメンバ変数(=メンバ変数b)をstatic変数と同じ方法で初期化(=0初期化)\n  //略\n  return 0;\n}\n```\n\nみたいに、0初期化を浮かべる人が多いかもしれませんが、初期化はそれだけではありません。\n\nそもそも**初期化とは、変数などの状態をプログラマにとって既知にすること**で、**断じて0にすることと同義ではありません**。どういうことでしょう？\n\n```c:c99\n#include \u003cstdlib.h\u003e\nint main(void)\n{\n  int foo = 2;//変数fooを2で初期化\n  int* n_p = malloc(sizeof(int));//変数n_pをmalloc関数で割り当てたメモリー領域へのポインタで初期化\n  memset(n_p, 0xcc, sizeof(int));//変数n_pをmalloc関数で割り当てたメモリー領域を0xCCで全byte埋めて初期化\n  free(n_p);\n  return 0;\n}\n```\n\n一般に初期化は、変数の読み出し操作の前に、変数の状態をプログラマーから既知にするために行います。static/thread_localな変数**以外**の変数は初期化子を書かない場合デフォルト初期化されますが、この時、クラス型ではないもしくは配列型で要素型がクラス型ではない変数(ex.)int型のような組み込み型やそのポインタ型のint*型、int[5]のような配列型)は**初期化が行われません(=値が不定)**。\n\n値が不定だと困るので初期化子を書くわけですが、この時0初期化することが多いの、はxor命令に帰結させたりmemsetの呼び出しに最適化できたりするために一般に高速なためであって、なにも0でなくとも初期化には違いないわけです。\n\nなお\n\n```c:c99\ntypedef struct {\n  int a;\n  int b;\n} Hoge;\nint main(void)\n{\n  Hoge hoge;\n  memset(\u0026hoge, 0, sizeof(Hoge));\n  return 0;\n}\n```\n\nのようにするコードをたまに見かけますが、わざわざmemsetを自分で書かなくても\n\n```c:c99\ntypedef struct {\n  int a;\n  int b;\n} Hoge;\nint main(void)\n{\n  Hoge hoge = { 0 };\n  return 0;\n}\n```\n\nで十分です。現代のコンパイラはmemsetの呼び出しに最適化できます。\n\nまたC++の場合は\n\n```cpp:C++\nstruct Hoge {\n  int a;\n  int b;\n};\nint main()\n{\n  Hoge hoge = {};\n  return 0;\n}\n```\n\nで十分だったりします。\n\n## =0で初期化できない例\n\n=0と書く初期化は次のようなものです。\n\n```c:c99\nint main(void)\n{\n  int n = 0;\n  return 0;\n}\n```\n\nしかしこれはCなら構造体、C++ならクラスには適用できません\n\n```c:c99\ntypedef struct {\n  int a;\n  int b;\n} Hoge;\nint main(void)\n{\n  //Hoge hoge = 0;//NG\n  return 0;\n}\n```\n\n## 0初期化するべきではない場面\n\nmemsetで0初期化もよく見かけます。これはどうでしょうか？\n\n```c:c99\ntypedef struct {\n  int a;\n  int b;\n} Hoge;\nint main(void)\n{\n  Hoge hoge;\n  int n;\n  memset(\u0026hoge, 0, sizeof(Hoge));\n  memset(\u0026n, 0, sizeof(int));\n  return 0;\n}\n```\n\nC99では問題ありませんでした。しかしC++にはクラスがあります。\nここで次のようなクラスを見てみましょう。\n\n```cpp:C++14\n#include \u003ccstring\u003e\n#include \u003ciostream\u003e\n\n#include \"hexdumper.hpp\"\nclass Hexa {\npublic:\n    Hexa() : str_(\"arikitari\") {}\n    ~Hexa() = default;\n    virtual void setStr(void){}\nprotected:\n    char str_[0x10];\n};\n\nclass Hexa2 : public Hexa {\npublic:\n    Hexa2() : Hexa() {}\n    ~Hexa2() = default;\n    void setStr(void) noexcept override { std::strcpy(this-\u003estr_,\"hexadrive\"); }\n    char* drawStr(void) noexcept { return this-\u003estr_; }\n    const char* drawStr(void) const noexcept { return this-\u003estr_; }\n};\n\nint main(void)\n{\n    using std::endl;\n    Hexa2 hexa = {};\n    std::cout \u003c\u003c \"before memset\" \u003c\u003c endl \u003c\u003c hexdump(hexa) \u003c\u003c endl;\n    Hexa2* pHexa = \u0026hexa;\n    std::memset(pHexa, 0, sizeof(Hexa2));\n    std::cout \u003c\u003c \"after memset\" \u003c\u003c endl \u003c\u003c hexdump(hexa) \u003c\u003c endl;\n    pHexa-\u003esetStr();\t// ここでクラッシュする\n    std::cout \u003c\u003c pHexa-\u003edrawStr() \u003c\u003c std::endl;\n}\n```\n\n``hexdump``は自作関数です。\n\n仮想関数がある派生クラスに対してmemsetを用いた例です。仮想関数である``setStr``は呼び出せず、手元の環境ではSegmentation faultしました。なぜでしょうか？\n\nhttps://wandbox.org/permlink/0aoTnoyqgYaJd9Z6\n\n```plain:実行結果\nbefore memset\n Address | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | 123456789ABCDEF\n---------+-------------------------------------------------+----------------\n00000000 | 00 19 40 00 00 00 00 00 61 72 69 6B 69 74 61 72 | .\u0019@.....arikitar\n00000010 | 69 00 00 00 00 00 00 00                         | i.......\n\nafter memset\n Address | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | 123456789ABCDEF\n---------+-------------------------------------------------+----------------\n00000000 | 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................\n00000010 | 00 00 00 00 00 00 00 00                         | ........\n\nSegmentation fault\n```\n\nmemsetの前後でclass変数を自作したhexdump関数でダンプしてみました。このコードの処理系では、仮想関数をvtableと呼ばれるもので実装しているようで(というかそれ以外の実装あるの？)、``00000000``～``00000007``の範囲がどうも該当しているようです。memsetによってこの部分が吹き飛ばされてしまうため、仮想関数である``setStr``の実行コードのあるアドレスが消え、結果としてヌルポしているようです。\n\nまた、コンストラクタでメンバ変数``str_``に与えた``arikitari``という文字列も吹き飛んでいます。せっかくデフォルトコンストラクタで初期化したのに、memsetで2重の初期化をしてしまっているわけです。\n\nクラス変数の初期化memsetを使いたい場合は最低でもstandard-layout class(trivially copyable classである必要はあったっけ？)、一般にはPODクラスであるべきで、**PODとは何かがわからないうちは、memsetをクラス変数に使うのはご法度とおぼえておくべきです。**\n\n- [本の虫: C++0xにおけるPODの定義](https://cpplover.blogspot.jp/2010/06/c0xpod.html)\n- [C++の初期化は分かりにくい - ぷろみん](http://torini.hateblo.jp/entry/2015/03/08/C%2B%2B%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%AF%E5%88%86%E3%81%8B%E3%82%8A%E3%81%AB%E3%81%8F%E3%81%84)\n- [Plain Old Data | 闇夜のC++](http://cpp.aquariuscode.com/plain-old-data)\n\n## 統一初期化構文(Universal Initialization/Uniform Initialization)で初期化しよう\nじゃあどうすればいいのでしょうか。\n\n- [統一初期化・リスト初期化の見本帳 - イグトランスの頭の中](http://dev.activebasic.com/egtra/2015/12/02/845/)\n- [波括弧の初期化があって嬉しいとき - イグトランスの頭の中](http://dev.activebasic.com/egtra/2015/12/03/847/)\n- [aggregateと初期化リストの不思議 | 本の虫](http://cpplover.blogspot.jp/2010/09/aggregate.html)\n- [多くのプログラマは言語を表面的な理解だけで使っている | 本の虫](http://cpplover.blogspot.jp/2010/09/blog-post_18.html)\n- [initializer listの解説](http://cpplover.blogspot.jp/2010/03/initializer-list.html)\n- [C++14の新機能: メンバー初期化子と初期化リストの組み合わせ | 本の虫](http://cpplover.blogspot.jp/2014/10/c14_2.html)\n- [vector/arrayとUniform initialization+Initializer list - yohhoyの日記](http://d.hatena.ne.jp/yohhoy/20120724/p1)\n- [C++11: Syntax and Feature#8.5 初期化子（Initializers）](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#dcl.init)\n\nはい、2日目、3日目でも解説がありましたし、本の虫にもありますね。統一初期化構文(Universal Initialization/Uniform Initialization)を使えばいいです。\n\n```cpp:結論\nstd::pair\u003cint, int\u003e p3{};//OK\nint hoge{};//OK\nstd::array\u003cint, 4\u003e arr{{}}\n```\nのようにかけます。\n\n後述するtemplateと組み合わせて、任意の型をstatic storageと同じように初期化したいときとかは統一初期化構文一択だったりします。\n\nまあしかし、実際の運用では常に使うというわけではなく、使うべきでない場面というのもあります。\n[C++11 Universal Initialization は、いつでも使うべきなのか](http://qiita.com/h2suzuki/items/d033679afde821d04af8)\nを読んでみると良いでしょう。\n\n# std::coutとprintf\n\nC++でなんか出力と言われたらやっぱり\n\n```cpp:ありきたり\n#include \u003ciostream\u003e\nint main()\n{\n    std::cout \u003c\u003c \"arikitari_na_world!\" \u003c\u003c std::endl;\n    return 0;\n}\n```\n\nですよね。なんでprintfが好まれないのか見ていきましょう。\n\nそもそもprintfのプロトタイプ宣言は\n\n```c:printf\nint printf ( const char * format, ... );\n```\n\nですね。\n\n## format指定と型安全\n例えば``stdint.h``/``cstdint``にある``int64_t``型を表示させたい場合、どうすればいいでしょうか？\n\n```c:C99\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\nint64_t num = 4288957324576;\n//どっち？\nprintf(\"%lld\", num);\nprintf(\"%I64d\", num);\n```\n\nこの2つを``#if``つかって分けるというコードを書かねばならないのでしょうか？\nもちろんそんなことはなく、標準にそれをやってくれるマクロがあります。``#define __STDC_FORMAT_MACROS`` \u0026 ``#include \u003cinttypes.h\u003e`` (C99) / ``#include \u003ccinttypes\u003e`` (C++11) のマクロをつかって、\n\n```c:コメントでもらったコード\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cinttypes.h\u003e\n\nint64_t num = 4288957324576;\nprintf(\"%\" PRId64, num);\n```\n\nこう書くことはできますが、文字列が(マクロで連結されますが)とぎれて見えます。これはなかなかみにくいんじゃないでしょうか(私見)。**ちなみに、文字列リテラルとマクロの間にスペースを入れ忘れると、C++11の機能であるUDLsと誤認されます**。\n\n問題は**さらに深い**です。format指定することの利点は出力されるものがわかりやすいということになりますが、対応させるべき型が無限に存在する場合、**無限通りのformatが必要になります**。恐ろしや。STLに入っている型のうち対応させるべきものだけでもいくつあるんですかね、覚えられるか。\n\nさらに型安全なものにしようとしたら、つまり、**format指定が適切かを調べコンパイルエラーにするには、どれだけ苦労しなければならないのでしょうか**。先のようなマクロもたくさん必要になります。\n\nそれでも型安全printfをつくるべく立ち向かう人たちは後を立ちません。\n\n## 結論\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003ccstdint\u003e\n#include \u003cstring\u003e\nint main()\n{\n    std::int64_t num = 4288957324576;\n    std::size_t s = 32;\n    std::string str = \"arikitari\";\n    std::cout \u003c\u003c num \u003c\u003c \", \" \u003c\u003c s \u003c\u003c \", \" \u003c\u003c str \u003c\u003c std::endl;\n    return 0;\n}\n```\n\ntemplateが使えるおかげで、膨大な型全てに対応できました。formatがあるから面倒なんだ、という論法ですね。\n\nただし、iostreamいいぞ、という書き方をしましたが、正直に言うと設計が古すぎて、作り直すべきという声もC++聞こえてきます。\n\nああ、ちなみに[fmtlib/fmt](https://github.com/fmtlib/fmt)というライブラリがあって、高速かつC#に近いSyntaxで書けます。\n[C++ Advent Calendar 2014](http://qiita.com/advent-calendar/2014/cpp)の17日目の記事である\n[今年気になった C++ ライブラリとかフレームワークを紹介する記事 - はやくプログラムになりたい](http://rhysd.hatenablog.com/entry/2014/12/17/000053)\nに紹介があります。2017/02/02現在も活発に開発されているようです。\n\n```cpp:fmtlib/fmt\nfmt::print(\"Hello, {}!\", \"world\"); // =\u003e Hello, world!\nstd::string s = fmt::format(\"{0}{1}{0}\", \"abra\", \"cad\");\n// s == \"abracadabra\"\n```\n\n# auto\n\nいわゆる型推論ですね。[どこぞの](http://d.hatena.ne.jp/nowokay/20131224)[糞言語](http://cpplover.blogspot.jp/2009/11/java-7.html)[(Java)](http://docs.oracle.com/javase/jp/8/docs/technotes/guides/language/type-inference-generic-instance-creation.html)を除けば、型推論は右辺の型から左辺の型を推測するものです。\n\n```cpp\nint num = 2;\nauto re = 5 / num;//int型、2になる\n```\n\n組み込み型くらいはauto使わないほうがいいですが、``std::array::iterator``とか``std::vector\u003cstd::vector\u003cint\u003e\u003e::iterator``とかわけわかめな長さの型が使われるので必須機能です。\nあ、あとTMPする時・・・(ry\n\nこの辺はいなむ先生が、[C++アドベントカレンダー](http://www.adventar.org/calendars/926)12日目で\n[C++のつまずきポイント解説](http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e)\n詳しく書いているので、少し難し目ですがぜひ読んでみてください。\n\n# std::pair\n\nさて、こいつはなにかと便利です。純粋に２つの変数をまとめるだけのものです\n\n```c\ntypedef struct {\nint first;\nint second;\n} PAIR;\n```\n\nみたいなものを二度と書かなくて良くなります。２つペアのものって多いですからね。座標とか、画像の大きさとかetc...\n\n専用のクラスを書くまでもないときに重宝します。\n\n[C++でマイナンバーのチェックデジットを計算する](http://qiita.com/yumetodo/items/600ca0df422010cbc4c1)\nここでは\n\n```cpp:マイナンバー\n#include \u003cstring\u003e\n#include \u003cutility\u003e\n#include \u003cnumeric\u003e\n#include \u003cstdexcept\u003e\n#include \u003ccctype\u003e\nint calc_check_digit(const std::string\u0026 n) noexcept(false) {\n    if (11 != n.size()) throw std::runtime_error(\"n.digit must be 11\");\n    const int r = std::accumulate(n.rbegin(), n.rend(), std::pair\u003cint, int\u003e{}, [](const auto\u0026 s, const char\u0026 e) -\u003e std::pair\u003cint, int\u003e{\n        if(!std::isdigit(e)) throw std::runtime_error(\"n.digit must be 11\");\n        return {s.first + (e - '0') * ((5 \u003c s.second) ? s.second - 4 : s.second + 2), s.second + 1};\n    }).first % 11;\n    return (0 == r || 1 == r) ? 0 : 11 - r;\n}\n```\n\nfirstを合計、secoundをループカウントに使いました。\n\n# std::array\n\n配列です。説明は以上です。\n・・・嘘です。\n\nCにも配列があって\n\n```c\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#ifndef _countof\n#define _countof( arr ) ( sizeof(arr) / sizeof(arr[0]))\n#endif\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(size_t i = 0; i \u003c _countof(arr); ++i) printf(\"%d,\", arr[i]);\n\treturn 0;\n}\n```\n\nこんなコードを書いたことはあると思います。ちなみにこれC++だと\n\n```cpp\n#include \u003ciostream\u003e\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(auto it = std::begin(arr); it != std::end(arr); ++it) std::cout \u003c\u003c *it \u003c\u003c \", \";\n\treturn 0;\n}\n```\n\nこう書けます。``std::begin``と``std::end``が配列にも使えるんですね。\n\n``std::array``を使うと\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003carray\u003e\nint main()\n{\n\tstd::array\u003cint, 3\u003e arr = { 3, 4, 2 };\n\tfor(auto it = arr.begin(); it != arr.end(); ++it) std::cout \u003c\u003c *it \u003c\u003c \", \";\n\treturn 0;\n}\n```\nで、Cの配列ではなく``std::array``を使うメリットは、\n\n- ``back()``(最後の要素を取得)や``size()``(配列の大きさを取得)が使える\n- **式中でポインタとみなされない**\n\n式中でポインタとみなされないとはどういうこっちゃ？ですが、例えばCで要素型がint型の配列の全要素を表示する関数を作ることを考えてください。\n\n```c:C版の配列全要素を表示関数\n#include \u003cstdio.h\u003e\nvoid array_print(const int * arr, size_t size)\n{\n    for(size_t i = 0; i \u003c size; ++i) printf(\"%d, \", arr[i]);\n}\n```\n\nCでは御存知の通り、**配列は3つの例外を除き、常にポインタに読み替えられます**。3つの例外の1つは``sizeof``演算子を使う場合ですが、\n\n```c\n#include \u003cstdio.h\u003e\nvoid f(int arr[])\n{\n    printf(\"%d\", sizeof(arr));//arrはint*型\n}\nint main()\n{\n    int arr[5];\n    printf(\"%d\", sizeof(arr));//arrはint[5]型\n    f(arr);\n    return 0;\n}\n```\n\nこのように、要素数の型データが消えてしまうわけです。\n\nC++を使えばもうすこしマシに書けます。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003ccstddef\u003e\nvoid f(const int (\u0026arr)[5])\n{\n    std::cout \u003c\u003c sizeof(arr);//arrはconst int (\u0026)[5]型\n}\nint main()\n{\n    int arr[5];\n    std::cout \u003c\u003c sizeof(arr);//arrは//arrはint[5]型\n    f(arr);\n    return 0;\n}\n```\n\nしかし、参照として渡されてもそれを取り回すのがわりと面倒です。また戻り値として指定できないことには代わりありません。\n\nそこで``std::array``です。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003carray\u003e\nvoid f(const std::array\u003cint, 5\u003e\u0026 arr)\n{\n    std::cout \u003c\u003c arr.size();\n}\nint main()\n{\n    std::array\u003cint, 5\u003e arr;\n    std::cout \u003c\u003c arr.size();\n    f(arr);\n    return 0;\n}\n```\n\nすっきり。\n\nCを長くやっていた人なら、構造体のなかに配列のみをもたせたものを作った経験があるかもしれませんが、まさにそういう実装になっています。\n\nなお``size()``は明日のmyon___氏が記事で書いてくれるかもしれませんが、``constexpr``関数なのでコンパイル時に値が決定します。どこぞの[陶芸家で中３女子](http://boleros.hateblo.jp/)な人が喜びそう。\n\n# Range-based for\n\nRange-based forとはCの配列と、``begin()``/``end()``メンバ関数をもつクラス型と(特殊な?)ADLで``begin()``/``end()``関数が見つかる型にのみ提供できるfor文です。いわゆるforeachですね。\n\n\n```cpp:Range-based_for不使用\n#include \u003ciostream\u003e\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(auto it = std::begin(arr); it != std::end(arr); ++it) std::cout \u003c\u003c *it \u003c\u003c \", \";\n\treturn 0;\n}\n```\n\nこれが\n\n```cpp:Range-based_for使用\n#include \u003ciostream\u003e\nint main()\n{\n\tint arr[3] = { 3, 4, 2 };\n\tfor(auto\u0026\u0026 e : arr) std::cout \u003c\u003c e \u003c\u003c \", \";\n\treturn 0;\n}\n```\n\n```cpp:Range-based_for不使用\n#include \u003ciostream\u003e\n#include \u003carray\u003e\nint main()\n{\n\tstd::array\u003cint, 3\u003e arr = { 3, 4, 2 };\n\tfor(auto it = arr.begin(); it != end(); ++it) std::cout \u003c\u003c *it \u003c\u003c \", \";\n\treturn 0;\n}\n```\n\nこれが\n\n```cpp:Range-based_for使用\n#include \u003ciostream\u003e\n#include \u003carray\u003e\nint main()\n{\n\tstd::array\u003cint, 3\u003e arr = { 3, 4, 2 };\n\tfor(auto\u0026\u0026 e : arr) std::cout \u003c\u003c e \u003c\u003c \", \";\n\treturn 0;\n}\n```\n\nこう書けます。``auto\u0026\u0026``ってのはRange-based_forを使う際のおまじないです。ループ内でループ対象を書き換えないなら``const auto\u0026``のほうがいいかもしれませんが、前者の方が**汎用的なのでよくわからない時は前者を使えばいい**と思います。おまじないの原理は\n[range-based for loopsの要素の型について](http://qiita.com/rinse_/items/cdfce8aa6a685a8ebe0c)\nとコメントを参照してください。この下で話すReferenceの種類と参照できるものが関係します。\n\n\n\n# Reference\n\n参照、と言ったほうが聞いたことがあるかもしれません。**Referenceとはすでにある値に対し別名をつける機能です。**\nで、Referenceですが、大きくわけてlvalue referenceとrvalue referenceがあります。\n\nで、この2つにどんな差があるのか、ですが、参照できるものの型を除けば**なにも違いはありません**。よくrvalue referenceはlvalue referenceと全く異なる、と考えて違いを考えすぎるあまり、わけわかめになる人がいますが、Referenceには違いないのです。\n\n| 種類                              | 参照できるもの |\n|-----------------------------------|----------------|\n| lvalue reference(T\u0026)              | lvalue         |\n| const lvalue reference(const T\u0026)  | **なんでも**   |\n| rvalue reference (T\u0026\u0026)            | rvalue         |\n| const rvalue reference(const T\u0026\u0026) | const rvalue   |\n\n```cpp:Referenceの例\nstruct Test{\n\tint e;\n};\nconst Test make_Test(){ return Test(); }\nint main()\n{\n\tint a = 0;\n\tconst int b = 2;\n\tTest t;\n\tint\u0026 a_lr = a;\n\tconst int\u0026 a_clr = a;//OK\n\t//int\u0026 b_lr = b;//NG\n\tconst int\u0026 b_clr = b;//OK\n\tTest\u0026 t_lr = t;//OK\n\tTest\u0026\u0026 t_rr = Test();//OK\n\tconst Test\u0026 t_clr = Test();//OK\n\tconst Test\u0026\u0026 t_crr = make_Test();//OK\n\tconst Test\u0026 t_clr = make_Test();//OK\n\treturn 0;\n}\n```\n\nという感じで、``const lvalue reference``が無双というか最強なので、rvalue referenceはあまり出番がありません。\n\n## rvalue referenceをムーブに使う\n\n追記: **さらに明快な解説を書きました**\n[みんなlvalueとrvalueを難しく考えすぎちゃいないかい？](https://qiita.com/yumetodo/items/8eae5714a6cfe1c0407d)\n\nさて、ざっとconstの有無を含めて4つのreferenceがあったわけですが、rvalue referenceに出番が無いかというとそんなことはありません。まあ他にもありますが、最も一般的な例であるrvalue referenceの用途、moveを紹介します。\n\n実質的な機能は同じでも**型は違います**。また、それぞれ**優先順位があります**。ということは、関数のオーバーロードで型を変えれば呼び分けができるとうことです。\n優先順位の詳細は\n[const rvalue referenceは何に使えばいいのか - ここは匣](http://fimbul.hateblo.jp/entry/2013/12/22/015912)\nを参照していただくとして、簡単な例を見ましょう。・・・クラスがなにかの説明は省きます。\n\n```cpp:なんちゃってstringクラス\n#include \u003ccstring\u003e\n#include \u003ccstddef\u003e\n#include \u003ciostream\u003e\nclass inferior_string\n{\npublic:\n\tinferior_string() noexcept : m_s_(nullptr), m_len_(0), m_capacity_(0) {}\n\tinferior_string(const char* str)\n\t{\n\t\tconst std::size_t len = (nullptr == str) ? 0 : std::strlen(str);\n\t\tif(0 == len){\n\t\t\tthis-\u003em_s_ = nullptr;\n\t\t\tthis-\u003em_len_ = this-\u003em_capacity_ = 0;\n\t\t}\n\t\telse{\n\t\t\tconst std::size_t cap = 2 * len;\n\t\t\tthis-\u003em_s_ = new char[cap]();\n\t\t\tstd::memcpy(this-\u003em_s_, str, len);//copy\n\n\t\t\tthis-\u003em_len_ = len;\n\t\t\tthis-\u003em_capacity_ = cap;\n\t\t}\n\t}\n\tinferior_string(const inferior_string\u0026 o)//copy constructor\n\t{\n\t\tif(0 == o.m_len_){\n\t\t\tthis-\u003em_s_ = nullptr;\n\t\t\tthis-\u003em_len_ = this-\u003em_capacity_ = 0;\n\t\t}\n\t\telse{\n\t\t\tconst std::size_t cap = o.m_len_ * 2;\n\t\t\tthis-\u003em_s_ = new char[cap]();\n\t\t\tstd::memcpy(this-\u003em_s_, o.m_s_, o.m_len_);//copy\n\t\t\tthis-\u003em_len_ = o.m_len_;\n\t\t\tthis-\u003em_capacity_ = cap;\n\t\t}\n\t}\n\tinferior_string(inferior_string\u0026\u0026 o) noexcept\n\t: m_s_(o.m_s_), m_len_(o.m_len_), m_capacity_(o.m_capacity_)//move constructor\n\t{\n\t\to.m_s_ = nullptr;//disable input object's destructor. DO NO FORGEET!!!\n\t}\n\t~inferior_string()\n\t{\n\t\tdelete[] this-\u003em_s_;\n\t}\n\tconst char* c_str() const noexcept { return this-\u003em_s_; }\nprivate:\n\tchar* m_s_;\n\tstd::size_t m_len_;\n\tstd::size_t m_capacity_;\n};\nstd::ostream\u0026 operator\u003c\u003c (std::ostream\u0026 os, const inferior_string\u0026 str){\n\tos \u003c\u003c str.c_str();\n\treturn os;\n}\nint main()\n{\n\tinferior_string str = \"arikitari\";\n\tinferior_string str2 = str;//copy constructor call\n\tstd::cout \u003c\u003c str \u003c\u003c \", \" \u003c\u003c str2 \u003c\u003c \", \";\n\tinferior_string str3 = std::move(str);//move constructor call\n\t//inferior_string str3 = static_cast\u003cinferior_string\u0026\u0026\u003e(str);//同じ意味\n\tstd::cout \u003c\u003c str3 \u003c\u003c std::endl;\n\treturn 0;\n\n}\n```\nhttp://melpon.org/wandbox/permlink/Ame2XHIjS0oB0oLW\n\nこの場合、``const inferior_string\u0026``より``inferior_string\u0026\u0026``のほうが、オーバーロードの優先順位が高いので、\n\n```cpp\ninferior_string str3 = static_cast\u003cinferior_string\u0026\u0026\u003e(str);\n```\n\nこれはinferior_string\u0026\u0026を受け取る、move constructorが呼ばれます。ただし、このキャストを書くのはだるいので\n\n```cpp\ninferior_string str3 = std::move(str);\n```\n\nと書くのが一般的です。\n\nこうしてみてわかったように、**断じてrvalue reference自体にはmove機能はありません**。たかが参照に一体何を求めてるのさ。\n\nこの辺もいなむ先生が、[C++アドベントカレンダー](http://www.adventar.org/calendars/926)12日目で\n[C++のつまずきポイント解説](http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e)\n詳しく書いているので(ry\n\n念の為に引用しておきます\n\n\u003ehttp://cpplover.blogspot.jp/2009/12/rvalue-reference.html\n\u003estd::move()を、何かコア言語の機能のように勘違いしていませんか？\nあくまでSemanticsです。\nstd::moveは、static_cast(a)　をしているにすぎないのです。\nrvalue referenceも、単なるreferenceに過ぎないのです。\nMove Semanticsとは、たんにlvalueとrvalueを、movableなフラグとして使っているに過ぎないのです。\n\n\u003eその他は、lvalue referenceの場合と、何も変わりありません。\nlvalue referenceで、データメンバにアクセスしたからと言って、そのオブジェクトがその後使えなくなるとは限らないでしょう。\nもちろん、参照しているわけですから、publicなメンバ変数に対して、破壊的な書き換えもできるわけです。\n\n**単にlvalueとrvalueを、movableなフラグとして使っているに過ぎない**んです。\n\n# std::string\n\nさきほどなんちゃって文字列クラスを作りましたが、ちゃんとC++には``std::string``があるのでそれを使いましょう。\n**というかCで文字列操作するな、そういうことする言語じゃない！！**\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\nint main()\n{\n\tusing std::cout;\n\tusing std::endl;\n\tstd::string str1 = \"arikitari_na_world!\";\n\tcout \u003c\u003c str1 \u003c\u003c endl;\n\tstr1.popback();//最後の一文字消去\n\tcout \u003c\u003c str1 \u003c\u003c endl;\n\tconst auto str2 = str1.substr(0, str1.find_first_of('_'));//最初の'_'より前を抜き出し('_'は含めない)\n\tcout \u003c\u003c str2 \u003c\u003c endl;\n\tconst auto str3 = str2 + \"_toha\";//文字列の連結\n\tcout \u003c\u003c str3 \u003c\u003c endl;\n\treturn 0;\n}\n```\n\n・・・まあこんな感じで使えます。例えばフルパスからファイル名だけほしい時は\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\nstd::string get_n(const std::string\u0026 fullpath)\n{\n\treturn fullpath.substr(fullpath.find_last_of(\"\\\\/\"), fullpath.find_last_of('.'));\n}\nint main()\n{\n\tusing std::cout;\n\tusing std::endl;\n\tstd::string str1 = \"C:\\\\Users\\\\yumetodo\\\\OneDrive\\\\ドキュメント\\\\東京理科大\\\\物理学実験\\\\fit.log\";\n\tcout \u003c\u003c str1 \u003c\u003c endl;\n\tcout \u003c\u003c get_n(str1) \u003c\u003c endl;\n\treturn 0;\n}\n```\n\nこんな感じですね。とっても楽。\n\n**もっと初心者向け**な説明は\n[22日目| C++の文字列処理関係と正規探索（未完）について - 水面下の夢](http://yumechi0525.hatenablog.com/entry/2015/12/23/004020)\nへ。\n\n# template入門\n\nさきに「初心者にはtemplateなんて無理です」とか言ったのは誰でしょうね(私だ)。\n大丈夫です、入門です。んなのまじめに解説したら本が一冊書けます。以下の解説より詳しく知りたい人は、\n[C++関数テンプレートと半順序とオーバーロード](http://qiita.com/_EnumHack/items/cd904d383588ddb2189f)\nを見てください。いなむ先生がなぜかプロ生ちゃんのAdventCalenderに投稿してます。\n\nまあすでに出てきましたが。まずは定義から。\n\n\u003e テンプレートとは、コンパイル時に型や値を引数として渡す機能のことである。\n\u003e[14 テンプレート(Templates) | C++11の文法と機能(C++11: Syntax and Feature)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp)\n\n分かった・・・？いい？**コンパイル時だよ？コンパイル時**。そこ大事だからね。\n\n```cpp\n#include \u003ciostream\u003e\ntemplate\u003ctypename T_\u003e\nconstexpr const T_ \u0026 max(const T_\u0026 a, const T_\u0026 b)\n{\n    return (a \u003e b)? a : b;\n}\nint main()\n{\n    const auto hoge1 = max(54, 23);//hoge1はint型\n    const auto hoge2 = max\u003cunsigned int\u003e(54, 23);//hoge2はunsigned int型\n\n    std::cout \u003c\u003c hoge1 \u003c\u003c hoge2 \u003c\u003c std::endl;\n    return 0;\n}\n```\n\nみれば分かるように最大値を返す関数ですが、型が「T_」になってます。どういうことだってばよ？\n\nこれまで最大値を求める関数を作ろうと思ったら全部の型ごとに関数を書く必要が有りました。事実C言語のmath.hを見ると同じような機能の型が違う関数が乱造されています。んなもんいちいち覚えてらんないですよね？\n\nそういった背景から(?)C++では関数をオーバーロード出来るようになりました。つまり、引数の型が異なれば同名の関数をいくつでも作れるようになりました。\n\n2行目を見てください。templateから始まる部分がありますが、これがtemplateの仮引数と呼ばれるところです。関数にも仮引数があったけどあれに似てます。\nただし指定できるのは型名(とコンパイル時定数)のみです。\n例えばこの場合新たにT_という型をでっち上げているわけですが、この時点では実際の型はわかりません。若干違いますが型の異なる関数が**無限に存在するイメージで差し支えありません**(但し、コンパイル時に確定します)。\n\n7行目を見てください。これは[テンプレートの実引数推定(Template argument deduction)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp.expl.spec)という機能を使っています。\nできるだけ普通のプログラマーの常識に合わせるために、とても複雑になっているのですが、逆に言えば、\nノリと勘と気分となんとなくでどーにかなるということです。\nようはtemplate関数の引数に書いた型に推論されるわけで。まあみればわかるでしょ。\n\n8行目は[明示的なテンプレート実引数指定(explicit template argument specification)](http://ezoeryou.github.io/cpp-book/C++11-Syntax-and-Feature.xhtml#temp.fct.spec)と呼ばれていて、かっこ良く名前をつけましたがこの場合ならようはT_の型はunsigned intだよ～と教えているだけです。\n\n7, 8行目のようにtemplateを使ったもの(今回はtempalte関数)を実際に読んでコンパイルされると、先ほどの「無限に存在する」状態の例えで言うならどれか特定のものに定まります。\nもちろん実際に関数としてコンパイルされるのは呼び出されているものだけです(つまり使う場所と**同じ翻訳単位**にないとうまくいかない)。\n\n# 初心者だってstd::enable_ifでSFINAEしたい\n\n\u003e[C++関数テンプレートと半順序とオーバーロード](http://qiita.com/_EnumHack/items/cd904d383588ddb2189f)\n\u003eSFINAEとは\nSubstitution Failure Is Not A Error\nの略語である\n\n知らんかったわ、まあそれはさておき。\n\nテンプレートはどんな型でも受け取っていまいます。そのままだと**予期せぬ動作**をしたり、「[コンパイルエラーの爆発量を競う大会](http://faithandbrave.hateblo.jp/entry/2014/03/25/150659)」が開かれるほどのエラーメッセージがでます。\n使える型を制約するにはどうしたら良いでしょうか？\n\n## conceptの歴史(超要約)とC++1z(C++17)\nここでこの記事のタイトルを改めてみましょう。**「C99からC++14を駆け抜けるC++講座」**です。残念ながらC++1z(C++17)の機能は**紹介できない**わけです。\n\nなんでこんなことを書くかというと、C++1zに**concept**なる機能が提案されています。もともとC++11で入るはずのものでしたが、\n[Bjarne Stroustrup、Conceptと未来を語る | 本の虫](http://cpplover.blogspot.jp/2009/08/bjarne-stroustrupconcept_14.html)\nにあるように、かなりいろいろあって結局入りませんでした。それからまもなく6年、再びconceptが提案されています。\n[新機能\"コンセプト\"でC++1z時代のジェネリックプログラミング](http://qiita.com/_Nnwww/items/5a242466e94b2e432376)\n早くほしいです。これから紹介するstd::enable_ifよりも直感的なはずですから。\n\n追記:こんないい加減な説明より、**江添さんの\n[帰ってきたコンセプト | Boost勉強会 \\#16 大阪](http://ezoeryou.github.io/boost-benkyokai-oosaka-16/#/)\nが数千倍わかりやすいです。**(岡山の陶芸家([@bolero_MURAKAMI](https://twitter.com/bolero_MURAKAMI))とでちまるさんの兄([@decimalbloat](https://twitter.com/decimalbloat))はワロタ)\n\nしかし無いものは仕方ないです。std::enable_ifを紹介しましょう。\n\n更に追記:どうもC++17に提案されていたconceptはrejectされたっぽい・・・？C++11でもさんざん揉めて入らなかったのにまた入らねーのかよ！\n\nC++17の``if constexpr``とC++14の戻り値にautoを使う記法で少しましになりそうですが\n\n[![C++ Weekly - Ep 18 C++17's constexpr if](http://img.youtube.com/vi/qHgM5UdzPQU/0.jpg)](http://www.youtube.com/watch?v=qHgM5UdzPQU)\n\n```cpp:C++17\n#include \u003ctype_traits\u003e\ntemplate\u003ctypename T\u003e\nauto f(const T\u0026 a){\n    if constexpr(std::is_integral_v\u003cT\u003e){\n        return a + 1;\n    }\n    else if constexpr(std::is_floating_point_v\u003cT\u003e){\n        return a + 0.1;\n    }\n    else {\n        return a;\n    }\n}\nint main(){\n    using namespace std::literals;\n    [[maybe_unused]] auto a1 = f(1);//result: 2(int)\n    [[maybe_unused]] auto a2 = f(1.0);//result: 1.1(double)\n    [[maybe_unused]] auto a3 = f(\"arikitari\"s);//result: \"arikitari\"(std::string)\n}\n```\n\nいや、conceptくれ。\n\n## std::enable_if\n\n``std::enable_if``なるものがありまして、これを使うとSFINAEを~~悪用~~利用した型制約templateを書けます。\n\nいろいろ流儀がありますが、私は\n[std::enable_ifを使ってオーバーロードする時、enablerを使う？](http://qiita.com/kazatsuyu/items/203584ef4cb8b9e52462)\nの方法が好きなのでそれを紹介します。enablerを使わず、``std::nullptr_t``を使うといえば伝わる人には伝わるでしょう。\n\n例えば、算術型(intとかdoubleとか)だけを受け取りたい場合を考えましょう。\nまずは算術型か否かを判別する必要があります。\nそういう時に活躍するのが**type_traits**ヘッダーです。ていうか``std::enable_if``もこれ**includeしないと使えません**。\nで日本語より英語のサイトのほうがわかりやすいので\n[\\\u003ctype_traits\u003e - C++ Reference](http://www.cplusplus.com/reference/type_traits/)\nを見ながら話を進めます。\n\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/94177/61a6529b-1f46-b888-cc43-1b4a8fcbdca8.png)\n\nこんな風に書いてありますね。算術型はarithmeticって言うんですね・・・ってそうじゃない。\nつまり``std::is_arithmetic``をつかえばいいと分かります。\n[is_arithmetic - C++ Reference](http://www.cplusplus.com/reference/type_traits/is_arithmetic/)\n\n```cpp\nstd::is_arithmetic\u003cT\u003e::value\n```\n\nこれがtrueになる時、``T``は算術型ですね。\n\nさて、であとは``std::enable_if``を書くだけですが、その前に**おまじない**を。``typename``って書くのはだるいので。\n\n```cpp:alias_declarationでおまじない\nnamespace std{\n    template\u003cbool condition, typename T = void\u003e\n    using enable_if_t = typename std::enable_if\u003ccondition, T\u003e::type;\n}\n```\n\n``std::enable_if_t``ってのが標準にあるんですね。\n\nでは算術型のみ受け取る関数fを作ってみましよう。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003ctype_traits\u003e\ntemplate\u003ctypename T, std::enable_if_t\u003cstd::is_arithmetic\u003cT\u003e::value, std::nullptr_t\u003e = nullptr\u003e\nvoid f(T num)\n{\n    std::cout \u003c\u003c \"num:\" \u003c\u003c num \u003c\u003c std::endl;\n}\nint main()\n{\n    f(3);\n    //f(\"num\");\n    return 0;\n}\n```\n\nhttp://melpon.org/wandbox/permlink/Dfn1NNNNR2lXaYlr\n\nもしコメントアウトを外すと\n\n```\nprog.cc:12:5: error: no matching function for call to 'f'\n    f(\"num\");\n    ^\nprog.cc:3:48: note: candidate template ignored: disabled by 'enable_if' [with T = const char *]\nusing enable_if_type = typename std::enable_if\u003ccondition, T\u003e::type;\n                                               ^\n1 error generated.\n```\n\nのように**コンパイルエラーになります。やったぜ！**\n\nさて、ここからがSFINAEの出番です。\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003ctype_traits\u003e\ntemplate\u003ctypename T\u003e struct is_char_type : public std::false_type {};\ntemplate\u003ctypename T\u003e struct is_char_type\u003cT const\u003e : public type_traits::is_char_type\u003cT\u003e {};\ntemplate\u003ctypename T\u003e struct is_char_type\u003cT volatile\u003e : public type_traits::is_char_type\u003cT\u003e {};\ntemplate\u003ctypename T\u003e struct is_char_type\u003cT const volatile\u003e : public type_traits::is_char_type\u003cT\u003e {};\ntemplate\u003c\u003e struct is_char_type\u003cchar\u003e : public std::true_type {};\ntemplate\u003c\u003e struct is_char_type\u003cwchar_t\u003e : public std::true_type\t{};\ntemplate\u003c\u003e struct is_char_type\u003cchar16_t\u003e : public std::true_type {};\ntemplate\u003c\u003e struct is_char_type\u003cchar32_t\u003e : public std::true_type {};\ntemplate\u003ctypename T, std::enable_if_t\u003cstd::is_arithmetic\u003cT\u003e::value, std::nullptr_t\u003e = nullptr\u003e\nvoid f(T num)\n{\n    std::cout \u003c\u003c \"num:\" \u003c\u003c num \u003c\u003c std::endl;\n}\ntemplate\u003ctypename T, std::enable_if_t\u003cis_char_type\u003cT\u003e::value, std::nullptr_t\u003e = nullptr\u003e\nvoid f(const T* s)\n{\n    std::cout \u003c\u003c \"str:\" \u003c\u003c s \u003c\u003c std::endl;\n}\nint main()\n{\n    f(3);\n    f(\"num\");\n    return 0;\n}\n```\n\nこんな風に文字列へのポインタを受け取るオーバーロードを追加しました。\nもしSFINAEがないと``f(3)``という呼び出しはコンパイルエラーになります。なぜならば、オーバーロード解決のためにまずfという名前の関数を捜索し、2つ見つかるわけですが、下のほうのfが呼べるかを調べるときにエラーになるからです。\nSFINAEはこのエラーを**とりあえず無視(=オーバーロード候補から外す)**ので関数が一つに定まり、呼び分けができるわけです。\n\nちなみにC++03でも仕様が曖昧だっただけで使えたコンパイラもあったらしいです\n[任意の式によるSFINAE - cpprefjp C++日本語リファレンス](http://cpprefjp.github.io/lang/cpp11/sfinae_expressions.html)\n\nまとめると、``型名T``に制約を書ける場合は\n\n```cpp\ntemplate\u003ctypename T, std::enable_if_t\u003c許可条件(trueで有効), std::nullptr_t\u003e = nullptr\u003e\n```\n\nのように書けばいいということになります。\n\n\n実際にこれを使って、2次元のpointクラスを作ってみたものがこちらになります。\nhttps://github.com/Nagarei/DxLibEx/blob/master/dxlibex/basic_types/point2d.hpp#L72\n\n型制約をかけただけではSFINAEは使っていません、オーバーロード解決の際の候補から外すことがSFINAEです、念のため\n\n# templateでif\n\nもはや初心者とは何だったのかという内容ですが、さわりだけ。\n結論から言うと、C++11で``std::conditional``が入りまして、まんまIFなので、**それ使えばいいです**\n\n[メモ：std::conditionalでif～else if～elseみたいなことをしようとすると見づらい](http://qiita.com/kazatsuyu/items/f8c3b304e7f8b35263d8)\n[C++0x std::conditional - Faith and Brave - C++で遊ぼう](http://faithandbrave.hateblo.jp/entry/20100510/1273473979)\n\n```cpp\n//C++11 or later\nusing c_type = typename std::conditional\u003c[(コンパイル時に評価できる)条件式], [真の時の型], [偽の時の型]\u003e::type;\n//C++14 or later\nusing c_type = std::conditional_t\u003c[(コンパイル時に評価できる)条件式], [真の時の型], [偽の時の型]\u003e;\n```\n\nのように書けまして、\n\n[Variadic Template を使って switch を使ったテンプレート関数呼び出しを除去する](http://qiita.com/adatchey/items/7d721f7670c4cd8f8af0)\n[C++ Advent Calendar 2015](http://www.adventar.org/calendars/926)の2日目の記事ですがこんな具合に~~悪用~~利用できます\n\nですが**原理**を説明しましょう。\n\n```cpp\n#include \u003ctype_traits\u003e\ntemplate \u003cbool Con, class Then, class Else\u003e//(2, 3, 4)\nstruct IF;//(1)\ntemplate \u003cclass Then, class Else\u003e//(5)\nstruct IF\u003ctrue, Then, Else\u003e {//(6)template第一引数がtrueの時はこの定義\n    typedef Then type;//(7, 8, 12)\n};\ntemplate \u003cclass Then, class Else\u003e//(5)\nstruct IF\u003cfalse, Then, Else\u003e {//(6)template第一引数がfalseの時はこの定義\n    typedef Else type;//(7, 9, 15)\n};\n\n//中略\nusing type1 = typename IF\u003ctrue, int, double\u003e::type;//int型になる(10, 11, 13)\nusing type2 = typename IF\u003cfalse, int, double\u003e::type;//double型になる(10, 14, 16)\n```\n\n**まるで暗号のようだ**という声が聞こえてきそうです。一つ一つ説明します。\n\n1. まず、``IF``というクラス(structと書いてあるので原則public指定)があります。\n2. こいつはtemplateクラスです。\n3. このクラスのtemplate引数は3つです\n4. 一つ目は``bool``型、2つめと3つめは**型名**です\n5. 2つのtemplate特殊化があります\n6. template第1引数が**trueの時とfalseの時**です\n7. 2つのtemplate特殊化では**どちらでも型名typeがtypedefされます**\n8. template第1引数がtrueの時、**型名typeはtemplate第2引数の別名**となります。\n9. template第1引数がfalseの時、**型名typeはtemplate第3引数の別名**となります。\n10. このクラスを使ってみます。\n11. template第1実引数にtrueが指定されました\n12. 型名typeはtemplate第2実引数の別名になるのでint型になります\n13. それの別名として``type1``という新たな型を定義するので、``type1``はint型です\n14. template第1実引数にfalseが指定されました\n15. 型名typeはtemplate第3実引数の別名になるのでdouble型になります\n16. それの別名として``type2``という新たな型を定義するので、``type2``はdouble型です\n\n説明とコード中の()の数字を対応させながら読んでみてください。\n\nで、今回trueとかfalseとかやってたところはもちろん、``std::is_arithmetic``とか、とにかく**コンパイル時に値が決まれば**指定できます。\n\n# templateをつかって入力関数を作ってみよう\n\n追記\n**単体の記事にしました**\nhttp://qiita.com/yumetodo/items/2a1d5f855bae6d100658\n\n# License\n\n[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/deed.ja)\n\n\u003ca href=\"https://commons.wikimedia.org/wiki/File:CC-BY_icon.svg#/media/File:CC-BY_icon.svg\"\u003e\u003cimg src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/CC-BY_icon.svg/1200px-CC-BY_icon.svg.png\" alt=\"CC-BY icon.svg\" width=\"88px\"\u003e\u003c/a\u003e\n\n# C++初心者Advent Calendar 2015\nこの記事は[C++初心者Advent Calendar 2015](http://www.adventar.org/calendars/922) 17日目の記事です\n[\u003c\u003c9日目\t｜Clang with Microsoft CodeGenがでたので試す](http://qiita.com/yumetodo/items/bd41f31f39dd590e8c80)\n[\u003c\u003c16日目 | ブログズミ: Boost.Test v3 を使ってみた](http://srz-zumix.blogspot.jp/2015/12/boosttest-v3.html) || [18日目 | それC++なら#defineじゃなくてもできるよ | とさいぬの隠し部屋 \u003e\u003e](https://blog.myon.info/blog/2015-12-18/avoid-defining-macros/)\n\n次は18日目、myon___さんの「それ #define じゃなくてもできるよ」ですね。constexprとか出るのかな~~(きっと出ない)~~と思ったら触りだけでた\n","coediting":false,"comments_count":27,"created_at":"2015-12-17T00:46:03+09:00","group":null,"id":"e49a673afd9a3ecb81a8","likes_count":330,"private":false,"reactions_count":0,"tags":[{"name":"C","versions":[]},{"name":"C++","versions":[]},{"name":"C++11","versions":[]},{"name":"C99","versions":[]},{"name":"C++14","versions":[]}],"title":"C99からC++14を駆け抜けるC++講座","updated_at":"2019-04-02T11:20:25+09:00","url":"https://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"まだ訳し始めたばかりです\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A0%E8%A8%B3%E3%81%97%E5%A7%8B%E3%82%81%E3%81%9F%E3%81%B0%E3%81%8B%E3%82%8A%E3%81%A7%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまだ訳し始めたばかりです！！\u003c/h1\u003e\n\n\u003cp\u003eのんびりp0052r0を訳していたら\u003cdel\u003ep0052r1が出てしまったでござるp0052r2まで出てきた\u003c/del\u003eいつの間にかp0052r8まで行っていた・・・。\u003cbr\u003e\n\u003ca href=\"https://groups.google.com/a/isocpp.org/forum/#!topic/std-proposals/b74TFYOWRB8\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://groups.google.com/a/isocpp.org/forum/#!topic/std-proposals/b74TFYOWRB8\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"初めに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初めに\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"p0052とは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#p0052%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ep0052とは\u003c/h2\u003e\n\n\u003cp\u003eC++erなら江添氏のブログをすべて目を通すのは常識なので、すでにご存知かと思いますが\u003cbr\u003e\n\u003ca href=\"http://cpplover.blogspot.jp/2016/02/c-p0033r1-p0059r1.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpplover.blogspot.jp/2016/02/c-p0033r1-p0059r1.html\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://cpplover.blogspot.jp/2015/11/c-p0050r0-p0059r0.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpplover.blogspot.jp/2015/11/c-p0050r0-p0059r0.html\u003c/a\u003e\u003cbr\u003e\nで紹介されていますね。\u003c/p\u003e\n\n\u003cp\u003e要するにライブラリ版の\u003ccode\u003efinally\u003c/code\u003eである\u003ccode\u003escope_exit\u003c/code\u003eと汎用RAIIラッパーである\u003ccode\u003eunique_resource\u003c/code\u003eを標準に追加する提案です。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3677.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3677.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3830.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3830.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3949.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3949.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4189.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4189.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0052r0.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0052r0.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0052r1.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0052r1.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0052r2.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0052r2.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r3.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r3.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2017/p0052r4.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/JTC1/SC22/WG21/docs/papers/2017/p0052r4.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r5.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r5.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r6.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r6.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r7.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r7.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2018/p0052r8.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/JTC1/SC22/WG21/docs/papers/2018/p0052r8.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r9.pdf\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r9.pdf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこんな感じにバージョンアップしています。C++17に入らなかったので順調にC++17を踏まえた修正が入っているようです。\u003c/p\u003e\n\n\u003cp\u003eちなみに\u003ccode\u003escope_exit\u003c/code\u003e自体は\u003ca href=\"http://www.boost.org/doc/libs/1_59_0/boost/scope_exit.hpp\" rel=\"nofollow noopener\" target=\"_blank\"\u003eBoostにもあるようですが\u003c/a\u003eそれとはすこし違うようです\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"翻訳方針と注意事項\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%BF%BB%E8%A8%B3%E6%96%B9%E9%87%9D%E3%81%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e翻訳方針と注意事項\u003c/h2\u003e\n\n\u003cp\u003e今回は\u003ca href=\"https://github.com/Nagarei/DxLibEx/issues/19\" rel=\"nofollow noopener\" target=\"_blank\"\u003e諸事情あり\u003c/a\u003e、\u003ccode\u003escope_exit\u003c/code\u003e周辺の翻訳を優先していきます。\u003cbr\u003e\u003cbr\u003e\n機械翻訳のほうがまし、とか言わない。\u003cbr\u003e\u003cbr\u003e\n\u003cdel\u003e一週間くらいで\u003ccode\u003escope_exit\u003c/code\u003eの訳が終わると良いなぁ(大変そう)\u003c/del\u003e\u003cbr\u003e\u003cbr\u003e\n訳せないところはとりあえず英語のままにしておく。下手な日本語訳よりはマシのはず\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"p0052---generic-scope-guard-and-raii-wrapper-for-the-standard-library\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#p0052---generic-scope-guard-and-raii-wrapper-for-the-standard-library\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eP0052 - Generic Scope Guard and RAII Wrapper for the Standard Library\u003c/h1\u003e\n\n\u003cp\u003ePeter Sommerlad and Andrew L. Sandoval\u003cbr\u003e\n2015-09-27\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eDocument Number:p0052r8\u003c/td\u003e\n\u003ctd\u003e(update of N4189, N3949, N3830, N3677)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDate\u003c/td\u003e\n\u003ctd\u003e2018-04-24\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eProject\u003c/td\u003e\n\u003ctd\u003eProgramming Language C++\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eAudience\u003c/td\u003e\n\u003ctd\u003eLWG/LEWG\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"1歴史\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1%E6%AD%B4%E5%8F%B2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.歴史\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"17p0052r1からの変更点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#17p0052r1%E3%81%8B%E3%82%89%E3%81%AE%E5%A4%89%E6%9B%B4%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.7.P0052R1からの変更点\u003c/h3\u003e\n\n\u003cp\u003eThe Jacksonville LEWG, especially Eric Niebler gave splendid input in how to improve the classes in this paper. I (Peter) follow Eric’s design in specifying scope_exit as well as unique_resource in a more general way.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProvide scope_fail and scope_success as classes. However, we may even hide all of the scope guard types and just provide the factories.\u003c/li\u003e\n\u003cli\u003esafe guard all classes against construction errors, i.e., failing to copy the deleter/exit-function, by calling the passed argument in the case of an exception, except for scope_success.\u003c/li\u003e\n\u003cli\u003erelax the requirements for the template arguments.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSpecial thanks go to Eric Niebler for providing several incarnations of an implementation that removed previous restrictions on template arguments in an exception-safe way (Eric: \"This is HARD.\"). To cite Eric again: \"Great care must be taken when move-constructing or move-assigning unique_resource objects to ensure that there is always exactly one object that owns the resource and is in a valid, Destructible state.\" Also thanks to Axel Naumann for presenting in Jacksonville and to Axel, Eric, and Daniel Krügler for their terrific work on wording improvements.\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"18p0052r0からの変更点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#18p0052r0%E3%81%8B%E3%82%89%E3%81%AE%E5%A4%89%E6%9B%B4%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.8.P0052R0からの変更点\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"http://cpplover.blogspot.jp/2016/01/c-n4553-n4567.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eKona会議(2015/10)\u003c/a\u003eでは多くの意見が得られた。\u003cbr\u003e\u003cbr\u003e\n(訳注:\u003ccode\u003enothrow copy constructible\u003c/code\u003eであるか、\u003ccode\u003enothrow move constructible\u003c/code\u003eであるか、referenceを持つのかで特殊化はめんdなので)リソースとデリーターの型は\u003cstrong\u003e\u003ccode\u003enothrow-copyable\u003c/code\u003eを満たすもののみ\u003c/strong\u003eにすることで、コンストラクターと文面をシンプルに、という意見が際立っていた。\u003cbr\u003e\u003cbr\u003e\nreferenceを要求する場合、コンストラクターや文面は複雑になり、ユーザーはmake系関数に渡すのに\u003ccode\u003estd::ref\u003c/code\u003e/\u003ccode\u003estd::cref\u003c/code\u003eを使うようになってしまう\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003enothrow copyable\u003c/code\u003eな型に制限することでコンストラクタと文面をシンプルに。本当にシンプルな型を想定しています。この変更は型消去をする\u003ccode\u003estd::function\u003c/code\u003eオブジェクトをデリーターとして指定した時、コピー時に例外を投げる可能性があるという問題を回避します。\u003c/li\u003e\n\u003cli\u003e動機(motivation)の項を文面に復活させた。レビューをしやすくして、特定APIの問題への理由を提供する\u003c/li\u003e\n\u003cli\u003eMake \"Alexandrescu's\" \"declarative\" scope exit variation employing \u003ccode\u003euncaught_exceptions()\u003c/code\u003e counter optional factories to chose or not.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003escopre\u003c/code\u003eヘッダーを対応するテーブルに追加し、スタンドアロンで利用できるように\u003c/li\u003e\n\u003cli\u003e編集上の微調整\u003c/li\u003e\n\u003cli\u003eunique_resourceの\u003ccode\u003eoperator*\u003c/code\u003eを再び追加\u003c/li\u003e\n\u003cli\u003eリソースを\u003ccode\u003ereference_wrapper\u003c/code\u003eとして受け取れる\u003ccode\u003emake_unique_resource\u003c/code\u003eのオーバーロードを追加。\u003cbr\u003e\n\u003ccode\u003ereference_wrapper\u003c/code\u003e自体が\u003ccode\u003eoperator()\u003c/code\u003eを提供しているので、デリーター関数が\u003ccode\u003ereference_wrapper\u003c/code\u003eを介して来ることを想定したオーバーロードは必要ないです。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"19n4189からの変更点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#19n4189%E3%81%8B%E3%82%89%E3%81%AE%E5%A4%89%E6%9B%B4%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.9.N4189からの変更点\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4153.pdf\" rel=\"nofollow noopener\" target=\"_blank\"\u003eCologne会議(2015/02)\u003c/a\u003eで指摘された文面の問題をLWGに提出するために修正を試みる(\u003ca href=\"https://isocpp.org/wiki/faq/wg21#ville-voutilainen\" rel=\"nofollow noopener\" target=\"_blank\"\u003eVille Voutilainen\u003c/a\u003eから知らされたのが、締め切りの一週間前だったので、すべてを反映出来ていません)\n\n\u003cul\u003e\n\u003cli\u003e終了時に実行される関数が\u003ccode\u003enothrow copy constructible\u003c/code\u003eであるか、\n\u003ccode\u003enothrow move constructible\u003c/code\u003eであるか、referenceを持つのかによって、特殊化されるべきである.\u003cbr\u003e\n\u003ccode\u003estd::unique_ptr\u003c/code\u003eのデリーター指定コンストラクタの文面と実装を借用した  \u003csup id=\"fnref1\"\u003e\u003ca href=\"#fn1\" rel=\"footnote\" title=\"https://ask.fm/EzoeRyou/answer/133453870679\"\u003e1\u003c/a\u003e\u003c/sup\u003e\n\u003c/li\u003e\n\u003cli\u003eこの2つ(訳注:\u003ccode\u003escope_exit\u003c/code\u003eと\u003ccode\u003eunique_resource\u003c/code\u003e)は\u003ccode\u003e\u0026lt;scope\u0026gt;\u003c/code\u003eという一つのヘッダーファイルにまとめる\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003escope_exit\u003c/code\u003eには、関数群を Alexandrescu氏 \u003csup id=\"fnref2\"\u003e\u003ca href=\"#fn2\" rel=\"footnote\" title=\"N3677の本文中および脚注のリンクを見る限り、この提案はAndrei Alexandrescu 氏の発表に影響を受けている模様\"\u003e2\u003c/a\u003e\u003c/sup\u003e 提唱の\u003ccode\u003e3 scope exit cases\u003c/code\u003e \u003csup id=\"fnref3\"\u003e\u003ca href=\"#fn3\" rel=\"footnote\" title=\"よくわからない。知ってる人教えてください\"\u003e3\u003c/a\u003e\u003c/sup\u003e に対し特殊化する。\u003cbr\u003e\n\u003ccode\u003eunique_resource\u003c/code\u003eにはこれに類似のものは意図的に提供しない.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e動機とexample codeは長いから消した\u003c/li\u003e\n\u003cli\u003eUrbanaとCologneの会議からのフィードバックを受け修正\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"110n3949からの変更点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#110n3949%E3%81%8B%E3%82%89%E3%81%AE%E5%A4%89%E6%9B%B4%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.10.N3949からの変更点\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e以下のとおり改名した(表は訳者作成)\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eN3949(変更前)\u003c/th\u003e\n\u003cth\u003eN4189(変更後)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003escope_guard_t\u003c/td\u003e\n\u003ctd\u003escope_exit\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003escope_guard\u003c/td\u003e\n\u003ctd\u003emake_scope_exit\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003escope_guard_t::deleter\u003c/td\u003e\n\u003ctd\u003escope_exit::exit_function\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eunique_resource_t\u003c/td\u003e\n\u003ctd\u003eunique_resource\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eunique_resource\u003c/td\u003e\n\u003ctd\u003emake_unique_resource\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eunique_resource_checked\u003c/td\u003e\n\u003ctd\u003emake_unique_resource_checked\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e理由 : ユーザーに対し、「ローカル変数に結果を保存する」というイメージではなく、「一時的で直ちに破壊される」というイメージを持ってもらうため \u003csup id=\"fnref4\"\u003e\u003ca href=\"#fn4\" rel=\"footnote\" title=\"江添さんのブログには「自動ストレージ上に確保する習慣をつけさせるため」と書いてある。訳に自信がない\"\u003e4\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e(訳注:改名後で言うmake系)関数群を(訳注:\u003ccode\u003estd::move\u003c/code\u003eではなく)\u003ccode\u003estd::forward\u003c/code\u003eをつかうようにし、reference型に推論(訳注:Template Argument Deductionのこと)されないようにした\u003c/li\u003e\n\u003cli\u003e呼び出し引数が無い版の\u003ccode\u003ereset()\u003c/code\u003e関数の追加と、(訳注:引数無し、あり双方の)\u003ccode\u003ereset()\u003c/code\u003e関数のnoexcept指定がexit_functionに依存するようにした\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"111n3830からの変更点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#111n3830%E3%81%8B%E3%82%89%E3%81%AE%E5%A4%89%E6%9B%B4%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.11.N3830からの変更点\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e以下のとおり改名した(表は訳者作成)\u003cbr\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eN3830\u003c/th\u003e\n\u003cth\u003eN3949\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003escoped_resource\u003c/td\u003e\n\u003ctd\u003eunique_resource_t\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emake_scoped_resource\u003c/td\u003e\n\u003ctd\u003eunique_resource\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emake_scoped_resource_checked\u003c/td\u003e\n\u003ctd\u003eunique_resource_checked\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003escope_guard_t\u003c/code\u003eクラスと\u003ccode\u003escope_guard\u003c/code\u003eクラス生成関数によるscope guard機能の追加\u003c/li\u003e\n\u003cli\u003eシンプルなインターフェースにするため、(訳注:resourceを受け取る)可変長引数を削除した(訳注:単一引数に)。\u003cbr\u003e\n理由:lmanbdaは複数の引数を必要とする複雑な公開API群を扱える\u003c/li\u003e\n\u003cli\u003elambda関数を指定しやすくするため、make系関数の引数で、デリーターを後に変更した\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"112n3677からの変更点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#112n3677%E3%81%8B%E3%82%89%E3%81%AE%E5%A4%89%E6%9B%B4%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.12.N3677からの変更点\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e提案されていた4つのクラス(訳注:\u003ccode\u003escoped_function\u003c/code\u003e, \u003ccode\u003escoped_resource_unchecked\u003c/code\u003e, \u003ccode\u003escoped_resource\u003c/code\u003e, \u003ccode\u003eunique_resource\u003c/code\u003e)を一つのクラス(訳注:\u003ccode\u003escoped_resource\u003c/code\u003e)に置き換えた。可変長templateを使用してすべての使用ケースをカバーする。これは2013年秋のLEWG meetingで決定された。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe conscious decision was made to name the factory functions without \"make\", because they actually do not allocate any resources, like std::make_unique or std::make_shared do\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e(訳注:以下、N3830には載っていなくて、N3949の文章から追加された文言です。なのでN3949でmakeという名前が消された改名の説明だと思います)\u003ccode\u003estd::make_unique\u003c/code\u003eや\u003ccode\u003estd::make_shared\u003c/code\u003eがいい例ですが、クラス生成関数(訳注:N3830でいうmake_scoped_resource関数)は実際には一切リソースを確保しません。よって名前に\u003ccode\u003emake_\u003c/code\u003eを含めないようにしました。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"2-introduction\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#2-introduction\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2 Introduction\u003c/h2\u003e\n\n\u003cp\u003eSTLには、\u003ccode\u003estd::unique_ptr\u003c/code\u003eや\u003ccode\u003estd::shared_ptr\u003c/code\u003eのようなポインタ型向けのRAIIクラスがある。この提案では、2つのRAIIクラスを提案する。これは、(オブジェクトが破棄されるのと同じように)スコープを抜けるときに実行されることを保証し、スコープに紐付けられてリソースを掃除/完成させるルーチンのクラスである。ただし、(訳注:スコープを抜けるより)早く開放された場合や、一つのリソースがあるときにすでに実行されたかムーブされた場合は実行されない。\u003csup id=\"fnref5\"\u003e\u003ca href=\"#fn5\" rel=\"footnote\" title=\"returned by moving its valueってこの訳でいいのか・・・？\"\u003e5\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"3-acknowledgements謝辞\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#3-acknowledgements%E8%AC%9D%E8%BE%9E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e3 Acknowledgements(謝辞)\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eこの提案は随分前にAndrej Alexandrescuがscope guardとして紹介し、C++Now 2012でも説明していたものを組み込んでいます。\u003c/li\u003e\n\u003cli\u003eThis proposal would not have been possible without the impressive work of Peter Sommerlad who produced the sample implementation during the Fall 2013 committee meetings in Chicago. Peter took what Andrew Sandoval produced for N3677 and demonstrated the possibility of using C++14 features to make a single, general purpose RAII wrapper capable of fulfilling all of the needs presented by the original 4 classes (from N3677) with none of the compromises.\u003c/li\u003e\n\u003cli\u003eGratitude is also owed to members of the LEWG participating in the February 2014 (Issaquah) and Fall 2013 (Chicago) meeting for their support, encouragement, and suggestions that have led to this proposal.\u003c/li\u003e\n\u003cli\u003eSpecial thanks and recognition goes to OpenSpan, Inc. (\u003ca href=\"http://www.openspan.com\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.openspan.com\u003c/a\u003e) for supporting the production of this proposal, and for sponsoring Andrew L. Sandoval's first proposal (N3677) and the trip to Chicago for the Fall 2013 LEWG meeting. \u003cem\u003eNote: this version abandons the over-generic version from N3830 and comes back to two classes with one or no resource to be managed.\u003c/em\u003e\n\u003c/li\u003e\n\u003cli\u003eThanks also to members of the mailing lists who gave feedback. Especially Zhihao Yuan, and Ville Voutilainen.\u003c/li\u003e\n\u003cli\u003eSpecial thanks to Daniel Krügler for his deliberate review of the draft version of this paper (D3949).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"脚注\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%84%9A%E6%B3%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e脚注\u003c/h1\u003e\n\n\u003cdiv class=\"footnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\n\u003cli id=\"fn1\"\u003e\n\u003cp\u003e\u003ca href=\"https://ask.fm/EzoeRyou/answer/133453870679\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://ask.fm/EzoeRyou/answer/133453870679\u003c/a\u003e \u003ca href=\"#fnref1\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn2\"\u003e\n\u003cp\u003e\u003ca href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3677.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eN3677\u003c/a\u003eの本文中および\u003ca href=\"http://www.drdobbs.com/cpp/generic-change-the-way-you-write-excepti/184403758?pgno=1\" rel=\"nofollow noopener\" target=\"_blank\"\u003e脚注のリンク\u003c/a\u003eを見る限り、この提案はAndrei Alexandrescu 氏の発表に影響を受けている模様 \u003ca href=\"#fnref2\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn3\"\u003e\n\u003cp\u003eよくわからない。知ってる人教えてください \u003ca href=\"#fnref3\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn4\"\u003e\n\u003cp\u003e\u003ca href=\"http://cpplover.blogspot.jp/2015/11/c-p0050r0-p0059r0.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e江添さんのブログ\u003c/a\u003eには「自動ストレージ上に確保する習慣をつけさせるため」と書いてある。訳に自信がない \u003ca href=\"#fnref4\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn5\"\u003e\n\u003cp\u003ereturned by moving its valueってこの訳でいいのか・・・？ \u003ca href=\"#fnref5\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003c/ol\u003e\n\u003c/div\u003e\n","body":"# まだ訳し始めたばかりです！！\n\nのんびりp0052r0を訳していたら~~p0052r1が出てしまったでござるp0052r2まで出てきた~~いつの間にかp0052r8まで行っていた・・・。\nhttps://groups.google.com/a/isocpp.org/forum/#!topic/std-proposals/b74TFYOWRB8\n\n# 初めに\n## p0052とは\n\nC++erなら江添氏のブログをすべて目を通すのは常識なので、すでにご存知かと思いますが\nhttp://cpplover.blogspot.jp/2016/02/c-p0033r1-p0059r1.html\nhttp://cpplover.blogspot.jp/2015/11/c-p0050r0-p0059r0.html\nで紹介されていますね。\n\n要するにライブラリ版の`finally`である`scope_exit`と汎用RAIIラッパーである`unique_resource`を標準に追加する提案です。\n\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3677.html\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3830.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3949.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4189.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0052r0.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0052r1.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0052r2.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r3.pdf\n- http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2017/p0052r4.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r5.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0052r6.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r7.pdf\n- http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2018/p0052r8.pdf\n- http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r9.pdf\n\nこんな感じにバージョンアップしています。C++17に入らなかったので順調にC++17を踏まえた修正が入っているようです。\n\nちなみに`scope_exit`自体は[Boostにもあるようですが](http://www.boost.org/doc/libs/1_59_0/boost/scope_exit.hpp)それとはすこし違うようです\n\n## 翻訳方針と注意事項\n\n今回は[諸事情あり](https://github.com/Nagarei/DxLibEx/issues/19)、`scope_exit`周辺の翻訳を優先していきます。  \n機械翻訳のほうがまし、とか言わない。  \n~~一週間くらいで`scope_exit`の訳が終わると良いなぁ(大変そう)~~  \n訳せないところはとりあえず英語のままにしておく。下手な日本語訳よりはマシのはず\n\n# P0052 - Generic Scope Guard and RAII Wrapper for the Standard Library\n\nPeter Sommerlad and Andrew L. Sandoval\n2015-09-27\n\n|                 |                                              |\n|-----------------|----------------------------------------------|\n| Document Number:p0052r8 | (update of N4189, N3949, N3830, N3677) |\n| Date            | 2018-04-24                                   |\n| Project         | Programming Language C++                     |\n| Audience        | LWG/LEWG                                     |\n\n## 1.歴史\n\n### 1.7.P0052R1からの変更点\n\nThe Jacksonville LEWG, especially Eric Niebler gave splendid input in how to improve the classes in this paper. I (Peter) follow Eric’s design in specifying scope_exit as well as unique_resource in a more general way.\n\n- Provide scope_fail and scope_success as classes. However, we may even hide all of the scope guard types and just provide the factories.\n- safe guard all classes against construction errors, i.e., failing to copy the deleter/exit-function, by calling the passed argument in the case of an exception, except for scope_success.\n- relax the requirements for the template arguments.\n\nSpecial thanks go to Eric Niebler for providing several incarnations of an implementation that removed previous restrictions on template arguments in an exception-safe way (Eric: \"This is HARD.\"). To cite Eric again: \"Great care must be taken when move-constructing or move-assigning unique_resource objects to ensure that there is always exactly one object that owns the resource and is in a valid, Destructible state.\" Also thanks to Axel Naumann for presenting in Jacksonville and to Axel, Eric, and Daniel Krügler for their terrific work on wording improvements.\n\n### 1.8.P0052R0からの変更点\n\n[Kona会議(2015/10)](http://cpplover.blogspot.jp/2016/01/c-n4553-n4567.html)では多くの意見が得られた。  \n(訳注:`nothrow copy constructible`であるか、`nothrow move constructible`であるか、referenceを持つのかで特殊化はめんdなので)リソースとデリーターの型は**`nothrow-copyable`を満たすもののみ**にすることで、コンストラクターと文面をシンプルに、という意見が際立っていた。  \nreferenceを要求する場合、コンストラクターや文面は複雑になり、ユーザーはmake系関数に渡すのに`std::ref`/`std::cref`を使うようになってしまう\n\n- `nothrow copyable`な型に制限することでコンストラクタと文面をシンプルに。本当にシンプルな型を想定しています。この変更は型消去をする`std::function`オブジェクトをデリーターとして指定した時、コピー時に例外を投げる可能性があるという問題を回避します。\n- 動機(motivation)の項を文面に復活させた。レビューをしやすくして、特定APIの問題への理由を提供する\n- Make \"Alexandrescu's\" \"declarative\" scope exit variation employing `uncaught_exceptions()` counter optional factories to chose or not.\n- `scopre`ヘッダーを対応するテーブルに追加し、スタンドアロンで利用できるように\n- 編集上の微調整\n- unique_resourceの`operator*`を再び追加\n- リソースを`reference_wrapper`として受け取れる`make_unique_resource`のオーバーロードを追加。  \n`reference_wrapper`自体が`operator()`を提供しているので、デリーター関数が`reference_wrapper`を介して来ることを想定したオーバーロードは必要ないです。\n\n### 1.9.N4189からの変更点\n\n- [Cologne会議(2015/02)](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4153.pdf)で指摘された文面の問題をLWGに提出するために修正を試みる([Ville Voutilainen](https://isocpp.org/wiki/faq/wg21#ville-voutilainen)から知らされたのが、締め切りの一週間前だったので、すべてを反映出来ていません)\n  - 終了時に実行される関数が`nothrow copy constructible`であるか、\n`nothrow move constructible`であるか、referenceを持つのかによって、特殊化されるべきである.  \n`std::unique_ptr`のデリーター指定コンストラクタの文面と実装を借用した  [^1]\n  - この2つ(訳注:`scope_exit`と`unique_resource`)は`\u003cscope\u003e`という一つのヘッダーファイルにまとめる\n  - `scope_exit`には、関数群を Alexandrescu氏 [^2] 提唱の`3 scope exit cases` [^3] に対し特殊化する。  \n`unique_resource`にはこれに類似のものは意図的に提供しない.\n- 動機とexample codeは長いから消した\n- UrbanaとCologneの会議からのフィードバックを受け修正\n\n### 1.10.N3949からの変更点\n\n- 以下のとおり改名した(表は訳者作成)  \n\n| N3949(変更前)           | N4189(変更後)                 |\n|-------------------------|------------------------------|\n| scope_guard_t           | scope_exit                   |\n| scope_guard             | make_scope_exit              |\n| scope_guard_t::deleter  | scope_exit::exit_function    |\n| unique_resource_t       | unique_resource              |\n| unique_resource         | make_unique_resource         |\n| unique_resource_checked | make_unique_resource_checked |\n\n理由 : ユーザーに対し、「ローカル変数に結果を保存する」というイメージではなく、「一時的で直ちに破壊される」というイメージを持ってもらうため [^4]\n\n- (訳注:改名後で言うmake系)関数群を(訳注:`std::move`ではなく)`std::forward`をつかうようにし、reference型に推論(訳注:Template Argument Deductionのこと)されないようにした\n- 呼び出し引数が無い版の`reset()`関数の追加と、(訳注:引数無し、あり双方の)`reset()`関数のnoexcept指定がexit_functionに依存するようにした\n\n### 1.11.N3830からの変更点\n\n- 以下のとおり改名した(表は訳者作成)  \n\n| N3830                        | N3949                   |\n|------------------------------|-------------------------|\n| scoped_resource              | unique_resource_t       |\n| make_scoped_resource         | unique_resource         |\n| make_scoped_resource_checked | unique_resource_checked |\n\n- `scope_guard_t`クラスと`scope_guard`クラス生成関数によるscope guard機能の追加\n- シンプルなインターフェースにするため、(訳注:resourceを受け取る)可変長引数を削除した(訳注:単一引数に)。  \n理由:lmanbdaは複数の引数を必要とする複雑な公開API群を扱える\n- lambda関数を指定しやすくするため、make系関数の引数で、デリーターを後に変更した\n\n### 1.12.N3677からの変更点\n\n- 提案されていた4つのクラス(訳注:`scoped_function`, `scoped_resource_unchecked`, `scoped_resource`, `unique_resource`)を一つのクラス(訳注:`scoped_resource`)に置き換えた。可変長templateを使用してすべての使用ケースをカバーする。これは2013年秋のLEWG meetingで決定された。\n\n\u003e The conscious decision was made to name the factory functions without \"make\", because they actually do not allocate any resources, like std::make_unique or std::make_shared do\n\n- (訳注:以下、N3830には載っていなくて、N3949の文章から追加された文言です。なのでN3949でmakeという名前が消された改名の説明だと思います)`std::make_unique`や`std::make_shared`がいい例ですが、クラス生成関数(訳注:N3830でいうmake_scoped_resource関数)は実際には一切リソースを確保しません。よって名前に`make_`を含めないようにしました。\n\n## 2 Introduction\n\nSTLには、`std::unique_ptr`や`std::shared_ptr`のようなポインタ型向けのRAIIクラスがある。この提案では、2つのRAIIクラスを提案する。これは、(オブジェクトが破棄されるのと同じように)スコープを抜けるときに実行されることを保証し、スコープに紐付けられてリソースを掃除/完成させるルーチンのクラスである。ただし、(訳注:スコープを抜けるより)早く開放された場合や、一つのリソースがあるときにすでに実行されたかムーブされた場合は実行されない。[^5]\n\n## 3 Acknowledgements(謝辞)\n\n- この提案は随分前にAndrej Alexandrescuがscope guardとして紹介し、C++Now 2012でも説明していたものを組み込んでいます。\n- This proposal would not have been possible without the impressive work of Peter Sommerlad who produced the sample implementation during the Fall 2013 committee meetings in Chicago. Peter took what Andrew Sandoval produced for N3677 and demonstrated the possibility of using C++14 features to make a single, general purpose RAII wrapper capable of fulfilling all of the needs presented by the original 4 classes (from N3677) with none of the compromises.\n- Gratitude is also owed to members of the LEWG participating in the February 2014 (Issaquah) and Fall 2013 (Chicago) meeting for their support, encouragement, and suggestions that have led to this proposal.\n- Special thanks and recognition goes to OpenSpan, Inc. (http://www.openspan.com) for supporting the production of this proposal, and for sponsoring Andrew L. Sandoval's first proposal (N3677) and the trip to Chicago for the Fall 2013 LEWG meeting. *Note: this version abandons the over-generic version from N3830 and comes back to two classes with one or no resource to be managed.*\n- Thanks also to members of the mailing lists who gave feedback. Especially Zhihao Yuan, and Ville Voutilainen.\n- Special thanks to Daniel Krügler for his deliberate review of the draft version of this paper (D3949).\n\n# 脚注\n\n[^1]: https://ask.fm/EzoeRyou/answer/133453870679\n[^2]: [N3677](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3677.html)の本文中および[脚注のリンク](http://www.drdobbs.com/cpp/generic-change-the-way-you-write-excepti/184403758?pgno=1)を見る限り、この提案はAndrei Alexandrescu 氏の発表に影響を受けている模様\n[^3]: よくわからない。知ってる人教えてください\n[^4]: [江添さんのブログ](http://cpplover.blogspot.jp/2015/11/c-p0050r0-p0059r0.html)には「自動ストレージ上に確保する習慣をつけさせるため」と書いてある。訳に自信がない\n[^5]: returned by moving its valueってこの訳でいいのか・・・？\n","coediting":false,"comments_count":4,"created_at":"2015-12-12T03:54:18+09:00","group":null,"id":"3513677a4b8942763886","likes_count":11,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"C++17","versions":[]},{"name":"C++1z","versions":[]},{"name":"p0052r0","versions":[]}],"title":"p0052をのんびり和訳していく","updated_at":"2018-12-09T11:01:29+09:00","url":"https://qiita.com/yumetodo/items/3513677a4b8942763886","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"c初心者advent-calendar-2015\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%BF%83%E8%80%85advent-calendar-2015\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++初心者Advent Calendar 2015\u003c/h1\u003e\n\n\u003cp\u003eこの記事は\u003ca href=\"http://www.adventar.org/calendars/922\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++初心者Advent Calendar 2015\u003c/a\u003e 9日目の記事です\u003cbr\u003e\n\u003ca href=\"http://cocodrips.hateblo.jp/entry/2015/12/08/221722\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u0026lt;\u0026lt; 8日目 | C++のポインタ渡しと参照渡しの使い分け\u003c/a\u003e || \u003ca href=\"http://qiita.com/Roadagain/items/8ec4ab4ba6c46fe0ce41\" id=\"reference-62baee53c86e2b3e9ed0\"\u003e10日目 | テンプレートでコケた話 \u0026gt;\u0026gt;\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8\" id=\"reference-c97523ee8b5fc684ac80\"\u003e17日目 | C99からC++14を駆け抜けるC++講座 \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e個人的には、\u003ca href=\"https://ezoeryou.github.io/blog/article/2015-05-18-kabukiza-tech-8.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e歌舞伎座.tech #8 「C++初心者会」\u003c/a\u003eとか見て以降、「初心者」が怖くなってしまっていますが(\u003ca href=\"http://www.shigemk2.com/entry/kbkz_tech.8.3\" rel=\"nofollow noopener\" target=\"_blank\"\u003e初心者がBoost.asioをつかえるもんか！\u003c/a\u003e)、ここまでは初心者向けで\u003cstrong\u003eものすごくホッとしています\u003c/strong\u003e。初日の\u003cbr\u003e\n\u003ca href=\"http://secret-garden.hatenablog.com/entry/2015/12/01/204727\" rel=\"nofollow noopener\" target=\"_blank\"\u003e初心者が C++ を勉強するときに最低限押さえておいたほうがよい C++11/14 の機能\u003c/a\u003e\u003cbr\u003e\nを除いてですが(最近の初心者は継承が使えるのか・・・怖い)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://cocodrips.hateblo.jp/entry/2015/12/08/221722\" rel=\"nofollow noopener\" target=\"_blank\"\u003e8日目 | C++のポインタ渡しと参照渡しの使い分け\u003c/a\u003eとかはさっぱりしていてわかりやすいのではないでしょうか。\u003cstrong\u003eなので見ろ(ぇ)\u003c/strong\u003e。\u003c/p\u003e\n\n\u003cp\u003e以下、4日目の\u003ca href=\"http://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07\" id=\"reference-e3871b71ef035e02f113\"\u003eC++を始めよう for windows - Qiita\u003c/a\u003eを見ている前提で話が進みます。\u003cstrong\u003e見てない方は先にどうぞ\u003c/strong\u003e。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003e現在、Clang with Microsoft CodeGenのclangのバージョンが3.8のままな気がします。最新のclangのほうが絶対良いと思われるので、 \u003ca href=\"/kazatsuyu\" class=\"user-mention js-hovercard\" title=\"kazatsuyu\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"kazatsuyu\"\u003e@kazatsuyu\u003c/a\u003e さんの\u003ccode\u003efafnir\u003c/code\u003eというツールを使うことをおすすめします。詳細は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://qiita.com/kazatsuyu/items/b85e97e38a25bc302054\" id=\"reference-79ccd94bf92da5260391\"\u003eVisual Studioでも最新のClangが使いたい！\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/kazatsuyu/fafnir/\" rel=\"nofollow noopener\" target=\"_blank\"\u003ekazatsuyu/fafnir: Clang MSBuild toolset for Visual Studio 2017\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e先日Clang with Microsoft CodeGenなるものが出た。なのでこれはなにかという話と、そもそもコンパイラって？というお話から書いていこうと思います。\u003c/p\u003e\n\n\u003cp\u003eで、MSの名前が出た時点で察しですが、for Windowsな記事となっています。え？Linux？Mac?おめーら、優秀なコンパイラあんだろーが。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"目的\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%9B%AE%E7%9A%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e目的\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eClangの存在を世に広める\u003c/li\u003e\n\u003cli\u003e最近はMSも頑張ってることを伝える\u003c/li\u003e\n\u003cli\u003eおのれMS\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e・・・いやですね、\u003cbr\u003e\n\u003ca href=\"http://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07\"\u003eC++を始めよう for windows | Qiita\u003c/a\u003e\u003cbr\u003e\nで、Visual Studioの紹介自体はあったので。これは書かねばなるまいということで。\u003cbr\u003e\nだって、gccの扱いが\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003egccはLinux等でよく使われるコンパイラですが、今は忘れてもかまいません。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eでclangに至っては記述なしですからね、これは宣伝せざるを得ません(謎の使命感)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"コンパイラとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンパイラとは\u003c/h1\u003e\n\n\u003cp\u003eコンパイラとは特定言語で書かれたコードを機械言語、ないしもとより下位の言語(中間言語)に翻訳するものです。\u003cbr\u003e\n有名なコンパイラとしては\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003egcc/g++\u003c/li\u003e\n\u003cli\u003eclang/clang++\u003c/li\u003e\n\u003cli\u003eVisual Studio付属のcl.exe\u003c/li\u003e\n\u003cli\u003eicc\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eなどでしょうか。(bcc32.exeなんてなかった)\u003c/p\u003e\n\n\u003cp\u003eこの後話すClang with Microsoft CodeGenとは細かい話を抜けば、Visual StudioをIDEとしてつかいつつ、コンパイラだけClangに差し替える、というものです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"clangクランとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#clang%E3%82%AF%E3%83%A9%E3%83%B3%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClang(クラン)とは\u003c/h1\u003e\n\n\u003cp\u003eもともと、iPhoneで有名なAppleがLLVMという中間言語を経由してC/C++のコードをコンパイルするプロジェクトを立ち上げたものです。gccとちがいマルチスレッドで\u003cstrong\u003e動作も高速\u003c/strong\u003e、LLVMを使うことによりgccより最適化がし易いなどなどの特徴があります。なおgccがGPLv３というライセンスなのに対し、ClangはUniversity of Illinois/NCSA Open Source Licenseというライセンスで、コピーレフト絶対主義者の自由ソフトウェア主義者からは妬まれています。パルパル。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ja.wikipedia.org/wiki/Clang\" rel=\"nofollow noopener\" target=\"_blank\"\u003eClang - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://yohshiy.blog.fc2.com/blog-entry-294.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eLLVM Clang の Windows へのインストールと使い方 | プログラマーズ雑記帳\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://cpplover.blogspot.jp/2013/04/llvmclanglinuxgcc.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eLLVM/Clangがぜってーサポートしねーと宣言しているLinuxカーネルに多用されているGCC拡張 | 本の虫\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eC++に関しては、後発のコンパイラにもかかわらず、\u003cstrong\u003eもっともC++規格準拠がはやい\u003c/strong\u003eコンパイラとなっています。まあ細かいバグはあるんですが。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"これまでのwindowsでclangを利用する方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%82%8C%E3%81%BE%E3%81%A7%E3%81%AEwindows%E3%81%A7clang%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこれまでのWindowsでClangを利用する方法\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"msys2-mingw-clangをつかう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#msys2-mingw-clang%E3%82%92%E3%81%A4%E3%81%8B%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emsys2 mingw clangをつかう\u003c/h2\u003e\n\n\u003cp\u003e多分これが一番はやいと思います。\u003cstrong\u003e今でも。\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e7-Zipを落とす\u003cbr\u003e\n\u003ca href=\"https://sevenzip.osdn.jp/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://sevenzip.osdn.jp/\u003c/a\u003e\u003cbr\u003e\nより64bit版もしくは32bit版を\u003cbr\u003e\n既に入っている人も、2015/11/19に随分久しぶりに最新版が出たのでバージョンを上げるといいです\u003c/li\u003e\n\u003cli\u003e7zipをインストール\u003cbr\u003e\nダブルクリックして実行すればいいです。\u003c/li\u003e\n\u003cli\u003emsys2を落とす\u003cbr\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://sourceforge.net/projects/msys2/files/Base/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://sourceforge.net/projects/msys2/files/Base/\u003c/a\u003e\u003cbr\u003e\nよりお使いのアーキテクチャ(おそらくはx86_64)をクリックしmsys2-base-[アーキテクチャ]-[日付].tar.xz\nを。exeの方は１回も使ったこと無いのでわかりません。\u003c/li\u003e\n\u003cli\u003e7-zipで解凍\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eをダブルクリック、\u003ccode\u003eClose Window\u003c/code\u003eと言われたらばってんを押して閉じる\u003c/li\u003e\n\u003cli\u003e再び\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eをダブルクリック、\u003ccode\u003epacman -Syuu\u003c/code\u003eと打ち実行、また閉じる\u003c/li\u003e\n\u003cli\u003e再び\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eをダブルクリック、\u003ccode\u003epacman -S mingw-w64-i686-clang mingw-w64-x86_64-clang\u003c/code\u003eとと打ち実行、また閉じる\u003c/li\u003e\n\u003cli\u003e\n\u003cdel\u003eコマンドプロンプトで\u003ccode\u003emsys2_shell.cmd\u003c/code\u003eのあるパスに移動し、\u003ccode\u003ecall msys2_shell.cmd -mingw64\u003c/code\u003e(64bit向けのコンパイル)または\u003ccode\u003ecall msys2_shell.cmd -mingw32\u003c/code\u003e(32bit向けのコンパイル)を実行\u003c/del\u003e\u003ccode\u003emingw64\u003c/code\u003e(64bit向けのコンパイル)または\u003ccode\u003emingw32.exe\u003c/code\u003e(32bit向けのコンパイル)を実行\u003c/li\u003e\n\u003cli\u003eclangコマンドが使える！\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"mingwを自力で入れてさらにclangを入れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mingw%E3%82%92%E8%87%AA%E5%8A%9B%E3%81%A7%E5%85%A5%E3%82%8C%E3%81%A6%E3%81%95%E3%82%89%E3%81%ABclang%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003emingwを自力で入れてさらにclangを入れる\u003c/h2\u003e\n\n\u003cp\u003eCドライブ直下にmingwを置かないといけなくて、シンボリックリンクではダメだったので私はやっていません\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"visual-studioを導入してからclangを入れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#visual-studio%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%97%E3%81%A6%E3%81%8B%E3%82%89clang%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVisual Studioを導入してからClangを入れる\u003c/h2\u003e\n\n\u003cp\u003eVSが入っている状態で\u003cbr\u003e\n\u003ca href=\"http://llvm.org/releases/download.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://llvm.org/releases/download.html\u003c/a\u003e\u003cbr\u003e\nClangを入れるとVisual StudioからもClang-clが使えるようになる\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"clang-with-microsoft-codegen\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#clang-with-microsoft-codegen\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClang with Microsoft CodeGen\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\" rel=\"nofollow noopener\" target=\"_blank\"\u003eClang with Microsoft CodeGen(clang 3.7)(preview 1)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2016/01/20/clang-with-microsoft-codegen-january-2016-released/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eClang with Microsoft CodeGen(clang 3.7)(January 2016)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eClang with Microsoft CodeGen(clang 3.7)(February 2016)(Update2 previewにあったぽい？)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2016/03/31/clang-with-microsoft-codegen-march-2016-released/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eClang with Microsoft CodeGen(clang 3.7)(March 2016)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2016/06/03/clang-3-8-in-the-may-release-of-clang-with-microsoft-codegen/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eClang with Microsoft CodeGen(clang 3.8)(May 2016)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eClang with Microsoft CodeGen(clang 3.8)(July 2016)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"なぜclang-with-microsoft-codegenか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AA%E3%81%9Cclang-with-microsoft-codegen%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eなぜClang with Microsoft CodeGenか\u003c/h2\u003e\n\n\u003cp\u003eこうした方法があったわけですがどれもいまいちでした。最初のmsys2を使うものは、ついでにgccも入って便利ではあるんですが、コンパイルはコマンドラインなので、makefileを書かねばならず、\u003cstrong\u003eんなもん初心者に書けるか\u003c/strong\u003e、というお話です。かと言ってVSをいれてからClangを入れる方法ははっきり言って\u003cstrong\u003e実験段階\u003c/strong\u003eというか、VSとの連携が不十分でした\u003cbr\u003e\nそして、\u003cstrong\u003e最大のメリットは、Visual Studioの唯一の利点、優秀なデバッグ機能がフルに使える\u003c/strong\u003eということです。あのデバッグ機能がなければ、誰ひとりとしてあんな糞コンパイラ使ってないでしょう。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"clang-with-microsoft-codegenの仕組み\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#clang-with-microsoft-codegen%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClang with Microsoft CodeGenの仕組み\u003c/h2\u003e\n\n\u003cp\u003eではこのClang with Microsoft CodeGenはどのようにコンパイルがなされるのでしょうか。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eコンパイラ名\u003c/th\u003e\n\u003cth\u003eflow\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003emingw clang\u003c/td\u003e\n\u003ctd\u003eソースコード→LLVM IR→実行ファイル\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eVS default\u003c/td\u003e\n\u003ctd\u003eソースコード→MS独自の中間言語→実行ファイル\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eClang with Microsoft CodeGen\u003c/td\u003e\n\u003ctd\u003eソースコード→LLVM IR→MS独自の中間言語→実行ファイル\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eこんな感じです。(だれか図をください)\u003cbr\u003e\nなお\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eVisual StudioにClangフロントエンドがやってくる\u003cbr\u003e\n\u003ca href=\"http://cpplover.blogspot.jp/2015/10/visual-studioclang.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://cpplover.blogspot.jp/2015/10/visual-studioclang.html\u003c/a\u003e\u003cbr\u003e\nMS独自のプロプライエタリなTwo-phase lookupすらまともにできない規格違反のクソC++コンパイラーの開発も続行されるらしい。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e某友人はこれを聞いて思わずFワードを吐いていました。大丈夫だ、気持ちはわかる。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"以下の内容を動画化した\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%A5%E4%B8%8B%E3%81%AE%E5%86%85%E5%AE%B9%E3%82%92%E5%8B%95%E7%94%BB%E5%8C%96%E3%81%97%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e以下の内容を動画化した\u003c/h2\u003e\n\n\u003cp\u003eぶっちゃけわかりにくいので、\u003cstrong\u003e動画にしました\u003c/strong\u003e。\u003cbr\u003e\n\u003ca href=\"http://www.nicovideo.jp/watch/sm27746850\" rel=\"nofollow noopener\" target=\"_blank\"\u003e【ゆっくり実況】Clang with Microsoft CodeGenの導入実況 - ニコニコ動画:GINZA\u003c/a\u003e\u003cbr\u003e\nどうぞ御覧ください。(宣伝乙とか言わない)\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"じゃあ導入するか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%98%E3%82%83%E3%81%82%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eじゃあ導入するか\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.visualstudio.com/ja-jp/downloads/download-visual-studio-vs.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://www.visualstudio.com/ja-jp/downloads/download-visual-studio-vs.aspx\u003c/a\u003e\nに行き、\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7cc6d1de-3a09-b7d5-5ed4-8209007eb39f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d43291fbf677f06800365c0e7517711a\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7cc6d1de-3a09-b7d5-5ed4-8209007eb39f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d43291fbf677f06800365c0e7517711a\" alt=\"ダウンロード  Visual Studio.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/7cc6d1de-3a09-b7d5-5ed4-8209007eb39f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F7cc6d1de-3a09-b7d5-5ed4-8209007eb39f.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=64ceefd19d1f824eae8b8b07d77c369b 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nダウンロードする\u003cbr\u003e\nそして実行する\u003cbr\u003e\nカスタムインストールか否かが出たらカスタムインストールに。\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e選択画面が出たら\u003cbr\u003e\u003cbr\u003e\n\u003ccode\u003eクロスプラットフォームモバイル開発\u003c/code\u003e→\u003ccode\u003eVisual C++モバイル開発\u003c/code\u003e→\u003ccode\u003eClang with Microsoft CodeGen(2016年1月)\u003c/code\u003eにチェックをつける\u003cbr\u003e\u003cbr\u003e\n\u003ccode\u003eプログラミング言語\u003c/code\u003e→\u003ccode\u003eVisual C++\u003c/code\u003eにチェックが付いているか確認する\u003cbr\u003e\n\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F523b8224-a8f8-280b-f5b6-8cb6ae0ec473.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=431d97d3619ae094043c99b14030ee15\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F523b8224-a8f8-280b-f5b6-8cb6ae0ec473.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=431d97d3619ae094043c99b14030ee15\" alt=\"無題.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/523b8224-a8f8-280b-f5b6-8cb6ae0ec473.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F523b8224-a8f8-280b-f5b6-8cb6ae0ec473.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1c2d29f79878643e74e7b0e2aca6c31d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eインストール。気長に待つ\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"どうやって使うか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E4%BD%BF%E3%81%86%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eどうやって使うか\u003c/h2\u003e\n\n\u003cp\u003e新しいプロジェクト→インストール済み→Visual C++→クロスプラットフォーム\u003cbr\u003e\nにstatic/dynamic libraryをClangで作れるものがありますが、そんなもの初心者はお世話にならないので\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07\" class=\"autolink\"\u003ehttp://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07\u003c/a\u003e\u003cbr\u003e\n「新しいプロジェクト ＞ Visual C++ \u0026gt; Win32コンソールアプリケーション」で名前を適当に\u003cbr\u003e\nアプリケーションの種類を「コンソールアプリケーション」追加のオプションを「空のプロジェクト」にチェックを入れ完了します\u003cbr\u003e\nそして「ソリューションエクスプローラーからソースファイルを選び右クリック ＞ 追加 ＞ 新しい項目 ＞ C++ファイル名前mainで追加」\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eでいいです(ちなみに[Ctrl]+[Shift]+[A]なんて便利なショートカットもあるんやで。)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eここからが大事です\u003c/strong\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eプロジェクト→xxxのプロパティ→構成マネージャを開く\u003c/li\u003e\n\u003cli\u003eアクティブソリューション構成→新規作成で、\u003cstrong\u003e設定のコピー元が空の状態で\u003c/strong\u003e適当な名前をつけて構成を作成します。私は\u003ccode\u003eclang_Debug\u003c/code\u003eと\u003ccode\u003eclang_Release\u003c/code\u003eの2つを追加しています。\u003c/li\u003e\n\u003cli\u003e構成マネージャを閉じます\u003c/li\u003e\n\u003cli\u003eそのままプロパティページが開いていると思うので、プラットフォームを\u003cdel\u003ex64\u003c/del\u003eすべてのプラットフォームに、構成→複数の構成で先ほど作った構成のみチェックをつけます\u003c/li\u003e\n\u003cli\u003e構成プロパティ→全般\u003cbr\u003e\nにある\u003cbr\u003e\n\u003cstrong\u003eプラットフォームツールセット\u003c/strong\u003e\u003cbr\u003e\nを\u003cbr\u003e\n\u003cdel\u003eClang 3.7 with Microsoft CodeGen (v140_clang_3_7)\u003c/del\u003e\u003cbr\u003e\nVisual Studio 2015 - Clang with Microsoft CodeGen (v140_clang_c2)\u003cbr\u003e\nにします\u003c/li\u003e\n\u003cli\u003e\n\u003cdel\u003e構成プロパティ→C/C++→コード生成→C++の例外を有効にする を「はい」に。(テーブルをアンウィンドってなんだ)\u003c/del\u003eClang with Microsoft CodeGen (January 2016) でデフォルトで有効になりましたね\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e構成プロパティ→C/C++→全般→デバッグ情報の形式で\u003ccode\u003e完全なデバッグ情報 (DWARF2) (-g2 -gdwarf-2)\u003c/code\u003eを選択\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eあとはコード書くだけです。\u003c/p\u003e\n\n\u003cp\u003eコードは\u003cbr\u003e\n\u003ca href=\"http://faithandbrave.hateblo.jp/entry/20131119/1384837618\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://faithandbrave.hateblo.jp/entry/20131119/1384837618\u003c/a\u003e\u003cbr\u003e\nより。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14_constexpr\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esquare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esquare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんなコードももちろん動きます。あとは\u003cbr\u003e\n\u003ca href=\"https://gist.github.com/yumetodo/dad352ffdc27c19cf825\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://gist.github.com/yumetodo/dad352ffdc27c19cf825\u003c/a\u003e\u003cbr\u003e\nこんなコードとか。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"注意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"intellisense\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#intellisense\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eIntelliSense\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003eIntelliSenseは対応していません\u003c/strong\u003e。いっその事IntelliSenseを切ってもいいかもしれません。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"windowshについて\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#windowsh%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWindows.hについて\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003e追記:いつの間にやら修正されました。\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003e多分7月版からだと思うんだけど、Windows.hをincludeすると\u003c/del\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eWindows Kits\\8.1\\Include\\um\\combaseapi.h(229,21): error : unknown type name 'IUnknown'\nstatic_cast\u0026lt;IUnknown*\u0026gt;(*pp);    // make sure everyone derives from IUnknown\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cdel\u003eとか怒られるようになりました。というわけで使うときは\u003c/del\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#if !defined(CINTERFACE) \u0026amp;\u0026amp; defined(__c2__) \u0026amp;\u0026amp;  __clang_major__ == 3 \u0026amp;\u0026amp; __clang_minor__ == 8\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e//To avoid compile error\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\um\\combaseapi.h(229,21): error : unknown type name 'IUnknown'\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//          static_cast\u0026lt;IUnknown*\u0026gt;(*pp);    // make sure everyone derives from IUnknown\u003c/span\u003e\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eIUnknown\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif\n#include \u0026lt;Windows.h\u0026gt;\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cdel\u003eとしましょう。\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e詳細\u003cbr\u003e\nClang with Microsoft CodeGen(2016/07版)でWindows.hを使うときに注意すべきこと\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/a8c408078766a5c81e31\" class=\"autolink\" id=\"reference-d655fa3901e61a7ae9d9\"\u003ehttp://qiita.com/yumetodo/items/a8c408078766a5c81e31\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"asm\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#asm\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003easm\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://blogs.msdn.microsoft.com/vcblog/2015/12/04/clang-with-microsoft-codegen-in-vs-2015-update-1/#known-issues-in-the-first-preview\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://blogs.msdn.microsoft.com/vcblog/2015/12/04/clang-with-microsoft-codegen-in-vs-2015-update-1/#known-issues-in-the-first-preview\u003c/a\u003e\u003cbr\u003e\nNo inline asm on any architecture. You will get a diagnostic that says “Inline assembly is not supported” or “GNU-style inline assembly is disabled”\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cdel\u003eアセンブリ使えません。全滅です。SIMDとかは試してないけど手動ではできないんじゃね？今後に期待。\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003e試しましたが、そもそも\u003ccode\u003e__cpuid\u003c/code\u003eが使えないです。\u003cbr\u003e\nちゃんと\u003ccode\u003ec:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\Clang 3.7\\include\\Intrin.h\u003c/code\u003eに\u003c/del\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eIntrin.h_l.74\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003e__inline__\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003e__cpuid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003e__inline__\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003e__cpuidex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003cdel\u003eとかいてあるにもかかわらず\u003c/del\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eerror LNK2019: 未解決の外部シンボル \"void __cdecl __cpuid(int * const,int)\" (?__cpuid@@YAXQAHH@Z) が関数 \"struct regs_t __cdecl get_cpuid(unsigned int)\" (?get_cpuid@@YA?AUregs_t@@I@Z) で参照されました。\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cdel\u003eおい、どういうことだ、Link errorにするくらいなら最初っからヘッダーつけんなばーか。しかもヘッダーでは\u003c/del\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eIntrin.h_l.56\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#ifdef __cplusplus\n\u003c/span\u003e\u003cspan class=\"k\"\u003eextern\u003c/span\u003e \u003cspan class=\"s\"\u003e\"C\"\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003cdel\u003eされてんのにlink error messageが\u003ccode\u003e?__cpuid@@YAXQAHH@Z\u003c/code\u003eってお前何を探してやがるんだ\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003eと言った状況からはClangが3.8にあがった5月版から改善したようで、例えば\u003ccode\u003e__cpuid\u003c/code\u003eは使えるようになりました(GNU Styleの5引数の\u003ccode\u003e__get_cpuid\u003c/code\u003eのみで\u003ccode\u003e__cpuid\u003c/code\u003eはただのalias)。\u003c/p\u003e\n\n\u003cp\u003eSIMD Intrinsic は相変わらず使えません。というのも、コンパイラに\u003ca href=\"https://connect.microsoft.com/VisualStudio/feedback/details/2782472/clang-c2-ice-with-mm-packs-epi32-and-mm-madd-epi16-intrinsics\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003ccode\u003eIntrinsic not yet implemented\u003c/code\u003eとか言われます\u003c/a\u003e\u003cbr\u003e\nヘッダー見てる感じVS-Style、GNU-styleどっちも使えそうだったから(例えば\u003ccode\u003e_rdrand32_step\u003c/code\u003eと\u003ccode\u003e__builtin_ia32_rdrand32_step\u003c/code\u003e)行けるのかとおもいきやダメでした。\u003ccode\u003e-msse2\u003c/code\u003eとか\u003ccode\u003e-mrdrnd\u003c/code\u003eとか\u003ccode\u003e-march=native\u003c/code\u003eも効きませんでしたとさ。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"tchar\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tchar\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etchar\u003c/h3\u003e\n\n\u003cp\u003eClang with Microsoft CodeGenを使う際、\u003cstrong\u003etchar.hをWindows.hより先にincludeしてはならない\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eなぜかというと、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eC:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\\tchar.h\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eがincludeされるのだが、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003etchar.h_175-180行目\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#ifndef _TCHAR_DEFINED\n#if !__STDC__\n\u003c/span\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"kt\"\u003ewchar_t\u003c/span\u003e     \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif  \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* !__STDC__ */\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n#define _TCHAR_DEFINED\n#endif  \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* _TCHAR_DEFINED */\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003etchar.h_1261-1266行目\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#ifndef _TCHAR_DEFINED\n#if !__STDC__\n\u003c/span\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e            \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif  \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* !__STDC__ */\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n#define _TCHAR_DEFINED\n#endif  \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* _TCHAR_DEFINED */\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003etchar.h_2090-2095行目\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#ifndef _TCHAR_DEFINED\n#if !__STDC__\n\u003c/span\u003e\u003cspan class=\"k\"\u003etypedef\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e            \u003cspan class=\"n\"\u003eTCHAR\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif  \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* !__STDC__ */\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n#define _TCHAR_DEFINED\n#endif  \u003c/span\u003e\u003cspan class=\"cm\"\u003e/* _TCHAR_DEFINED */\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eのようになっていて、TCHAR型が使えない。なぜならClang with Microsoft CodeGenでは\u003ccode\u003e__STDC__\u003c/code\u003eマクロがdefineされるからだ。逆に言えば、MSVCは\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://msdn.microsoft.com/ja-jp/library/b0084kay.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://msdn.microsoft.com/ja-jp/library/b0084kay.aspx\u003c/a\u003e\u003cbr\u003e\nANSI/ISO C99 規格への準拠を示します。 /Za コンパイラ オプションが指定され、C++ コードをコンパイルしていない場合のみ、整数リテラルの定数 1 として定義されます。それ以外の場合は、定義されません。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと、定義されていないので使えるのである。しかも\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"c\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#define _TCHAR_DEFINED\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eの一文のせいで、例えばWindows.hをincludeした時にこっちのTCHAR型まで無効化するのである。おのれMS。\u003c/p\u003e\n\n\u003cp\u003eコメントで、\u003cstrong\u003eコンパイラオプションで\u003c/strong\u003eマクロ\u003ccode\u003e__STDC__\u003c/code\u003eを0にdefineするといった方法が紹介されています。\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003e\u003ca href=\"https://connect.microsoft.com/VisualStudio/Feedback\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://connect.microsoft.com/VisualStudio/Feedback\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\u003c/a\u003e\u003cbr\u003e\nどっちにバグレポ投げればいいの？\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003e\u003ca href=\"https://connect.microsoft.com/VisualStudio/feedback/details/2122400\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://connect.microsoft.com/VisualStudio/feedback/details/2122400\u003c/a\u003e\u003c/del\u003e\u003cbr\u003e\n\u003ca href=\"http://web.archive.org/web/20160208103549/https://connect.microsoft.com/VisualStudio/feedback/details/2122400\" rel=\"nofollow noopener\" target=\"_blank\"\u003e(いつの間にかMSのバグ報告の場所が変わってしかもURL死にやがったのでWeb Archiveでどうぞー)\u003c/a\u003e\u003cbr\u003e\n\u003cstrong\u003eMSにバグレポ投げました\u003c/strong\u003e。この英語力のなさ、どうにかしたい。\u003c/p\u003e\n\n\u003cp\u003e追記\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e投稿者: James [MSFT]、投稿日時: 2016/01/12 6:06\u003cbr\u003e\nHello,\u003c/p\u003e\n\n\u003cp\u003eThank you for reporting this issue. We've fixed this; the fix will appear in a future release of the Windows SDK.\u003c/p\u003e\n\n\u003cp\u003eSincerely,\u003c/p\u003e\n\n\u003cp\u003eJames McNellis\u003cbr\u003e\nVisual C++ Libraries\u003cbr\u003e\n\u003ca href=\"mailto:james.mcnellis@microsoft.com\" class=\"autolink\"\u003ejames.mcnellis@microsoft.com\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eほう、fixされるらしいぞ。やったね。でもWindows SDKの更新ってそれいつよ。\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003eDebug\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003eちゃんとステップ実行もできます。\u003cdel\u003eできるんですが！逆アセンブルウィンドウも使えますが！何故にや知らん、スタックトレースしてくれません。辛い。\u003c/del\u003e\u003cstrong\u003e\u003ccode\u003e-g\u003c/code\u003eつけてコンパイルしてませんでした\u003c/strong\u003e、ちゃんと動きます\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003e例外\u003c/del\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cdel\u003e\u003ca href=\"http://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\u003c/a\u003e\u003cbr\u003e\nWhen changing from MSVC toolset, exception handling is currently off-by-default even though exception handling works. The developer can override this switch manually. The default will change in the next release.\u003c/del\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cdel\u003e例外を使うコードはデフォルト設定では使えない。上にも書いたとおり、構成プロパティ→C/C++→コード生成→C++の例外を有効にする を「はい」にする必要がある。次のリリースではデフォルトで有効になるようですが。\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003eまたx86(Win32)アーキテクチャの例外処理はバグが多いと誰かが言っていたので避けたほうが賢明かもしれない。\u003c/del\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"_ty-does-not-refer-to-a-value\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#_ty-does-not-refer-to-a-value\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e'_Ty' does not refer to a value\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eVisual Studio 2017(\u003ccode\u003e_MSC_VER\u003c/code\u003eが\u003ccode\u003e1911\u003c/code\u003eらへん)の場合、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eIn file included from C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\exception:7:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\type_traits(898,47): error : '_Ty' does not refer to a value\n                : bool_constant\u0026lt;__is_trivially_destructible(_Ty)\u0026gt;\n                                                            ^\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\type_traits(896,16) :  note: declared here\ntemplate\u0026lt;class _Ty\u0026gt;\n               ^\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\type_traits(899,2): error : expected class name\n        {       // determine whether _Ty has a trivial destructor\n        ^\n2 errors generated.\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようなエラーが出ます。\u003c/p\u003e\n\n\u003cp\u003eこれはClang with Microsoft CodeGenのclangがVSのコンパイラ拡張の\u003ccode\u003e__is_trivially_destructible\u003c/code\u003eに対応していないため。\u003ca href=\"https://hg.mozilla.org/mozilla-central/rev/9072ae5dd4f8\" rel=\"nofollow noopener\" target=\"_blank\"\u003e新しいclangを自力で入れて\u003c/a\u003e使えば大丈夫っぽいです。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1423307\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://bugzilla.mozilla.org/show_bug.cgi?id=1423307\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/47680258/clang-c2-on-visual-studio-15-5-bool-constant-is-trivially-destructible-ty-e\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://stackoverflow.com/questions/47680258/clang-c2-on-visual-studio-15-5-bool-constant-is-trivially-destructible-ty-e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"breaking-change\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#breaking-change\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBreaking Change\u003c/h1\u003e\n\n\u003cp\u003eプラットフォームツールセットの名前が\u003ccode\u003eClang 3.7 with Microsoft CodeGen (v140_clang_3_7)\u003c/code\u003eから\u003ccode\u003eVisual Studio 2015 - Clang with Microsoft CodeGen (v140_clang_c2)\u003c/code\u003eに変更になっています。プロジェクトの設定を変えないとコンパイルできなくなっていますのでご注意。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eClang with Microsoft CodeGenの導入に成功し、それを記事にしたことでClangの存在を世に広める事ができた(?)\u003c/li\u003e\n\u003cli\u003eClang with Microsoft CodeGenという取り組みを伝えることで、最近はMSも頑張ってることを伝えることができた\u003c/li\u003e\n\u003cli\u003eおのれMS\u003c/li\u003e\n\u003cli\u003e__cpuid使わせろ\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c初心者advent-calendar-2015-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c%E5%88%9D%E5%BF%83%E8%80%85advent-calendar-2015-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++初心者Advent Calendar 2015\u003c/h1\u003e\n\n\u003cp\u003eこの記事は\u003ca href=\"http://www.adventar.org/calendars/922\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++初心者Advent Calendar 2015\u003c/a\u003e 9日目の記事です\u003cbr\u003e\n\u003ca href=\"http://cocodrips.hateblo.jp/entry/2015/12/08/221722\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u0026lt;\u0026lt; 8日目 | C++のポインタ渡しと参照渡しの使い分け\u003c/a\u003e || \u003ca href=\"http://qiita.com/Roadagain/items/8ec4ab4ba6c46fe0ce41\"\u003e10日目 | テンプレートでコケた話 \u0026gt;\u0026gt;\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8\"\u003e17日目 | C99からC++14を駆け抜けるC++講座 \u0026gt;\u0026gt;\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e次はringoh72さんのテンプレートでコケた話ですね。今日も私はtemplateには苦しめられたので楽しみです。よろしくお願いします。\u003c/p\u003e\n","body":"# C++初心者Advent Calendar 2015\nこの記事は[C++初心者Advent Calendar 2015](http://www.adventar.org/calendars/922) 9日目の記事です\n[\u003c\u003c 8日目 | C++のポインタ渡しと参照渡しの使い分け](http://cocodrips.hateblo.jp/entry/2015/12/08/221722) || [10日目 | テンプレートでコケた話 \u003e\u003e](http://qiita.com/Roadagain/items/8ec4ab4ba6c46fe0ce41)\n[17日目 | C99からC++14を駆け抜けるC++講座 \u003e\u003e](http://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8)\n\n個人的には、[歌舞伎座.tech #8 「C++初心者会」](https://ezoeryou.github.io/blog/article/2015-05-18-kabukiza-tech-8.html)とか見て以降、「初心者」が怖くなってしまっていますが([初心者がBoost.asioをつかえるもんか！](http://www.shigemk2.com/entry/kbkz_tech.8.3))、ここまでは初心者向けで**ものすごくホッとしています**。初日の\n[初心者が C++ を勉強するときに最低限押さえておいたほうがよい C++11/14 の機能](http://secret-garden.hatenablog.com/entry/2015/12/01/204727)\nを除いてですが(最近の初心者は継承が使えるのか・・・怖い)\n\n[8日目 | C++のポインタ渡しと参照渡しの使い分け](http://cocodrips.hateblo.jp/entry/2015/12/08/221722)とかはさっぱりしていてわかりやすいのではないでしょうか。**なので見ろ(ぇ)**。\n\n以下、4日目の[C++を始めよう for windows - Qiita](http://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07)を見ている前提で話が進みます。**見てない方は先にどうぞ**。\n\n# 追記\n\n現在、Clang with Microsoft CodeGenのclangのバージョンが3.8のままな気がします。最新のclangのほうが絶対良いと思われるので、 @kazatsuyu さんの`fafnir`というツールを使うことをおすすめします。詳細は\n\n- [Visual Studioでも最新のClangが使いたい！](https://qiita.com/kazatsuyu/items/b85e97e38a25bc302054)\n- [kazatsuyu/fafnir: Clang MSBuild toolset for Visual Studio 2017](https://github.com/kazatsuyu/fafnir/)\n\n# はじめに\n\n先日Clang with Microsoft CodeGenなるものが出た。なのでこれはなにかという話と、そもそもコンパイラって？というお話から書いていこうと思います。\n\nで、MSの名前が出た時点で察しですが、for Windowsな記事となっています。え？Linux？Mac?おめーら、優秀なコンパイラあんだろーが。\n\n# 目的\n\n- Clangの存在を世に広める\n- 最近はMSも頑張ってることを伝える\n- おのれMS\n\n・・・いやですね、\n[C++を始めよう for windows | Qiita](http://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07)\nで、Visual Studioの紹介自体はあったので。これは書かねばなるまいということで。\nだって、gccの扱いが\n\n\u003egccはLinux等でよく使われるコンパイラですが、今は忘れてもかまいません。\n\nでclangに至っては記述なしですからね、これは宣伝せざるを得ません(謎の使命感)\n\n# コンパイラとは\n\nコンパイラとは特定言語で書かれたコードを機械言語、ないしもとより下位の言語(中間言語)に翻訳するものです。\n有名なコンパイラとしては\n\n- gcc/g++\n- clang/clang++\n- Visual Studio付属のcl.exe\n- icc\n\nなどでしょうか。(bcc32.exeなんてなかった)\n\nこの後話すClang with Microsoft CodeGenとは細かい話を抜けば、Visual StudioをIDEとしてつかいつつ、コンパイラだけClangに差し替える、というものです。\n\n# Clang(クラン)とは\n\nもともと、iPhoneで有名なAppleがLLVMという中間言語を経由してC/C++のコードをコンパイルするプロジェクトを立ち上げたものです。gccとちがいマルチスレッドで**動作も高速**、LLVMを使うことによりgccより最適化がし易いなどなどの特徴があります。なおgccがGPLv３というライセンスなのに対し、ClangはUniversity of Illinois/NCSA Open Source Licenseというライセンスで、コピーレフト絶対主義者の自由ソフトウェア主義者からは妬まれています。パルパル。\n\n- [Clang - Wikipedia](https://ja.wikipedia.org/wiki/Clang)\n- [LLVM Clang の Windows へのインストールと使い方 | プログラマーズ雑記帳](http://yohshiy.blog.fc2.com/blog-entry-294.html)\n- [LLVM/Clangがぜってーサポートしねーと宣言しているLinuxカーネルに多用されているGCC拡張 | 本の虫](http://cpplover.blogspot.jp/2013/04/llvmclanglinuxgcc.html)\n\nC++に関しては、後発のコンパイラにもかかわらず、**もっともC++規格準拠がはやい**コンパイラとなっています。まあ細かいバグはあるんですが。\n\n# これまでのWindowsでClangを利用する方法\n\n## msys2 mingw clangをつかう\n\n多分これが一番はやいと思います。**今でも。**\n\n1. 7-Zipを落とす  \nhttps://sevenzip.osdn.jp/  \nより64bit版もしくは32bit版を  \n既に入っている人も、2015/11/19に随分久しぶりに最新版が出たのでバージョンを上げるといいです\n2. 7zipをインストール  \nダブルクリックして実行すればいいです。\n3. msys2を落とす  \n4. \nhttp://sourceforge.net/projects/msys2/files/Base/  \nよりお使いのアーキテクチャ(おそらくはx86_64)をクリックしmsys2-base-[アーキテクチャ]-[日付].tar.xz\nを。exeの方は１回も使ったこと無いのでわかりません。\n4. 7-zipで解凍\n5. ``msys2_shell.cmd``をダブルクリック、``Close Window``と言われたらばってんを押して閉じる\n6. 再び``msys2_shell.cmd``をダブルクリック、``pacman -Syuu``と打ち実行、また閉じる\n7. 再び``msys2_shell.cmd``をダブルクリック、``pacman -S mingw-w64-i686-clang mingw-w64-x86_64-clang``とと打ち実行、また閉じる\n8. ~~コマンドプロンプトで`msys2_shell.cmd`のあるパスに移動し、`call msys2_shell.cmd -mingw64`(64bit向けのコンパイル)または`call msys2_shell.cmd -mingw32`(32bit向けのコンパイル)を実行~~`mingw64`(64bit向けのコンパイル)または`mingw32.exe`(32bit向けのコンパイル)を実行\n9. clangコマンドが使える！\n\n## mingwを自力で入れてさらにclangを入れる\n\nCドライブ直下にmingwを置かないといけなくて、シンボリックリンクではダメだったので私はやっていません\n\n## Visual Studioを導入してからClangを入れる\n\nVSが入っている状態で\nhttp://llvm.org/releases/download.html\nClangを入れるとVisual StudioからもClang-clが使えるようになる\n\n\n\n# Clang with Microsoft CodeGen\n\n- [Clang with Microsoft CodeGen(clang 3.7)(preview 1)](http://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx)\n- [Clang with Microsoft CodeGen(clang 3.7)(January 2016)](https://blogs.msdn.microsoft.com/vcblog/2016/01/20/clang-with-microsoft-codegen-january-2016-released/)\n- Clang with Microsoft CodeGen(clang 3.7)(February 2016)(Update2 previewにあったぽい？)\n- [Clang with Microsoft CodeGen(clang 3.7)(March 2016)](https://blogs.msdn.microsoft.com/vcblog/2016/03/31/clang-with-microsoft-codegen-march-2016-released/)\n- [Clang with Microsoft CodeGen(clang 3.8)(May 2016)](https://blogs.msdn.microsoft.com/vcblog/2016/06/03/clang-3-8-in-the-may-release-of-clang-with-microsoft-codegen/)\n- Clang with Microsoft CodeGen(clang 3.8)(July 2016)\n\n## なぜClang with Microsoft CodeGenか\nこうした方法があったわけですがどれもいまいちでした。最初のmsys2を使うものは、ついでにgccも入って便利ではあるんですが、コンパイルはコマンドラインなので、makefileを書かねばならず、**んなもん初心者に書けるか**、というお話です。かと言ってVSをいれてからClangを入れる方法ははっきり言って**実験段階**というか、VSとの連携が不十分でした\nそして、**最大のメリットは、Visual Studioの唯一の利点、優秀なデバッグ機能がフルに使える**ということです。あのデバッグ機能がなければ、誰ひとりとしてあんな糞コンパイラ使ってないでしょう。\n\n## Clang with Microsoft CodeGenの仕組み\nではこのClang with Microsoft CodeGenはどのようにコンパイルがなされるのでしょうか。\n\n| コンパイラ名                 | flow                                                     |\n|------------------------------|----------------------------------------------------------|\n| mingw clang                  | ソースコード→LLVM IR→実行ファイル                  |\n| VS default                   | ソースコード→MS独自の中間言語→実行ファイル               |\n| Clang with Microsoft CodeGen | ソースコード→LLVM IR→MS独自の中間言語→実行ファイル |\n\nこんな感じです。(だれか図をください)\nなお\n\n\u003eVisual StudioにClangフロントエンドがやってくる\n\u003ehttp://cpplover.blogspot.jp/2015/10/visual-studioclang.html\n\u003eMS独自のプロプライエタリなTwo-phase lookupすらまともにできない規格違反のクソC++コンパイラーの開発も続行されるらしい。\n\n某友人はこれを聞いて思わずFワードを吐いていました。大丈夫だ、気持ちはわかる。\n\n## 以下の内容を動画化した\n\nぶっちゃけわかりにくいので、**動画にしました**。\n[【ゆっくり実況】Clang with Microsoft CodeGenの導入実況 - ニコニコ動画:GINZA](http://www.nicovideo.jp/watch/sm27746850)\nどうぞ御覧ください。(宣伝乙とか言わない)\n\n## じゃあ導入するか\n\n1. https://www.visualstudio.com/ja-jp/downloads/download-visual-studio-vs.aspx\nに行き、\n![ダウンロード  Visual Studio.png](https://qiita-image-store.s3.amazonaws.com/0/94177/7cc6d1de-3a09-b7d5-5ed4-8209007eb39f.png)  \nダウンロードする  \nそして実行する  \nカスタムインストールか否かが出たらカスタムインストールに。\n2. 選択画面が出たら  \n``クロスプラットフォームモバイル開発``→``Visual C++モバイル開発``→``Clang with Microsoft CodeGen(2016年1月)``にチェックをつける  \n``プログラミング言語``→``Visual C++``にチェックが付いているか確認する\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/94177/523b8224-a8f8-280b-f5b6-8cb6ae0ec473.png)\n\n\n3. インストール。気長に待つ\n\n## どうやって使うか\n\n新しいプロジェクト→インストール済み→Visual C++→クロスプラットフォーム\nにstatic/dynamic libraryをClangで作れるものがありますが、そんなもの初心者はお世話にならないので\n\n\u003ehttp://qiita.com/cpp_maid_BOT/items/13eab3a134e3f6794f07\n\u003e「新しいプロジェクト ＞ Visual C++ \u003e Win32コンソールアプリケーション」で名前を適当に\nアプリケーションの種類を「コンソールアプリケーション」追加のオプションを「空のプロジェクト」にチェックを入れ完了します\nそして「ソリューションエクスプローラーからソースファイルを選び右クリック ＞ 追加 ＞ 新しい項目 ＞ C++ファイル名前mainで追加」\n\nでいいです(ちなみに[Ctrl]+[Shift]+[A]なんて便利なショートカットもあるんやで。)\n\n**ここからが大事です**\n\n1. プロジェクト→xxxのプロパティ→構成マネージャを開く\n2. アクティブソリューション構成→新規作成で、**設定のコピー元が空の状態で**適当な名前をつけて構成を作成します。私は``clang_Debug``と``clang_Release``の2つを追加しています。\n3. 構成マネージャを閉じます\n4. そのままプロパティページが開いていると思うので、プラットフォームを~~x64~~すべてのプラットフォームに、構成→複数の構成で先ほど作った構成のみチェックをつけます\n5. 構成プロパティ→全般  \nにある  \n**プラットフォームツールセット**  \nを  \n~~Clang 3.7 with Microsoft CodeGen (v140_clang_3_7)~~  \nVisual Studio 2015 - Clang with Microsoft CodeGen (v140_clang_c2)  \nにします\n6. ~~構成プロパティ→C/C++→コード生成→C++の例外を有効にする を「はい」に。(テーブルをアンウィンドってなんだ)~~Clang with Microsoft CodeGen (January 2016) でデフォルトで有効になりましたね\n7. **構成プロパティ→C/C++→全般→デバッグ情報の形式で``完全なデバッグ情報 (DWARF2) (-g2 -gdwarf-2)``を選択**\n\nあとはコード書くだけです。\n\nコードは\nhttp://faithandbrave.hateblo.jp/entry/20131119/1384837618\nより。\n\n```cpp:C++14_constexpr\nconstexpr void square(int\u0026 x)\n{\n    x *= x;\n}\n\nconstexpr int f(int x)\n{\n    square(x);\n    return x;\n}\n```\n\nこんなコードももちろん動きます。あとは\nhttps://gist.github.com/yumetodo/dad352ffdc27c19cf825\nこんなコードとか。\n\n## 注意\n\n### IntelliSense\n\n**IntelliSenseは対応していません**。いっその事IntelliSenseを切ってもいいかもしれません。\n\n### Windows.hについて\n\n**追記:いつの間にやら修正されました。**\n\n~~多分7月版からだと思うんだけど、Windows.hをincludeすると~~\n\n```\nWindows Kits\\8.1\\Include\\um\\combaseapi.h(229,21): error : unknown type name 'IUnknown'\nstatic_cast\u003cIUnknown*\u003e(*pp);    // make sure everyone derives from IUnknown\n```\n\n~~とか怒られるようになりました。というわけで使うときは~~\n\n```cpp\n#if !defined(CINTERFACE) \u0026\u0026 defined(__c2__) \u0026\u0026  __clang_major__ == 3 \u0026\u0026 __clang_minor__ == 8\n//To avoid compile error\n//C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\um\\combaseapi.h(229,21): error : unknown type name 'IUnknown'\n//          static_cast\u003cIUnknown*\u003e(*pp);    // make sure everyone derives from IUnknown\nstruct IUnknown;\n#endif\n#include \u003cWindows.h\u003e\n```\n\n~~としましょう。~~\n\n詳細\nClang with Microsoft CodeGen(2016/07版)でWindows.hを使うときに注意すべきこと\nhttp://qiita.com/yumetodo/items/a8c408078766a5c81e31\n\n### asm\n\n\u003ehttps://blogs.msdn.microsoft.com/vcblog/2015/12/04/clang-with-microsoft-codegen-in-vs-2015-update-1/#known-issues-in-the-first-preview\n\u003eNo inline asm on any architecture. You will get a diagnostic that says “Inline assembly is not supported” or “GNU-style inline assembly is disabled”\n\n~~アセンブリ使えません。全滅です。SIMDとかは試してないけど手動ではできないんじゃね？今後に期待。~~\n\n~~試しましたが、そもそも``__cpuid``が使えないです。\nちゃんと``c:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\Clang 3.7\\include\\Intrin.h``に~~\n\n```cpp:Intrin.h_l.74\nstatic __inline__\nvoid __cpuid(int[4], int);\nstatic __inline__\nvoid __cpuidex(int[4], int, int);\n```\n\n~~とかいてあるにもかかわらず~~\n\n```\nerror LNK2019: 未解決の外部シンボル \"void __cdecl __cpuid(int * const,int)\" (?__cpuid@@YAXQAHH@Z) が関数 \"struct regs_t __cdecl get_cpuid(unsigned int)\" (?get_cpuid@@YA?AUregs_t@@I@Z) で参照されました。\n```\n\n~~おい、どういうことだ、Link errorにするくらいなら最初っからヘッダーつけんなばーか。しかもヘッダーでは~~\n\n```cpp:Intrin.h_l.56\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n```\n~~されてんのにlink error messageが``?__cpuid@@YAXQAHH@Z``ってお前何を探してやがるんだ~~\n\nと言った状況からはClangが3.8にあがった5月版から改善したようで、例えば``__cpuid``は使えるようになりました(GNU Styleの5引数の``__get_cpuid``のみで``__cpuid``はただのalias)。\n\nSIMD Intrinsic は相変わらず使えません。というのも、コンパイラに[``Intrinsic not yet implemented``とか言われます](https://connect.microsoft.com/VisualStudio/feedback/details/2782472/clang-c2-ice-with-mm-packs-epi32-and-mm-madd-epi16-intrinsics)\nヘッダー見てる感じVS-Style、GNU-styleどっちも使えそうだったから(例えば``_rdrand32_step``と``__builtin_ia32_rdrand32_step``)行けるのかとおもいきやダメでした。``-msse2``とか``-mrdrnd``とか``-march=native``も効きませんでしたとさ。\n\n### tchar\n\nClang with Microsoft CodeGenを使う際、**tchar.hをWindows.hより先にincludeしてはならない**\n\nなぜかというと、\n\n\u003eC:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\\tchar.h\n\nがincludeされるのだが、\n\n```c:tchar.h_175-180行目\n#ifndef _TCHAR_DEFINED\n#if !__STDC__\ntypedef wchar_t     TCHAR;\n#endif  /* !__STDC__ */\n#define _TCHAR_DEFINED\n#endif  /* _TCHAR_DEFINED */\n```\n\n```c:tchar.h_1261-1266行目\n#ifndef _TCHAR_DEFINED\n#if !__STDC__\ntypedef char            TCHAR;\n#endif  /* !__STDC__ */\n#define _TCHAR_DEFINED\n#endif  /* _TCHAR_DEFINED */\n```\n\n```c:tchar.h_2090-2095行目\n#ifndef _TCHAR_DEFINED\n#if !__STDC__\ntypedef char            TCHAR;\n#endif  /* !__STDC__ */\n#define _TCHAR_DEFINED\n#endif  /* _TCHAR_DEFINED */\n```\n\nのようになっていて、TCHAR型が使えない。なぜならClang with Microsoft CodeGenでは``__STDC__``マクロがdefineされるからだ。逆に言えば、MSVCは\n\n\u003ehttps://msdn.microsoft.com/ja-jp/library/b0084kay.aspx\n\u003eANSI/ISO C99 規格への準拠を示します。 /Za コンパイラ オプションが指定され、C++ コードをコンパイルしていない場合のみ、整数リテラルの定数 1 として定義されます。それ以外の場合は、定義されません。\n\nと、定義されていないので使えるのである。しかも\n\n```c\n#define _TCHAR_DEFINED\n```\n\nの一文のせいで、例えばWindows.hをincludeした時にこっちのTCHAR型まで無効化するのである。おのれMS。\n\nコメントで、**コンパイラオプションで**マクロ``__STDC__``を0にdefineするといった方法が紹介されています。\n\n~~https://connect.microsoft.com/VisualStudio/Feedback\nhttp://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\nどっちにバグレポ投げればいいの？~~\n\n~~https://connect.microsoft.com/VisualStudio/feedback/details/2122400~~\n[(いつの間にかMSのバグ報告の場所が変わってしかもURL死にやがったのでWeb Archiveでどうぞー)](http://web.archive.org/web/20160208103549/https://connect.microsoft.com/VisualStudio/feedback/details/2122400)\n**MSにバグレポ投げました**。この英語力のなさ、どうにかしたい。\n\n追記\n\n\u003e投稿者: James [MSFT]、投稿日時: 2016/01/12 6:06\n\u003eHello,\n\n\u003eThank you for reporting this issue. We've fixed this; the fix will appear in a future release of the Windows SDK.\n\n\u003eSincerely,\n\n\u003eJames McNellis\n\u003eVisual C++ Libraries\n\u003ejames.mcnellis@microsoft.com\n\nほう、fixされるらしいぞ。やったね。でもWindows SDKの更新ってそれいつよ。\n\n~~Debug~~\n\nちゃんとステップ実行もできます。~~できるんですが！逆アセンブルウィンドウも使えますが！何故にや知らん、スタックトレースしてくれません。辛い。~~**``-g``つけてコンパイルしてませんでした**、ちゃんと動きます\n\n~~例外~~\n\n\u003e~~http://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx\n\u003eWhen changing from MSVC toolset, exception handling is currently off-by-default even though exception handling works. The developer can override this switch manually. The default will change in the next release.~~\n\n~~例外を使うコードはデフォルト設定では使えない。上にも書いたとおり、構成プロパティ→C/C++→コード生成→C++の例外を有効にする を「はい」にする必要がある。次のリリースではデフォルトで有効になるようですが。~~\n\n~~またx86(Win32)アーキテクチャの例外処理はバグが多いと誰かが言っていたので避けたほうが賢明かもしれない。~~\n\n### `'_Ty' does not refer to a value`\n\nVisual Studio 2017(`_MSC_VER`が`1911`らへん)の場合、\n\n```\nIn file included from C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\exception:7:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\type_traits(898,47): error : '_Ty' does not refer to a value\n                : bool_constant\u003c__is_trivially_destructible(_Ty)\u003e\n                                                            ^\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\type_traits(896,16) :  note: declared here\ntemplate\u003cclass _Ty\u003e\n               ^\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.12.25827\\include\\type_traits(899,2): error : expected class name\n        {       // determine whether _Ty has a trivial destructor\n        ^\n2 errors generated.\n```\n\nのようなエラーが出ます。\n\n\nこれはClang with Microsoft CodeGenのclangがVSのコンパイラ拡張の`__is_trivially_destructible`に対応していないため。[新しいclangを自力で入れて](https://hg.mozilla.org/mozilla-central/rev/9072ae5dd4f8)使えば大丈夫っぽいです。\n\n- https://bugzilla.mozilla.org/show_bug.cgi?id=1423307\n- https://stackoverflow.com/questions/47680258/clang-c2-on-visual-studio-15-5-bool-constant-is-trivially-destructible-ty-e\n\n# Breaking Change\n\nプラットフォームツールセットの名前が``Clang 3.7 with Microsoft CodeGen (v140_clang_3_7)``から``Visual Studio 2015 - Clang with Microsoft CodeGen (v140_clang_c2)``に変更になっています。プロジェクトの設定を変えないとコンパイルできなくなっていますのでご注意。\n\n# 結論\n\n- Clang with Microsoft CodeGenの導入に成功し、それを記事にしたことでClangの存在を世に広める事ができた(?)\n- Clang with Microsoft CodeGenという取り組みを伝えることで、最近はMSも頑張ってることを伝えることができた\n- おのれMS\n- __cpuid使わせろ\n\n# C++初心者Advent Calendar 2015\nこの記事は[C++初心者Advent Calendar 2015](http://www.adventar.org/calendars/922) 9日目の記事です\n[\u003c\u003c 8日目 | C++のポインタ渡しと参照渡しの使い分け](http://cocodrips.hateblo.jp/entry/2015/12/08/221722) || [10日目 | テンプレートでコケた話 \u003e\u003e](http://qiita.com/Roadagain/items/8ec4ab4ba6c46fe0ce41)\n[17日目 | C99からC++14を駆け抜けるC++講座 \u003e\u003e](http://qiita.com/yumetodo/items/e49a673afd9a3ecb81a8)\n\n次はringoh72さんのテンプレートでコケた話ですね。今日も私はtemplateには苦しめられたので楽しみです。よろしくお願いします。\n","coediting":false,"comments_count":3,"created_at":"2015-12-09T00:01:27+09:00","group":null,"id":"bd41f31f39dd590e8c80","likes_count":38,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"clang","versions":[]},{"name":"VisualStudio","versions":[]},{"name":"VisualStudio2015","versions":[]}],"title":"Clang with Microsoft CodeGenがでたので試す","updated_at":"2018-09-10T22:11:10+09:00","url":"https://qiita.com/yumetodo/items/bd41f31f39dd590e8c80","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e最近gnuplotが好きだ。(\u003cdel\u003e学校ぐらし！\u003c/del\u003e)\u003c/p\u003e\n\n\u003cp\u003eしかしgnuplot超初心者勢だから毎回タブを7つくらい開きつつ頑張っている。\u003cbr\u003e\n流石にめんｄなので、主に自分向けにまとめる。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"基本\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%9F%BA%E6%9C%AC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e基本\u003c/h1\u003e\n\n\u003cp\u003egnuplotは\u003cbr\u003e\n\u003ca href=\"http://www.gnuplot.info/download.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.gnuplot.info/download.html\u003c/a\u003e\u003cbr\u003e\nで落とせる。\u003cbr\u003e\nWindowsなので、\u003ccode\u003e./bin\u003c/code\u003eの\u003ccode\u003ewgnuplot.exe\u003c/code\u003eを使う。\u003c/p\u003e\n\n\u003cp\u003eコピー\u0026amp;ペーストは \u003ccode\u003e[Ctrl]+[Insert]\u003c/code\u003e/\u003ccode\u003e[Shift]+[Insert]\u003c/code\u003e。msys2 mintty+bashとも微妙に違う。([Insert]だけで貼り付けられない)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"今回使うデータ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%8A%E5%9B%9E%E4%BD%BF%E3%81%86%E3%83%87%E3%83%BC%E3%82%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e今回使うデータ\u003c/h1\u003e\n\n\u003cp\u003e(注意)BOM付きのデータは読めません。糞が。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eDamped_oscillation.dat\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e0.0333667   129\n1.434768101 112\n2.235568902 100\n3.003003003 88\n3.770437104 80\n4.537871205 73\n5.305305305 66\n6.106106106 61\n6.873540207 58\n7.640974308 55\n8.408408408 51\n9.175842509 48\n9.94327661  45\n10.71071071 43\n11.47814481 41\n12.24557891 39\n13.04637971 37\n13.78044711 35\n14.54788121 34\n15.34868202 34\n16.11611612 33\n16.88355022 31\n17.65098432 30\n18.41841842 29\n19.18585252 29\n19.95328662 28\n20.72072072 27\n21.48815482 27\n22.25558892 26\n23.02302302 25\n\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"軸のラベル設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BB%B8%E3%81%AE%E3%83%A9%E3%83%99%E3%83%AB%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e軸のラベル設定\u003c/h1\u003e\n\n\u003cp\u003e軸の名前のないグラフなんぞありえない。というわけで真っ先に設定する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eset xlabel \"time /sec.\"\nset ylabel \"振幅 /mm\" \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e参考サイト\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.deqnotes.net/gnuplot/labels\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.deqnotes.net/gnuplot/labels\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"軸の範囲設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BB%B8%E3%81%AE%E7%AF%84%E5%9B%B2%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e軸の範囲設定\u003c/h1\u003e\n\n\u003cp\u003eそのままの勢いで。もっともこれは一度plotしてから決めてもいいかもしれない。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eset xrange [0:25]\nset yrange [0:140]\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e参考サイト\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://graph.pc-physics.com/range.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://graph.pc-physics.com/range.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"近似線の導出fitting\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%91%E4%BC%BC%E7%B7%9A%E3%81%AE%E5%B0%8E%E5%87%BAfitting\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e近似線の導出(fitting)\u003c/h1\u003e\n\n\u003cp\u003e今回のデータは\u003ca href=\"http://www.f-denshi.com/000TokiwaJPN/14bibnh/a01deq.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e減衰振動の振幅の変化\u003c/a\u003eなので\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"math\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ex(t)=Ae^{-\\gamma t}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eに従うので(sin以下は振動項で振幅はこれが1の時だから無視)これのAとγを求める。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ef(x)=a*exp(b*x)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e適当に関数を作りまして(fittingには元になる関数が必須です)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ea=130\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e(任意)大体のAの値がわかるので設定しまして～(0.0333667 129というデータより)\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecd 'D:\\cloud\\OneDrive\\ドキュメント\\東京理科大\\物理学実験\\単振動'\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eplotデータのあるパスに移動しまして～\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003efit f(x) 'Damped_oscillation.dat' via a, b\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eiter      chisq       delta/lim  lambda   a             b            \n   0 1.1500506471e+05  0.00e+00 7.93e+01  1.300000e+02 -1.464505e-02\n   1 1.1807522983e+04 -8.74e+05 7.93e+00  7.702184e+01 -2.494400e-02\n   2 1.9087684260e+03 -5.19e+05 7.93e-01  1.012543e+02 -6.646146e-02\n   3 1.0879990850e+03 -7.54e+04 7.93e-02  1.138625e+02 -8.225259e-02\n   4 1.0706006120e+03 -1.63e+03 7.93e-03  1.158679e+02 -8.465909e-02\n   5 1.0703318517e+03 -2.51e+01 7.93e-04  1.160845e+02 -8.497840e-02\n   6 1.0703282549e+03 -3.36e-01 7.93e-05  1.161116e+02 -8.502011e-02\niter      chisq       delta/lim  lambda   a             b            \n\nAfter 6 iterations the fit converged.\nfinal sum of squares of residuals : 1070.33\nrel. change during last iteration : -3.36052e-006\n\ndegrees of freedom    (FIT_NDF)                        : 28\nrms of residuals      (FIT_STDFIT) = sqrt(WSSR/ndf)    : 6.18272\nvariance of residuals (reduced chisquare) = WSSR/ndf   : 38.226\n\nFinal set of parameters            Asymptotic Standard Error\n=======================            ==========================\na               = 116.112          +/- 3.461        (2.981%)\nb               = -0.0850201       +/- 0.004        (4.704%)\n\ncorrelation matrix of the fit parameters:\n                a      b      \na               1.000 \nb              -0.746  1.000 \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003efittingし　ました！ちなみに-0.746ってのが相関係数rです。これを2乗すればExcelでおなじみ、R^2ですね。\u003c/p\u003e\n\n\u003cp\u003e参考サイト\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.youtube.com/watch?v=xabd2ffS1TQ\" rel=\"nofollow noopener\" target=\"_blank\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/http%3A%2F%2Fimg.youtube.com%2Fvi%2Fxabd2ffS1TQ%2F0.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=af81da7fa90b37af0362a44ec1894208\" alt=\"gnuplot fitting demo | Tse Maverick\" data-canonical-src=\"http://img.youtube.com/vi/xabd2ffS1TQ/0.jpg\" srcset=\"https://qiita-user-contents.imgix.net/http%3A%2F%2Fimg.youtube.com%2Fvi%2Fxabd2ffS1TQ%2F0.jpg?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=8b21c25c72eb47b17206b3e826ca8bb1 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://wwwal.kuicr.kyoto-u.ac.jp/www/accelerator/a4/gnuplot/fit.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://wwwal.kuicr.kyoto-u.ac.jp/www/accelerator/a4/gnuplot/fit.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://esppro.mtk.nao.ac.jp/~kusakabe/gnuplotmemo.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://esppro.mtk.nao.ac.jp/~kusakabe/gnuplotmemo.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://physics.clarku.edu/sip/tutorials/gnuplot/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://physics.clarku.edu/sip/tutorials/gnuplot/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://hwb.ecc.u-tokyo.ac.jp/current/applications/gnuplot/fitting/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://hwb.ecc.u-tokyo.ac.jp/current/applications/gnuplot/fitting/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q12153225342\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q12153225342\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.geisya.or.jp/~mwm48961/kou3/data_analysis3.htm\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.geisya.or.jp/~mwm48961/kou3/data_analysis3.htm\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"近似線のplot\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%91%E4%BC%BC%E7%B7%9A%E3%81%AEplot\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e近似線のplot\u003c/h1\u003e\n\n\u003cp\u003e色と凡例を変えます。\u003ccode\u003esprintf\u003c/code\u003e関数なんてあるんだね。Cみたい。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eplot f(x) lt 1 lc rgb '#000000' title sprintf(\"%fexp(%ft)\", a, b)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e参考サイト\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://takeno.iee.niit.ac.jp/~foo/gp-jman/data/20080929/gnuplot-ja-div/node69.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://takeno.iee.niit.ac.jp/~foo/gp-jman/data/20080929/gnuplot-ja-div/node69.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.deqnotes.net/gnuplot/labels\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.deqnotes.net/gnuplot/labels\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://d.hatena.ne.jp/yrgnah_yats/20090802/1249188972\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/yrgnah_yats/20090802/1249188972\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.yulghun.com/docs/gnuplot/misc4.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.yulghun.com/docs/gnuplot/misc4.html\u003c/a\u003e (text encodeをISO-2022-JPに。)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.gnuplot-cmd.com/style/style-line.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.gnuplot-cmd.com/style/style-line.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/19245135/point-color-in-gnuplot-4-0\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://stackoverflow.com/questions/19245135/point-color-in-gnuplot-4-0\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"データのplot\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AEplot\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eデータのplot\u003c/h1\u003e\n\n\u003cp\u003e散布図を作ります。ただデフォルトだと気に喰わないのでオプションつけます。\u003cstrong\u003eプロットが丸印じゃないなんて！\u003c/strong\u003eあ、追記なので\u003ccode\u003eplot\u003c/code\u003eじゃなくて\u003ccode\u003ereplot\u003c/code\u003eしてます。\u003ccode\u003ept 6\u003c/code\u003eが丸印かどうかは環境による模様。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ereplot 'Damped_oscillation.dat' lt 1 lc rgb '#111111' pt 6\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e参考サイト\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://dsl4.eee.u-ryukyu.ac.jp/DOCS/gnuplot/node90.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://dsl4.eee.u-ryukyu.ac.jp/DOCS/gnuplot/node90.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://graph.pc-physics.com/replot1.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://graph.pc-physics.com/replot1.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://graph.pc-physics.com/fromfile.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://graph.pc-physics.com/fromfile.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"完成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%8C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e完成\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F498485b3-3639-56ec-d406-7ec35283deb0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ab8de2af7c05389b8e6a3662254002d3\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F498485b3-3639-56ec-d406-7ec35283deb0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ab8de2af7c05389b8e6a3662254002d3\" alt=\"20151128減衰振動_スチロール板_1.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/498485b3-3639-56ec-d406-7ec35283deb0.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2F498485b3-3639-56ec-d406-7ec35283deb0.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bd77c3c172b00d2e1860a66bf7814ccd 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e一応完成しまして～\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"fittingの調整\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#fitting%E3%81%AE%E8%AA%BF%E6%95%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003efittingの調整\u003c/h1\u003e\n\n\u003cp\u003e近似線が気に喰わないので、横軸0-15の範囲に収まるデータのみでfittingして再表示しまして～\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003efit [0:15] f(x) 'Damped_oscillation.dat' via a,b\nplot f(x) lt 1 lc rgb '#000000' title sprintf(\"%fexp(%ft)\", a, b)\nreplot 'Damped_oscillation.dat' lt 1 lc rgb '#111111' pt 6\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa8304c4a-3990-33b8-0a5c-6364f5a3103a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=53fe332e1104a425d14e2523a5e67b0e\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa8304c4a-3990-33b8-0a5c-6364f5a3103a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=53fe332e1104a425d14e2523a5e67b0e\" alt=\"20151128減衰振動_スチロール板_2.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/94177/a8304c4a-3990-33b8-0a5c-6364f5a3103a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.amazonaws.com%2F0%2F94177%2Fa8304c4a-3990-33b8-0a5c-6364f5a3103a.png?ixlib=rb-1.2.2\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=5b5f7a6c6eafb27e02ac953aa98b3963 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e今度こそ完成し　ました！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"コマンドだけ抜き出す\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A0%E3%81%91%E6%8A%9C%E3%81%8D%E5%87%BA%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコマンドだけ抜き出す\u003c/h1\u003e\n\n\u003cp\u003e説明なんざいらね！って場合に。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eset xlabel \"time /sec.\"\nset ylabel \"振幅 /mm\" \nset xrange [0:25]\nset yrange [0:140]\nf(x)=a*exp(b*x)\na=130\ncd 'D:\\cloud\\OneDrive\\ドキュメント\\東京理科大\\物理学実験\\単振動'\nfit f(x) 'Damped_oscillation.dat' via a, b\nplot f(x) lt 1 lc rgb '#000000' title sprintf(\"%fexp(%ft)\", a, b)\nreplot 'Damped_oscillation.dat' lt 1 lc rgb '#111111' pt 6\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"破線を引く時\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%A0%B4%E7%B7%9A%E3%82%92%E5%BC%95%E3%81%8F%E6%99%82\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e破線を引く時\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://www.ss.scphys.kyoto-u.ac.jp/person/yonezawa/contents/program/gnuplot/dashtype.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://www.ss.scphys.kyoto-u.ac.jp/person/yonezawa/contents/program/gnuplot/dashtype.html\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eをみればいい。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"gnuplot\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eplot g(x) lt 1 dt(10, 5) lc rgb '#000000' title sprintf(\"%fx+%f\", a, b) \n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこんなことができる\u003c/p\u003e\n","body":"最近gnuplotが好きだ。(~~学校ぐらし！~~)\n\nしかしgnuplot超初心者勢だから毎回タブを7つくらい開きつつ頑張っている。\n流石にめんｄなので、主に自分向けにまとめる。\n\n# 基本\ngnuplotは\nhttp://www.gnuplot.info/download.html\nで落とせる。\nWindowsなので、``./bin``の``wgnuplot.exe``を使う。\n\nコピー\u0026ペーストは ``[Ctrl]+[Insert]``/``[Shift]+[Insert]``。msys2 mintty+bashとも微妙に違う。([Insert]だけで貼り付けられない)\n\n# 今回使うデータ\n\n(注意)BOM付きのデータは読めません。糞が。\n\n```plain:Damped_oscillation.dat\n0.0333667\t129\n1.434768101\t112\n2.235568902\t100\n3.003003003\t88\n3.770437104\t80\n4.537871205\t73\n5.305305305\t66\n6.106106106\t61\n6.873540207\t58\n7.640974308\t55\n8.408408408\t51\n9.175842509\t48\n9.94327661\t45\n10.71071071\t43\n11.47814481\t41\n12.24557891\t39\n13.04637971\t37\n13.78044711\t35\n14.54788121\t34\n15.34868202\t34\n16.11611612\t33\n16.88355022\t31\n17.65098432\t30\n18.41841842\t29\n19.18585252\t29\n19.95328662\t28\n20.72072072\t27\n21.48815482\t27\n22.25558892\t26\n23.02302302\t25\n\n```\n# 軸のラベル設定\n\n軸の名前のないグラフなんぞありえない。というわけで真っ先に設定する。\n\n```gnuplot\nset xlabel \"time /sec.\"\nset ylabel \"振幅 /mm\" \n```\n\n参考サイト\n\n- http://www.deqnotes.net/gnuplot/labels\n\n\n# 軸の範囲設定\n\nそのままの勢いで。もっともこれは一度plotしてから決めてもいいかもしれない。\n\n```gnuplot\nset xrange [0:25]\nset yrange [0:140]\n```\n\n参考サイト\n\n- http://graph.pc-physics.com/range.html\n\n# 近似線の導出(fitting)\n\n今回のデータは[減衰振動の振幅の変化](http://www.f-denshi.com/000TokiwaJPN/14bibnh/a01deq.html)なので\n\n```math\nx(t)=Ae^{-\\gamma t}\n```\n\nに従うので(sin以下は振動項で振幅はこれが1の時だから無視)これのAとγを求める。\n\n```gnuplot\nf(x)=a*exp(b*x)\n```\n\n適当に関数を作りまして(fittingには元になる関数が必須です)\n\n```gnuplot\na=130\n```\n\n(任意)大体のAの値がわかるので設定しまして～(0.0333667 129というデータより)\n\n```gnuplot\ncd 'D:\\cloud\\OneDrive\\ドキュメント\\東京理科大\\物理学実験\\単振動'\n```\n\nplotデータのあるパスに移動しまして～\n\n```gnuplot\nfit f(x) 'Damped_oscillation.dat' via a, b\n```\n\n```plain\niter      chisq       delta/lim  lambda   a             b            \n   0 1.1500506471e+05  0.00e+00 7.93e+01  1.300000e+02 -1.464505e-02\n   1 1.1807522983e+04 -8.74e+05 7.93e+00  7.702184e+01 -2.494400e-02\n   2 1.9087684260e+03 -5.19e+05 7.93e-01  1.012543e+02 -6.646146e-02\n   3 1.0879990850e+03 -7.54e+04 7.93e-02  1.138625e+02 -8.225259e-02\n   4 1.0706006120e+03 -1.63e+03 7.93e-03  1.158679e+02 -8.465909e-02\n   5 1.0703318517e+03 -2.51e+01 7.93e-04  1.160845e+02 -8.497840e-02\n   6 1.0703282549e+03 -3.36e-01 7.93e-05  1.161116e+02 -8.502011e-02\niter      chisq       delta/lim  lambda   a             b            \n\nAfter 6 iterations the fit converged.\nfinal sum of squares of residuals : 1070.33\nrel. change during last iteration : -3.36052e-006\n\ndegrees of freedom    (FIT_NDF)                        : 28\nrms of residuals      (FIT_STDFIT) = sqrt(WSSR/ndf)    : 6.18272\nvariance of residuals (reduced chisquare) = WSSR/ndf   : 38.226\n\nFinal set of parameters            Asymptotic Standard Error\n=======================            ==========================\na               = 116.112          +/- 3.461        (2.981%)\nb               = -0.0850201       +/- 0.004        (4.704%)\n\ncorrelation matrix of the fit parameters:\n                a      b      \na               1.000 \nb              -0.746  1.000 \n```\n\nfittingし　ました！ちなみに-0.746ってのが相関係数rです。これを2乗すればExcelでおなじみ、R^2ですね。\n\n参考サイト\n\n[![gnuplot fitting demo | Tse Maverick](http://img.youtube.com/vi/xabd2ffS1TQ/0.jpg)](http://www.youtube.com/watch?v=xabd2ffS1TQ)\n\n- http://wwwal.kuicr.kyoto-u.ac.jp/www/accelerator/a4/gnuplot/fit.html\n- http://esppro.mtk.nao.ac.jp/~kusakabe/gnuplotmemo.html\n- http://physics.clarku.edu/sip/tutorials/gnuplot/\n- http://hwb.ecc.u-tokyo.ac.jp/current/applications/gnuplot/fitting/\n- http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q12153225342\n- http://www.geisya.or.jp/~mwm48961/kou3/data_analysis3.htm\n\n# 近似線のplot\n\n色と凡例を変えます。``sprintf``関数なんてあるんだね。Cみたい。\n\n```gnuplot\nplot f(x) lt 1 lc rgb '#000000' title sprintf(\"%fexp(%ft)\", a, b)\n```\n\n参考サイト\n\n- http://takeno.iee.niit.ac.jp/~foo/gp-jman/data/20080929/gnuplot-ja-div/node69.html\n- http://www.deqnotes.net/gnuplot/labels\n- http://d.hatena.ne.jp/yrgnah_yats/20090802/1249188972\n- http://www.yulghun.com/docs/gnuplot/misc4.html (text encodeをISO-2022-JPに。)\n- http://www.gnuplot-cmd.com/style/style-line.html\n- http://stackoverflow.com/questions/19245135/point-color-in-gnuplot-4-0\n\n# データのplot\n\n散布図を作ります。ただデフォルトだと気に喰わないのでオプションつけます。**プロットが丸印じゃないなんて！**あ、追記なので``plot``じゃなくて``replot``してます。``pt 6``が丸印かどうかは環境による模様。\n\n```gnuplot\nreplot 'Damped_oscillation.dat' lt 1 lc rgb '#111111' pt 6\n```\n\n参考サイト\n\n- http://dsl4.eee.u-ryukyu.ac.jp/DOCS/gnuplot/node90.html\n- http://graph.pc-physics.com/replot1.html\n- http://graph.pc-physics.com/fromfile.html\n\n# 完成\n\n![20151128減衰振動_スチロール板_1.png](https://qiita-image-store.s3.amazonaws.com/0/94177/498485b3-3639-56ec-d406-7ec35283deb0.png)\n\n一応完成しまして～\n\n# fittingの調整\n\n近似線が気に喰わないので、横軸0-15の範囲に収まるデータのみでfittingして再表示しまして～\n\n```gnuplot\nfit [0:15] f(x) 'Damped_oscillation.dat' via a,b\nplot f(x) lt 1 lc rgb '#000000' title sprintf(\"%fexp(%ft)\", a, b)\nreplot 'Damped_oscillation.dat' lt 1 lc rgb '#111111' pt 6\n```\n\n![20151128減衰振動_スチロール板_2.png](https://qiita-image-store.s3.amazonaws.com/0/94177/a8304c4a-3990-33b8-0a5c-6364f5a3103a.png)\n\n今度こそ完成し　ました！\n\n# コマンドだけ抜き出す\n\n説明なんざいらね！って場合に。\n\n```gnuplot\nset xlabel \"time /sec.\"\nset ylabel \"振幅 /mm\" \nset xrange [0:25]\nset yrange [0:140]\nf(x)=a*exp(b*x)\na=130\ncd 'D:\\cloud\\OneDrive\\ドキュメント\\東京理科大\\物理学実験\\単振動'\nfit f(x) 'Damped_oscillation.dat' via a, b\nplot f(x) lt 1 lc rgb '#000000' title sprintf(\"%fexp(%ft)\", a, b)\nreplot 'Damped_oscillation.dat' lt 1 lc rgb '#111111' pt 6\n```\n\n# 破線を引く時\n\nhttp://www.ss.scphys.kyoto-u.ac.jp/person/yonezawa/contents/program/gnuplot/dashtype.html\n\nをみればいい。\n\n```gnuplot\nplot g(x) lt 1 dt(10, 5) lc rgb '#000000' title sprintf(\"%fx+%f\", a, b) \n```\n\nこんなことができる\n","coediting":false,"comments_count":0,"created_at":"2015-12-04T04:56:14+09:00","group":null,"id":"9b31c63763c371326636","likes_count":10,"private":false,"reactions_count":0,"tags":[{"name":"gnuplot","versions":[]},{"name":"備忘録","versions":[]}],"title":"理学部の学生がgnuplotの備忘録を書く","updated_at":"2015-12-05T10:36:38+09:00","url":"https://qiita.com/yumetodo/items/9b31c63763c371326636","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e皆様、\u003cstrong\u003e\u003ca href=\"http://www.nicovideo.jp/watch/sm25261912\" rel=\"nofollow noopener\" target=\"_blank\"\u003eナマステ!\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eええっとTwitterで、気になるサイトを見かけたので\u003cstrong\u003eそこはかとなく\u003c/strong\u003e論破していきます。\u003cbr\u003e\n元サイトは\u003cbr\u003e\n高速化 - ゲームプログラミングWiki\u003cbr\u003e\n\u003ca href=\"https://www.c3.club.kyutech.ac.jp/gamewiki/index.php?%B9%E2%C2%AE%B2%BD\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://www.c3.club.kyutech.ac.jp/gamewiki/index.php?%B9%E2%C2%AE%B2%BD\u003c/a\u003e\u003cbr\u003e\nです。\u003c/p\u003e\n\n\u003cp\u003e元記事がDirectXが動く環境を前提に話を進めているので、この記事もその前提でいきます。HW性能によってやるべきことが違うのは当然ですし。\u003c/p\u003e\n\n\u003cp\u003eそれではありきたりな論破を。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cp\u003e高速化についてちゃんと真面目に書いたものは\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yumetodo/items/c7c00b371f6c4a1be668\" id=\"reference-fffbce072975b4beb6da\"\u003e艦これシミュレーターを作ったときとかに得た高速化のノウハウ\u003c/a\u003e\u003cbr\u003e\nを御覧ください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"オペレータオーバーロードは使うな\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%AA%E3%83%9A%E3%83%AC%E3%83%BC%E3%82%BF%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AD%E3%83%BC%E3%83%89%E3%81%AF%E4%BD%BF%E3%81%86%E3%81%AA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eオペレータ・オーバーロードは使うな\u003c/h1\u003e\n\n\u003cp\u003e主張としては\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\nvoid Test()\n{\n   D3DXVECTOR3 a(0,1,2),b(1,-1,2),c(0,2,3),d;\n   d = a + b - c;\n}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのようなコードは一時オブジェクトを生成するから使わず\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eMyAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ein1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ein2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ein1\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ein2\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ein1\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ein2\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"n\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ez\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ein1\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ez\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ein2\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eのような内部処理を期待して\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eD3DXVec3Add\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eD3DXVec3Add\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eと書け、というものです。\u003c/p\u003e\n\n\u003cp\u003e反論としては、\u003cstrong\u003eコンパイラの最適化舐めすぎてませんか？\u003c/strong\u003eという話と、仮に最適化されなかったとして一体何clockの差ですか？と言いたいですね。第一、この手の物を高速化したいなら、GPUでやるなりSIMD使わないと意味がないですね。労力の無駄。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"構造体クラスの値返しはやめよう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A7%8B%E9%80%A0%E4%BD%93%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AE%E5%80%A4%E8%BF%94%E3%81%97%E3%81%AF%E3%82%84%E3%82%81%E3%82%88%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e構造体、クラスの値返しはやめよう\u003c/h1\u003e\n\n\u003cp\u003e一見まともな主張に思えますが、解決策がダメです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e解決策1\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nf\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"n\"\u003ereutrn\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \n   \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003edelete\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e開放を忘れるリスク云々以前の問題があります。それは、動的確保、とくに小さな大きさの確保は遅いということです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e解決策2\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eioVec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"n\"\u003eioVec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e10.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"n\"\u003eioVec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"n\"\u003eioVec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ez\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e5.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこれも話になりません。そもそもreferenceにもコストがかかかりますし、引数経由で値を返すことは\u003cstrong\u003e著しく可読性を下げます\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e追記\u003cbr\u003e\nNRVO(Named Return Value Optimization)という最適化ですね。コメントで思い出させてくれました。参考リンク貼っときます\u003cbr\u003e\n\u003ca href=\"http://isoparametric.hatenablog.com/entry/20091219/1261192152\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://isoparametric.hatenablog.com/entry/20091219/1261192152\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://d.hatena.ne.jp/gintenlabo/20110125/1295991902\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://d.hatena.ne.jp/gintenlabo/20110125/1295991902\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://kmc.hatenablog.jp/entry/2014/12/20/231430\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://kmc.hatenablog.jp/entry/2014/12/20/231430\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eつまり\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e \u003cspan class=\"nf\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eD3DXVECTOR3\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e10.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mf\"\u003e10.0\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//RVOが働くことがある\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"c1\"\u003e//見やすい！\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eでいいですね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"標準数学関数は使わない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A8%99%E6%BA%96%E6%95%B0%E5%AD%A6%E9%96%A2%E6%95%B0%E3%81%AF%E4%BD%BF%E3%82%8F%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e標準数学関数は使わない\u003c/h1\u003e\n\n\u003cp\u003e話になりません。テーラー展開して近似計算しろだなんて！\u003c/p\u003e\n\n\u003cp\u003e標準関数を使っていれば、まともなコンパイラなら(VSですら！)SIMDの関数を呼んでくれます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"同じ出力の計算は二度としない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%90%8C%E3%81%98%E5%87%BA%E5%8A%9B%E3%81%AE%E8%A8%88%E7%AE%97%E3%81%AF%E4%BA%8C%E5%BA%A6%E3%81%A8%E3%81%97%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e同じ出力の計算は二度としない\u003c/h1\u003e\n\n\u003cp\u003eこれも論外です。そんな作業はコンパイラにやらせるべきです。共通項のくくりだしなんて基礎的なこともできないコンパイラはゴミ箱に捨てましょう。それにさらに重要な話があります。\u003c/p\u003e\n\n\u003cp\u003e最近の実行環境では、CPUの計算速度よりもむしろ、メモリーアクセスの時間のほうが時間がかかります。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePMD_MT 高速化版\u003cbr\u003e\n\u003ca href=\"http://rigaya34589.blog135.fc2.com/blog-entry-483.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://rigaya34589.blog135.fc2.com/blog-entry-483.html\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e現代では迷信級の話でしょう。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"描画するときはポインタで\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8F%8F%E7%94%BB%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AF%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%81%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e描画するときはポインタで\u003c/h1\u003e\n\n\u003cp\u003e本文の主張から離れますが、\u003ccode\u003estd::map\u003c/code\u003eをつかってはいけません。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/h_hiro_/items/a83a8fd2391d4a3f0e1c\" class=\"autolink\" id=\"reference-c6e65a93e781c8105b40\"\u003ehttp://qiita.com/h_hiro_/items/a83a8fd2391d4a3f0e1c\u003c/a\u003e\u003cbr\u003e\n\u003ccode\u003estd::unorderd_map\u003c/code\u003eを使用しましょう。\u003c/p\u003e\n\n\u003cp\u003eで本題の主張ですが、\u003ccode\u003estd::vector\u003c/code\u003eか\u003ccode\u003estd::unorderd_map\u003c/code\u003eでいいです。もちろん画像のベクターだ、というなら話は別ですが、DirectXでもOpenGLでもOpenCVでも、手にしているのはすべて画像のハンドルのはずです。int型2つとさして変わらない大きさです。悩んでる暇があったら\u003ccode\u003estd::vector\u003c/code\u003eか\u003ccode\u003estd::unorderd_map\u003c/code\u003e使いましょう。Range-based forで簡単に書けるし。\u003c/p\u003e\n\n\u003cp\u003eあと\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eでもこの場合keyの前のデータが開放された場合にはデータを取得できない場合があります。 そうなると面倒です。 \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eと\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eそこで描画するオブジェクトに毎フレームKeyを渡してデータを取得しないで、KeyをオブジェクトにSetするときにテクスチャのポインタをオブジェクトに渡すようにします。 こうすればO(1)で描画することができます。 こうすれば描画速度がかなり上がり、std::mapで管理できると思います。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eは何が言いたいかわからん。\u003c/p\u003e\n\n\u003cp\u003eてかそんなことより、毎frame更新しない部分を予め描画してとっとけ。GPUのVRAMに乗っかることだろうからな。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h1\u003e\n\n\u003cp\u003eプログラムの高速化、最適化は時代によって、機械の性能によって大きく異なります。ある場面では正しくても他の場面では正しくありません。\u003c/p\u003e\n\n\u003cp\u003eしかしコンパイラはたいていのプログラマなんかよりよほど優秀です。したがって大事なのは\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eコードの\u003cstrong\u003e可読性を上げる\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eコンパイラの最適化を邪魔しない\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eアルゴリズムを綿密に検討する\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e自分でコードを書かない\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003eどうしても高速化したいならアルゴリズム変えろ、SIMD使え\u003c/li\u003e\n\u003cli\u003e動的確保するときは頻繁に確保・開放するな\u003c/li\u003e\n\u003cli\u003emoveの概念を覚えろ\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eというものになります。\u003c/p\u003e\n\n\u003cp\u003eあ、名誉のために元サイトの「最後に」を引用しておきます。まったくそのとおりなので。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e最後に一つ語ろうと思います。 この高速化はもちろんソースコードを書くときにも大事です。 ですが、高速化を意識してるあまりスパゲティーコードになってしまうことも多々あります。 あくまでも見やすいプログラムを重点的においてください。\u003c/p\u003e\n\n\u003cp\u003eそしてゲームができたら、一番最後に高速化も忘れないでください。 そのときにプロファイラを使えばかなり有効なはずです。 \u003c/p\u003e\n\u003c/blockquote\u003e\n","body":"皆様、**[ナマステ!](http://www.nicovideo.jp/watch/sm25261912)**\n\nええっとTwitterで、気になるサイトを見かけたので**そこはかとなく**論破していきます。\n元サイトは\n高速化 - ゲームプログラミングWiki\nhttps://www.c3.club.kyutech.ac.jp/gamewiki/index.php?%B9%E2%C2%AE%B2%BD\nです。\n\n元記事がDirectXが動く環境を前提に話を進めているので、この記事もその前提でいきます。HW性能によってやるべきことが違うのは当然ですし。\n\nそれではありきたりな論破を。\n\n# 追記\n\n高速化についてちゃんと真面目に書いたものは\n[艦これシミュレーターを作ったときとかに得た高速化のノウハウ](http://qiita.com/yumetodo/items/c7c00b371f6c4a1be668)\nを御覧ください。\n\n# オペレータ・オーバーロードは使うな\n\n主張としては\n\n```cp\n\nvoid Test()\n{\n   D3DXVECTOR3 a(0,1,2),b(1,-1,2),c(0,2,3),d;\n   d = a + b - c;\n}\n```\n\nのようなコードは一時オブジェクトを生成するから使わず\n\n```cpp\nvoid MyAdd(D3DXVECTOR3 *out,D3DXVECTOR3 *in1,D3DXVECTOR3 *in2)\n{\n   out-\u003ex = in1-\u003ex + in2-\u003ex;\n   out-\u003ey = in1-\u003ey + in2-\u003ey;\n   out-\u003ez = in1-\u003ez + in2-\u003ez;\n}\n```\n\nのような内部処理を期待して\n\n```cpp\nvoid Test()\n{\n  D3DXVECTOR3 a(0,1,2), b(1,-1,2), c(0,2,3), re;\n  D3DXVec3Add(\u0026re, \u0026a, \u0026b);\n  D3DXVec3Add(\u0026re, \u0026re, \u0026c);\n}\n```\nと書け、というものです。\n\n反論としては、**コンパイラの最適化舐めすぎてませんか？**という話と、仮に最適化されなかったとして一体何clockの差ですか？と言いたいですね。第一、この手の物を高速化したいなら、GPUでやるなりSIMD使わないと意味がないですね。労力の無駄。\n\n# 構造体、クラスの値返しはやめよう\n\n一見まともな主張に思えますが、解決策がダメです。\n\n```cpp:解決策1\nint *hoge()\n{\n   int *tmp = new int;\n   *tmp = 1;\n   reutrn tmp;\n}\n\nint main()\n{\n   int *tmp;  \n   tmp = hoge;\n   *tmp = 5;\n   delete tmp;\n   return 0;\n}\n```\n\n開放を忘れるリスク云々以前の問題があります。それは、動的確保、とくに小さな大きさの確保は遅いということです。\n\n```cpp:解決策2\nvoid hoge(D3DXVECTOR3 \u0026ioVec)\n{\n   ioVec.x = 10.0f;\n   ioVec.y = 2.0f;\n   ioVec.z = 5.0f;\n}\n```\n\nこれも話になりません。そもそもreferenceにもコストがかかかりますし、引数経由で値を返すことは**著しく可読性を下げます**\n\n追記\nNRVO(Named Return Value Optimization)という最適化ですね。コメントで思い出させてくれました。参考リンク貼っときます\nhttp://isoparametric.hatenablog.com/entry/20091219/1261192152\nhttp://d.hatena.ne.jp/gintenlabo/20110125/1295991902\nhttp://kmc.hatenablog.jp/entry/2014/12/20/231430\n\nつまり\n\n```cpp\nD3DXVECTOR3 hoge()\n{\n   return D3DXVECTOR3(10.0f,1.0f,10.0f);//RVOが働くことがある\n}\n\nint main()\n{\n   auto a = hoge();//見やすい！\n   return 0;\n}\n```\n\nでいいですね。\n\n# 標準数学関数は使わない\n話になりません。テーラー展開して近似計算しろだなんて！\n\n標準関数を使っていれば、まともなコンパイラなら(VSですら！)SIMDの関数を呼んでくれます。\n\n# 同じ出力の計算は二度としない\n\nこれも論外です。そんな作業はコンパイラにやらせるべきです。共通項のくくりだしなんて基礎的なこともできないコンパイラはゴミ箱に捨てましょう。それにさらに重要な話があります。\n\n最近の実行環境では、CPUの計算速度よりもむしろ、メモリーアクセスの時間のほうが時間がかかります。\n\u003ePMD_MT 高速化版\nhttp://rigaya34589.blog135.fc2.com/blog-entry-483.html\n\n現代では迷信級の話でしょう。\n\n# 描画するときはポインタで\n本文の主張から離れますが、``std::map``をつかってはいけません。\nhttp://qiita.com/h_hiro_/items/a83a8fd2391d4a3f0e1c\n``std::unorderd_map``を使用しましょう。\n\nで本題の主張ですが、``std::vector``か``std::unorderd_map``でいいです。もちろん画像のベクターだ、というなら話は別ですが、DirectXでもOpenGLでもOpenCVでも、手にしているのはすべて画像のハンドルのはずです。int型2つとさして変わらない大きさです。悩んでる暇があったら``std::vector``か``std::unorderd_map``使いましょう。Range-based forで簡単に書けるし。\n\nあと\n\u003eでもこの場合keyの前のデータが開放された場合にはデータを取得できない場合があります。 そうなると面倒です。 \n\nと\n\n\u003eそこで描画するオブジェクトに毎フレームKeyを渡してデータを取得しないで、KeyをオブジェクトにSetするときにテクスチャのポインタをオブジェクトに渡すようにします。 こうすればO(1)で描画することができます。 こうすれば描画速度がかなり上がり、std::mapで管理できると思います。\n\nは何が言いたいかわからん。\n\nてかそんなことより、毎frame更新しない部分を予め描画してとっとけ。GPUのVRAMに乗っかることだろうからな。\n\n# 最後に\n\nプログラムの高速化、最適化は時代によって、機械の性能によって大きく異なります。ある場面では正しくても他の場面では正しくありません。\n\nしかしコンパイラはたいていのプログラマなんかよりよほど優秀です。したがって大事なのは\n\n1. コードの**可読性を上げる**\n2. コンパイラの最適化を邪魔しない\n3. **アルゴリズムを綿密に検討する**\n4. **自分でコードを書かない**\n5. どうしても高速化したいならアルゴリズム変えろ、SIMD使え\n6. 動的確保するときは頻繁に確保・開放するな\n7. moveの概念を覚えろ\n\nというものになります。\n\nあ、名誉のために元サイトの「最後に」を引用しておきます。まったくそのとおりなので。\n\n\u003e最後に一つ語ろうと思います。 この高速化はもちろんソースコードを書くときにも大事です。 ですが、高速化を意識してるあまりスパゲティーコードになってしまうことも多々あります。 あくまでも見やすいプログラムを重点的においてください。\n\n\u003eそしてゲームができたら、一番最後に高速化も忘れないでください。 そのときにプロファイラを使えばかなり有効なはずです。 \n","coediting":false,"comments_count":4,"created_at":"2015-11-24T02:30:40+09:00","group":null,"id":"51b0b14f9d04e59faba7","likes_count":21,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"最適化","versions":[]},{"name":"高速化","versions":[]},{"name":"performance","versions":[]}],"title":"高速化 - ゲームプログラミングWikiに反論を試みる","updated_at":"2017-01-22T21:00:30+09:00","url":"https://qiita.com/yumetodo/items/51b0b14f9d04e59faba7","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e^=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eJava\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e^=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e多分これが一番早いと思います。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/yohhoy/items/f7fe3d1f0f0d2918afa5\" id=\"reference-0d53890de6bf1b430bcc\"\u003e0と1の相互変換\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e一応こんなこともできるけど。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"o\"\u003e]);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"プロローグ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%83%AD%E3%83%BC%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプロローグ\u003c/h1\u003e\n\n\u003cp\u003e普段C++を書いている人にとって、Javaとは実に謎な言語にうつる。\u003c/p\u003e\n\n\u003cp\u003e今回見ていくのはboolean型の特徴だ。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.javadrive.jp/start/cast/index1.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003e型変換の基本ルール - 型変換 - Java入門\u003c/a\u003e\u003cbr\u003e\n基本データ型の中でもboolean型は特別でboolean型から他のデータ型に変換はできず、また逆にboolean型に変換することもできません。 \u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eふむふむ。つまり\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//JavaだとhogeはBooleanではないので違法\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこんなことはJavaではできないってことね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"本題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%AC%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e本題\u003c/h1\u003e\n\n\u003cp\u003eたとえばループ中で1と0を交互にほしいということはままある。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++パターン1\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++パターン2\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eexcange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//C++14から\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eただ上記のようなコードはJavaでは使えない。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eJava失敗例\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//Error. Booleanからintに変換できない\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eじゃあどうするか？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eJavaパターン1\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eJavaパターン2\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++)\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nc\"\u003eBooleanUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//冗長！\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eでけた。うーん、汚い。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eC++パターン2\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ework\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e//C++14までdeprecatedC++17で廃止\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eなんかこれはうまくいかない。trueに対するoperator++の挙動がfalseにするのではなくtrueになる模様。\u003cdel\u003eなんでや。\u003c/del\u003e元記事(コメント参照)のミスの模様。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"感想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%84%9F%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e感想\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eauto\u003c/code\u003eください\u003c/li\u003e\n\u003cli\u003ebool → int に変換できないのは納得いかない\u003c/li\u003e\n\u003cli\u003e範囲for文に参照使わせてください\u003c/li\u003e\n\u003cli\u003eJavaパターン2は実は未検証だ\u003c/li\u003e\n\u003cli\u003eなんでJavaってきれいに書けないの？\u003c/li\u003e\n\u003cli\u003eホントにJava初心者なので温かい目で見てください\u003c/li\u003e\n\u003cli\u003eJavaますます嫌いになった\u003c/li\u003e\n\u003c/ul\u003e\n","body":"#結論\n```cpp:C++14\nint arr[10];\nint work = 1;\nfor(auto\u0026 i : arr) i = (work ^= 1);\n```\n\n```java:Java\nint arr[10];\nint work = 1;\nfor(int i = 0; i \u003c arr.length; i++) arr[i] = (work ^= 1);\n```\n\n多分これが一番早いと思います。\n[0と1の相互変換](http://qiita.com/yohhoy/items/f7fe3d1f0f0d2918afa5)\n\n一応こんなこともできるけど。\n\n```java\nint arr[10];\nint work = 1;\nint t[] = { 0, 1 };\nfor(int i = 0; i \u003c arr.length; i++) arr[i] = (work = t[work]);\n```\n\n# プロローグ\n普段C++を書いている人にとって、Javaとは実に謎な言語にうつる。\n\n今回見ていくのはboolean型の特徴だ。\n\n\u003e[型変換の基本ルール - 型変換 - Java入門](http://www.javadrive.jp/start/cast/index1.html)\n\u003e基本データ型の中でもboolean型は特別でboolean型から他のデータ型に変換はできず、また逆にboolean型に変換することもできません。 \n\nふむふむ。つまり\n\n```cpp:C++\nint hoge = 1;\nint re = hoge ? 0 : 1;//JavaだとhogeはBooleanではないので違法\n```\n\nこんなことはJavaではできないってことね。\n\n# 本題\n\nたとえばループ中で1と0を交互にほしいということはままある。\n\n```cpp:C++パターン1\nint arr[10];\nint work = 1;\nfor(auto\u0026 i : arr) i = (work = !work);\n```\n\n```cpp:C++パターン2\nint arr[10];\nbool work = false;\nfor(auto\u0026 i : arr) i = std::excange(work, !work);//C++14から\n```\n\n\nただ上記のようなコードはJavaでは使えない。\n\n```java:Java失敗例\nint arr[] = new int[10];\nboolean work = true;\nfor(int i = 0; i \u003c arr.length; i++) arr[i] = (work = !work);//Error. Booleanからintに変換できない\n```\n\nじゃあどうするか？\n\n```java:Javaパターン1\nint arr[] = new int[10];\nint work = 1;\nfor(int i = 0; i \u003c arr.length; i++) arr[i] = (work = work + 1 \u0026 1);\n```\n\n```java:Javaパターン2\nint arr[] = new int[10];\nboolean work = true;\nfor(int i = 0; i \u003c arr.length; i++) arr[i] = BooleanUtils.toInteger(work = !work);//冗長！\n```\n\nでけた。うーん、汚い。\n\n#追記\n\n```cpp:C++パターン2\nint arr[10];\nbool work = true;\nfor(auto\u0026 i : arr) i = ++work;//C++14までdeprecatedC++17で廃止\n```\n\nなんかこれはうまくいかない。trueに対するoperator++の挙動がfalseにするのではなくtrueになる模様。~~なんでや。~~元記事(コメント参照)のミスの模様。\n\n\n\n#感想\n\n- ``auto``ください\n- bool → int に変換できないのは納得いかない\n- 範囲for文に参照使わせてください\n- Javaパターン2は実は未検証だ\n- なんでJavaってきれいに書けないの？\n- ホントにJava初心者なので温かい目で見てください\n- Javaますます嫌いになった\n\n","coediting":false,"comments_count":12,"created_at":"2015-11-07T01:45:58+09:00","group":null,"id":"8d8f20a971d0ca2a8b84","likes_count":3,"private":false,"reactions_count":0,"tags":[{"name":"Java","versions":[]},{"name":"C++","versions":[]},{"name":"C++14","versions":[]},{"name":"C++17","versions":[]}],"title":"int型の1と0をループ中で交互に用意するにはどうするか","updated_at":"2015-11-07T17:36:59+09:00","url":"https://qiita.com/yumetodo/items/8d8f20a971d0ca2a8b84","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"追記はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記:はじめに\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"https://twitter.com/MaverickTse\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@MaverickTse\u003c/a\u003e, \u003ca href=\"https://twitter.com/mtfmk\" rel=\"nofollow noopener\" target=\"_blank\"\u003e@mtfmk\u003c/a\u003e, \u003ca href=\"/YSRKEN\" class=\"user-mention js-hovercard\" title=\"YSRKEN\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"YSRKEN\"\u003e@YSRKEN\u003c/a\u003e 氏の格闘の結果、超高速されたものが登場しました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eSPROUT_CXX14_CONSTEXPR\u003c/span\u003e \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_mod_table_ysr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esprout\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emod\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003emod\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kr\"\u003einline\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"nf\"\u003evalidate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_sub_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_min_epu8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_set1_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_test_all_zeros\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_setr_epi32\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mh\"\u003e0x00FFFFFF\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit_mtfmk_ysrken\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eSPROUT_CXX14_CONSTEXPR\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emod_table\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_mod_table_ysr\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFE\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e \u003cspan class=\"n\"\u003ep_n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_loadu_si128\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ereinterpret_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec_str\u003c/span\u003e\u003cspan class=\"p\"\u003e()));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ep_n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_sub_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep_n\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_set1_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003evalidate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep_n\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mh\"\u003e0xFF\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003e__m128i\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_maddubs_epi16\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep_n\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_setr_epi8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_sad_epu8\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_setzero_si128\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_add_epi32\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_mm_srli_si128\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emod_table\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003e_mm_cvtsi128_si32\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e)];\u003c/span\u003e\n\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e詳細は\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/YSRKEN/items/4ca7229c98640a71bdad\" id=\"reference-f40e9561385b3757da57\"\u003eSIMD intrinsicでチェックディジットを計算してみる\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/YSRKEN/items/17097b26ddf0754c5d34\" id=\"reference-a727e443fb998c9937c5\"\u003eSIMD intrinsicでチェックディジットを計算してみる その2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/yumetodo/benchmark_calc_check_degit\" rel=\"nofollow noopener\" target=\"_blank\"\u003eyumetodo/benchmark_calc_check_degit: C++でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eを参照してください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"初めに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%88%9D%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e初めに\u003c/h1\u003e\n\n\u003cp\u003eどうももうすぐマイナンバーの仮カードが配られるらしい。セキュリティがものすごく不安だ。\u003c/p\u003e\n\n\u003cp\u003eまあそんな話はさておき\u003cbr\u003e\n\u003ca href=\"http://qiita.com/qube81/items/fa6ef94d3c8615b0ce64\" id=\"reference-968cd0034bc4c71a9549\"\u003eRuby - マイナンバーのチェックデジットを計算する - Qiita\u003c/a\u003e\u003cbr\u003e\nが目についた。どうやらマイナンバーにはチェックデジット(検査用数字)なるものがあるらしい。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e行政手続における特定の個人を識別するための番号の利用等に関する法律施行令\u003cbr\u003e\n\u003ca href=\"http://law.e-gov.go.jp/announce/H26SE155.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://law.e-gov.go.jp/announce/H26SE155.html\u003c/a\u003e\u003cbr\u003e\n（個人番号とすべき番号の構成）\u003cbr\u003e\n第八条 　法第八条第二項の規定により生成される個人番号とすべき番号は、機構が同条第三項の規定により設置される電子情報処理組織を使用して、作為が加わらない方法により生成する次に掲げる要件に該当する十一桁の番号及びその後に付された一桁の検査用数字（個人番号を電子計算機に入力するときに誤りのないことを確認することを目的として、当該十一桁の番号を基礎として総務省令で定める算式により算出される零から九までの整数をいう。第三号において同じ。）により構成されるものとする。\u003cbr\u003e\n一 　住民票コードを変換して得られるものであること。\u003cbr\u003e\n二 　前号の住民票コードを復元することのできる規則性を備えるものでないこと。\u003cbr\u003e\n三 　他のいずれの個人番号（法第七条第二項の従前の個人番号及び個人番号とすべき番号を含む。）を構成する検査用数字以外の十一桁の番号とも異なること。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eで検査用数字はどうやって求めるのさ？というと\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e行政手続における特定の個人を識別するための番号の利用等に関する法律の規定による通知カード及び個人番号カード並びに情報提供ネットワークシステムによる特定個人情報の提供等に関する省令\u003cbr\u003e\n\u003ca href=\"http://law.e-gov.go.jp/announce/H26F11001000085.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://law.e-gov.go.jp/announce/H26F11001000085.html\u003c/a\u003e\u003cbr\u003e\n（検査用数字を算出する算式）\u003cbr\u003e\n第五条 　令第八条の総務省令で定める算式は、次に掲げる算式とする。\u003cbr\u003e\n算式\u003cbr\u003e\n　１１―（ｎ＝１（シグマ）１１（Ｐｎ×Ｑｎ））を１１で除した余り）\u003cbr\u003e\n　ただし、（ｎ＝１（シグマ）１１（Ｐｎ×Ｑｎ））を１１で除した余り≦１の場合は、０とする。\u003cbr\u003e\n算式の符号\u003cbr\u003e\n　Ｐｎ　個人番号を構成する検査用数字以外の十一桁の番号の最下位の桁を１桁目としたときのｎ桁目の数字\u003cbr\u003e\n　Ｑｎ　１≦ｎ≦６のとき　ｎ＋１　７≦ｎ≦１１のとき　ｎ―５\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"検査用数字の導出法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A4%9C%E6%9F%BB%E7%94%A8%E6%95%B0%E5%AD%97%E3%81%AE%E5%B0%8E%E5%87%BA%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e検査用数字の導出法\u003c/h1\u003e\n\n\u003cp\u003eつまり\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e検査用数字 : $11 - \\Bigl( \\displaystyle\\sum_{n=1}^{11} P_n \\times Q_n \\Bigr) \\% 11$\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eただし $\\Bigl( \\displaystyle\\sum_{n=1}^{11} P_n \\times Q_n \\Bigr) \\% 11 ≦１ $の場合は、$0$とする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e$Pn$と$Qn$の定義\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e$Pn$ : 個人番号を構成する検査用数字以外の十一桁の番号の最下位の桁を $1$ 桁目としたときの $n$ 桁目の数字\u003c/li\u003e\n\u003cli\u003e$Qn$ : $1≦n≦6$ のとき $n+1$、 $7≦n≦11$ のとき $n-5$\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eということらしい。\u003c/p\u003e\n\n\u003cp\u003e計算式を見たってわかんね～、という人は\u003cbr\u003e\n\u003ca href=\"http://web.archive.org/web/20150912114426/http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q10147037045\" rel=\"nofollow noopener\" target=\"_blank\"\u003eマイナンバー（個人番号）の１２桁の数字の下一ケタがチェックデジット... - Yahoo!知恵袋\u003c/a\u003e\u003cbr\u003e\nをみるといいと思います。(質問者もBANされていないし取り消したような痕跡もないにもかかわらずなぜか質問が消されているのでWebArchiveにリンク張替え)\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"c11での実装\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c11%E3%81%A7%E3%81%AE%E5%AE%9F%E8%A3%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC++11での実装\u003c/h1\u003e\n\n\u003cp\u003eというわけで実装していく。例外のエラーメッセージ適当すぎんだろとか言わない。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e数式に忠実に\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;utility\u0026gt;\n#include \u0026lt;numeric\u0026gt;//std::accumulate()\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;cctype\u0026gt;//std::isdigit()\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"num.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eaccumulate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erbegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eisdigit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"num.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003eremainder\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e短く書くwithC++14\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;string\u0026gt;\n#include \u0026lt;utility\u0026gt;\n#include \u0026lt;numeric\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;cctype\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"n.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eaccumulate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erbegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eisdigit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"n.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003enumeric\u003c/code\u003eヘッダーにあるものだから忘れられがちな\u003ccode\u003estd::accumulate\u003c/code\u003eですが無茶めちゃ便利です。単に合計を求めるだけでなく、第3, 4引数を工夫することでかなりいろいろできます。\u003cbr\u003e\nただし\u003ccode\u003estd::accumulate\u003c/code\u003eの第3引数の型と第4引数で指定する関数の第1引数の型から参照とcv修飾子を除いた型とその戻り値の型、さらに\u003ccode\u003estd::accumulate\u003c/code\u003eの戻り値を受ける変数の型は一致させましょう。あと第1,2引数で指定したイテレータが指すコンテナの要素型と第4引数で指定する関数の第2引数の型から参照とcv修飾子を除いた型もですね。結果が謎になります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e//イメージ\u003c/span\u003e\n\u003cspan class=\"n\"\u003eRet\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eaccumulate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eContainer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eElem\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator\u003c/span\u003e \u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eContainer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eElem\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003eiterator\u003c/span\u003e \u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRet\u003c/span\u003e \u003cspan class=\"n\"\u003einit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eRet\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eElem\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eRet\u003c/span\u003e\u003cspan class=\"p\"\u003e{});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e検査用数字の導出法が下桁からみていくようだったのでリバースイテレータを使ってます。ruby版だとreverseしてますがそんなことする必要は無いですからね。\u003c/p\u003e\n\n\u003cp\u003eこの\u003ccode\u003ecalc_check_digit\u003c/code\u003e関数は例外を投げうるので、呼ぶときはちゃんと例外処理してください。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実行例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行例\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/CNrdqxw1MbD0r4bI\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/CNrdqxw1MbD0r4bI\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"各言語実装まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%90%84%E8%A8%80%E8%AA%9E%E5%AE%9F%E8%A3%85%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e各言語実装まとめ\u003c/h1\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align: center\"\u003e言語\u003c/th\u003e\n\u003cth style=\"text-align: left\"\u003eリンク\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eRuby\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/qube81/items/fa6ef94d3c8615b0ce64\"\u003eマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eRuby\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/kakipo/items/e3f376e78a4a37374b32\" id=\"reference-cc9d519547bab2de6c85\"\u003eマイナンバーを検証する gem を作った\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC++\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/yumetodo/items/600ca0df422010cbc4c1\"\u003eC++でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003ePython\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/haminiku/items/bcf4bac82bd1ca62c746\" id=\"reference-24283aacf7bba4c2f9c8\"\u003ePython マイナンバー検証用モジュールを公開\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003ePHP\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/rana_kualu/items/f36275032bbc6a3f18b4\" id=\"reference-b4a16656dbc94b30bba9\"\u003eマイナンバーのチェックデジットを計算する PHP版\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC#\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/whitebell/items/5982055e6768960496db\" id=\"reference-4934a7cabf0c132c4d82\"\u003eC#でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC#\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://ydkk.hateblo.jp/entry/2015/11/20/122852\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC#でマイナンバーのチェックデジットを計算する - YDiary\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eSQL\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/damassima/items/873a5ba95c32d971eb26\" id=\"reference-165b51c2900371032048\"\u003eマイナンバーのチェックデジットを計算する（SQLで）\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003ePerl\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/B73W56H84/items/fa7fcadf7779ac7dbe8b\" id=\"reference-4bbf324fe9a28e41ddda\"\u003ePerl5,Perl6でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003ePowerShell\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/shoooo/items/42bbdd9023c14661da0a\" id=\"reference-03871c740cadf2e18c0d\"\u003eWindowsPowerShell \u0026amp; C#マイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eJavaScript, Groovy\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/mas0061/items/19ffdda24a9df5f4e6e2\" id=\"reference-2f7012b221ab01721a07\"\u003eJavaScriptとGroovyでマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eJavaScript, Ramda\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/masakielastic/items/683ea4f892a1a0f8dc62\" id=\"reference-7cc7d676ac93e3f8862a\"\u003eマイナンバーのチェックデジットを JavaScript で計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eHaskell\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/lotz/items/e1f3c649227271c381f6\" id=\"reference-39b496958a093aac97bd\"\u003eHaskellでマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eHaskell\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/nobsun/items/fc151dea83114146ad51\" id=\"reference-2e9e1e6cf82163f99c28\"\u003eマイナンバー数字列の確認\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eHaskell\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/little_Haskeller/items/c75437684d0c8fb43fa4\" id=\"reference-b5dcf22755710a1f2da6\"\u003eマイナンバーのチェックデジットを Haskell で計算してみる\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eJava\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/deaf_tadashi/items/2e7249371f2138a6a7fc\" id=\"reference-f3a897fd6c03816a0f35\"\u003eマイナンバーのチェックデジットを計算する（Java編）\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eJava\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/gaco777/items/be44902238fc0294061a\" id=\"reference-d2284a5e75fcbdf67e8e\"\u003eマイナンバーチェックデジット用Javaコード\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eGo\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/qube81/items/f66a38b28ec58bc5c4da\" id=\"reference-e3cb471aa757e3ea04cd\"\u003eマイナンバーのチェックデジットをGoで計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eGo\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/koron/go-mynumber/blob/master/mynumber.go\" rel=\"nofollow noopener\" target=\"_blank\"\u003ego-mynumber/mynumber.go at master · koron/go-mynumber\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC, Go, Bash, Excel etc...\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/genta/items/fb25ce50592134d3fbb8\" id=\"reference-272fdf9dcb58719fae9a\"\u003eマイナンバーのチェックデジットの検算をざっくり1割くらい高速化する(計ってないので知らんけど)\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eSwift\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/melodydance/items/4b442e3094fdea031065\" id=\"reference-64ef35d31c7419418b20\"\u003eマイナンバーのチェックデジットをSwiftで計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eVim script\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://mattn.kaoriya.net/software/vim/20151117174330.htm\" rel=\"nofollow noopener\" target=\"_blank\"\u003eBig Sky :: Vim からマイナンバーを検証出来るプラグイン書いた。\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eVim script\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/mattn/vim-mynumber\" rel=\"nofollow noopener\" target=\"_blank\"\u003emattn/vim-mynumber: Check your MyNumber\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eScheme(Gauche)\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/X___MOON___X/items/70b81090beb003534cd8\" id=\"reference-74eb87e5a3dcaab17e66\"\u003eScheme(Gauche)でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eScheme (R7RS+SRFI)\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/SaitoAtsushi/items/8237d8fe5816e3eaa494\" id=\"reference-ad2db90b99ea6a463094\"\u003eScheme (R7RS+SRFI) でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eOCaml\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/outerinside/items/dd74dd84a8b0b5884df2\" id=\"reference-6ec7a2ef80f607d8b635\"\u003eOCaml でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eRust\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/Tomohiro/mynumber\" rel=\"nofollow noopener\" target=\"_blank\"\u003eTomohiro/mynumber  GitHub\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eTeX\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://0-chromosome.hatenablog.jp/entry/2015/12/07/000000\" rel=\"nofollow noopener\" target=\"_blank\"\u003eTeXで簡単プログラミング♪ - ０番染色体\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eKotlin\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/boohbah/items/8f2bd5ebebf23a29a474\" id=\"reference-d8e29a322ddea8f23b99\"\u003eKotlinでマイナンバーのチェックディジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eObjective-C\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/yangci/items/04eacf6236716b7ea8d2\" id=\"reference-eea75daf2b2e81bb8e93\"\u003eマイナンバーのチェックディジットをObjective-Cで計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eElixir\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/marcy_o/items/e6260baff5474974e8f9\" id=\"reference-668373cb73bd664f96e5\"\u003eElixirでマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eAgda\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/cutsea110/items/5026275954bd450a0764\" id=\"reference-8af896a122cb18725cc3\"\u003e【速報】マイナンバーの全域性とチェックディジットの一意性が証明された！？\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eCrystal\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\n\u003ca href=\"http://qiita.com/make_now_just/items/a4b2f3d9b53e4f23af93\"\u003eマイナンバーのチェックディジットをCrystalで計算する\u003c/a\u003e　\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eD\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/e10s/items/5e6ec352db253e0d3a08\" id=\"reference-a1c830c161c47feface3\"\u003eD 言語でコンパイル時にマイナンバーの妥当性をチェックするテンプレート\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eEmacs Lisp\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/syohex/emacs-mynumber\" rel=\"nofollow noopener\" target=\"_blank\"\u003esyohex/emacs-mynumber: Mynumber validation in Emacs\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eScala\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/yabuchin_y/items/91dcd60446454fb00274\" id=\"reference-594fce95ea733653f68e\"\u003eマイナンバーのチェックデジットをScalaで計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eBat(コマンドプロンプト)\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003cdel\u003e\u003ca href=\"http://oki.hateblo.jp/entry/2016/03/04/173726\" rel=\"nofollow noopener\" target=\"_blank\"\u003eWindowsバッチファイルでマイナンバーのチェックデジットを計算 - 沖の雑記帳\u003c/a\u003e\u003c/del\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eAwk\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003cdel\u003e\u003ca href=\"oki.hateblo.jp/entry/2016/03/07/143644\"\u003eawkでマイナンバーのチェックデジットを検証・集計 - 沖の雑記帳\u003c/a\u003e\u003c/del\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eAwk\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://papiro.hatenablog.jp/entry/2016/04/10/022020\" rel=\"nofollow noopener\" target=\"_blank\"\u003eマイナンバーチェッカー用シェルawkスクリプト - 日々之迷歩\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eClojureScript\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://gist.github.com/knjname/f1f7ac337052a9439db5e00a1c3d47e8\" rel=\"nofollow noopener\" target=\"_blank\"\u003eknjname/validate-my-number.cljs\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eAppleScript\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/SatoshiN21/items/126a051767be477c76e5\" id=\"reference-ee87a0bd7c5db45a767e\"\u003eマイナンバーのチェックデジットをAppleScriptで計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eBat,awk,Fortran77,Brainfuck\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/h_oki/items/358979d21bf7fe460816\" id=\"reference-7a57113afd57d95ec19c\"\u003e色々な言語でマイナンバーのチェックデジットを計算したかった\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC++\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/YSRKEN/items/4ca7229c98640a71bdad\"\u003eSIMD intrinsicでチェックディジットを計算してみる\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC++\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/YSRKEN/items/17097b26ddf0754c5d34\"\u003eSIMD intrinsicでチェックディジットを計算してみる その2\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eC++\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/yumetodo/benchmark_calc_check_degit\" rel=\"nofollow noopener\" target=\"_blank\"\u003eyumetodo/benchmark_calc_check_degit: C++でマイナンバーのチェックデジットを計算する\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align: center\"\u003eFortran2003\u003c/td\u003e\n\u003ctd style=\"text-align: left\"\u003e\u003ca href=\"http://qiita.com/cure_honey/items/a773c8cb6874efea7add\" id=\"reference-14b41b0f9bb06ec79f19\"\u003eマイナンバーのチェックデジットを計算する　Fortran 2003\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eQiitaでは一番上のRuby版が最初だと思います。\u003c/p\u003e\n\n\u003cp\u003epython版が出てる！これは勝ち確定です！(何に対する？)\u003cbr\u003e\nSwift版も出たとかついにApple信者(偏見)もマイナンバー対応に動いたのか(違う)。\u003cbr\u003e\nそして驚くべき言語展開。なんでこんなに流行ってるのさ。\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003eここまでみて分かる通りすべて文字列として数値を受け取るものばかりです。なぜなら先頭が0のマイナンバーを判別できないからです。\u003c/del\u003e数値でやってる人もいた。\u003c/p\u003e\n\n\u003cp\u003eところで「Groovyって何？」となって\u003cbr\u003e\n\u003ca href=\"http://codezine.jp/article/detail/3757\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://codezine.jp/article/detail/3757\u003c/a\u003e\u003cbr\u003e\nを見るまで知らなかった件\u003c/p\u003e\n\n\u003cp\u003eなんか \u003ca href=\"/h_oki\" class=\"user-mention js-hovercard\" title=\"h_oki\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"h_oki\"\u003e@h_oki\u003c/a\u003e 氏によるBrainfuck版が出てるけど控えめに言って頭おかC・・・いや、なんでもない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記\u003c/h1\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://qiita.com/rana_kualu/items/f36275032bbc6a3f18b4\" class=\"autolink\"\u003ehttp://qiita.com/rana_kualu/items/f36275032bbc6a3f18b4\u003c/a\u003e\u003cbr\u003e\nチェックディジットは一意に決まるので、実質11桁、たった1000億通りしかありません。\u003cbr\u003e\n現時点でも適当に1000回撃てば一回通ってしまいます。\u003cbr\u003e\nIPv6とまでは言わないが、せめて16桁くらい取っておいてもよかっただろ。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eお、せやな（棒読み）\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実際にマイナンバーが届いた\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E3%83%9E%E3%82%A4%E3%83%8A%E3%83%B3%E3%83%90%E3%83%BC%E3%81%8C%E5%B1%8A%E3%81%84%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実際にマイナンバーが届いた\u003c/h1\u003e\n\n\u003cp\u003eというわけで実際に実行例のプログラムで試したところ、ちゃんとチェックデジットはあってました。良かった。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記ベンチマーク\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98%E3%83%99%E3%83%B3%E3%83%81%E3%83%9E%E3%83%BC%E3%82%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記:ベンチマーク\u003c/h1\u003e\n\n\u003cp\u003eなんか\u003cbr\u003e\n\u003ca href=\"http://qiita.com/ryogaelbtn/items/2ad39ef8c9db5358582f\"\u003eただマイナンバー計算しても面白くないから最速を目指してみた。\u003c/a\u003e\u003cbr\u003e\nなる記事がでた。どう考えても私の記事を煽っている(注:という妄想です)\u003c/p\u003e\n\n\u003cp\u003eで、その記事を読んでみたが、4点気に入らない\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e引数が\u003ccode\u003econst array\u0026lt;int, 12\u0026gt;\u0026amp;\u003c/code\u003eだが、常識的に考えて、入力は文字列だろうから、\u003ccode\u003econst std::string\u0026amp;\u003c/code\u003eでなければ困る\u003c/li\u003e\n\u003cli\u003e無駄にキャストするな、可読性もくそもありゃしねぇ\u003c/li\u003e\n\u003cli\u003ehelper関数として\u003ccode\u003eQ\u003c/code\u003eという名の関数があるがなんでconstexprじゃねーんだ。constexprは市民の義務だろ！\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eclock()\u003c/code\u003eとかいうC++においてはとっととdeprecatedになるべき関数を時間計測に用いている。ありえない。しかも大抵の環境では分解能が低い。\u003ccode\u003estd::chrono::high_resolution_clock::now\u003c/code\u003eを使おう(\u003ca href=\"https://msdn.microsoft.com/ja-jp/library/bb531344.aspx#mt374\" rel=\"nofollow noopener\" target=\"_blank\"\u003eただしVSの場合VS2013までは分解能が高くない\u003c/a\u003e)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eというわけで書き換えて、ついでに私のコードと勝負させることにした。\u003c/p\u003e\n\n\u003cp\u003eちなみに私のコードも\u003ccode\u003estd::isdigit\u003c/code\u003eは使わないように書き換えている。わざわざlocale依存の関数を使う必要はよく考えて見ればないからな。ついでにエラー処理と計算部分を分離した。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e対決コード\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit_yumetodo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003enoexcept\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"n.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sc\"\u003e'9'\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function calc_check_digit_yumetodo : iregal charactor detect.(\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eaccumulate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erbegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{},\u003c/span\u003e \u003cspan class=\"p\"\u003e[](\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e \u003cspan class=\"nf\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003echar\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint8_t\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalc_check_digit_ryogaelbtn\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"P.digit must be 11\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"sc\"\u003e'0'\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sc\"\u003e'9'\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"in function calc_check_digit_ryogaelbtn : iregal charactor detect.(\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eP\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"sc\"\u003e')'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eunsigned\u003c/span\u003e \u003cspan class=\"kt\"\u003eshort\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e計測は一発勝負、ループ回数は元記事の10倍の10000000(10^7)回、環境はだれでも利用できるwandboxを用いる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eclang3.8-O2\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 251[ms] (251311496[ns])\ncalc_check_digit_yumetodo : 265[ms] (265814777[ns])\nvench mark finish!\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/4LuMFnk99W7FWHnz\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/4LuMFnk99W7FWHnz\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eclang3.8-O3\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 247[ms] (247027803[ns])\ncalc_check_digit_yumetodo : 244[ms] (244624077[ns])\nvench mark finish!\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/XsElyq6t55khBdR0\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/XsElyq6t55khBdR0\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003egcc6.1.0-O2\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 255[ms] (255793658[ns])\ncalc_check_digit_yumetodo : 475[ms] (475591886[ns])\nvench mark finish!\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/3qAjDExuRERlh419\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/3qAjDExuRERlh419\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"plain\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003egcc6.1.0-O3\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003egenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 203[ms] (203583920[ns])\ncalc_check_digit_yumetodo : 202[ms] (202423769[ns])\nvench mark finish!\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/d4i5QjDprvrRho2U\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/d4i5QjDprvrRho2U\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e両者差はないかな。GCCの\u003ccode\u003e-O2\u003c/code\u003eだけ差がついたのは、\u003ccode\u003estd::accumulate\u003c/code\u003eと\u003ccode\u003estd::pair\u003c/code\u003eをうまく消せてないからかな？\u003c/p\u003e\n\n\u003cp\u003e結論としては、\u003cstrong\u003eコンパイラの最適化は鬼がかっているので、無理に読みづらくしてまでコードを書き換えなくていい\u003c/strong\u003eというありきたりなものになるでしょうか。むしろエラー処理のほうが時間かかっている気がする。実際今回私のコードのエラー処理を分離するだけで350msくらい縮んでいます。\u003c/p\u003e\n\n\u003cp\u003e追記：うわ、typoしとる、なにが\u003ccode\u003evench mark\u003c/code\u003eじゃい！\u003ccode\u003ebenchmark\u003c/code\u003eだわ！戒めとして残しておきます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記税務署でアルバイトしてみて\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98%E7%A8%8E%E5%8B%99%E7%BD%B2%E3%81%A7%E3%82%A2%E3%83%AB%E3%83%90%E3%82%A4%E3%83%88%E3%81%97%E3%81%A6%E3%81%BF%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記:税務署でアルバイトしてみて\u003c/h1\u003e\n\n\u003cp\u003e諸事情あって税務署で短期アルバイトしたんですが、まだまだマイナンバーの混乱は続いていますね～。とりあえずシステムくんだけどマニュアルなんてなかった的なアレ。あと、マイナンバー通知書だけ送ってきて(マイナンバーカードじゃないと本人証明にならない)身分証明書送ってこない人とか多かった。\u003c/p\u003e\n\n\u003cp\u003eマイナンバー導入後最初の確定申告が2017/3/15に終わり、電子証明書をほしいがためにマイナンバーカードを申請する人も一段落し、今ならそんなに時間がかからずにマイナンバーカードが手に入るんじゃないかなぁ・・・。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"追記個人情報保護委員会の言論弾圧に物申す\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%BF%BD%E8%A8%98%E5%80%8B%E4%BA%BA%E6%83%85%E5%A0%B1%E4%BF%9D%E8%AD%B7%E5%A7%94%E5%93%A1%E4%BC%9A%E3%81%AE%E8%A8%80%E8%AB%96%E5%BC%BE%E5%9C%A7%E3%81%AB%E7%89%A9%E7%94%B3%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e追記:個人情報保護委員会の言論弾圧に物申す\u003c/h1\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eべつに「マイナンバー収集を誤認するようなページ」になっていなければ、入力欄を設置していてかまわないというべき。騙す輩が存在し得ることはまた別のこと。無用な萎縮は、田舎警察を思い上がらせることになるだけ。\u003ca href=\"https://t.co/IBgZSkqDMH\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/IBgZSkqDMH\u003c/a\u003e\u003c/p\u003e— Hiromitsu Takagi (@HiromitsuTakagi) \u003ca href=\"https://twitter.com/HiromitsuTakagi/status/1026794454730981376?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2018年8月7日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e誤解が広まるからという理由で政府がやめなさいと圧力をかけるのは、表現の自由に対する攻撃であり、見過ごしてはいけない。\u003cbr\u003e今回のサイトは、 \u003ca href=\"https://t.co/nrPtaInUBt\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://t.co/nrPtaInUBt\u003c/a\u003e の通り、「JavaScriptで書かれていますので，入力されたものはネットに流れません」と説明しており、誤認させるものではなかった。\u003c/p\u003e— Hiromitsu Takagi (@HiromitsuTakagi) \u003ca href=\"https://twitter.com/HiromitsuTakagi/status/1027186759879159808?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2018年8月8日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eというわけで、普通にJavaScriptで書くのはもうたくさんの人がやっている気がするので、C++で書いてWebassemblyに変換してブラウザ上で実行できるようにした。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://yumetodo.github.io/individual_number_check_digit_calcurator/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eマイナンバーのチェックデジットをWebassemblyで計算する\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWebassembly初めて触ったけどC++からやるのだいぶだるいなぁという印象。\u003c/p\u003e\n","body":"# 追記:はじめに\n\n[@MaverickTse](https://twitter.com/MaverickTse), [@mtfmk](https://twitter.com/mtfmk), @YSRKEN 氏の格闘の結果、超高速されたものが登場しました。\n\n```cpp\nSPROUT_CXX14_CONSTEXPR sprout::array\u003cstd::uint8_t, 1000\u003e make_mod_table_ysr() {\n\tsprout::array\u003cstd::uint8_t, 1000\u003e re{};\n\tfor (size_t i = 0; i \u003c 1000; ++i) {\n\t\tsize_t mod = i % 11;\n\t\tre[i] = static_cast\u003cstd::uint8_t\u003e(mod \u003c= 1 ? 0 : 11 - mod);\n\t}\n\treturn re;\n}\nstatic inline bool validate(const __m128i\u0026 x)\n{\n\t__m128i t = _mm_sub_epi8(x, _mm_min_epu8(x, _mm_set1_epi8(9)));\n\treturn _mm_test_all_zeros(t, _mm_setr_epi32(-1, -1, 0x00FFFFFF, 0)) == 1;\n}\nuint8_t calc_check_digit_mtfmk_ysrken(const std::string\u0026 str) noexcept\n{\n\tstatic SPROUT_CXX14_CONSTEXPR auto mod_table = make_mod_table_ysr();\n\tif (str.size() != 11) {\n\t\treturn 0xFE;\n\t}\n\n\t__m128i p_n = _mm_loadu_si128(reinterpret_cast\u003cconst __m128i*\u003e(str.c_str()));\n\tp_n = _mm_sub_epi8(p_n, _mm_set1_epi8('0'));\n\tif (!validate(p_n)) {\n\t\treturn 0xFF;\n\t}\n\n\t__m128i sum = _mm_maddubs_epi16(p_n, _mm_setr_epi8(6, 5, 4, 3, 2, 7, 6, 5, 4, 3, 2, 0, 0, 0, 0, 0));\n\tsum = _mm_sad_epu8(sum, _mm_setzero_si128());\n\tsum = _mm_add_epi32(sum, _mm_srli_si128(sum, 8));\n\treturn mod_table[_mm_cvtsi128_si32(sum)];\n}\n```\n\n詳細は\n\n- [SIMD intrinsicでチェックディジットを計算してみる](http://qiita.com/YSRKEN/items/4ca7229c98640a71bdad)\n- [SIMD intrinsicでチェックディジットを計算してみる その2](http://qiita.com/YSRKEN/items/17097b26ddf0754c5d34)\n- [yumetodo/benchmark_calc_check_degit: C++でマイナンバーのチェックデジットを計算する](https://github.com/yumetodo/benchmark_calc_check_degit)\n\nを参照してください。\n\n# 初めに\nどうももうすぐマイナンバーの仮カードが配られるらしい。セキュリティがものすごく不安だ。\n\nまあそんな話はさておき\n[Ruby - マイナンバーのチェックデジットを計算する - Qiita](http://qiita.com/qube81/items/fa6ef94d3c8615b0ce64)\nが目についた。どうやらマイナンバーにはチェックデジット(検査用数字)なるものがあるらしい。\n\n\u003e行政手続における特定の個人を識別するための番号の利用等に関する法律施行令\n\u003ehttp://law.e-gov.go.jp/announce/H26SE155.html\n\u003e（個人番号とすべき番号の構成）\n第八条 　法第八条第二項の規定により生成される個人番号とすべき番号は、機構が同条第三項の規定により設置される電子情報処理組織を使用して、作為が加わらない方法により生成する次に掲げる要件に該当する十一桁の番号及びその後に付された一桁の検査用数字（個人番号を電子計算機に入力するときに誤りのないことを確認することを目的として、当該十一桁の番号を基礎として総務省令で定める算式により算出される零から九までの整数をいう。第三号において同じ。）により構成されるものとする。\n一 　住民票コードを変換して得られるものであること。\n二 　前号の住民票コードを復元することのできる規則性を備えるものでないこと。\n三 　他のいずれの個人番号（法第七条第二項の従前の個人番号及び個人番号とすべき番号を含む。）を構成する検査用数字以外の十一桁の番号とも異なること。\n\nで検査用数字はどうやって求めるのさ？というと\n\n\u003e行政手続における特定の個人を識別するための番号の利用等に関する法律の規定による通知カード及び個人番号カード並びに情報提供ネットワークシステムによる特定個人情報の提供等に関する省令\n\u003ehttp://law.e-gov.go.jp/announce/H26F11001000085.html\n\u003e（検査用数字を算出する算式）\n第五条 　令第八条の総務省令で定める算式は、次に掲げる算式とする。\n算式\n　１１―（ｎ＝１（シグマ）１１（Ｐｎ×Ｑｎ））を１１で除した余り）\n　ただし、（ｎ＝１（シグマ）１１（Ｐｎ×Ｑｎ））を１１で除した余り≦１の場合は、０とする。\n算式の符号\n　Ｐｎ　個人番号を構成する検査用数字以外の十一桁の番号の最下位の桁を１桁目としたときのｎ桁目の数字\n　Ｑｎ　１≦ｎ≦６のとき　ｎ＋１　７≦ｎ≦１１のとき　ｎ―５\n\n# 検査用数字の導出法\nつまり\n\n* 検査用数字 : $11 - \\Bigl( \\displaystyle\\sum_{n=1}^{11} P_n \\times Q_n \\Bigr) \\% 11$\n    * ただし $\\Bigl( \\displaystyle\\sum_{n=1}^{11} P_n \\times Q_n \\Bigr) \\% 11 ≦１ $の場合は、$0$とする\n\n* $Pn$と$Qn$の定義\n    * $Pn$ : 個人番号を構成する検査用数字以外の十一桁の番号の最下位の桁を $1$ 桁目としたときの $n$ 桁目の数字\n    * $Qn$ : $1≦n≦6$ のとき $n+1$、 $7≦n≦11$ のとき $n-5$\n\nということらしい。\n\n計算式を見たってわかんね～、という人は\n[マイナンバー（個人番号）の１２桁の数字の下一ケタがチェックデジット... - Yahoo!知恵袋](http://web.archive.org/web/20150912114426/http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q10147037045)\nをみるといいと思います。(質問者もBANされていないし取り消したような痕跡もないにもかかわらずなぜか質問が消されているのでWebArchiveにリンク張替え)\n\n# C++11での実装\n\nというわけで実装していく。例外のエラーメッセージ適当すぎんだろとか言わない。\n\n```cpp:数式に忠実に\n#include \u003cstring\u003e\n#include \u003cutility\u003e\n#include \u003cnumeric\u003e//std::accumulate()\n#include \u003cstdexcept\u003e\n#include \u003ccctype\u003e//std::isdigit()\nint calc_check_digit(const std::string\u0026 num) noexcept(false) {\n\tif (11 != num.length()) throw std::runtime_error(\"num.digit must be 11\");\n\tconst int remainder = std::accumulate(num.rbegin(), num.rend(), std::pair\u003cint, int\u003e{}, [](const std::pair\u003cint, int\u003e\u0026 s, const char\u0026 e){\n\t\tif(!std::isdigit(e)) throw std::runtime_error(\"num.digit must be 11\");\n\t\tconst int n = s.second + 1;\n\t\tconst int p = e - '0';\n\t\tconst int q = (6 \u003c n) ? n - 5 : n + 1;\n\t\treturn std::pair\u003cint, int\u003e{s.first + p * q, n};\n\t}).first % 11;\n\treturn (0 == remainder || 1 == remainder) ? 0 : 11 - remainder;\n}\n\n```\n\n```cpp:短く書くwithC++14\n#include \u003cstring\u003e\n#include \u003cutility\u003e\n#include \u003cnumeric\u003e\n#include \u003cstdexcept\u003e\n#include \u003ccctype\u003e\nint calc_check_digit(const std::string\u0026 n) noexcept(false) {\n    if (11 != n.size()) throw std::runtime_error(\"n.digit must be 11\");\n    const int r = std::accumulate(n.rbegin(), n.rend(), std::pair\u003cint, int\u003e{}, [](const auto\u0026 s, const char\u0026 e) -\u003e std::pair\u003cint, int\u003e{\n        if(!std::isdigit(e)) throw std::runtime_error(\"n.digit must be 11\");\n        return {s.first + (e - '0') * ((5 \u003c s.second) ? s.second - 4 : s.second + 2), s.second + 1};\n    }).first % 11;\n    return (0 == r || 1 == r) ? 0 : 11 - r;\n}\n```\n\n``numeric``ヘッダーにあるものだから忘れられがちな``std::accumulate``ですが無茶めちゃ便利です。単に合計を求めるだけでなく、第3, 4引数を工夫することでかなりいろいろできます。\nただし``std::accumulate``の第3引数の型と第4引数で指定する関数の第1引数の型から参照とcv修飾子を除いた型とその戻り値の型、さらに``std::accumulate``の戻り値を受ける変数の型は一致させましょう。あと第1,2引数で指定したイテレータが指すコンテナの要素型と第4引数で指定する関数の第2引数の型から参照とcv修飾子を除いた型もですね。結果が謎になります。\n\n```cpp\n//イメージ\nRet result = std::accumulate(Container\u003cElem\u003e::iterator begin, Container\u003cElem\u003e::iterator end, Ret init, [](const Ret\u0026 r, const Elem\u0026 e) -\u003e Ret{});\n```\n\n検査用数字の導出法が下桁からみていくようだったのでリバースイテレータを使ってます。ruby版だとreverseしてますがそんなことする必要は無いですからね。\n\nこの``calc_check_digit``関数は例外を投げうるので、呼ぶときはちゃんと例外処理してください。\n\n#実行例\n\nhttp://melpon.org/wandbox/permlink/CNrdqxw1MbD0r4bI\n\n# 各言語実装まとめ\n\n| 言語 | リンク | \n|:-----------:|:------------|\n| Ruby | [マイナンバーのチェックデジットを計算する](http://qiita.com/qube81/items/fa6ef94d3c8615b0ce64) |\n| Ruby | [マイナンバーを検証する gem を作った](http://qiita.com/kakipo/items/e3f376e78a4a37374b32) |\n| C++ | [C++でマイナンバーのチェックデジットを計算する](http://qiita.com/yumetodo/items/600ca0df422010cbc4c1) |\n| Python | [Python マイナンバー検証用モジュールを公開](http://qiita.com/haminiku/items/bcf4bac82bd1ca62c746) |\n| PHP | [マイナンバーのチェックデジットを計算する PHP版](http://qiita.com/rana_kualu/items/f36275032bbc6a3f18b4) |\n| C# | [C#でマイナンバーのチェックデジットを計算する](http://qiita.com/whitebell/items/5982055e6768960496db) |\n| C# | [C#でマイナンバーのチェックデジットを計算する - YDiary](http://ydkk.hateblo.jp/entry/2015/11/20/122852) |\n| SQL | [マイナンバーのチェックデジットを計算する（SQLで）](http://qiita.com/damassima/items/873a5ba95c32d971eb26) |\n| Perl | [Perl5,Perl6でマイナンバーのチェックデジットを計算する](http://qiita.com/B73W56H84/items/fa7fcadf7779ac7dbe8b) |\n| PowerShell | [WindowsPowerShell \u0026 C#マイナンバーのチェックデジットを計算する](http://qiita.com/shoooo/items/42bbdd9023c14661da0a) |\n| JavaScript, Groovy | [JavaScriptとGroovyでマイナンバーのチェックデジットを計算する](http://qiita.com/mas0061/items/19ffdda24a9df5f4e6e2) |\n| JavaScript, Ramda | [マイナンバーのチェックデジットを JavaScript で計算する](http://qiita.com/masakielastic/items/683ea4f892a1a0f8dc62) |\n| Haskell | [Haskellでマイナンバーのチェックデジットを計算する](http://qiita.com/lotz/items/e1f3c649227271c381f6) |\n| Haskell | [マイナンバー数字列の確認](http://qiita.com/nobsun/items/fc151dea83114146ad51) |\n| Haskell | [マイナンバーのチェックデジットを Haskell で計算してみる](http://qiita.com/little_Haskeller/items/c75437684d0c8fb43fa4) |\n| Java | [マイナンバーのチェックデジットを計算する（Java編）](http://qiita.com/deaf_tadashi/items/2e7249371f2138a6a7fc) |\n| Java | [マイナンバーチェックデジット用Javaコード](http://qiita.com/gaco777/items/be44902238fc0294061a) |\n| Go | [マイナンバーのチェックデジットをGoで計算する](http://qiita.com/qube81/items/f66a38b28ec58bc5c4da) |\n| Go | [go-mynumber/mynumber.go at master · koron/go-mynumber](https://github.com/koron/go-mynumber/blob/master/mynumber.go) |\n| C, Go, Bash, Excel etc... | [マイナンバーのチェックデジットの検算をざっくり1割くらい高速化する(計ってないので知らんけど)](http://qiita.com/genta/items/fb25ce50592134d3fbb8) |\n| Swift | [マイナンバーのチェックデジットをSwiftで計算する](http://qiita.com/melodydance/items/4b442e3094fdea031065) |\n| Vim script | [Big Sky :: Vim からマイナンバーを検証出来るプラグイン書いた。](http://mattn.kaoriya.net/software/vim/20151117174330.htm) |\n| Vim script | [mattn/vim-mynumber: Check your MyNumber](https://github.com/mattn/vim-mynumber) |\n| Scheme(Gauche)| [Scheme(Gauche)でマイナンバーのチェックデジットを計算する](http://qiita.com/X___MOON___X/items/70b81090beb003534cd8) |\n| Scheme (R7RS+SRFI) | [Scheme (R7RS+SRFI) でマイナンバーのチェックデジットを計算する](http://qiita.com/SaitoAtsushi/items/8237d8fe5816e3eaa494) |\n| OCaml | [OCaml でマイナンバーのチェックデジットを計算する](http://qiita.com/outerinside/items/dd74dd84a8b0b5884df2) |\n| Rust | [Tomohiro/mynumber  GitHub](https://github.com/Tomohiro/mynumber) |\n| TeX | [TeXで簡単プログラミング♪ - ０番染色体](http://0-chromosome.hatenablog.jp/entry/2015/12/07/000000) |\n| Kotlin | [Kotlinでマイナンバーのチェックディジットを計算する](http://qiita.com/boohbah/items/8f2bd5ebebf23a29a474) |\n| Objective-C | [マイナンバーのチェックディジットをObjective-Cで計算する](http://qiita.com/yangci/items/04eacf6236716b7ea8d2) |\n| Elixir | [Elixirでマイナンバーのチェックデジットを計算する](http://qiita.com/marcy_o/items/e6260baff5474974e8f9) |\n| Agda | [【速報】マイナンバーの全域性とチェックディジットの一意性が証明された！？](http://qiita.com/cutsea110/items/5026275954bd450a0764) |\n| Crystal | [マイナンバーのチェックディジットをCrystalで計算する](http://qiita.com/make_now_just/items/a4b2f3d9b53e4f23af93)　|\n| D | [D 言語でコンパイル時にマイナンバーの妥当性をチェックするテンプレート](http://qiita.com/e10s/items/5e6ec352db253e0d3a08)|\n| Emacs Lisp | [syohex/emacs-mynumber: Mynumber validation in Emacs](https://github.com/syohex/emacs-mynumber) |\n| Scala | [マイナンバーのチェックデジットをScalaで計算する](http://qiita.com/yabuchin_y/items/91dcd60446454fb00274) |\n| Bat(コマンドプロンプト) | ~~[Windowsバッチファイルでマイナンバーのチェックデジットを計算 - 沖の雑記帳](http://oki.hateblo.jp/entry/2016/03/04/173726)~~ |\n| Awk | ~~[awkでマイナンバーのチェックデジットを検証・集計 - 沖の雑記帳](oki.hateblo.jp/entry/2016/03/07/143644)~~ |\n| Awk | [マイナンバーチェッカー用シェルawkスクリプト - 日々之迷歩](http://papiro.hatenablog.jp/entry/2016/04/10/022020) |\n| ClojureScript | [knjname/validate-my-number.cljs](https://gist.github.com/knjname/f1f7ac337052a9439db5e00a1c3d47e8)|\n| AppleScript | [マイナンバーのチェックデジットをAppleScriptで計算する](http://qiita.com/SatoshiN21/items/126a051767be477c76e5) |\n| Bat,awk,Fortran77,Brainfuck | [色々な言語でマイナンバーのチェックデジットを計算したかった](http://qiita.com/h_oki/items/358979d21bf7fe460816) |\n| C++ | [SIMD intrinsicでチェックディジットを計算してみる](http://qiita.com/YSRKEN/items/4ca7229c98640a71bdad) |\n| C++ | [SIMD intrinsicでチェックディジットを計算してみる その2](http://qiita.com/YSRKEN/items/17097b26ddf0754c5d34) |\n| C++ | [yumetodo/benchmark_calc_check_degit: C++でマイナンバーのチェックデジットを計算する](https://github.com/yumetodo/benchmark_calc_check_degit) |\n| Fortran2003 | [マイナンバーのチェックデジットを計算する　Fortran 2003](http://qiita.com/cure_honey/items/a773c8cb6874efea7add) |\n\n\nQiitaでは一番上のRuby版が最初だと思います。\n\npython版が出てる！これは勝ち確定です！(何に対する？)\nSwift版も出たとかついにApple信者(偏見)もマイナンバー対応に動いたのか(違う)。\nそして驚くべき言語展開。なんでこんなに流行ってるのさ。\n\n~~ここまでみて分かる通りすべて文字列として数値を受け取るものばかりです。なぜなら先頭が0のマイナンバーを判別できないからです。~~数値でやってる人もいた。\n\nところで「Groovyって何？」となって\nhttp://codezine.jp/article/detail/3757\nを見るまで知らなかった件\n\nなんか @h_oki 氏によるBrainfuck版が出てるけど控えめに言って頭おかC・・・いや、なんでもない。\n\n# 追記\n\n\u003ehttp://qiita.com/rana_kualu/items/f36275032bbc6a3f18b4\n\u003eチェックディジットは一意に決まるので、実質11桁、たった1000億通りしかありません。\n現時点でも適当に1000回撃てば一回通ってしまいます。\nIPv6とまでは言わないが、せめて16桁くらい取っておいてもよかっただろ。\n\nお、せやな（棒読み）\n\n# 実際にマイナンバーが届いた\n\nというわけで実際に実行例のプログラムで試したところ、ちゃんとチェックデジットはあってました。良かった。\n\n# 追記:ベンチマーク\n\nなんか\n[ただマイナンバー計算しても面白くないから最速を目指してみた。](http://qiita.com/ryogaelbtn/items/2ad39ef8c9db5358582f)\nなる記事がでた。どう考えても私の記事を煽っている(注:という妄想です)\n\nで、その記事を読んでみたが、4点気に入らない\n\n1. 引数が``const array\u003cint, 12\u003e\u0026``だが、常識的に考えて、入力は文字列だろうから、``const std::string\u0026``でなければ困る\n2. 無駄にキャストするな、可読性もくそもありゃしねぇ\n3. helper関数として``Q``という名の関数があるがなんでconstexprじゃねーんだ。constexprは市民の義務だろ！\n4. ``clock()``とかいうC++においてはとっととdeprecatedになるべき関数を時間計測に用いている。ありえない。しかも大抵の環境では分解能が低い。``std::chrono::high_resolution_clock::now``を使おう([ただしVSの場合VS2013までは分解能が高くない](https://msdn.microsoft.com/ja-jp/library/bb531344.aspx#mt374))\n\nというわけで書き換えて、ついでに私のコードと勝負させることにした。\n\nちなみに私のコードも``std::isdigit``は使わないように書き換えている。わざわざlocale依存の関数を使う必要はよく考えて見ればないからな。ついでにエラー処理と計算部分を分離した。\n\n```cpp:対決コード\nstd::uint8_t calc_check_digit_yumetodo(const std::string\u0026 n) noexcept(false) {\n    if (11 != n.size()) throw std::runtime_error(\"n.digit must be 11\");\n    for(auto e : n) if(e \u003c '0' || '9' \u003c e) { throw std::runtime_error(\"in function calc_check_digit_yumetodo : iregal charactor detect.(\" + n + ')'); }\n    const std::uint8_t r = std::accumulate(n.rbegin(), n.rend(), std::pair\u003cint, int\u003e{}, [](const auto\u0026 s, const char\u0026 e) -\u003e std::pair\u003cint, int\u003e{\n        return {s.first + (e - '0') * ((5 \u003c s.second) ? s.second - 4 : s.second + 2), s.second + 1};\n    }).first % 11;\n    return (0 == r || 1 == r) ? 0 : 11 - r;\n}\nconstexpr unsigned short Q(unsigned char n) {\n    return (1 \u003c= n \u0026\u0026 n \u003c= 6) ? n + 1 : n - 5;\n}\nstd::uint8_t calc_check_digit_ryogaelbtn(const std::string\u0026 P) {\n    if (11 != P.size()) throw std::runtime_error(\"P.digit must be 11\");\n    for(auto e : P) if(e \u003c '0' || '9' \u003c e) { throw std::runtime_error(\"in function calc_check_digit_ryogaelbtn : iregal charactor detect.(\" + P + ')'); }\n    unsigned int sum = 0;\n    sum += static_cast\u003cunsigned short\u003e(P[10]) * Q(1);\n    sum += static_cast\u003cunsigned short\u003e(P[9]) * Q(2);\n    sum += static_cast\u003cunsigned short\u003e(P[8]) * Q(3);\n    sum += static_cast\u003cunsigned short\u003e(P[7]) * Q(4);\n    sum += static_cast\u003cunsigned short\u003e(P[6]) * Q(5);\n    sum += static_cast\u003cunsigned short\u003e(P[5]) * Q(6);\n    sum += static_cast\u003cunsigned short\u003e(P[4]) * Q(7);\n    sum += static_cast\u003cunsigned short\u003e(P[3]) * Q(8);\n    sum += static_cast\u003cunsigned short\u003e(P[2]) * Q(9);\n    sum += static_cast\u003cunsigned short\u003e(P[1]) * Q(10);\n    sum += static_cast\u003cunsigned short\u003e(P[0]) * Q(11);\n\n    return sum % 11 \u003c= 1 ? 0 : 11 - sum % 11;\n}\n```\n\n計測は一発勝負、ループ回数は元記事の10倍の10000000(10^7)回、環境はだれでも利用できるwandboxを用いる。\n\n```plain:clang3.8-O2\ngenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 251[ms] (251311496[ns])\ncalc_check_digit_yumetodo : 265[ms] (265814777[ns])\nvench mark finish!\n```\nhttp://melpon.org/wandbox/permlink/4LuMFnk99W7FWHnz\n\n```plain:clang3.8-O3\ngenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 247[ms] (247027803[ns])\ncalc_check_digit_yumetodo : 244[ms] (244624077[ns])\nvench mark finish!\n```\n\nhttp://melpon.org/wandbox/permlink/XsElyq6t55khBdR0\n\n```plain:gcc6.1.0-O2\ngenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 255[ms] (255793658[ns])\ncalc_check_digit_yumetodo : 475[ms] (475591886[ns])\nvench mark finish!\n```\n\nhttp://melpon.org/wandbox/permlink/3qAjDExuRERlh419\n\n```plain:gcc6.1.0-O3\ngenerating inputs...done.\nstart vench mark:\ncalc_check_digit_ryogaelbtn : 203[ms] (203583920[ns])\ncalc_check_digit_yumetodo : 202[ms] (202423769[ns])\nvench mark finish!\n```\n\nhttp://melpon.org/wandbox/permlink/d4i5QjDprvrRho2U\n\n両者差はないかな。GCCの``-O2``だけ差がついたのは、``std::accumulate``と``std::pair``をうまく消せてないからかな？\n\n結論としては、**コンパイラの最適化は鬼がかっているので、無理に読みづらくしてまでコードを書き換えなくていい**というありきたりなものになるでしょうか。むしろエラー処理のほうが時間かかっている気がする。実際今回私のコードのエラー処理を分離するだけで350msくらい縮んでいます。\n\n追記：うわ、typoしとる、なにが``vench mark``じゃい！``benchmark``だわ！戒めとして残しておきます。\n\n# 追記:税務署でアルバイトしてみて\n\n諸事情あって税務署で短期アルバイトしたんですが、まだまだマイナンバーの混乱は続いていますね～。とりあえずシステムくんだけどマニュアルなんてなかった的なアレ。あと、マイナンバー通知書だけ送ってきて(マイナンバーカードじゃないと本人証明にならない)身分証明書送ってこない人とか多かった。\n\nマイナンバー導入後最初の確定申告が2017/3/15に終わり、電子証明書をほしいがためにマイナンバーカードを申請する人も一段落し、今ならそんなに時間がかからずにマイナンバーカードが手に入るんじゃないかなぁ・・・。\n\n# 追記:個人情報保護委員会の言論弾圧に物申す\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eべつに「マイナンバー収集を誤認するようなページ」になっていなければ、入力欄を設置していてかまわないというべき。騙す輩が存在し得ることはまた別のこと。無用な萎縮は、田舎警察を思い上がらせることになるだけ。\u003ca href=\"https://t.co/IBgZSkqDMH\"\u003ehttps://t.co/IBgZSkqDMH\u003c/a\u003e\u003c/p\u003e\u0026mdash; Hiromitsu Takagi (@HiromitsuTakagi) \u003ca href=\"https://twitter.com/HiromitsuTakagi/status/1026794454730981376?ref_src=twsrc%5Etfw\"\u003e2018年8月7日\u003c/a\u003e\u003c/blockquote\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e誤解が広まるからという理由で政府がやめなさいと圧力をかけるのは、表現の自由に対する攻撃であり、見過ごしてはいけない。\u003cbr\u003e今回のサイトは、 \u003ca href=\"https://t.co/nrPtaInUBt\"\u003ehttps://t.co/nrPtaInUBt\u003c/a\u003e の通り、「JavaScriptで書かれていますので，入力されたものはネットに流れません」と説明しており、誤認させるものではなかった。\u003c/p\u003e\u0026mdash; Hiromitsu Takagi (@HiromitsuTakagi) \u003ca href=\"https://twitter.com/HiromitsuTakagi/status/1027186759879159808?ref_src=twsrc%5Etfw\"\u003e2018年8月8日\u003c/a\u003e\u003c/blockquote\u003e\n\nというわけで、普通にJavaScriptで書くのはもうたくさんの人がやっている気がするので、C++で書いてWebassemblyに変換してブラウザ上で実行できるようにした。\n\n[マイナンバーのチェックデジットをWebassemblyで計算する](https://yumetodo.github.io/individual_number_check_digit_calcurator/)\n\nWebassembly初めて触ったけどC++からやるのだいぶだるいなぁという印象。\n","coediting":false,"comments_count":13,"created_at":"2015-10-16T13:59:17+09:00","group":null,"id":"600ca0df422010cbc4c1","likes_count":16,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"algorithm","versions":[]},{"name":"C++11","versions":[]}],"title":"C++でマイナンバーのチェックデジットを計算する","updated_at":"2018-08-09T18:09:57+09:00","url":"https://qiita.com/yumetodo/items/600ca0df422010cbc4c1","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null},{"rendered_body":"\u003cp\u003e配列を重複なく乱数で埋める方法を考えていきます。なんで唐突にそんな話が始まったかというと\u003cbr\u003e\n\u003ca href=\"http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q10150708440\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC#もしくはCで以下のプログラムを書いて欲しいです。【内容】... - Yahoo!知恵袋\u003c/a\u003e\u003cbr\u003e\nに回答しようと思ったからです。C#なんて知らんし、いまどきCで書く人なんて居ないでしょ。\u003c/p\u003e\n\n\u003cp\u003eというわけでC++11の範囲で書いていきます。・・・はいそこ、今時C++11なんていう太古の規格で書くなとか言わない。\u003c/p\u003e\n\n\u003cp\u003eとりあえずint型のvectorを作っていますが、他のにするのもさして大変ではないですね。\u003c/p\u003e\n\n\u003cp\u003e下の3つのほかにさらに3つの方法が\u003cbr\u003e\n\u003ca href=\"http://qiita.com/hmito/items/9f4bdc8442b6f6b3c7bc\" id=\"reference-c1e0d9077b91425d2a78\"\u003eC++で効率よく重複のない乱数列を生成する\u003c/a\u003e\u003cbr\u003e\nで提示されており、\u003cstrong\u003eそっちの方が速い\u003c/strong\u003eです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"まずは結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずは結論\u003c/h2\u003e\n\n\u003cp\u003eこれ使えばいいんじゃね。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003erandseq.hpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#pragma once\n\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;random\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;unordered_set\u0026gt;\n#include \u0026lt;functional\u0026gt;\n#include \u0026lt;limits\u0026gt;\n#include \u0026lt;type_traits\u0026gt;\n\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_device\u003c/span\u003e \u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint_least32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 初期化用ベクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ベクタの初期化\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eseed_seq\u003c/span\u003e \u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 乱数エンジン\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ediff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003en1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emake_unsigned\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003estatic_assert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eis_integral\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"T is not integral.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emake_unsigned\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en1\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array_unique\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ediff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Invalid argument\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emake_size\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003euintmax_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mf\"\u003e1.2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emake_size\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_size\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eunique_end\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003edistance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eunique_end\u003c/span\u003e\u003cspan class=\"p\"\u003e))){\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eunique_end\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eerase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunique_end\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eshuffle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array_select\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ediff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Invalid argument\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereserve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush_back\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ecnt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecnt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ecnt\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eerase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array_just_shuffle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ediff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Invalid argument\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e]()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eshuffle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003etypename\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edetail\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ediff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Invalid argument\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array_just_shuffle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003euintmax_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enumeric_limits\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003edouble\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;::\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.04\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array_unique\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array_select\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e使い方\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;chrono\u0026gt;\n#include \u0026lt;utility\u0026gt;\n#include \u0026lt;string\u0026gt;\n#include\"randseq.hpp\"\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint_elapsed_time\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eT\u003c/span\u003e \u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" : \"\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eduration_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emilliseconds\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" msec.\"\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eclock\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003echrono\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ehigh_resolution_clock\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e500\u003c/span\u003e\u003cspan class=\"p\"\u003e}){\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econstexpr\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003earray_num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003earray_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eval\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003earray_num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n            \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\"array_num : \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003earray_num\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" rand_max : \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\" rand_min : \"\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003et0\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eclock\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ecnt\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n                \u003cspan class=\"n\"\u003emake_rand_array\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003earray_num\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n            \u003cspan class=\"n\"\u003eprint_elapsed_time\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"make_rand_array\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003et0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eclock\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eexception\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecerr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhat\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cp\"\u003e#ifdef _WIN32\n\u003c/span\u003e    \u003cspan class=\"n\"\u003esystem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"pause\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#endif\n\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"方法1-stdunordered_mapでインデックスを作って重複チェックする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%96%B9%E6%B3%951-stdunordered_map%E3%81%A7%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E9%87%8D%E8%A4%87%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e方法1 std::unordered_mapでインデックスを作って重複チェックする\u003c/h2\u003e\n\n\u003cp\u003e頑張ればnoexceptにできるんでしょうが、面倒そうなので、ちゃんとcatchしてあげてください。\u003c/p\u003e\n\n\u003cp\u003eあ、やたら長いのはshuffleしたほうが速そうなときはshuffleするように書いているからです。ちなみに\u003ccode\u003estd::random_shuffle\u003c/code\u003eは\u003ca href=\"https://meetingcpp.com/index.php/br/items/stdrandom_shuffle-is-deprecated.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++14では非推奨\u003c/a\u003eなので\u003ccode\u003estd::shuffle\u003c/code\u003eを使いましょう。大事なのは最後のelse節。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estd::map/std::unordered_map\u003c/code\u003eのkeyの存在確認はcountメンバー関数が便利ですね。\u003c/p\u003e\n\n\u003cp\u003eそういえばstd::mapって存在しないkeyをoperator[]で参照すると値がデフォルトコンストラクタで初期化された状態の要素を返してくれるんですね。便利。\u003cbr\u003e\n\u003ca href=\"http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11150714191\" rel=\"nofollow noopener\" target=\"_blank\"\u003estd::mapの第2パラメータの初期値適切な例かどうかはわかりませ... - Yahoo!知恵袋\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;vector\u0026gt;\n#include \u0026lt;unordered_map\u0026gt;\n#include \u0026lt;utility\u0026gt;\n#include \u0026lt;random\u0026gt;\n#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;functional\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_device\u003c/span\u003e \u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint_least32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 初期化用ベクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ベクタの初期化\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eseed_seq\u003c/span\u003e \u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 乱数エンジン\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunordered_map\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_index\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunordered_map\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere_index\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ere_index\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\u003cspan class=\"c1\"\u003e//存在しない要素に対してはデフォルトコンストラクタで初期化されるので0になるからこれでいい\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere_index\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"引数が異常です\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eshuffle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1U\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// distribution\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003epoint\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eshuffle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// distribution\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e//乱数で埋める\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ere_index\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_index\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003ere_index\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003ere_index\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_index\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\u003cspan class=\"c1\"\u003e//重複は新たな乱数で埋める\u003c/span\u003e\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere_index\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e]){\u003c/span\u003e\n                \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e--\u003c/span\u003e\u003cspan class=\"n\"\u003ere_index\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e使用例\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;exception\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003earr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\", \"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecout\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eexception\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n        \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003ecerr\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003eer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhat\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eendl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"方法2-イテレータを使って線形探索して重複チェックするainomegumi氏\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%96%B9%E6%B3%952-%E3%82%A4%E3%83%86%E3%83%AC%E3%83%BC%E3%82%BF%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E7%B7%9A%E5%BD%A2%E6%8E%A2%E7%B4%A2%E3%81%97%E3%81%A6%E9%87%8D%E8%A4%87%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%99%E3%82%8Bainomegumi%E6%B0%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e方法2 イテレータを使って線形探索して重複チェックする(AinoMegumi氏)\u003c/h2\u003e\n\n\u003cp\u003e友達なので試しにネタ振りしたら書いてくれました。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/AinoMegumi/items/0d183910gomed51df904f828\"\u003e重複しない乱数配列(C++14版)\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eごめん、微妙に変えさせて。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;random\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;functional\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_device\u003c/span\u003e \u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint_least32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 初期化用ベクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ベクタの初期化\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eseed_seq\u003c/span\u003e \u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 乱数エンジン\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_max\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"引数が異常です\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003emt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"n\"\u003eis_all_no_conflict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e    \n        \u003cspan class=\"n\"\u003eis_all_no_conflict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ej\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ej\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ek\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003eis_all_no_conflict\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eis_all_no_conflict\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"方法3-stdunordered_setを使う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%96%B9%E6%B3%953-stdunordered_set%E3%82%92%E4%BD%BF%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e方法3 std::unordered_setを使う\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/tsuyoshi_cho/items/2c10819b9f667e41dfe2\" id=\"reference-4f36e6e7d5eaa92880ed\"\u003e重複しない乱数配列(Java版/コレクション活用?版)\u003c/a\u003e\u003cbr\u003e\nをみてて、\u003ccode\u003ejava.util.HashSet\u003c/code\u003e便利だなぁと思ってたんですが、ふとC++にそれくらいあるよな？と思ってぐぐったら\u003cbr\u003e\n\u003ca href=\"http://stackoverflow.com/questions/24644190/java-hashset-equiv-in-c\" rel=\"nofollow noopener\" target=\"_blank\"\u003edata structures - Java HashSet equiv in c++ - Stack Overflow\u003c/a\u003e\u003cbr\u003e\nえ？\u003ccode\u003estd::unordered_set\u003c/code\u003eってソートしないの？\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://minus9d.hatenablog.com/entry/20130819/1376922187\" rel=\"nofollow noopener\" target=\"_blank\"\u003eC++11のunordered_setと、setとの所要時間を比較する - minus9d's diary\u003c/a\u003e\u003cbr\u003e\nunrodered_setは、setと異なり、挿入した数字をソートせずに保存する。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cdel\u003eおお、勝ち確定やん！\u003c/del\u003e(後述:そうでもなかった)だれだよ\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e配列を重複なく乱数で埋める方法は\u003ccode\u003estd::set/std::unordered_set\u003c/code\u003eなんかも考えられるんですが、今回は使わずにやっていこうと思います。\u003cbr\u003e\n乱数入れてshuffleするのは非効率的に思えるので。(速度計測してないorz)\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eなんてほざいてたの(私だ)。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"cpp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;random\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstdint\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;stdexcept\u0026gt;\n#include \u0026lt;unordered_set\u0026gt;\n#include \u0026lt;functional\u0026gt;\n\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003erandom_device\u003c/span\u003e \u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"kt\"\u003euint_least32_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 初期化用ベクタ\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egenerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ernd\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\u003cspan class=\"c1\"\u003e// ベクタの初期化\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eseed_seq\u003c/span\u003e \u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003emt19937\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseed\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e// 乱数エンジン\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emake_rand_array\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eswap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e \u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estatic_cast\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003esize_t\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_max\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003erand_min\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_min_diff\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eruntime_error\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"引数が異常です\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eunordered_set\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eauto\u003c/span\u003e \u003cspan class=\"n\"\u003eengine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_rand_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003euniform_int_distribution\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erand_min\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erand_max\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edistribution\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eengine\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003evector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebegin\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003etmp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"速度比較\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BC%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e速度比較\u003c/h2\u003e\n\n\u003cp\u003eいやあ、下見ればわかるけど、ここまでイテレータつかうやつが遅いとは思わなかった。なんでだろうなぁ・・・。いくらなんでも遅すぎる気がするのでだれか教えてくだい。\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e項目\u003c/th\u003e\n\u003cth\u003e関数名\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e方法1 : std::unordered_map\u003c/td\u003e\n\u003ctd\u003emake_rand_array_1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e方法2 : 線形探索\u003c/td\u003e\n\u003ctd\u003emake_rand_array_2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e方法3 : std::unordered_set\u003c/td\u003e\n\u003ctd\u003emake_rand_array_3\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"clang-370-on-wandbox\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#clang-370-on-wandbox\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eclang 3.7.0 on Wandbox\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/hkHklM6K9GdTl2KY\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/hkHklM6K9GdTl2KY\u003c/a\u003e\u003cbr\u003e\nclang++ prog.cc -stdlib=libc++ -Wall -Wextra -O2 -march=native -std=c++11 \u003cbr\u003e\narray_num : 100000rand_max : 1000000rand_min : -10000\u003cbr\u003e\nmake_rand_array_1 : 372 msec.\u003cbr\u003e\nmake_rand_array_2 : 17811 msec.\u003cbr\u003e\nmake_rand_array_3 : 41 msec.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"gcc-520-on-wandbox\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#gcc-520-on-wandbox\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egcc 5.2.0 on Wandbox\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://melpon.org/wandbox/permlink/Syzbm0YgS8EuODxb\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://melpon.org/wandbox/permlink/Syzbm0YgS8EuODxb\u003c/a\u003e\u003cbr\u003e\ng++ prog.cc -Wall -Wextra -O2 -march=native -std=c++11 \u003cbr\u003e\narray_num : 100000rand_max : 1000000rand_min : -10000\u003cbr\u003e\nmake_rand_array_1 : 338 msec.\u003cbr\u003e\nmake_rand_array_2 : 28659 msec.\u003cbr\u003e\nmake_rand_array_3 : 38 msec.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"visual-studio-2015-community-on-mypc\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#visual-studio-2015-community-on-mypc\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVisual Studio 2015 Community on myPC\u003c/h3\u003e\n\n\u003cp\u003eこれだけ自分のPC上です。CPUは\u003ccode\u003eIntel(R) Core(TM) i5-4200M\u003c/code\u003eです。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e/GS /GL /analyze- /W3 /Gy /Zc:wchar_t /Zi /Gm- /O2 /sdl /Fd\"Release\\vc140.pdb\" /Zc:inline /fp:precise /D \"WIN32\" /D \"NDEBUG\" /D \"_CONSOLE\" /D \"_UNICODE\" /D \"UNICODE\" /errorReport:prompt /WX- /Zc:forScope /Gd /Oy- /Oi /MD /Fa\"Release\\\" /EHsc /nologo /Fo\"Release\\\" /Fp\"Release\\rand_array.pch\" \u003cbr\u003e\narray_num : 100000rand_max : 1000000rand_min : -10000\u003cbr\u003e\nmake_rand_array_1 : 163 msec.\u003cbr\u003e\nmake_rand_array_2 : 17249 msec.\u003cbr\u003e\nmake_rand_array_3 : 36 msec.\u003c/p\u003e\n\u003c/blockquote\u003e\n","body":"配列を重複なく乱数で埋める方法を考えていきます。なんで唐突にそんな話が始まったかというと\n[C#もしくはCで以下のプログラムを書いて欲しいです。【内容】... - Yahoo!知恵袋](http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q10150708440)\nに回答しようと思ったからです。C#なんて知らんし、いまどきCで書く人なんて居ないでしょ。\n\nというわけでC++11の範囲で書いていきます。・・・はいそこ、今時C++11なんていう太古の規格で書くなとか言わない。\n\nとりあえずint型のvectorを作っていますが、他のにするのもさして大変ではないですね。\n\n下の3つのほかにさらに3つの方法が\n[C++で効率よく重複のない乱数列を生成する](http://qiita.com/hmito/items/9f4bdc8442b6f6b3c7bc)\nで提示されており、**そっちの方が速い**です。\n\n## まずは結論\n\nこれ使えばいいんじゃね。\n\n```cpp:randseq.hpp\n#pragma once\n\n#include \u003crandom\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ccstdint\u003e\n#include \u003calgorithm\u003e\n#include \u003cstdexcept\u003e\n#include \u003cunordered_set\u003e\n#include \u003cfunctional\u003e\n#include \u003climits\u003e\n#include \u003ctype_traits\u003e\n\nstd::mt19937 create_rand_engine(){\n\tstd::random_device rnd;\n\tstd::vector\u003cstd::uint_least32_t\u003e v(10);// 初期化用ベクタ\n\tstd::generate(v.begin(), v.end(), std::ref(rnd));// ベクタの初期化\n\tstd::seed_seq seed(v.begin(), v.end());\n\treturn std::mt19937(seed);// 乱数エンジン\n}\n\nnamespace detail {\n\ttemplate\u003ctypename T\u003e auto diff(T n1, T n2) -\u003e typename std::make_unsigned\u003cT\u003e::type {\n\t\tstatic_assert(std::is_integral\u003cT\u003e::value, \"T is not integral.\");\n\t\tif (n1 \u003c n2) std::swap(n1, n2);\n\t\treturn static_cast\u003ctypename std::make_unsigned\u003cT\u003e::type\u003e(n1 - n2);\n\t}\n}\n\ntemplate\u003ctypename type\u003e std::vector\u003ctype\u003e make_rand_array_unique(const size_t size, type rand_min, type rand_max){\n\tif(rand_min \u003e rand_max) std::swap(rand_min, rand_max);\n\tconst auto max_min_diff = detail::diff(rand_max, rand_min) + 1;\n\tif(max_min_diff \u003c size) throw std::runtime_error(\"Invalid argument\");\n\n\tstd::vector\u003ctype\u003e tmp;\n\tauto engine = create_rand_engine();\n\tstd::uniform_int_distribution\u003ctype\u003e distribution(rand_min, rand_max);\n\n\tconst size_t make_size = (static_cast\u003cuintmax_t\u003e(std::numeric_limits\u003cdouble\u003e::max()) \u003c size) ? ((std::numeric_limits\u003csize_t\u003e::max() - size / 5) \u003c size) ? size : size + size / 5 : static_cast\u003csize_t\u003e(size*1.2);\n\ttmp.reserve(make_size);\n\twhile(tmp.size() \u003c size){\n\t\twhile(tmp.size() \u003c make_size) tmp.push_back(distribution(engine));\n\t\tstd::sort(tmp.begin(), tmp.end());\n\t\tauto unique_end = std::unique(tmp.begin(), tmp.end());\n\n\t\tif(size \u003c static_cast\u003csize_t\u003e(std::distance(tmp.begin(), unique_end))){\n\t\t\tunique_end = std::next(tmp.begin(), size);\n\t\t}\n\t\ttmp.erase(unique_end, tmp.end());\n\t}\n\n\tstd::shuffle(tmp.begin(), tmp.end(), engine);\n\treturn tmp;\n}\n\ntemplate\u003ctypename type\u003e std::vector\u003ctype\u003e make_rand_array_select(const size_t size, type rand_min, type rand_max) {\n\tif (rand_min \u003e rand_max) std::swap(rand_min, rand_max);\n\tconst auto max_min_diff = detail::diff(rand_max, rand_min) + 1;\n\tif (max_min_diff \u003c size) throw std::runtime_error(\"Invalid argument\");\n\n\tstd::vector\u003ctype\u003e tmp;\n\ttmp.reserve(max_min_diff);\n\n\tfor (auto i = rand_min; i \u003c= rand_max; ++i)tmp.push_back(i);\n\n\tauto engine = create_rand_engine();\n\tstd::uniform_int_distribution\u003ctype\u003e distribution(rand_min, rand_max);\n\n\tfor (size_t cnt = 0; cnt \u003c size; ++cnt) {\n\t\tsize_t pos = std::uniform_int_distribution\u003csize_t\u003e(cnt, tmp.size() - 1)(engine);\n\n\t\tif (cnt != pos) std::swap(tmp[cnt], tmp[pos]);\n\t}\n\ttmp.erase(std::next(tmp.begin(), size), tmp.end());\n\n\treturn tmp;\n}\n\ntemplate\u003ctypename type\u003e std::vector\u003ctype\u003e make_rand_array_just_shuffle(const size_t size, type rand_min, type rand_max) {\n\tif (rand_min \u003e rand_max) std::swap(rand_min, rand_max);\n\tconst auto max_min_diff = detail::diff(rand_max, rand_min) + 1;\n\tif (max_min_diff != size) throw std::runtime_error(\"Invalid argument\");\n\n\tauto engine = create_rand_engine();\n\tstd::uniform_int_distribution\u003ctype\u003e distribution(rand_min, rand_max);\n\tstd::vector\u003ctype\u003e re(size);\n\tauto t = rand_min;\n\tstd::generate(re.begin(), re.end(), [\u0026t]() { return t++; });\n\tstd::shuffle(re.begin(), re.end(), engine);\n\treturn re;\n}\n\ntemplate\u003ctypename type\u003e std::vector\u003ctype\u003e make_rand_array(const size_t size, type rand_min, type rand_max) {\n\tif (rand_min \u003e rand_max) std::swap(rand_min, rand_max);\n\tconst auto max_min_diff = detail::diff(rand_max, rand_min) + 1;\n\tif (max_min_diff \u003c size) throw std::runtime_error(\"Invalid argument\");\n\n\tif (max_min_diff == size) return make_rand_array_just_shuffle(size, rand_min, rand_max);\n\telse if (static_cast\u003cuintmax_t\u003e(std::numeric_limits\u003cdouble\u003e::max()) \u003c max_min_diff || size \u003c (max_min_diff * 0.04)) {\n\t\treturn make_rand_array_unique(size, rand_min, rand_max);\n\t}\n\telse {\n\t\treturn make_rand_array_select(size, rand_min, rand_max);\n\t}\n}\n```\n\n使い方\n\n```cpp\n#include \u003cchrono\u003e\n#include \u003cutility\u003e\n#include \u003cstring\u003e\n#include\"randseq.hpp\"\n\ntemplate\u003cclass T\u003e\nvoid print_elapsed_time(const std::string\u0026 str, T start, T end){\n\tstd::cout \u003c\u003c str \u003c\u003c \" : \"\n\t\t\u003c\u003c std::chrono::duration_cast\u003cstd::chrono::milliseconds\u003e(end - start).count()\n\t\t\u003c\u003c \" msec.\"\n\t\t\u003c\u003c std::endl;\n}\nint main(){\n\tusing clock = std::chrono::high_resolution_clock;\n\n\ttry{\n\t\tfor(auto val : {1, 5, 10, 16, 18, 19, 20, 100, 500}){\n\t\t\tconstexpr size_t array_num = 10000;\n\t\t\tconst int rand_max = val*array_num;\n\t\t\tconst int rand_min = -val*array_num;\n\n\t\t\tstd::cout \u003c\u003c \"array_num : \" \u003c\u003c array_num \u003c\u003c \" rand_max : \" \u003c\u003c rand_max \u003c\u003c \" rand_min : \" \u003c\u003c rand_min \u003c\u003c std::endl;\n\t\t\tconst auto t0 = clock::now();\n\n\t\t\tfor(size_t cnt = 0; cnt \u003c 100; ++cnt){\n\t\t\t\tmake_rand_array(array_num, rand_min, rand_max);\n\t\t\t}\n\n\t\t\tprint_elapsed_time(\"make_rand_array\", t0, clock::now());\n\t\t}\n\t}\n\tcatch(const std::exception\u0026 er){\n\t\tstd::cerr \u003c\u003c er.what() \u003c\u003c std::endl;\n\t}\n\n#ifdef _WIN32\n\tsystem(\"pause\");\n#endif\n\treturn 0;\n}\n```\n## 方法1 std::unordered_mapでインデックスを作って重複チェックする\n\n頑張ればnoexceptにできるんでしょうが、面倒そうなので、ちゃんとcatchしてあげてください。\n\nあ、やたら長いのはshuffleしたほうが速そうなときはshuffleするように書いているからです。ちなみに``std::random_shuffle``は[C++14では非推奨](https://meetingcpp.com/index.php/br/items/stdrandom_shuffle-is-deprecated.html)なので``std::shuffle``を使いましょう。大事なのは最後のelse節。\n\n``std::map/std::unordered_map``のkeyの存在確認はcountメンバー関数が便利ですね。\n\nそういえばstd::mapって存在しないkeyをoperator[]で参照すると値がデフォルトコンストラクタで初期化された状態の要素を返してくれるんですね。便利。\n[std::mapの第2パラメータの初期値適切な例かどうかはわかりませ... - Yahoo!知恵袋](http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11150714191)\n\n```cpp\n#include \u003cvector\u003e\n#include \u003cunordered_map\u003e\n#include \u003cutility\u003e\n#include \u003crandom\u003e\n#include \u003ccstdint\u003e\n#include \u003calgorithm\u003e\n#include \u003cstdexcept\u003e\n#include \u003cfunctional\u003e\nstd::mt19937 create_rand_engine(){\n\tstd::random_device rnd;\n    std::vector\u003cstd::uint_least32_t\u003e v(10);// 初期化用ベクタ\n    std::generate(v.begin(), v.end(), std::ref(rnd));// ベクタの初期化\n    std::seed_seq seed(v.begin(), v.end());\n    return std::mt19937(seed);// 乱数エンジン\n}\nstd::unordered_map\u003cint, size_t\u003e make_index(const std::vector\u003cint\u003e\u0026 arr){\n\tstd::unordered_map\u003cint, size_t\u003e re_index;\n\tfor(const auto\u0026 i : arr) ++re_index[i];//存在しない要素に対してはデフォルトコンストラクタで初期化されるので0になるからこれでいい\n\treturn re_index;\n}\nstd::vector\u003cint\u003e make_rand_array(const size_t size, int min, int max){\n\tif(min \u003e max) std::swap(min, max);\n    const size_t max_min_diff = static_cast\u003csize_t\u003e(max - min + 1);\n\tif(max_min_diff \u003c size) throw std::runtime_error(\"引数が異常です\");\n\n    auto engine = create_rand_engine();\n    std::vector\u003cint\u003e re(size);\n    if(max_min_diff == size){\n    \tauto i = min;\n    \tfor(auto \u0026 r : re) r = i++;\n\t\tstd::shuffle(re.begin(), re.end(), engine);\n    }\n\telse if(max_min_diff + 1U == size){\n    \tstd::uniform_int_distribution\u003csize_t\u003e distribution(0, size - 1);// distribution\n    \tconst auto point = distribution(engine);\n    \tauto tmp = min;\n\t\tfor(auto it = re.begin(); it \u003c re.begin() + point; ++it, ++tmp) *it = tmp;\n\t\t++tmp;\n\t\tfor(auto it = re.begin() + point; it \u003c re.end(); ++it, ++tmp) *it = tmp;\n\t\tstd::shuffle(re.begin(), re.end(), engine);\n\t}\n\telse{\n    \tstd::uniform_int_distribution\u003cint\u003e distribution(min, max);// distribution\n    \tfor(auto\u0026 r : re) r = distribution(engine);//乱数で埋める\n    \tfor(auto re_index = make_index(re); re_index.size() != re.size(); re_index = make_index(re)){//重複は新たな乱数で埋める\n    \t\tfor(auto\u0026 r : re) if(1 \u003c re_index[r]){\n    \t\t\tr = distribution(engine);\n    \t\t\t--re_index[r];\n    \t\t}\n    \t}\n\t}\n\treturn re;\n}\n```\n\n使用例\n\n```cpp\n#include \u003ciostream\u003e\n#include \u003cexception\u003e\nint main(){\n\ttry{\n\t    const auto arr = make_rand_array(12, 100, 1);\n\t    for(auto i : arr) std::cout \u003c\u003c i \u003c\u003c \", \";\n\t    std::cout \u003c\u003c std::endl;\n\t}\n\tcatch(const std::exception\u0026 er){\n\t\tstd::cerr \u003c\u003c er.what() \u003c\u003c std::endl;\n\t}\n    return 0;\n}\n```\n\n## 方法2 イテレータを使って線形探索して重複チェックする(AinoMegumi氏)\n\n友達なので試しにネタ振りしたら書いてくれました。\n[重複しない乱数配列(C++14版)](http://qiita.com/AinoMegumi/items/0d183910gomed51df904f828)\n\nごめん、微妙に変えさせて。\n\n```cpp\n#include \u003crandom\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ccstdint\u003e\n#include \u003calgorithm\u003e\n#include \u003cstdexcept\u003e\n#include \u003cfunctional\u003e\nstd::mt19937 create_rand_engine(){\n\tstd::random_device rnd;\n    std::vector\u003cstd::uint_least32_t\u003e v(10);// 初期化用ベクタ\n    std::generate(v.begin(), v.end(), std::ref(rnd));// ベクタの初期化\n    std::seed_seq seed(v.begin(), v.end());\n    return std::mt19937(seed);// 乱数エンジン\n}\n\nstd::vector\u003cint\u003e make_rand_array(const size_t size, int rand_min, int rand_max) {\n    if (rand_min \u003e rand_max) std::swap(rand_min, rand_max);\n    const size_t max_min_diff = static_cast\u003csize_t\u003e(rand_max - rand_min + 1);\n    if(max_min_diff \u003c size) throw std::runtime_error(\"引数が異常です\");\n\n    std::vector\u003cint\u003e re(size);\n    std::uniform_int_distribution\u003cint\u003e rand(rand_min, rand_max);\n    auto mt = create_rand_engine();\n    for (auto\u0026 i : re)i = rand(mt);\n    bool is_all_no_conflict = false;\n    do {    \n        is_all_no_conflict = true;\n        for (auto j = re.begin(); j != re.end(); ++j) {\n            for (auto k = j + 1; k != re.end(); ++k) {\n                if (*k == *j) {\n                    *k = rand(mt);\n                    is_all_no_conflict = false;\n                }\n            }\n        }\n    } while (!is_all_no_conflict);\n    return re;\n}\n```\n\n## 方法3 std::unordered_setを使う\n\n[重複しない乱数配列(Java版/コレクション活用?版)](http://qiita.com/tsuyoshi_cho/items/2c10819b9f667e41dfe2)\nをみてて、``java.util.HashSet``便利だなぁと思ってたんですが、ふとC++にそれくらいあるよな？と思ってぐぐったら\n[data structures - Java HashSet equiv in c++ - Stack Overflow](http://stackoverflow.com/questions/24644190/java-hashset-equiv-in-c)\nえ？``std::unordered_set``ってソートしないの？\n\n\u003e[C++11のunordered_setと、setとの所要時間を比較する - minus9d's diary](http://minus9d.hatenablog.com/entry/20130819/1376922187)\n\u003eunrodered_setは、setと異なり、挿入した数字をソートせずに保存する。\n\n~~おお、勝ち確定やん！~~(後述:そうでもなかった)だれだよ\n\n\u003e配列を重複なく乱数で埋める方法は``std::set/std::unordered_set``なんかも考えられるんですが、今回は使わずにやっていこうと思います。\n\u003e乱数入れてshuffleするのは非効率的に思えるので。(速度計測してないorz)\n\nなんてほざいてたの(私だ)。\n\n\n```cpp\n#include \u003crandom\u003e\n#include \u003cvector\u003e\n#include \u003ciostream\u003e\n#include \u003ccstdint\u003e\n#include \u003calgorithm\u003e\n#include \u003cstdexcept\u003e\n#include \u003cunordered_set\u003e\n#include \u003cfunctional\u003e\nstd::mt19937 create_rand_engine(){\n    std::random_device rnd;\n    std::vector\u003cstd::uint_least32_t\u003e v(10);// 初期化用ベクタ\n    std::generate(v.begin(), v.end(), std::ref(rnd));// ベクタの初期化\n    std::seed_seq seed(v.begin(), v.end());\n    return std::mt19937(seed);// 乱数エンジン\n}\nstd::vector\u003cint\u003e make_rand_array(const size_t size, int rand_min, int rand_max) {\n\tif (rand_min \u003e rand_max) std::swap(rand_min, rand_max);\n\tconst size_t max_min_diff = static_cast\u003csize_t\u003e(rand_max - rand_min + 1);\n\tif (max_min_diff \u003c size) throw std::runtime_error(\"引数が異常です\");\n\n\tstd::unordered_set\u003cint\u003e tmp;\n\tauto engine = create_rand_engine();\n\tstd::uniform_int_distribution\u003cint\u003e distribution(rand_min, rand_max);\n\twhile (tmp.size() \u003c size) tmp.insert(distribution(engine));\n\treturn std::vector\u003cint\u003e(tmp.begin(), tmp.end());\n}\n```\n\n## 速度比較\n\nいやあ、下見ればわかるけど、ここまでイテレータつかうやつが遅いとは思わなかった。なんでだろうなぁ・・・。いくらなんでも遅すぎる気がするのでだれか教えてくだい。\n\n| 項目                       | 関数名            |\n|----------------------------|-------------------|\n| 方法1 : std::unordered_map | make_rand_array_1 |\n| 方法2 : 線形探索           | make_rand_array_2 |\n| 方法3 : std::unordered_set | make_rand_array_3 |\n\n### clang 3.7.0 on Wandbox\n\u003ehttp://melpon.org/wandbox/permlink/hkHklM6K9GdTl2KY\n\u003eclang++ prog.cc -stdlib=libc++ -Wall -Wextra -O2 -march=native -std=c++11 \n\u003earray_num : 100000rand_max : 1000000rand_min : -10000\n\u003emake_rand_array_1 : 372 msec.\n\u003emake_rand_array_2 : 17811 msec.\n\u003emake_rand_array_3 : 41 msec.\n\n### gcc 5.2.0 on Wandbox\n\u003ehttp://melpon.org/wandbox/permlink/Syzbm0YgS8EuODxb\n\u003eg++ prog.cc -Wall -Wextra -O2 -march=native -std=c++11 \n\u003earray_num : 100000rand_max : 1000000rand_min : -10000\n\u003emake_rand_array_1 : 338 msec.\n\u003emake_rand_array_2 : 28659 msec.\n\u003emake_rand_array_3 : 38 msec.\n\n### Visual Studio 2015 Community on myPC\n\nこれだけ自分のPC上です。CPUは``Intel(R) Core(TM) i5-4200M``です。\n\u003e/GS /GL /analyze- /W3 /Gy /Zc:wchar_t /Zi /Gm- /O2 /sdl /Fd\"Release\\vc140.pdb\" /Zc:inline /fp:precise /D \"WIN32\" /D \"NDEBUG\" /D \"\\_CONSOLE\" /D \"\\_UNICODE\" /D \"UNICODE\" /errorReport:prompt /WX- /Zc:forScope /Gd /Oy- /Oi /MD /Fa\"Release\\\" /EHsc /nologo /Fo\"Release\\\" /Fp\"Release\\rand_array.pch\" \n\u003earray_num : 100000rand_max : 1000000rand_min : -10000\n\u003emake_rand_array_1 : 163 msec.\n\u003emake_rand_array_2 : 17249 msec.\n\u003emake_rand_array_3 : 36 msec.\n","coediting":false,"comments_count":9,"created_at":"2015-09-25T02:12:30+09:00","group":null,"id":"48d77f5d554df84f66f7","likes_count":13,"private":false,"reactions_count":0,"tags":[{"name":"C++","versions":[]},{"name":"algorithm","versions":[]},{"name":"Random","versions":[]},{"name":"C++11","versions":[]},{"name":"std","versions":[":shuffle",":unordered_map"]}],"title":"配列を重複なく乱数で埋めるには","updated_at":"2015-11-07T17:39:24+09:00","url":"https://qiita.com/yumetodo/items/48d77f5d554df84f66f7","user":{"description":"ありきたりなC++erです。最近C++書いていません(あれっ","facebook_id":"","followees_count":32,"followers_count":236,"github_login_name":"yumetodo","id":"yumetodo","items_count":110,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94177,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94177/profile-images/1473706190","team_only":false,"twitter_screen_name":"yumetodo","website_url":"http://yumetodo.hateblo.jp/"},"page_views_count":null}]